{
  "version": 3,
  "sources": ["../js/pp/pp.js", "../node_modules/gl-matrix/esm/common.js", "../node_modules/gl-matrix/esm/mat3.js", "../node_modules/gl-matrix/esm/mat4.js", "../node_modules/gl-matrix/esm/vec3.js", "../node_modules/gl-matrix/esm/vec4.js", "../node_modules/gl-matrix/esm/quat.js", "../node_modules/gl-matrix/esm/quat2.js", "../node_modules/gl-matrix/esm/vec2.js", "../node_modules/gl-matrix/esm/index.js", "../js/pp/plugin/extensions/array_extension.js", "../js/pp/plugin/extensions/math_extension.js", "../js/pp/plugin/extensions/object_extension.js", "../js/pp/plugin/extensions/scene_extension.js", "../js/pp/plugin/component_mods/clone_component_mod.js", "../js/pp/plugin/component_mods/cursor_component_mod.js", "../js/pp/plugin/component_mods/cursor_target_component_mod.js", "../js/pp/plugin/component_mods/mouse_look_component_mod.js", "../node_modules/howler/dist/howler.js", "../js/pp/audio/spatial_audio_listener.js", "../node_modules/wasm-feature-detect/dist/esm/index.js", "../node_modules/@wonderlandengine/api/wonderland.js", "../node_modules/@wonderlandengine/api/index.js", "../js/pp/audio/audio_manager_component.js", "../js/pp/audio/audio_manager.js", "../js/pp/audio/audio_player.js", "../js/pp/audio/audio_setup.js", "../js/pp/audio/mute_everything.js", "../js/pp/audio/audio_utils.js", "../js/pp/audio/howler/howler_audio_player.js", "../js/pp/cauldron/benchmarks/max_physx.js", "../js/pp/cauldron/benchmarks/max_visible_triangles.js", "../js/pp/cauldron/cauldron/object_pool_manager.js", "../js/pp/cauldron/cauldron/save_manager.js", "../js/pp/cauldron/cauldron/timer.js", "../js/pp/cauldron/components/clear_console_on_xr_session_start.js", "../js/pp/cauldron/components/set_active.js", "../js/pp/cauldron/components/adjust_hierarchy_physx_scale.js", "../js/pp/cauldron/components/get_player_objects.js", "../js/pp/cauldron/components/get_default_resources.js", "../js/pp/cauldron/components/show_fps.js", "../js/pp/cauldron/fsm/fsm.js", "../js/pp/cauldron/fsm/state.js", "../js/pp/cauldron/fsm/transition.js", "../js/pp/cauldron/fsm/states/timer_state.js", "../js/pp/cauldron/utils/color_utils.js", "../js/pp/cauldron/utils/material_utils.js", "../js/pp/cauldron/utils/mesh_utils.js", "../js/pp/cauldron/utils/save_utils.js", "../js/pp/cauldron/utils/text_utils.js", "../js/pp/cauldron/utils/xr_utils.js", "../js/pp/cauldron/utils/browser_utils.js", "../js/pp/cauldron/utils/js_utils.js", "../js/pp/cauldron/physics/physics_utils.js", "../js/pp/cauldron/physics/physics_raycast_data.js", "../js/pp/cauldron/physics/physics_layer_flags.js", "../js/pp/cauldron/physics/physics_collision_collector.js", "../js/pp/cauldron/visual/visual_manager.js", "../js/pp/cauldron/visual/elements/visual_element_types.js", "../js/pp/cauldron/visual/elements/visual_line.js", "../js/pp/cauldron/visual/elements/visual_mesh.js", "../js/pp/cauldron/visual/elements/visual_point.js", "../js/pp/cauldron/visual/elements/visual_arrow.js", "../js/pp/cauldron/visual/elements/visual_text.js", "../js/pp/cauldron/visual/elements/visual_transform.js", "../js/pp/cauldron/visual/elements/visual_raycast.js", "../js/pp/cauldron/visual/elements/visual_torus.js", "../js/pp/cauldron/visual/components/visual_manager_component.js", "../js/pp/debug/debug_manager.js", "../js/pp/debug/debug_visual_manager.js", "../js/pp/debug/components/debug_transform_component.js", "../js/pp/debug/components/debug_manager_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_overwriter.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component.js", "../js/pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js", "../js/pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter.js", "../js/pp/gameplay/cauldron/cauldron/number_over_value.js", "../js/pp/gameplay/grab_throw/grabbable.js", "../js/pp/gameplay/grab_throw/grabber_hand.js", "../js/pp/gameplay/integrations/construct_arcade/ca_utils.js", "../js/pp/gameplay/integrations/construct_arcade/ca_dummy_server.js", "../js/pp/gameplay/integrations/construct_arcade/ca_display_leaderboard.js", "../js/pp/gameplay/experimental/cauldron/player/player_head_controller.js", "../js/pp/gameplay/experimental/cauldron/player/player_occlusion.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check.js", "../js/pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check.js", "../js/pp/gameplay/experimental/character_controller/collision/collision_check_bridge.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_setup.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collider_utils.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_results.js", "../js/pp/gameplay/experimental/character_controller/collision/character_collision_system.js", "../js/pp/gameplay/experimental/character_controller/character_controller.js", "../js/pp/gameplay/experimental/character_controller/synced_character_controller.js", "../js/pp/gameplay/experimental/character_controller/character_controller_utils.js", "../js/pp/gameplay/experimental/character_controller/player/player_character_controller.js", "../js/pp/gameplay/experimental/character_controller/player/player_head_character_controller.js", "../js/pp/gameplay/experimental/character_controller/player/player_hand_character_controller.js", "../js/pp/gameplay/experimental/locomotion/components/global_gravity.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_smooth.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_rotate.js", "../js/pp/gameplay/experimental/locomotion/player/player_locomotion_gravity.js", "../js/pp/gameplay/experimental/locomotion/player/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/locomotion_utils.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_head_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_cleaned.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_smooth_cleaned.js", "../js/pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_transform_manager_cleaned.js", "../js/pp/input/cauldron/finger_cursor.js", "../js/pp/input/cauldron/input_types.js", "../js/pp/input/cauldron/input_utils.js", "../js/pp/input/cauldron/keyboard.js", "../js/pp/input/cauldron/mouse.js", "../js/pp/input/cauldron/input_manager.js", "../js/pp/input/cauldron/input_manager_component.js", "../js/pp/input/cauldron/switch_hand_object.js", "../js/pp/input/cauldron/tracked_hand_draw_joint.js", "../js/pp/input/cauldron/tracked_hand_draw_all_joints.js", "../js/pp/input/cauldron/tracked_hand_draw_skin.js", "../js/pp/input/gamepad/gamepad_buttons.js", "../js/pp/input/gamepad/base_gamepad.js", "../js/pp/input/gamepad/universal_gamepad.js", "../js/pp/input/gamepad/gamepad_cores/gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/xr_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/keyboard_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core.js", "../js/pp/input/gamepad/gamepad_cores/classic_gamepad_core.js", "../js/pp/input/gamepad/cauldron/gamepad_mesh_animator.js", "../js/pp/input/gamepad/cauldron/gamepad_manager.js", "../js/pp/input/gamepad/cauldron/gamepad_utils.js", "../js/pp/input/gamepad/cauldron/gamepad_control_scheme.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_component.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_params.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick.js", "../js/pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon.js", "../js/pp/input/pose/base_pose.js", "../js/pp/input/pose/hand_pose.js", "../js/pp/input/pose/head_pose.js", "../js/pp/input/pose/tracked_hand_joint_pose.js", "../js/pp/input/pose/tracked_hand_pose.js", "../js/pp/input/pose/components/set_player_height.js", "../js/pp/input/pose/components/set_hand_local_transform.js", "../js/pp/input/pose/components/set_head_local_transform.js", "../js/pp/input/pose/components/set_vr_head_local_transform.js", "../js/pp/input/pose/components/set_non_vr_head_local_transform.js", "../js/pp/input/pose/components/set_tracked_hand_joint_local_transform.js", "../js/pp/input/pose/components/copy_hand_transform.js", "../js/pp/input/pose/components/copy_head_transform.js", "../js/pp/input/pose/components/copy_player_transform.js", "../js/pp/input/pose/components/copy_player_pivot_transform.js", "../js/pp/tool/cauldron/cauldron/tool_types.js", "../js/pp/tool/cauldron/components/tool_cursor.js", "../js/pp/tool/console_vr/console_vr_widget_setup.js", "../js/pp/tool/console_vr/console_vr_widget_ui.js", "../js/pp/tool/console_vr/console_vr_widget.js", "../js/pp/tool/console_vr/console_vr.js", "../js/pp/tool/console_vr/console_vr_component.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_object_tuner.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_light_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_color.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_scale.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_child_number.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_grab.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_transform.js", "../js/pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui.js", "../js/pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget.js", "../js/pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup.js", "../js/pp/tool/easy_tune/easy_tune_variables.js", "../js/pp/tool/easy_tune/easy_tune_variable_types.js", "../js/pp/tool/easy_tune/easy_tune_globals.js", "../js/pp/tool/easy_tune/components/easy_tune_component.js", "../js/pp/tool/easy_tune/components/easy_tune_import_variables.js", "../js/pp/tool/widget_frame/widget_frame_setup.js", "../js/pp/tool/widget_frame/widget_frame_ui.js", "../js/pp/tool/widget_frame/widget_frame.js", "../js/bundle.js"],
  "sourcesContent": ["PP = {};", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as quat from \"./quat.js\";\nimport * as mat4 from \"./mat4.js\";\n/**\n * Dual Quaternion<br>\n * Format: [real, dual]<br>\n * Quaternion format: XYZW<br>\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\n * @module quat2\n */\n\n/**\n * Creates a new identity dual quat\n *\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\n */\n\nexport function create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat2} a dual quaternion to clone\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\n * Creates a new dual quat initialized with the given values\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\n * Creates a new dual quat from the given values (quat and translation)\n *\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component (translation)\n * @param {Number} y2 Y component (translation)\n * @param {Number} z2 Z component (translation)\n * @returns {quat2} new dual quaternion\n * @function\n */\n\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\n * Creates a dual quat from a quaternion and a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q a normalized quaternion\n * @param {ReadonlyVec3} t tranlation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Creates a dual quat from a translation\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyVec3} t translation vector\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a dual quat from a quaternion\n *\n * @param {ReadonlyQuat2} dual quaternion receiving operation result\n * @param {ReadonlyQuat} q the quaternion\n * @returns {quat2} dual quaternion receiving operation result\n * @function\n */\n\nexport function fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Creates a new dual quat from a matrix (4x4)\n *\n * @param {quat2} out the dual quaternion\n * @param {ReadonlyMat4} a the matrix\n * @returns {quat2} dual quat receiving operation result\n * @function\n */\n\nexport function fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\n * Copy the values from one dual quat to another\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the source dual quaternion\n * @returns {quat2} out\n * @function\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Set a dual quat to the identity dual quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @returns {quat2} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\n * Set the components of a dual quat to the given values\n *\n * @param {quat2} out the receiving quaternion\n * @param {Number} x1 X component\n * @param {Number} y1 Y component\n * @param {Number} z1 Z component\n * @param {Number} w1 W component\n * @param {Number} x2 X component\n * @param {Number} y2 Y component\n * @param {Number} z2 Z component\n * @param {Number} w2 W component\n * @returns {quat2} out\n * @function\n */\n\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\n * Gets the real part of a dual quat\n * @param  {quat} out real part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} real part\n */\n\nexport var getReal = quat.copy;\n/**\n * Gets the dual part of a dual quat\n * @param  {quat} out dual part\n * @param  {ReadonlyQuat2} a Dual Quaternion\n * @return {quat} dual part\n */\n\nexport function getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\n * Set the real component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the real part\n * @returns {quat2} out\n * @function\n */\n\nexport var setReal = quat.copy;\n/**\n * Set the dual component of a dual quat to the given quaternion\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat} q a quaternion representing the dual part\n * @returns {quat2} out\n * @function\n */\n\nexport function setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\n * Gets the translation of a normalized dual quat\n * @param  {vec3} out translation\n * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed\n * @return {vec3} translation\n */\n\nexport function getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\n * Translates a dual quat by the given vector\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {quat2} out\n */\n\nexport function translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\n * Rotates a dual quat around the X axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Y axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around the Z axis\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {number} rad how far should the rotation be\n * @returns {quat2} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (a * q)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @returns {quat2} out\n */\n\nexport function rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\n * Rotates a dual quat by a given quaternion (q * a)\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat} q quaternion to rotate by\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @returns {quat2} out\n */\n\nexport function rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\n * Rotates a dual quat around a given axis. Does the normalisation automatically\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the dual quaternion to rotate\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @param {Number} rad how far the rotation should be\n * @returns {quat2} out\n */\n\nexport function rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Adds two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n * @function\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\n * Multiplies two dual quat's\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {quat2} out\n */\n\nexport function multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\n * Alias for {@link quat2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a dual quat by a scalar number\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the dual quat to scale\n * @param {Number} b amount to scale the dual quat by\n * @returns {quat2} out\n * @function\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\n *\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = quat.dot;\n/**\n * Performs a linear interpolation between two dual quats's\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\n *\n * @param {quat2} out the receiving dual quat\n * @param {ReadonlyQuat2} a the first operand\n * @param {ReadonlyQuat2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quat to calculate inverse of\n * @returns {quat2} out\n */\n\nexport function invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\n * Calculates the conjugate of a dual quat\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\n *\n * @param {quat2} out the receiving quaternion\n * @param {ReadonlyQuat2} a quat to calculate conjugate of\n * @returns {quat2} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\n * Calculates the length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate length of\n * @returns {Number} length of a\n * @function\n */\n\nexport var length = quat.length;\n/**\n * Alias for {@link quat2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a dual quat\n *\n * @param {ReadonlyQuat2} a dual quat to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = quat.squaredLength;\n/**\n * Alias for {@link quat2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a dual quat\n *\n * @param {quat2} out the receiving dual quaternion\n * @param {ReadonlyQuat2} a dual quaternion to normalize\n * @returns {quat2} out\n * @function\n */\n\nexport function normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\n * Returns a string representation of a dual quatenion\n *\n * @param {ReadonlyQuat2} a dual quaternion to represent as a string\n * @returns {String} string representation of the dual quat\n */\n\nexport function str(a) {\n  return \"quat2(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \")\";\n}\n/**\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat2} a the first dual quaternion.\n * @param {ReadonlyQuat2} b the second dual quaternion.\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat2} a the first dual quat.\n * @param {ReadonlyQuat2} b the second dual quat.\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\nimport * as mat2 from \"./mat2.js\";\nimport * as mat2d from \"./mat2d.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as mat4 from \"./mat4.js\";\nimport * as quat from \"./quat.js\";\nimport * as quat2 from \"./quat2.js\";\nimport * as vec2 from \"./vec2.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };", "/*\r\n    How to use\r\n\r\n    Warning: The extension is a WIP so not all the functions are available for all kinds of vector.\r\n\r\n    By default rotations are in Degrees and transforms are Matrix 4 (and not Quat 2)    \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n    \r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - vec3_rotateAroundRadians\r\n        - vec3_degreesAddRotationDegrees\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - vec3_convertPositionToWorldMatrix\r\n        - vec3_convertDirectionToWorldQuat\r\n\r\n    Some vec3 functions let u add a prefix to specify if the vec3 represent a rotation in degrees or radians, where degrees is the default:\r\n        - vec3_toQuat\r\n        - vec3_degreesToQuat\r\n        - vec3_radiansToQuat\r\n        - vec3_degreesAddRotation\r\n\r\n    Rotation operations return a rotation of the same kind of the starting variable:\r\n        - vec3_degreesAddRotationQuat   -> returns a rotation in degrees\r\n        - quat_addRotationDegrees       -> returns a rotation in quat\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let quat = this.vec3_toQuat()\r\n        - this.vec3_toQuat(quat)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - If a group of functions starts with \u25CB it means it modifies the variable itself\r\n            - The suffixes (like Matrix or Radians) or prefixes (like degrees) are omitted \r\n\r\n        CREATION (u can call these functions without any object):\r\n            - PP.vec2_create\r\n\r\n            - PP.vec3_create\r\n\r\n            - PP.vec4_create\r\n\r\n            - PP.quat_create\r\n\r\n            - PP.quat2_create\r\n            - PP.quat2_fromPositionRotation\r\n\r\n            - PP.mat3_create\r\n\r\n            - PP.mat4_create\r\n            - PP.mat4_fromPositionRotation     / PP.mat4_fromPositionRotationScale\r\n\r\n        ARRAY:\r\n            - pp_first      / pp_last\r\n            - pp_has        / pp_hasEqual\r\n            - pp_find       / pp_findIndex      / pp_findAll            / pp_findAllIndexes / pp_findEqual      / pp_findAllEqual   / pp_findIndexEqual / pp_findAllIndexesEqual\r\n            \u25CB pp_remove     / pp_removeIndex    / pp_removeAllIndexes   / pp_removeAll      / pp_removeEqual    / pp_removeAllEqual\r\n            \u25CB pp_pushUnique / pp_unshiftUnique\r\n            \u25CB pp_copy    \r\n            - pp_clone      \r\n            - pp_equals      \r\n            \u25CB pp_clear      \r\n\r\n        GENERIC VECTOR (array with only numbers):\r\n            - vec_scale\r\n            - vec_round     / vec_floor         / vec_ceil      / vec_clamp\r\n            - vec_log       / vec_error         / vec_warn   \r\n            - vec_equals   \r\n\r\n        VECTOR 2:\r\n            \u25CB vec2_set      / vec2_copy     / vec2_zero\r\n            - vec2_clone \r\n            - vec2_normalize\r\n            - vec2_length\r\n            - vec2_isZero\r\n\r\n        VECTOR 3:\r\n            \u25CB vec3_set      / vec3_copy     / vec3_zero\r\n            - vec3_clone \r\n            - vec3_normalize    / vec3_negate\r\n            - vec3_isNormalized / vec3_isZero\r\n            - vec3_length       / vec3_lengthSquared        / vec3_lengthSigned\r\n            - vec3_distance     / vec3_distanceSquared\r\n            - vec3_add              / vec3_sub              / vec3_mul      / vec3_div      / vec3_scale    / vec3_dot\r\n            - vec3_equals\r\n            - vec3_transformQuat    / vec3_transformMat3    / vec3_transformMat4\r\n            - vec3_componentAlongAxis           / vec3_removeComponentAlongAxis / vec3_copyComponentAlongAxis   / vec3_valueAlongAxis  \r\n            - vec3_isConcordant\r\n            - vec3_isFartherAlongAxis\r\n            - vec3_isToTheRight\r\n            - vec3_isOnAxis\r\n            - vec3_isOnPlane\r\n            - vec3_signTo\r\n            - vec3_projectOnAxis                / vec3_projectOnAxisAlongAxis\r\n            - vec3_projectOnPlane               / vec3_projectOnPlaneAlongAxis\r\n            - vec3_convertPositionToWorld       / vec3_convertPositionToLocal \r\n            - vec3_convertDirectionToWorld      / vec3_convertDirectionToLocal   \r\n            - vec3_angle\r\n            - vec3_rotate           / vec3_rotateAxis           / vec3_rotateAround / vec3_rotateAroundAxis\r\n            - vec3_rotationTo       / vec3_rotationToPivoted\r\n            - vec3_toRadians        / vec3_toDegrees            / vec3_toQuat       / vec3_toMatrix\r\n            - vec3_addRotation\r\n            - vec3_log       / vec3_error         / vec3_warn    \r\n            - vec3_lerp      / vec3_interpolate \r\n            \r\n        VECTOR 4:\r\n            \u25CB vec4_set      / vec4_copy\r\n            - vec4_clone \r\n\r\n        QUAT:\r\n            \u25CB quat_set          / quat_copy     / quat_identity\r\n            - quat_clone \r\n            - quat_normalize    / quat_invert   / quat_conjugate\r\n            - quat_isNormalized\r\n            - quat_length       / quat_lengthSquared\r\n            - quat_mul\r\n            - quat_getAxis          / quat_getAngle         / quat_getAxisScaled\r\n            - quat_getAxes          / quat_getRight         / quat_getUp    / quat_getForward   / quat_getLeft  / quat_getDown  / quat_getBackward\r\n            \u25CB quat_setAxes          / quat_setRight         / quat_setUp    / quat_setForward   / quat_setLeft  / quat_setDown  / quat_setBackward\r\n            - quat_toWorld          / quat_toLocal\r\n            - quat_rotate           / quat_rotateAxis  \r\n            - quat_rotationTo     \r\n            - quat_getTwist         / quat_getSwing         / quat_getTwistFromSwing    / quat_getSwingFromTwist    / quat_fromTwistSwing\r\n            \u25CB quat_fromRadians      / quat_fromDegrees      / quat_fromAxis / quat_fromAxes\r\n            - quat_toRadians        / quat_toDegrees        / quat_toMatrix\r\n            - quat_addRotation      / quat_subRotation\r\n            - quat_lerp             / quat_interpolate      / quat_slerp    / quat_sinterpolate\r\n\r\n        QUAT 2:\r\n            \u25CB quat2_set             / quat2_copy        / quat2_identity\r\n            - quat2_normalize       / quat2_invert      / quat2_conjugate\r\n            - quat2_isNormalized\r\n            - quat2_length          / quat2_lengthSquared\r\n            - quat2_mul\r\n            - quat2_getPosition     / quat2_getRotation\r\n            \u25CB quat2_setPosition     / quat2_setRotation     / quat2_setPositionRotation\r\n            - quat2_getAxes     / quat2_getRight    / quat2_getUp   / quat2_getForward  / quat2_getLeft    / quat2_getDown   / quat2_getBackward\r\n            - quat2_toWorld     / quat2_toLocal\r\n            - quat2_rotateAxis  \r\n            - quat2_toMatrix\r\n            \u25CB quat2_fromMatrix\r\n            - quat2_lerp        / quat2_interpolate\r\n\r\n        MATRIX 3:\r\n            \u25CB mat3_set\r\n            - mat3_toDegrees    / mat3_toRadians    / mat3_toQuat\r\n            - mat3_fromAxes\r\n\r\n        MATRIX 4:\r\n            \u25CB mat4_set          / mat4_copy         / mat4_identity\r\n            - mat4_clone\r\n            - mat4_invert\r\n            - mat_mul           / mat4_scale\r\n            - mat4_getPosition  / mat4_getRotation  / mat4_getScale\r\n            \u25CB mat4_setPosition  / mat4_setRotation  / mat4_setScale\r\n            \u25CB mat4_setPositionRotation      / mat4_setPositionRotationScale\r\n            - mat4_getAxes     / mat4_getRight    / mat4_getUp   / mat4_getForward  / mat4_getLeft    / mat4_getDown   / mat4_getBackward\r\n            - mat4_toWorld      / mat4_toLocal\r\n            - mat4_hasUniformScale\r\n            - mat4_toQuat\r\n            \u25CB mat4_fromQuat\r\n*/\r\n\r\nimport * as glMatrix from 'gl-matrix';\r\n\r\nArray.prototype._pp_syncPrototypesProperties = function _pp_syncPrototypesProperties() {\r\n    let prototypes = [\r\n        Array.prototype, Uint8ClampedArray.prototype, Uint8Array.prototype, Uint16Array.prototype, Uint32Array.prototype, Int8Array.prototype,\r\n        Int16Array.prototype, Int32Array.prototype, Float32Array.prototype, Float64Array.prototype];\r\n    let prefixes = [\"pp_\", \"vec_\", \"vec2_\", \"vec3_\", \"vec4_\", \"quat_\", \"quat2_\", \"mat3_\", \"mat4_\", \"_pp_\", \"_vec_\", \"_quat_\"];\r\n\r\n    for (let key in Array.prototype) {\r\n        let found = false;\r\n        for (let prefix of prefixes) {\r\n            if (key.startsWith(prefix)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            for (let prototype of prototypes) {\r\n                prototype[key] = Array.prototype[key];\r\n                Object.defineProperty(prototype, key, { enumerable: false });\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n//CREATION\r\n\r\nArray.prototype.vec2_set = function vec2_set(x, y) {\r\n    if (y === undefined) {\r\n        glMatrix.vec2.set(this, x, x);\r\n    } else {\r\n        glMatrix.vec2.set(this, x, y);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_set = function vec3_set(x, y, z) {\r\n    if (y === undefined) {\r\n        glMatrix.vec3.set(this, x, x, x);\r\n    } else {\r\n        glMatrix.vec3.set(this, x, y, z);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec4_set = function vec4_set(x, y, z, w) {\r\n    if (y === undefined) {\r\n        glMatrix.vec4.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.vec4.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_set = function quat_set(x, y, z, w) {\r\n    if (y === undefined) {\r\n        glMatrix.quat.set(this, x, x, x, x);\r\n    } else {\r\n        glMatrix.quat.set(this, x, y, z, w);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_set = function quat2_set(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    if (y1 === undefined) {\r\n        glMatrix.quat2.set(this, x1, x1, x1, x1, x1, x1, x1, x1);\r\n    } else {\r\n        glMatrix.quat2.set(this, x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat3_set = function mat3_set(\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    if (m01 === undefined) {\r\n        glMatrix.mat3.set(this,\r\n            m00, m00, m00,\r\n            m00, m00, m00,\r\n            m00, m00, m00);\r\n    } else {\r\n        glMatrix.mat3.set(this,\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_set = function mat4_set(\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    if (m01 === undefined) {\r\n        glMatrix.mat4.set(this,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00,\r\n            m00, m00, m00, m00);\r\n    } else {\r\n        glMatrix.mat4.set(this,\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return this;\r\n};\r\n\r\nArray.prototype._pp_syncPrototypesProperties();\r\n\r\nPP.vec2_create = function vec2_create(x, y) {\r\n    let out = glMatrix.vec2.create();\r\n    if (x !== undefined) {\r\n        out.vec2_set(x, y);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.vec3_create = function vec3_create(x, y, z) {\r\n    let out = glMatrix.vec3.create();\r\n    if (x !== undefined) {\r\n        out.vec3_set(x, y, z);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.vec4_create = function vec4_create(x, y, z, w) {\r\n    let out = glMatrix.vec4.create();\r\n    if (x !== undefined) {\r\n        out.vec4_set(x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.quat_create = function quat_create(x, y, z, w) {\r\n    let out = glMatrix.quat.create();\r\n    if (x !== undefined) {\r\n        out.quat_set(x, y, z, w);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.quat2_create = function quat2_create(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n    let out = glMatrix.quat2.create();\r\n    if (x1 !== undefined) {\r\n        out.quat2_set(x1, y1, z1, w1, x2, y2, z2, w2);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.mat3_create = function mat3_create(\r\n    m00, m01, m02,\r\n    m10, m11, m12,\r\n    m20, m21, m22) {\r\n    let out = glMatrix.mat3.create();\r\n    if (m00 !== undefined) {\r\n        out.mat3_set(\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.mat4_create = function mat4_create(\r\n    m00, m01, m02, m03,\r\n    m10, m11, m12, m13,\r\n    m20, m21, m22, m23,\r\n    m30, m31, m32, m33) {\r\n    let out = glMatrix.mat4.create();\r\n    if (m00 !== undefined) {\r\n        out.mat4_set(\r\n            m00, m01, m02, m03,\r\n            m10, m11, m12, m13,\r\n            m20, m21, m22, m23,\r\n            m30, m31, m32, m33);\r\n    }\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotation = function quat2_fromPositionRotation(position, rotation) {\r\n    return quat2_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nPP.quat2_fromPositionRotationDegrees = function quat2_fromPositionRotationDegrees(position, rotation) {\r\n    let out = PP.quat2_create();\r\n    out.quat2_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotationRadians = function quat2_fromPositionRotationRadians(position, rotation) {\r\n    let out = PP.quat2_create();\r\n    out.quat2_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.quat2_fromPositionRotationQuat = function quat2_fromPositionRotationQuat(position, rotation) {\r\n    let out = PP.quat2_create();\r\n    out.quat2_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotation = function mat4_fromPositionRotation(position, rotation) {\r\n    return mat4_fromPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nPP.mat4_fromPositionRotationDegrees = function mat4_fromPositionRotationDegrees(position, rotation) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationDegrees(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationRadians = function mat4_fromPositionRotationRadians(position, rotation) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationRadians(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationQuat = function mat4_fromPositionRotationQuat(position, rotation) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationQuat(position, rotation);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationScale = function mat4_fromPositionRotationScale(position, rotation, scale) {\r\n    return mat4_fromPositionRotationDegreesScale(position, rotation, scale);\r\n};\r\n\r\nPP.mat4_fromPositionRotationDegreesScale = function mat4_fromPositionRotationDegreesScale(position, rotation, scale) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationRadiansScale = function mat4_fromPositionRotationRadiansScale(position, rotation, scale) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationRadiansScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\nPP.mat4_fromPositionRotationQuatScale = function mat4_fromPositionRotationQuatScale(position, rotation, scale) {\r\n    let out = PP.mat4_create();\r\n    out.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n    return out;\r\n};\r\n\r\n//ARRAY\r\n\r\n//New Functions\r\n\r\nArray.prototype.pp_first = function pp_first() {\r\n    return this.length > 0 ? this[0] : undefined;\r\n};\r\n\r\nArray.prototype.pp_last = function pp_last() {\r\n    return this.length > 0 ? this[this.length - 1] : undefined;\r\n};\r\n\r\nArray.prototype.pp_has = function pp_has(callback) {\r\n    return this.pp_find(callback) != undefined;\r\n};\r\n\r\nArray.prototype.pp_hasEqual = function pp_hasEqual(elementToFind, elementsEqualCallback = null) {\r\n    return this.pp_findEqual(elementToFind, elementsEqualCallback) != undefined;\r\n};\r\n\r\nArray.prototype.pp_find = function pp_find(callback) {\r\n    let elementFound = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementFound = this[index];\r\n    }\r\n\r\n    return elementFound;\r\n};\r\n\r\nArray.prototype.pp_findIndex = function pp_findIndex(callback) {\r\n    return this.findIndex(callback);\r\n};\r\n\r\nArray.prototype.pp_findAll = function pp_findAll(callback) {\r\n    let elementsFound = this.filter(callback);\r\n\r\n    return elementsFound;\r\n};\r\n\r\nArray.prototype.pp_findAllIndexes = function pp_findAllIndexes(callback) {\r\n    let indexes = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        let element = this[i];\r\n        if (callback(element)) {\r\n            indexes.push(i);\r\n        }\r\n    }\r\n    return indexes;\r\n};\r\n\r\nArray.prototype.pp_findEqual = function pp_findEqual(elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        let index = this.pp_findIndexEqual(elementToFind);\r\n        return index < 0 ? undefined : this[index];\r\n    }\r\n\r\n    let elementFound = undefined\r\n    for (let i = 0; i < this.length; i++) {\r\n        let currentElement = this[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            elementFound = currentElement;\r\n            break;\r\n        }\r\n    }\r\n    return elementFound;\r\n};\r\n\r\nArray.prototype.pp_findAllEqual = function pp_findAllEqual(elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this._pp_findAllEqualOptimized(elementToFind, false);\r\n    }\r\n\r\n    let elementsFound = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        let currentElement = this[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            elementsFound.push(currentElement);\r\n        }\r\n    }\r\n    return elementsFound;\r\n};\r\n\r\nArray.prototype.pp_findIndexEqual = function pp_findIndexEqual(elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this.indexOf(elementToFind);\r\n    }\r\n\r\n    let indexFound = -1;\r\n    for (let i = 0; i < this.length; i++) {\r\n        let currentElement = this[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            indexFound = i;\r\n            break;\r\n        }\r\n    }\r\n    return indexFound;\r\n};\r\n\r\nArray.prototype.pp_findAllIndexesEqual = function pp_findAllIndexesEqual(elementToFind, elementsEqualCallback = null) {\r\n    if (elementsEqualCallback == null) {\r\n        return this._pp_findAllEqualOptimized(elementToFind, true);\r\n    }\r\n\r\n    let indexesFound = [];\r\n    for (let i = 0; i < this.length; i++) {\r\n        let currentElement = this[i];\r\n        if (elementsEqualCallback(currentElement, elementToFind)) {\r\n            indexesFound.push(i);\r\n        }\r\n    }\r\n    return indexesFound;\r\n};\r\n\r\nArray.prototype.pp_removeIndex = function pp_removeIndex(index) {\r\n    let elementRemoved = undefined;\r\n\r\n    if (index >= 0 && index < this.length) {\r\n        let arrayRemoved = this.splice(index, 1);\r\n        if (arrayRemoved.length == 1) {\r\n            elementRemoved = arrayRemoved[0];\r\n        }\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeAllIndexes = function pp_removeAllIndexes(indexes) {\r\n    let elementsRemoved = [];\r\n\r\n    for (let index of indexes) {\r\n        let elementRemoved = this.pp_removeIndex(index);\r\n        if (elementRemoved !== undefined) {\r\n            elementsRemoved.push(elementRemoved);\r\n        }\r\n    }\r\n\r\n    return elementsRemoved;\r\n};\r\n\r\nArray.prototype.pp_remove = function pp_remove(callback) {\r\n    let elementRemoved = undefined;\r\n\r\n    let index = this.findIndex(callback);\r\n    if (index >= 0) {\r\n        elementRemoved = this.pp_removeIndex(index);\r\n    }\r\n\r\n    return elementRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeAll = function pp_removeAll(callback) {\r\n    let elementsRemoved = [];\r\n\r\n    let currentElement = undefined;\r\n    do {\r\n        currentElement = this.pp_remove(callback);\r\n        if (currentElement !== undefined) {\r\n            elementsRemoved.push(currentElement);\r\n        }\r\n    } while (currentElement !== undefined);\r\n\r\n    return elementsRemoved;\r\n};\r\n\r\nArray.prototype.pp_removeEqual = function pp_removeEqual(elementToRemove, elementsEqualCallback = null) {\r\n    return this.pp_removeIndex(this.pp_findIndexEqual(elementToRemove, elementsEqualCallback));\r\n};\r\n\r\nArray.prototype.pp_removeAllEqual = function pp_removeAllEqual(elementToRemove, elementsEqualCallback = null) {\r\n    return this.pp_removeAllIndexes(this.pp_findAllIndexesEqual(elementToRemove, elementsEqualCallback));\r\n};\r\n\r\nArray.prototype.pp_pushUnique = function pp_pushUnique(element, elementsEqualCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = this.push(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_unshiftUnique = function pp_unshiftUnique(element, elementsEqualCallback = null) {\r\n    let length = this.length;\r\n\r\n    let hasElement = this.pp_hasEqual(element, elementsEqualCallback);\r\n\r\n    if (!hasElement) {\r\n        length = this.unshift(element);\r\n    }\r\n\r\n    return length;\r\n};\r\n\r\nArray.prototype.pp_copy = function pp_copy(array, copyCallback = null) {\r\n    while (this.length > array.length) {\r\n        this.pop();\r\n    }\r\n\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (copyCallback == null) {\r\n            this[i] = array[i];\r\n        } else {\r\n            this[i] = copyCallback(this[i], array[i]);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nArray.prototype.pp_clone = function pp_clone(cloneCallback = null) {\r\n    if (cloneCallback == null) {\r\n        return this.slice(0);\r\n    }\r\n\r\n    let clone = null;\r\n    switch (this.constructor.name) {\r\n        case \"Array\":\r\n            clone = new Array(this.length);\r\n            break;\r\n        case \"Uint32Array\":\r\n            clone = new Uint32Array(this.length);\r\n            break;\r\n        case \"Int32Array\":\r\n            clone = new Int32Array(this.length);\r\n            break;\r\n        case \"Float32Array\":\r\n            clone = new Float32Array(this.length);\r\n            break;\r\n        case \"Float64Array\":\r\n            clone = new Float64Array(this.length);\r\n            break;\r\n        default:\r\n            clone = new Array(this.length);\r\n            console.error(\"Cloned array type not supported!\");\r\n            break;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        clone[i] = cloneCallback(this[i]);\r\n    }\r\n\r\n    return clone;\r\n};\r\n\r\nArray.prototype.pp_equals = function pp_equals(array, elementsEqualCallback = null) {\r\n    let equals = true;\r\n\r\n    if (array != null && this.length == array.length) {\r\n        for (let i = 0; i < this.length; i++) {\r\n            if ((elementsEqualCallback != null && !elementsEqualCallback(this[i], array[i])) ||\r\n                (elementsEqualCallback == null && this[i] != array[i])) {\r\n                equals = false;\r\n                break;\r\n            }\r\n        }\r\n    } else {\r\n        equals = false;\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\nArray.prototype.pp_clear = function pp_clear() {\r\n    this.length = 0;\r\n\r\n    return this;\r\n};\r\n\r\n// GENERIC VECTOR\r\n\r\n//New Functions\r\n\r\nArray.prototype.vec_toString = function vec_toString(decimalPlaces = null) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    return message;\r\n};\r\n\r\nArray.prototype.vec_log = function vec_log(decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.log(message);\r\n};\r\n\r\nArray.prototype.vec_error = function vec_error(decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.error(message);\r\n};\r\n\r\nArray.prototype.vec_warn = function vec_warn(decimalPlaces = 4) {\r\n    let message = this._vec_buildConsoleMessage(decimalPlaces);\r\n    console.warn(message);\r\n};\r\n\r\nArray.prototype.vec_scale = function vec_scale(value, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = out[i] * value;\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_round = function vec_round(out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.round(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_floor = function vec_floor(out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.floor(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_ceil = function vec_ceil(out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.ceil(out[i]);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_clamp = function vec_clamp(start, end, out = null) {\r\n    out = this._vec_prepareOut(out);\r\n\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n\r\n    for (let i = 0; i < out.length; i++) {\r\n        out[i] = Math.min(Math.max(out[i], min), max);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec_equals = function vec_equals(vector, epsilon = 0) {\r\n    let equals = this.length == vector.length;\r\n\r\n    for (let i = 0; i < this.length && equals; i++) {\r\n        equals = equals && (Math.abs(this[i] - vector[i]) <= epsilon);\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\n// VECTOR 2\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec2_length = function vec2_length() {\r\n    return glMatrix.vec2.length(this);\r\n};\r\n\r\nArray.prototype.vec2_normalize = function vec2_normalize(out = PP.vec2_create()) {\r\n    glMatrix.vec2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec2_copy = function vec2_copy(vector) {\r\n    glMatrix.vec2.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec2_clone = function vec2_clone(out = PP.vec2_create()) {\r\n    glMatrix.vec2.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec2_zero = function vec2_zero() {\r\n    glMatrix.vec2.zero(this);\r\n    return this;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.vec2_isZero = function vec2_isZero(epsilon = 0) {\r\n    return this.vec2_length() <= epsilon;\r\n};\r\n\r\n// VECTOR 3\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec3_normalize = function vec3_normalize(out = PP.vec3_create()) {\r\n    glMatrix.vec3.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_copy = function vec3_copy(vector) {\r\n    glMatrix.vec3.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_clone = function vec3_clone(out = PP.vec3_create()) {\r\n    glMatrix.vec3.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_zero = function vec3_zero() {\r\n    glMatrix.vec3.zero(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec3_angle = function vec3_angle(vector) {\r\n    return this.vec3_angleDegrees(vector);\r\n};\r\n\r\nArray.prototype.vec3_angleDegrees = function vec3_angleDegrees(vector) {\r\n    return this.vec3_angleRadians(vector) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleRadians = function vec3_angleRadians(vector) {\r\n    let thisX = this[0];\r\n    let thisY = this[1];\r\n    let thisZ = this[2];\r\n\r\n    let vectorX = vector[0];\r\n    let vectorY = vector[1];\r\n    let vectorZ = vector[2];\r\n\r\n    let thisLengthSquared = (thisX * thisX + thisY * thisY + thisZ * thisZ);\r\n    let vectorLengthSquared = (vectorX * vectorX + vectorY * vectorY + vectorZ * vectorZ);\r\n\r\n    let lengthSquared = thisLengthSquared * vectorLengthSquared;\r\n\r\n    let angle = 0;\r\n    if (lengthSquared > this._pp_epsilonSquared) {\r\n        let length = Math.sqrt(lengthSquared);\r\n\r\n        let cosine = this.vec3_dot(vector) / length;\r\n        angle = Math.acos(Math.min(Math.max(cosine, -1), 1));\r\n    }\r\n\r\n    return angle;\r\n};\r\n\r\nArray.prototype.vec3_equals = function vec3_equals(vector, epsilon = 0) {\r\n    let equals = this.length == vector.length;\r\n\r\n    if (equals) {\r\n        equals &&= (Math.abs(this[0] - vector[0]) <= epsilon);\r\n        equals &&= (Math.abs(this[1] - vector[1]) <= epsilon);\r\n        equals &&= (Math.abs(this[2] - vector[2]) <= epsilon);\r\n    }\r\n\r\n    return equals;\r\n};\r\n\r\nArray.prototype.vec3_length = function vec3_length() {\r\n    return glMatrix.vec3.length(this);\r\n};\r\n\r\nArray.prototype.vec3_lengthSquared = function vec3_lengthSquared() {\r\n    return glMatrix.vec3.squaredLength(this);\r\n};\r\n\r\nArray.prototype.vec3_distance = function vec3_distance(vector) {\r\n    return glMatrix.vec3.dist(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_distanceSquared = function vec3_distanceSquared(vector) {\r\n    return glMatrix.vec3.squaredDistance(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_add = function vec3_add(vector, out = PP.vec3_create()) {\r\n    glMatrix.vec3.add(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_sub = function vec3_sub(vector, out = PP.vec3_create()) {\r\n    glMatrix.vec3.sub(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_mul = function vec3_mul(vector, out = PP.vec3_create()) {\r\n    glMatrix.vec3.mul(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_div = function vec3_div(vector, out = PP.vec3_create()) {\r\n    glMatrix.vec3.div(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_scale = function vec3_scale(value, out = PP.vec3_create()) {\r\n    glMatrix.vec3.scale(out, this, value);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_dot = function vec3_dot(vector) {\r\n    return glMatrix.vec3.dot(this, vector);\r\n};\r\n\r\nArray.prototype.vec3_negate = function vec3_negate(out = PP.vec3_create()) {\r\n    glMatrix.vec3.negate(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_cross = function vec3_cross(vector, out = PP.vec3_create()) {\r\n    glMatrix.vec3.cross(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_transformQuat = function vec3_transformQuat(quat, out = PP.vec3_create()) {\r\n    glMatrix.vec3.transformQuat(out, this, quat);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_transformMat3 = function vec3_transformMat3(mat3, out = PP.vec3_create()) {\r\n    glMatrix.vec3.transformMat3(out, this, mat3);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_transformMat4 = function vec3_transformMat4(mat4, out = PP.vec3_create()) {\r\n    glMatrix.vec3.transformMat4(out, this, mat4);\r\n    return out;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.vec3_lengthSigned = function vec3_lengthSigned(positiveDirection) {\r\n    let signedLength = this.vec3_length();\r\n    if (!this.vec3_isConcordant(positiveDirection)) {\r\n        signedLength *= -1;\r\n    }\r\n\r\n    return signedLength;\r\n};\r\n\r\nArray.prototype.vec3_angleSigned = function vec3_angleSigned(vector, upAxis) {\r\n    return this.vec3_angleSignedDegrees(vector, upAxis);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedDegrees = function vec3_angleSignedDegrees(vector, upAxis) {\r\n    return this.vec3_angleSignedRadians(vector, upAxis) * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.vec3_angleSignedRadians = function () {\r\n    let crossAxis = PP.vec3_create();\r\n    return function vec3_angleSignedRadians(vector, upAxis) {\r\n        this.vec3_cross(vector, crossAxis);\r\n        let angle = this.vec3_angleRadians(vector);\r\n        if (!crossAxis.vec3_isConcordant(upAxis)) {\r\n            angle = -angle;\r\n        }\r\n\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toRadians = function vec3_toRadians(out = PP.vec3_create()) {\r\n    glMatrix.vec3.set(out, glMatrix.glMatrix.toRadian(this[0]), glMatrix.glMatrix.toRadian(this[1]), glMatrix.glMatrix.toRadian(this[2]));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toDegrees = function vec3_toDegrees(out = PP.vec3_create()) {\r\n    glMatrix.vec3.set(out, this[0] * (180 / Math.PI), this[1] * (180 / Math.PI), this[2] * (180 / Math.PI));\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_toQuat = function vec3_toQuat(out) {\r\n    return this.vec3_degreesToQuat(out);\r\n};\r\n\r\nArray.prototype.vec3_radiansToQuat = function vec3_radiansToQuat(out = PP.quat_create()) {\r\n    out.quat_fromRadians(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_degreesToQuat = function vec3_degreesToQuat(out = PP.quat_create()) {\r\n    out.quat_fromDegrees(this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_isNormalized = function vec3_isNormalized(epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(this.vec3_lengthSquared() - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.vec3_isZero = function vec3_isZero(epsilon = 0) {\r\n    return this.vec3_lengthSquared() <= (epsilon * epsilon);\r\n};\r\n\r\nArray.prototype.vec3_componentAlongAxis = function vec3_componentAlongAxis(axis, out = PP.vec3_create()) {\r\n    let componentAlongAxisLength = this.vec3_dot(axis);\r\n\r\n    glMatrix.vec3.copy(out, axis);\r\n    glMatrix.vec3.scale(out, out, componentAlongAxisLength);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_valueAlongAxis = function vec3_valueAlongAxis(axis) {\r\n    let valueAlongAxis = this.vec3_dot(axis);\r\n    return valueAlongAxis;\r\n};\r\n\r\nArray.prototype.vec3_removeComponentAlongAxis = function () {\r\n    let componentAlong = PP.vec3_create();\r\n    return function vec3_removeComponentAlongAxis(axis, out = PP.vec3_create()) {\r\n        this.vec3_componentAlongAxis(axis, componentAlong);\r\n        glMatrix.vec3.sub(out, this, componentAlong);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_copyComponentAlongAxis = function () {\r\n    let componentAlong = PP.vec3_create();\r\n    return function vec3_copyComponentAlongAxis(vector, axis, out = PP.vec3_create()) {\r\n        this.vec3_removeComponentAlongAxis(axis, out);\r\n        vector.vec3_componentAlongAxis(axis, componentAlong);\r\n        out.vec3_add(componentAlong, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isConcordant = function vec3_isConcordant(vector) {\r\n    return this.vec3_dot(vector) >= 0;\r\n};\r\n\r\nArray.prototype.vec3_isFartherAlongAxis = function vec3_isFartherAlongAxis(vector, axis) {\r\n    return this.vec3_valueAlongAxis(axis) > vector.vec3_valueAlongAxis(axis);\r\n};\r\n\r\nArray.prototype.vec3_isToTheRight = function vec3_isToTheRight(vector, upAxis) {\r\n    return this.vec3_signTo(vector, upAxis) >= 0;\r\n};\r\n\r\nArray.prototype.vec3_signTo = function () {\r\n    let componentAlongThis = PP.vec3_create();\r\n    let componentAlongVector = PP.vec3_create();\r\n    return function vec3_signTo(vector, upAxis, zeroSign = 1) {\r\n        this.vec3_removeComponentAlongAxis(upAxis, componentAlongThis);\r\n        vector.vec3_removeComponentAlongAxis(upAxis, componentAlongVector);\r\n\r\n        let angleSigned = this.vec3_angleSigned(vector, upAxis);\r\n        return angleSigned > 0 ? 1 : (angleSigned == 0 ? zeroSign : -1);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_projectOnAxis = function vec3_projectOnAxis(axis, out = PP.vec3_create()) {\r\n    this.vec3_componentAlongAxis(axis, out);\r\n    return out;\r\n};\r\n\r\n// the result can easily be not 100% exact due to precision errors\r\nArray.prototype.vec3_projectOnAxisAlongAxis = function () {\r\n    let up = PP.vec3_create();\r\n\r\n    let thisToAxis = PP.vec3_create();\r\n\r\n    let fixedProjectAlongAxis = PP.vec3_create();\r\n    return function vec3_projectOnAxisAlongAxis(axis, projectAlongAxis, out = PP.vec3_create()) {\r\n\r\n        if (this.vec3_isOnAxis(axis) || projectAlongAxis.vec3_isOnAxis(axis)) {\r\n            out.vec3_copy(this);\r\n        } else {\r\n            projectAlongAxis.vec3_cross(axis, up);\r\n            up.vec3_normalize(up);\r\n\r\n            this.vec3_removeComponentAlongAxis(up, out);\r\n            if (!out.vec3_isOnAxis(axis)) {\r\n                out.vec3_projectOnAxis(axis, thisToAxis);\r\n                thisToAxis.vec3_sub(out, thisToAxis);\r\n\r\n                if (thisToAxis.vec3_isConcordant(projectAlongAxis)) {\r\n                    fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n                } else {\r\n                    projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n                }\r\n\r\n                let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToAxis);\r\n                let lengthToRemove = thisToAxis.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n                fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n                fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n                out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n                out.vec3_projectOnAxis(axis, out); // snap on the axis, due to float precision error\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_projectOnPlane = function vec3_projectOnPlane(planeNormal, out = PP.vec3_create()) {\r\n    this.vec3_removeComponentAlongAxis(planeNormal, out);\r\n    return out;\r\n};\r\n\r\n// the result can easily be not 100% exact due to precision errors\r\nArray.prototype.vec3_projectOnPlaneAlongAxis = function () {\r\n    let thisToPlane = PP.vec3_create();\r\n\r\n    let fixedProjectAlongAxis = PP.vec3_create();\r\n    return function vec3_projectOnPlaneAlongAxis(planeNormal, projectAlongAxis, out = PP.vec3_create()) {\r\n        if (this.vec3_isOnPlane(planeNormal) || projectAlongAxis.vec3_isOnPlane(planeNormal)) {\r\n            out.vec3_copy(this);\r\n        } else {\r\n            out.vec3_copy(this);\r\n\r\n            out.vec3_projectOnPlane(planeNormal, thisToPlane);\r\n            thisToPlane.vec3_sub(out, thisToPlane);\r\n\r\n            if (thisToPlane.vec3_isConcordant(projectAlongAxis)) {\r\n                fixedProjectAlongAxis.vec3_copy(projectAlongAxis);\r\n            } else {\r\n                projectAlongAxis.vec3_negate(fixedProjectAlongAxis);\r\n            }\r\n\r\n            let angleWithAlongAxis = fixedProjectAlongAxis.vec3_angleRadians(thisToPlane);\r\n            let lengthToRemove = thisToPlane.vec3_length() / Math.cos(angleWithAlongAxis);\r\n\r\n            fixedProjectAlongAxis.vec3_normalize(fixedProjectAlongAxis);\r\n            fixedProjectAlongAxis.vec3_scale(lengthToRemove, fixedProjectAlongAxis);\r\n            out.vec3_add(fixedProjectAlongAxis, out);\r\n\r\n            out.vec3_projectOnPlane(planeNormal, out); // snap on the axis, due to float precision error\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_isOnAxis = function vec3_isOnAxis(axis) {\r\n    let angle = this.vec3_angle(axis);\r\n    return Math.abs(angle) < this._pp_degreesEpsilon || Math.abs(angle - 180) < this._pp_degreesEpsilon;\r\n};\r\n\r\nArray.prototype.vec3_isOnPlane = function vec3_isOnPlane(planeNormal) {\r\n    let angle = this.vec3_angle(planeNormal);\r\n    return Math.abs(angle - 90) < this._pp_degreesEpsilon;\r\n};\r\n\r\nArray.prototype.vec3_rotate = function vec3_rotate(rotation, out) {\r\n    return this.vec3_rotateDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateDegrees = function () {\r\n    let zero = PP.vec3_create();\r\n    return function vec3_rotateDegrees(rotation, out) {\r\n        return this.vec3_rotateAroundDegrees(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateRadians = function () {\r\n    let zero = PP.vec3_create();\r\n    return function vec3_rotateRadians(rotation, out) {\r\n        return this.vec3_rotateAroundRadians(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateQuat = function () {\r\n    let zero = PP.vec3_create();\r\n    return function vec3_rotateQuat(rotation, out) {\r\n        return this.vec3_rotateAroundQuat(rotation, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxis = function vec3_rotateAxis(angle, axis, out) {\r\n    return this.vec3_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAxisDegrees = function () {\r\n    let zero = PP.vec3_create();\r\n    return function vec3_rotateAxisDegrees(angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisDegrees(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAxisRadians = function () {\r\n    let zero = PP.vec3_create();\r\n    return function vec3_rotateAxisRadians(angle, axis, out) {\r\n        return this.vec3_rotateAroundAxisRadians(angle, axis, zero, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAround = function vec3_rotateAround(rotation, origin, out) {\r\n    return this.vec3_rotateAroundDegrees(rotation, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_rotateAroundDegrees(rotation, origin, out = PP.vec3_create()) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_rotateAroundRadians(rotation, origin, out = PP.vec3_create()) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotateAroundQuat = function vec3_rotateAroundQuat(rotation, origin, out = PP.vec3_create()) {\r\n    glMatrix.vec3.sub(out, this, origin);\r\n    glMatrix.vec3.transformQuat(out, out, rotation);\r\n    glMatrix.vec3.add(out, out, origin);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxis = function vec3_rotateAroundAxis(angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisDegrees(angle, axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisDegrees = function vec3_rotateAroundAxisDegrees(angle, axis, origin, out) {\r\n    return this.vec3_rotateAroundAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, origin, out);\r\n};\r\n\r\nArray.prototype.vec3_rotateAroundAxisRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_rotateAroundAxisRadians(angle, axis, origin, out = PP.vec3_create()) {\r\n        glMatrix.quat.setAxisAngle(quat, axis, angle);\r\n        return this.vec3_rotateAroundQuat(quat, origin, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorld = function vec3_convertPositionToWorld(parentTransform, out) {\r\n    return this.vec3_convertPositionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocal = function vec3_convertPositionToLocal(parentTransform, out) {\r\n    return this.vec3_convertPositionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToWorldMatrix = function vec3_convertPositionToWorldMatrix(parentTransform, out = PP.vec3_create()) {\r\n    glMatrix.vec3.transformMat4(out, this, parentTransform);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_convertPositionToLocalMatrix = function () {\r\n    let inverse = PP.mat4_create();\r\n    return function vec3_convertPositionToLocalMatrix(parentTransform, out = PP.vec3_create()) {\r\n        glMatrix.mat4.invert(inverse, parentTransform);\r\n        glMatrix.vec3.transformMat4(out, this, inverse);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToWorldQuat = function () {\r\n    let parentTransformMatrix = PP.mat4_create();\r\n    let position = PP.vec3_create();\r\n    let rotation = PP.quat_create();\r\n    let one = PP.vec3_create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function vec3_convertPositionToWorldQuat(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToWorldMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertPositionToLocalQuat = function () {\r\n    let parentTransformMatrix = PP.mat4_create();\r\n    let position = PP.vec3_create();\r\n    let rotation = PP.quat_create();\r\n    let one = PP.vec3_create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function vec3_convertPositionToLocalQuat(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.quat2_getPosition(position);\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        parentTransformMatrix.mat4_setPositionRotationQuatScale(position, rotation, one);\r\n        return this.vec3_convertPositionToLocalMatrix(parentTransformMatrix, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToWorld = function vec3_convertDirectionToWorld(parentTransform, out) {\r\n    return this.vec3_convertDirectionToWorldMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToLocal = function vec3_convertDirectionToLocal(parentTransform, out) {\r\n    return this.vec3_convertDirectionToLocalMatrix(parentTransform, out);\r\n};\r\n\r\nArray.prototype.vec3_convertDirectionToWorldMatrix = function () {\r\n    let rotation = PP.quat_create();\r\n    return function vec3_convertDirectionToWorldMatrix(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalMatrix = function () {\r\n    let rotation = PP.quat_create();\r\n    return function vec3_convertDirectionToLocalMatrix(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\n\r\nArray.prototype.vec3_convertDirectionToWorldQuat = function () {\r\n    let rotation = PP.quat_create();\r\n    return function vec3_convertDirectionToWorldQuat(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_convertDirectionToLocalQuat = function () {\r\n    let rotation = PP.quat_create();\r\n    return function vec3_convertDirectionToLocalQuat(parentTransform, out = PP.vec3_create()) {\r\n        parentTransform.quat2_getRotationQuat(rotation);\r\n        glMatrix.quat.conjugate(rotation, rotation);\r\n        glMatrix.vec3.transformQuat(out, this, rotation);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_log = function vec3_log(decimalPlaces = 4) {\r\n    this.vec_log(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_error = function vec3_error(decimalPlaces = 4) {\r\n    this.vec_error(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_warn = function vec3_warn(decimalPlaces = 4) {\r\n    this.vec_warn(decimalPlaces);\r\n};\r\n\r\nArray.prototype.vec3_addRotation = function vec3_addRotation(rotation, out) {\r\n    return this.vec3_degreesAddRotation(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationDegrees = function vec3_addRotationDegrees(rotation, out) {\r\n    return quat.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationRadians = function vec3_addRotationRadians(rotation, out) {\r\n    return quat.vec3_degreesAddRotationRadians(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_addRotationQuat = function vec3_addRotationQuat(rotation, out) {\r\n    return quat.vec3_degreesAddRotationQuat(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotation = function vec3_degreesAddRotation(rotation, out) {\r\n    return this.vec3_degreesAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_degreesAddRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_degreesAddRotationDegrees(rotation, out = PP.vec3_create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_degreesAddRotationRadians(rotation, out = PP.vec3_create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_degreesAddRotationQuat = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_degreesAddRotationQuat(rotation, out = PP.vec3_create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toDegrees(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotation = function vec3_radiansAddRotation(rotation, out) {\r\n    return this.vec3_radiansAddRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.vec3_radiansAddRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_radiansAddRotationDegrees(rotation, out = PP.vec3_create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationDegrees(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_radiansAddRotationRadians(rotation, out = PP.vec3_create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationRadians(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansAddRotationQuat = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_radiansAddRotationQuat(rotation, out = PP.vec3_create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_addRotationQuat(rotation, quat).quat_toRadians(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_toMatrix = function vec3_toMatrix(out = PP.mat3_create()) {\r\n    return this.vec3_degreesToMatrix(out);\r\n};\r\n\r\nArray.prototype.vec3_degreesToMatrix = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_degreesToMatrix(out = PP.mat3_create()) {\r\n        this.vec3_degreesToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_radiansToMatrix = function () {\r\n    let quat = PP.quat_create();\r\n    return function vec3_radiansToMatrix(out = PP.mat3_create()) {\r\n        this.vec3_radiansToQuat(quat);\r\n        return quat.quat_toMatrix(out);\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationTo = function vec3_rotationTo(direction, out) {\r\n    return this.vec3_rotationToDegrees(direction, out);\r\n};\r\n\r\nArray.prototype.vec3_rotationToDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function vec3_rotationToDegrees(direction, out = PP.vec3_create()) {\r\n        this.vec3_rotationToQuat(direction, rotationQuat);\r\n        rotationQuat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function vec3_rotationToRadians(direction, out = PP.vec3_create()) {\r\n        this.vec3_rotationToQuat(direction, rotationQuat);\r\n        rotationQuat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToQuat = function () {\r\n    let rotationAxis = PP.vec3_create();\r\n    return function vec3_rotationToQuat(direction, out = PP.quat_create()) {\r\n        this.vec3_cross(direction, rotationAxis);\r\n        rotationAxis.vec3_normalize(rotationAxis);\r\n        let signedAngle = this.vec3_angleSigned(direction, rotationAxis);\r\n        out.quat_fromAxis(signedAngle, rotationAxis);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivoted = function vec3_rotationToPivoted(direction, pivotAxis, out) {\r\n    return this.vec3_rotationToPivotedDegrees(direction, pivotAxis, out);\r\n};\r\n\r\nArray.prototype.vec3_rotationToPivotedDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function vec3_rotationToPivotedDegrees(direction, pivotAxis, out = PP.vec3_create()) {\r\n        this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n        rotationQuat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivotedRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function vec3_rotationToPivotedRadians(direction, pivotAxis, out = PP.vec3_create()) {\r\n        this.vec3_rotationToPivotedQuat(direction, pivotAxis, rotationQuat);\r\n        rotationQuat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_rotationToPivotedQuat = function () {\r\n    let thisFlat = PP.vec3_create();\r\n    let directionFlat = PP.vec3_create();\r\n    let rotationAxis = PP.vec3_create();\r\n    return function vec3_rotationToPivotedQuat(direction, pivotAxis, out = PP.quat_create()) {\r\n        this.vec3_removeComponentAlongAxis(pivotAxis, thisFlat);\r\n        direction.vec3_removeComponentAlongAxis(pivotAxis, directionFlat);\r\n\r\n        thisFlat.vec3_cross(directionFlat, rotationAxis);\r\n        rotationAxis.vec3_normalize(rotationAxis);\r\n        let signedAngle = thisFlat.vec3_angleSigned(directionFlat, rotationAxis);\r\n        out.quat_fromAxis(signedAngle, rotationAxis);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.vec3_lerp = function vec3_lerp(to, interpolationValue, out = PP.vec3_create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.vec3_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.vec3_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.vec3.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.vec3_interpolate = function vec3_interpolate(to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = PP.vec3_create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.vec3_lerp(to, lerpValue, out);\r\n};\r\n\r\n// VECTOR 4\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.vec4_copy = function vec4_copy(vector) {\r\n    glMatrix.vec4.copy(this, vector);\r\n    return this;\r\n};\r\n\r\nArray.prototype.vec4_clone = function vec4_clone(out = PP.vec4_create()) {\r\n    glMatrix.vec4.copy(out, this);\r\n    return out;\r\n};\r\n\r\n//QUAT\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.quat_normalize = function quat_normalize(out = PP.quat_create()) {\r\n    glMatrix.quat.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_copy = function quat_copy(quat) {\r\n    glMatrix.quat.copy(this, quat);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_clone = function quat_clone(out = PP.quat_create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_identity = function quat_identity() {\r\n    glMatrix.quat.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_length = function quat_length() {\r\n    return glMatrix.quat.length(this);\r\n};\r\n\r\nArray.prototype.quat_lengthSquared = function quat_lengthSquared() {\r\n    return glMatrix.quat.squaredLength(this);\r\n};\r\n\r\nArray.prototype.quat_invert = function quat_invert(out = PP.quat_create()) {\r\n    glMatrix.quat.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_conjugate = function quat_conjugate(out = PP.quat_create()) {\r\n    glMatrix.quat.conjugate(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_mul = function quat_mul(rotation, out = PP.quat_create()) {\r\n    glMatrix.quat.mul(out, this, rotation);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxis = function () {\r\n    let zero = PP.vec3_create(0, 0, 0);\r\n    return function quat_getAxis(out = PP.vec3_create()) {\r\n        let angle = glMatrix.quat.getAxisAngle(out, this);\r\n        if (angle <= this._pp_epsilon) {\r\n            out.vec3_copy(zero);\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getAngle = function quat_getAngle() {\r\n    return this.quat_getAngleDegrees();\r\n};\r\n\r\n\r\nArray.prototype.quat_getAngleDegrees = function quat_getAngleDegrees() {\r\n    let angle = this.quat_getAngleRadians();\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nArray.prototype.quat_getAngleRadians = function () {\r\n    let vector = PP.vec3_create();\r\n    return function quat_getAngleRadians() {\r\n        let angle = glMatrix.quat.getAxisAngle(vector, this);\r\n        return angle;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getAxisScaled = function quat_getAxisScaled(out = PP.vec3_create()) {\r\n    return this.quat_getAxisScaledDegrees(out);\r\n};\r\n\r\nArray.prototype.quat_getAxisScaledDegrees = function quat_getAxisScaledDegrees(out = PP.vec3_create()) {\r\n    this.quat_getAxis(out);\r\n    let angle = this.quat_getAngleDegrees();\r\n    out.vec3_scale(angle, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getAxisScaledRadians = function () {\r\n    let zero = PP.vec3_create(0, 0, 0);\r\n    return function quat_getAxisScaledRadians(out = PP.vec3_create()) {\r\n        this.quat_getAxis(out);\r\n        let angle = this.quat_getAngleRadians();\r\n        if (angle <= this._pp_epsilon) {\r\n            out.vec3_copy(zero);\r\n        } else {\r\n            out.vec3_scale(angle, out);\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getAxes = function quat_getAxes(out = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()]) {\r\n    this.quat_getLeft(out[0]);\r\n    this.quat_getUp(out[1]);\r\n    this.quat_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getForward = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat_getForward(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getBackward = function quat_getBackward(out) {\r\n    out = this.quat_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getLeft = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat_getLeft(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getRight = function quat_getRight(out) {\r\n    out = this.quat_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_getUp = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat_getUp(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getDown = function quat_getDown(out) {\r\n    out = this.quat_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_setAxes = function quat_setAxes(left, up, forward) {\r\n    if (forward != null) {\r\n        return this.quat_setForward(forward, up, left);\r\n    } else if (up != null) {\r\n        return this.quat_setUp(up, forward, left);\r\n    } else {\r\n        return this.quat_setLeft(left, up, forward);\r\n    }\r\n};\r\n\r\nArray.prototype.quat_setForward = function quat_setForward(forward, up = null, left = null) {\r\n    return this._quat_setAxes([left, up, forward], [2, 1, 0]);\r\n};\r\n\r\nArray.prototype.quat_setBackward = function () {\r\n    let forward = PP.vec3_create();\r\n    return function quat_setBackward(backward, up = null, left = null) {\r\n        backward.vec3_negate(forward);\r\n        return this._quat_setAxes([left, up, forward], [2, 1, 0]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_setUp = function quat_setUp(up, forward = null, left = null) {\r\n    return this._quat_setAxes([left, up, forward], [1, 2, 0]);\r\n};\r\n\r\nArray.prototype.quat_setDown = function () {\r\n    let up = PP.vec3_create();\r\n    return function quat_setDown(down, forward = null, left = null) {\r\n        down.vec3_negate(up);\r\n        return this._quat_setAxes([left, up, forward], [1, 2, 0]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_setLeft = function quat_setLeft(left, up = null, forward = null) {\r\n    return this._quat_setAxes([left, up, forward], [0, 1, 2]);\r\n};\r\n\r\nArray.prototype.quat_setRight = function () {\r\n    let left = PP.vec3_create();\r\n    return function quat_setRight(right, up = null, forward = null) {\r\n        right.vec3_negate(left);\r\n        return this._quat_setAxes([left, up, forward], [0, 1, 2]);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_toWorld = function quat_toWorld(parentQuat, out = PP.quat_create()) {\r\n    glMatrix.quat.mul(out, parentQuat, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_toLocal = function () {\r\n    let invertQuat = PP.quat_create();\r\n    return function quat_toLocal(parentQuat, out = PP.quat_create()) {\r\n        glMatrix.quat.conjugate(invertQuat, parentQuat);\r\n        glMatrix.quat.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromAxis = function quat_fromAxis(angle, axis) {\r\n    return this.quat_fromAxisDegrees(angle, axis);\r\n};\r\n\r\nArray.prototype.quat_fromAxisDegrees = function quat_fromAxisDegrees(angle, axis) {\r\n    glMatrix.quat.setAxisAngle(this, axis, glMatrix.glMatrix.toRadian(angle));\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_fromAxisRadians = function quat_fromAxisRadians(angle, axis) {\r\n    glMatrix.quat.setAxisAngle(this, axis, angle);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_fromAxes = function () {\r\n    let mat3 = PP.mat3_create();\r\n    return function quat_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n        mat3.mat3_fromAxes(leftAxis, upAxis, forwardAxis);\r\n        return mat3.mat3_toQuat(this);\r\n    };\r\n}();\r\n\r\n// New Functions\r\n\r\nArray.prototype.quat_fromRadians = function () {\r\n    let vector = PP.vec3_create();\r\n    return function quat_fromRadians(radiansRotation) {\r\n        radiansRotation.vec3_toDegrees(vector);\r\n        return this.quat_fromDegrees(vector);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromDegrees = function quat_fromDegrees(degreesRotation) {\r\n    glMatrix.quat.fromEuler(this, degreesRotation[0], degreesRotation[1], degreesRotation[2]);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat_toRadians = function () {\r\n    let mat3 = PP.mat3_create();\r\n    return function quat_toRadians(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(mat3, this);\r\n\r\n        //Rotation order is ZYX \r\n        out[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n        if (Math.abs(mat3[2]) < (1 - this._pp_epsilon)) {\r\n            out[0] = Math.atan2(mat3[5], mat3[8]);\r\n            out[2] = Math.atan2(mat3[1], mat3[0]);\r\n        } else {\r\n            out[0] = 0;\r\n            out[2] = Math.atan2(-mat3[3], mat3[4]);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_toDegrees = function quat_toDegrees(out = PP.vec3_create()) {\r\n    this.quat_toRadians(out);\r\n    out.vec3_toDegrees(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_isNormalized = function quat_isNormalized(epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(this.quat_lengthSquared() - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.quat_addRotation = function quat_addRotation(rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_addRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function quat_addRotationDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function quat_addRotationRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_addRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_addRotationQuat = function quat_addRotationQuat(rotation, out = PP.quat_create()) {\r\n    rotation.quat_mul(this, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_subRotation = function quat_subRotation(rotation, out) {\r\n    return this.quat_subRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_subRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function quat_subRotationDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function quat_subRotationRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(quat);\r\n        return this.quat_subRotationQuat(quat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_subRotationQuat = function () {\r\n    let inverse = PP.quat_create();\r\n    return function quat_subRotationQuat(rotation, out = PP.quat_create()) {\r\n        rotation.quat_invert(inverse);\r\n        this.quat_mul(inverse, out);\r\n\r\n        if (this.quat_isNormalized() && rotation.quat_isNormalized()) {\r\n            // I would normally not normalize this result since you may want the untouched sub\r\n            // But for normalized params it should be normalized\r\n            // It seems though that for some small error the quat will not be exactly normalized, so I fix it\r\n            out.quat_normalize(out);\r\n        }\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationTo = function quat_rotationTo(rotation, out) {\r\n    return this.quat_rotationToDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotationToDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat_rotationToDegrees(rotation, out) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        return this.quat_rotationToQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationToRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat_rotationToRadians(rotation, out) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        return this.quat_rotationToQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotationToQuat = function quat_rotationToQuat(rotation, out) {\r\n    return rotation.quat_subRotationQuat(this, out);\r\n};\r\n\r\nArray.prototype.quat_getTwist = function () {\r\n    let rotationAxis = PP.vec3_create();\r\n    let projection = PP.vec3_create();\r\n    let rotationAlongAxis = PP.quat_create();\r\n    return function quat_getTwist(axis, out = PP.quat_create()) {\r\n        rotationAxis[0] = this[0];\r\n        rotationAxis[1] = this[1];\r\n        rotationAxis[2] = this[2];\r\n\r\n        let dotProd = glMatrix.vec3.dot(axis, rotationAxis);\r\n        axis.vec3_scale(dotProd, projection);\r\n        rotationAlongAxis[0] = projection[0];\r\n        rotationAlongAxis[1] = projection[1];\r\n        rotationAlongAxis[2] = projection[2];\r\n        rotationAlongAxis[3] = this[3];\r\n        rotationAlongAxis.quat_normalize(rotationAlongAxis);\r\n        if (dotProd < 0) {\r\n            rotationAlongAxis[0] = -rotationAlongAxis[0];\r\n            rotationAlongAxis[1] = -rotationAlongAxis[1];\r\n            rotationAlongAxis[2] = -rotationAlongAxis[2];\r\n            rotationAlongAxis[3] = -rotationAlongAxis[3];\r\n        }\r\n\r\n        return out.quat_copy(rotationAlongAxis);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getSwing = function () {\r\n    let twist = PP.quat_create();\r\n    return function quat_getSwing(axis, out = PP.quat_create()) {\r\n        this.quat_getTwist(axis, twist);\r\n        this.quat_getSwingFromTwist(twist, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_getSwingFromTwist = function quat_getSwingFromTwist(twist, out = PP.quat_create()) {\r\n    return this.quat_subRotationQuat(twist, out);\r\n};\r\n\r\nArray.prototype.quat_getTwistFromSwing = function () {\r\n    let inverse = PP.quat_create();\r\n    return function quat_getTwistFromSwing(swing, out = PP.quat_create()) {\r\n        swing.quat_invert(inverse);\r\n        this.quat_addRotationQuat(inverse, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_fromTwistSwing = function quat_fromTwistSwing(twist, swing) {\r\n    return twist.quat_addRotationQuat(swing, this);\r\n};\r\n\r\nArray.prototype.quat_toMatrix = function quat_toMatrix(out = PP.mat3_create()) {\r\n    glMatrix.mat3.fromQuat(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_rotate = function quat_rotate(rotation, out) {\r\n    return this.quat_rotateDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateDegrees = function quat_rotateDegrees(rotation, out) {\r\n    return this.quat_addRotationDegrees(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateRadians = function quat_rotateRadians(rotation, out) {\r\n    return this.quat_addRotationRadians(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateQuat = function quat_rotateQuat(rotation, out) {\r\n    return this.quat_addRotationQuat(rotation, out);\r\n};\r\n\r\nArray.prototype.quat_rotateAxis = function quat_rotateAxis(angle, axis, out) {\r\n    return this.quat_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.quat_rotateAxisDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat_rotateAxisDegrees(angle, axis, out) {\r\n        rotationQuat.quat_fromAxisDegrees(angle, axis);\r\n        return this.quat_rotateQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_rotateAxisRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat_rotateAxisRadians(angle, axis, out) {\r\n        rotationQuat.quat_fromAxisRadians(angle, axis);\r\n        return this.quat_rotateQuat(rotationQuat, out);\r\n    };\r\n}();\r\n\r\nArray.prototype.quat_lerp = function quat_lerp(to, interpolationValue, out = PP.quat_create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_interpolate = function quat_interpolate(to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = PP.quat_create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat_lerp(to, lerpValue, out);\r\n};\r\n\r\nArray.prototype.quat_slerp = function quat_slerp(to, interpolationValue, out = PP.quat_create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat.slerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat_sinterpolate = function quat_sinterpolate(to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = PP.quat_create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat_slerp(to, lerpValue, out);\r\n};\r\n\r\n//QUAT 2\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.quat2_normalize = function quat2_normalize(out = PP.quat2_create()) {\r\n    glMatrix.quat2.normalize(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_invert = function quat2_invert(out = PP.quat2_create()) {\r\n    glMatrix.quat2.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_conjugate = function quat2_conjugate(out = PP.quat2_create()) {\r\n    glMatrix.quat2.conjugate(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_copy = function quat2_copy(quat2) {\r\n    glMatrix.quat2.copy(this, quat2);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_identity = function quat2_identity() {\r\n    glMatrix.quat2.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_getPosition = function quat2_getPosition(out = PP.vec3_create()) {\r\n    glMatrix.quat2.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getRotation = function quat2_getRotation(out) {\r\n    return this.quat2_getRotationDegrees(out);\r\n};\r\nArray.prototype.quat2_getRotationDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_getRotationDegrees(out = PP.vec3_create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_getRotationRadians(out = PP.vec3_create()) {\r\n        this.quat2_getRotationQuat(rotationQuat).quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRotationQuat = function quat2_getRotationQuat(out = PP.quat_create()) {\r\n    glMatrix.quat.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_setPosition = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_setPosition(position) {\r\n        this.quat2_getRotationQuat(rotationQuat);\r\n        this.quat2_setPositionRotationQuat(position, rotationQuat);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotation = function quat2_setRotation(rotation) {\r\n    return this.quat2_setRotationDegrees(rotation);\r\n};\r\n\r\nArray.prototype.quat2_setRotationDegrees = function () {\r\n    let position = PP.vec3_create();\r\n    return function quat2_setRotationDegrees(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationDegrees(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotationRadians = function () {\r\n    let position = PP.vec3_create();\r\n    return function quat2_setRotationRadians(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationRadians(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setRotationQuat = function () {\r\n    let position = PP.vec3_create();\r\n    return function quat2_setRotationQuat(rotation) {\r\n        this.quat2_getPosition(position);\r\n        this.quat2_setPositionRotationQuat(position, rotation);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotation = function quat2_setPositionRotation(position, rotation) {\r\n    return this.quat2_setPositionRotationDegrees(position, rotation);\r\n};\r\n\r\nArray.prototype.quat2_setPositionRotationDegrees = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_setPositionRotationDegrees(position, rotation) {\r\n        rotation.vec3_degreesToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_setPositionRotationRadians(position, rotation) {\r\n        rotation.vec3_radiansToQuat(rotationQuat);\r\n        glMatrix.quat2.fromRotationTranslation(this, rotationQuat, position);\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_setPositionRotationQuat = function quat2_setPositionRotationQuat(position, rotation) {\r\n    glMatrix.quat2.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.quat2_isNormalized = function quat2_isNormalized(epsilon = this._pp_normalizedEpsilon) {\r\n    return Math.abs(this.quat2_lengthSquared() - 1) < epsilon;\r\n};\r\n\r\nArray.prototype.quat2_length = function quat2_length() {\r\n    return glMatrix.quat2.length(this);\r\n};\r\n\r\nArray.prototype.quat2_lengthSquared = function quat2_lengthSquared() {\r\n    return glMatrix.quat2.squaredLength(this);\r\n};\r\n\r\nArray.prototype.quat2_mul = function quat2_mul(quat2, out = PP.quat2_create()) {\r\n    glMatrix.quat2.mul(out, this, quat2);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getAxes = function quat2_getAxes(out = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()]) {\r\n    this.quat2_getLeft(out[0]);\r\n    this.quat2_getUp(out[1]);\r\n    this.quat2_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getForward = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat2_getForward(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[6], rotationMatrix[7], rotationMatrix[8]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getBackward = function quat2_getBackward(out) {\r\n    out = this.quat2_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getLeft = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat2_getLeft(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[0], rotationMatrix[1], rotationMatrix[2]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getRight = function quat2_getRight(out) {\r\n    out = this.quat2_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_getUp = function () {\r\n    let rotationMatrix = PP.mat3_create();\r\n    return function quat2_getUp(out = PP.vec3_create()) {\r\n        glMatrix.mat3.fromQuat(rotationMatrix, this);\r\n\r\n        glMatrix.vec3.set(out, rotationMatrix[3], rotationMatrix[4], rotationMatrix[5]);\r\n        glMatrix.vec3.normalize(out, out);\r\n\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_getDown = function quat2_getDown(out) {\r\n    out = this.quat2_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_toWorld = function quat2_toWorld(parentTransformQuat, out = PP.quat2_create()) {\r\n    glMatrix.quat2.mul(out, parentTransformQuat, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_toLocal = function () {\r\n    let invertQuat = PP.quat2_create();\r\n    return function quat2_toLocal(parentTransformQuat, out = PP.quat2_create()) {\r\n        glMatrix.quat2.conjugate(invertQuat, parentTransformQuat);\r\n        glMatrix.quat2.mul(out, invertQuat, this);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_rotateAxis = function quat2_rotateAxis(angle, axis, out) {\r\n    return this.quat2_rotateAxisDegrees(angle, axis, out);\r\n};\r\n\r\nArray.prototype.quat2_rotateAxisDegrees = function quat2_rotateAxisDegrees(angle, axis, out) {\r\n    return this.quat2_rotateAxisRadians(glMatrix.glMatrix.toRadian(angle), axis, out);\r\n};\r\n\r\nArray.prototype.quat2_rotateAxisRadians = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function quat2_rotateAxisRadians(angle, axis, out) {\r\n        this.quat2_getRotationQuat(rotationQuat);\r\n        rotationQuat.quat_rotateAxisRadians(angle, axis, rotationQuat);\r\n        out.quat2_copy(this);\r\n        out.quat2_setRotationQuat(rotationQuat);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.quat2_toMatrix = function quat2_toMatrix(out = PP.mat4_create()) {\r\n    glMatrix.mat4.fromQuat2(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_fromMatrix = function quat2_fromMatrix(mat4) {\r\n    mat4.mat4_toQuat(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.quat2_lerp = function quat2_lerp(to, interpolationValue, out = PP.quat2_create()) {\r\n    if (interpolationValue <= 0) {\r\n        out.quat2_copy(this);\r\n        return out;\r\n    } else if (interpolationValue >= 1) {\r\n        out.quat2_copy(to);\r\n        return out;\r\n    }\r\n\r\n    glMatrix.quat2.lerp(out, this, to, interpolationValue);\r\n    return out;\r\n};\r\n\r\nArray.prototype.quat2_interpolate = function quat2_interpolate(to, interpolationValue, easingFunction = PP.EasingFunction.linear, out = PP.quat2_create()) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return this.quat2_lerp(to, lerpValue, out);\r\n};\r\n\r\n//MATRIX 3\r\n\r\n// glMatrix Bridge\r\n\r\n// New Functions\r\n\r\nArray.prototype.mat3_toDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat3_toDegrees(out = PP.vec3_create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat3_toRadians(out = PP.vec3_create()) {\r\n        this.mat3_toQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat3_toQuat = function mat3_toQuat(out = PP.quat_create()) {\r\n    glMatrix.quat.fromMat3(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat3_fromAxes = function mat3_fromAxes(leftAxis, upAxis, forwardAxis) {\r\n    glMatrix.mat3.set(this,\r\n        leftAxis[0], leftAxis[1], leftAxis[2],\r\n        upAxis[0], upAxis[1], upAxis[2],\r\n        forwardAxis[0], forwardAxis[1], forwardAxis[2]);\r\n    return this;\r\n};\r\n\r\n//MATRIX 4\r\n\r\n// glMatrix Bridge\r\n\r\nArray.prototype.mat4_copy = function mat4_copy(mat4) {\r\n    glMatrix.mat4.copy(this, mat4);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_identity = function mat4_identity() {\r\n    glMatrix.mat4.identity(this);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_invert = function mat4_invert(out = PP.mat4_create()) {\r\n    glMatrix.mat4.invert(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_mul = function mat4_mul(mat4, out = PP.mat4_create()) {\r\n    glMatrix.mat4.mul(out, this, mat4);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_scale = function mat4_scale(vector, out = PP.mat4_create()) {\r\n    glMatrix.mat4.scale(out, this, vector);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_clone = function mat4_clone(out = PP.mat4_create()) {\r\n    glMatrix.mat4.copy(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getPosition = function mat4_getPosition(out = PP.vec3_create()) {\r\n    glMatrix.mat4.getTranslation(out, this);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getRotation = function mat4_getRotation(out = PP.vec3_create()) {\r\n    return this.mat4_getRotationDegrees(out);\r\n};\r\n\r\nArray.prototype.mat4_getRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat4_getRotationDegrees(out = PP.vec3_create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toDegrees(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationRadians = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat4_getRotationRadians(out = PP.vec3_create()) {\r\n        this.mat4_getRotationQuat(quat);\r\n        quat.quat_toRadians(out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getRotationQuat = function () {\r\n    let scale = PP.vec3_create();\r\n    let transformMatrixNoScale = PP.mat4_create();\r\n    let inverseScale = PP.vec3_create();\r\n    let one = PP.vec3_create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_getRotationQuat(out = PP.quat_create()) {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        glMatrix.vec3.divide(inverseScale, one, scale);\r\n        glMatrix.mat4.scale(transformMatrixNoScale, this, inverseScale);\r\n        glMatrix.mat4.getRotation(out, transformMatrixNoScale);\r\n        glMatrix.quat.normalize(out, out);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_getScale = function mat4_getScale(out = PP.vec3_create()) {\r\n    glMatrix.mat4.getScaling(out, this);\r\n    return out;\r\n};\r\n\r\n// New Functions\r\n\r\nArray.prototype.mat4_setPosition = function mat4_setPosition(position) {\r\n    this[12] = position[0];\r\n    this[13] = position[1];\r\n    this[14] = position[2];\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotation = function mat4_setRotation(rotation) {\r\n    this.mat4_setRotationDegrees(rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat4_setRotationDegrees(rotation) {\r\n        this.mat4_setRotationQuat(rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationRadians = function () {\r\n    let vector = PP.vec3_create();\r\n    return function mat4_setRotationRadians(rotation) {\r\n        this.mat4_setRotationDegrees(rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setRotationQuat = function () {\r\n    let position = PP.vec3_create();\r\n    let scale = PP.vec3_create();\r\n    return function mat4_setRotationQuat(rotation) {\r\n        this.mat4_getPosition(position);\r\n        this.mat4_getScale(scale);\r\n        this.mat4_setPositionRotationQuatScale(position, rotation, scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setScale = function () {\r\n    let tempScale = PP.vec3_create();\r\n    return function mat4_setScale(scale) {\r\n        glMatrix.mat4.getScaling(tempScale, this);\r\n        glMatrix.vec3.divide(tempScale, scale, tempScale);\r\n        glMatrix.mat4.scale(this, this, tempScale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationScale = function mat4_setPositionRotationScale(position, rotation, scale) {\r\n    this.mat4_setPositionRotationDegreesScale(position, rotation, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegreesScale = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat4_setPositionRotationDegreesScale(position, rotation, scale) {\r\n        this.mat4_setPositionRotationQuatScale(position, rotation.vec3_degreesToQuat(quat), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadiansScale = function () {\r\n    let vector = PP.vec3_create();\r\n    return function mat4_setPositionRotationRadiansScale(position, rotation, scale) {\r\n        this.mat4_setPositionRotationDegreesScale(position, rotation.vec3_toDegrees(vector), scale);\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuatScale = function mat4_setPositionRotationQuatScale(position, rotation, scale) {\r\n    glMatrix.mat4.fromRotationTranslationScale(this, rotation, position, scale);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotation = function mat4_setPositionRotation(position, rotation) {\r\n    this.mat4_setPositionRotationDegrees(position, rotation);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_setPositionRotationDegrees = function () {\r\n    let quat = PP.quat_create();\r\n    return function mat4_setPositionRotationDegrees(position, rotation) {\r\n        this.mat4_setPositionRotationQuat(position, rotation.vec3_degreesToQuat(quat));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationRadians = function () {\r\n    let vector = PP.vec3_create();\r\n    return function mat4_setPositionRotationRadians(position, rotation) {\r\n        this.mat4_setPositionRotationDegrees(position, rotation.vec3_toDegrees(vector));\r\n        return this;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_setPositionRotationQuat = function mat4_setPositionRotationQuat(position, rotation) {\r\n    glMatrix.mat4.fromRotationTranslation(this, rotation, position);\r\n    return this;\r\n};\r\n\r\nArray.prototype.mat4_getAxes = function mat4_getAxes(out = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()]) {\r\n    this.mat4_getLeft(out[0]);\r\n    this.mat4_getUp(out[1]);\r\n    this.mat4_getForward(out[2]);\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getForward = function mat4_getForward(out = PP.vec3_create()) {\r\n    glMatrix.vec3.set(out, this[8], this[9], this[10]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getBackward = function mat4_getBackward(out) {\r\n    out = this.mat4_getForward(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getLeft = function mat4_getLeft(out = PP.vec3_create()) {\r\n    glMatrix.vec3.set(out, this[0], this[1], this[2]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getRight = function mat4_getRight(out) {\r\n    out = this.mat4_getLeft(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getUp = function mat4_getUp(out = PP.vec3_create()) {\r\n    glMatrix.vec3.set(out, this[4], this[5], this[6]);\r\n    glMatrix.vec3.normalize(out, out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_getDown = function mat4_getDown(out) {\r\n    out = this.mat4_getUp(out);\r\n    out.vec3_negate(out);\r\n    return out;\r\n};\r\n\r\nArray.prototype.mat4_toWorld = function () {\r\n    let convertTransform = PP.mat4_create();\r\n    let position = PP.vec3_create();\r\n    let scale = PP.vec3_create();\r\n    let inverseScale = PP.vec3_create();\r\n    let one = PP.vec3_create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_toWorld(parentTransformMatrix, out = PP.mat4_create()) {\r\n        if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.mul(out, parentTransformMatrix, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToWorldMatrix(parentTransformMatrix, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, scale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toLocal = function () {\r\n    let convertTransform = PP.mat4_create();\r\n    let position = PP.vec3_create();\r\n    let scale = PP.vec3_create();\r\n    let inverseScale = PP.vec3_create();\r\n    let one = PP.vec3_create();\r\n    glMatrix.vec3.set(one, 1, 1, 1);\r\n    return function mat4_toLocal(parentTransformMatrix, out = PP.mat4_create()) {\r\n        if (parentTransformMatrix.mat4_hasUniformScale()) {\r\n            glMatrix.mat4.invert(convertTransform, parentTransformMatrix);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n        } else {\r\n            glMatrix.vec3.set(position, this[12], this[13], this[14]);\r\n            position.vec3_convertPositionToLocalMatrix(parentTransformMatrix, position);\r\n\r\n            glMatrix.mat4.getScaling(scale, parentTransformMatrix);\r\n            glMatrix.vec3.divide(inverseScale, one, scale);\r\n            glMatrix.mat4.scale(convertTransform, parentTransformMatrix, inverseScale);\r\n\r\n            glMatrix.mat4.invert(convertTransform, convertTransform);\r\n            glMatrix.mat4.mul(out, convertTransform, this);\r\n            glMatrix.mat4.scale(out, out, inverseScale);\r\n\r\n            out[12] = position[0];\r\n            out[13] = position[1];\r\n            out[14] = position[2];\r\n            out[15] = 1;\r\n        }\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_hasUniformScale = function () {\r\n    let scale = PP.vec3_create();\r\n    return function mat4_hasUniformScale() {\r\n        glMatrix.mat4.getScaling(scale, this);\r\n        return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_toQuat = function () {\r\n    let position = PP.vec3_create();\r\n    let rotation = PP.quat_create();\r\n    return function mat4_toQuat(out = PP.quat2_create()) {\r\n        glMatrix.mat4.getTranslation(position, this);\r\n        this.mat4_getRotationQuat(rotation);\r\n        glMatrix.quat2.fromRotationTranslation(out, rotation, position);\r\n        return out;\r\n    };\r\n}();\r\n\r\nArray.prototype.mat4_fromQuat = function mat4_fromQuat(quat2) {\r\n    quat2.quat2_toMatrix(this);\r\n    return this;\r\n};\r\n\r\n//UTILS\r\n\r\nArray.prototype._pp_epsilon = 0.000001;\r\nArray.prototype._pp_epsilonSquared = Array.prototype._pp_epsilon * Array.prototype._pp_epsilon;\r\nArray.prototype._pp_degreesEpsilon = 0.00001;\r\nArray.prototype._pp_normalizedEpsilon = 0.000001;\r\n\r\nArray.prototype._pp_clamp = function _pp_clamp(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nArray.prototype._vec_buildConsoleMessage = function _vec_buildConsoleMessage(decimalPlaces) {\r\n    let message = \"[\";\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n        if (i != 0) {\r\n            message = message.concat(\", \");\r\n        }\r\n\r\n        if (decimalPlaces != null) {\r\n            message = message.concat(this[i].toFixed(decimalPlaces));\r\n        } else {\r\n            message = message.concat(this[i].toString());\r\n        }\r\n    }\r\n\r\n    message = message.concat(\"]\");\r\n    return message;\r\n};\r\n\r\nArray.prototype._vec_prepareOut = function _vec_prepareOut(out) {\r\n    if (out == null) {\r\n        out = this.pp_clone();\r\n    } else if (out != this) {\r\n        out.pp_copy(this);\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nArray.prototype._pp_findAllEqualOptimized = function _pp_findAllEqualOptimized(elementToFind, getIndexes) {\r\n    // adapted from: https://stackoverflow.com/a/20798567\r\n\r\n    let elementsFound = [];\r\n    let index = -1;\r\n    while ((index = this.indexOf(elementToFind, index + 1)) >= 0) {\r\n        elementsFound.push(getIndexes ? index : this[index]);\r\n    }\r\n\r\n    return elementsFound;\r\n}\r\n\r\nArray.prototype._quat_setAxes = function () {\r\n    let fixedAxes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()];\r\n\r\n    let fixedAxesFixSignMap = [\r\n        [1, -1, 1],\r\n        [1, 1, -1],\r\n        [-1, 1, -1]\r\n    ];\r\n\r\n    let fixedLeft = PP.vec3_create();\r\n    let fixedUp = PP.vec3_create();\r\n    let fixedForward = PP.vec3_create();\r\n\r\n    let currentAxis = PP.vec3_create();\r\n\r\n    let rotationAxis = PP.vec3_create();\r\n    let rotationMat = PP.mat3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function _quat_setAxes(axes, priority) {\r\n        let firstAxis = axes[priority[0]];\r\n        let secondAxis = axes[priority[1]];\r\n        let thirdAxis = axes[priority[2]];\r\n\r\n        if (firstAxis == null || firstAxis.vec3_isZero(this._pp_epsilon)) {\r\n            return;\r\n        }\r\n\r\n        let secondAxisValid = false;\r\n        if (secondAxis != null) {\r\n            let angleBetween = firstAxis.vec3_angleRadians(secondAxis);\r\n            if (angleBetween > this._pp_epsilon) {\r\n                secondAxisValid = true;\r\n            }\r\n        }\r\n\r\n        let thirdAxisValid = false;\r\n        if (thirdAxis != null) {\r\n            let angleBetween = firstAxis.vec3_angleRadians(thirdAxis);\r\n            if (angleBetween > this._pp_epsilon) {\r\n                thirdAxisValid = true;\r\n            }\r\n        }\r\n\r\n        if (secondAxisValid || thirdAxisValid) {\r\n            let crossAxis = null;\r\n            let secondAxisIndex = null;\r\n            let thirdAxisIndex = null;\r\n            if (secondAxisValid) {\r\n                crossAxis = secondAxis;\r\n                secondAxisIndex = 1;\r\n                thirdAxisIndex = 2;\r\n            } else {\r\n                crossAxis = thirdAxis;\r\n                secondAxisIndex = 2;\r\n                thirdAxisIndex = 1;\r\n            }\r\n\r\n            let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n            glMatrix.vec3.cross(fixedAxes[thirdAxisIndex], firstAxis, crossAxis);\r\n            glMatrix.vec3.scale(fixedAxes[thirdAxisIndex], fixedAxes[thirdAxisIndex], fixSignMap[priority[thirdAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[secondAxisIndex], firstAxis, fixedAxes[thirdAxisIndex]);\r\n            glMatrix.vec3.scale(fixedAxes[secondAxisIndex], fixedAxes[secondAxisIndex], fixSignMap[priority[secondAxisIndex]]);\r\n\r\n            glMatrix.vec3.cross(fixedAxes[0], fixedAxes[1], fixedAxes[2]);\r\n            glMatrix.vec3.scale(fixedAxes[0], fixedAxes[0], fixSignMap[priority[0]]);\r\n\r\n            glMatrix.vec3.normalize(fixedLeft, fixedAxes[priority.pp_findIndexEqual(0)]);\r\n            glMatrix.vec3.normalize(fixedUp, fixedAxes[priority.pp_findIndexEqual(1)]);\r\n            glMatrix.vec3.normalize(fixedForward, fixedAxes[priority.pp_findIndexEqual(2)]);\r\n\r\n            glMatrix.mat3.set(rotationMat,\r\n                fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                fixedUp[0], fixedUp[1], fixedUp[2],\r\n                fixedForward[0], fixedForward[1], fixedForward[2]\r\n            );\r\n\r\n            glMatrix.quat.fromMat3(rotationQuat, rotationMat);\r\n            glMatrix.quat.normalize(rotationQuat, rotationQuat);\r\n\r\n            this.quat_copy(rotationQuat);\r\n        } else {\r\n            if (priority[0] == 0) {\r\n                this.quat_getLeft(currentAxis);\r\n            } else if (priority[0] == 1) {\r\n                this.quat_getUp(currentAxis);\r\n            } else {\r\n                this.quat_getForward(currentAxis);\r\n            }\r\n\r\n            let angleBetween = firstAxis.vec3_angleRadians(currentAxis);\r\n            if (angleBetween > this._pp_epsilon) {\r\n                glMatrix.vec3.cross(rotationAxis, currentAxis, firstAxis);\r\n                glMatrix.vec3.normalize(rotationAxis, rotationAxis);\r\n                glMatrix.quat.setAxisAngle(rotationQuat, rotationAxis, angleBetween);\r\n\r\n                this.quat_rotateQuat(rotationQuat, this);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    };\r\n}();\r\n\r\n\r\n\r\nArray.prototype._pp_syncPrototypesProperties();", "/*\r\n    How to use\r\n\r\n    By default the rotations are in Degrees\r\n\r\n    For rotations u can add a suffix like Degrees/Radians to use a specific version, example:\r\n        - pp_angleDistanceSignedDegrees\r\n        - pp_isInsideAngleRangeRadians\r\n        \r\n    List of constants:\r\n        - PP_EPSILON_NUMBER / PP_EPSILON_DEGREES\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like Degrees or Radians) are omitted \r\n\r\n        - pp_clamp\r\n        - pp_sign\r\n        - pp_toDegrees      / pp_toRadians\r\n        - pp_roundDecimal\r\n        - pp_mapToRange\r\n        - pp_random         / pp_randomInt    / pp_randomInt        / pp_randomSign / pp_randomPick\r\n        - pp_lerp           / pp_interpolate  / PP.EasingFunction\r\n        - pp_angleDistance  / pp_angleDistanceSigned\r\n        - pp_angleClamp\r\n        - pp_isInsideAngleRange\r\n*/\r\n\r\nMath.PP_EPSILON_NUMBER = 0.00001;\r\nMath.PP_EPSILON_NUMBER_SQUARED = Math.PP_EPSILON_NUMBER * Math.PP_EPSILON_NUMBER;\r\nMath.PP_EPSILON_DEGREES = 0.0001;\r\n\r\nMath.pp_clamp = function pp_clamp(value, start, end) {\r\n    let fixedStart = (start != null) ? start : -Number.MAX_VALUE;\r\n    let fixedEnd = (end != null) ? end : Number.MAX_VALUE;\r\n\r\n    let min = Math.min(fixedStart, fixedEnd);\r\n    let max = Math.max(fixedStart, fixedEnd);\r\n    return Math.min(Math.max(value, min), max);\r\n};\r\n\r\nMath.pp_sign = function pp_sign(value, zeroSign = 1) {\r\n    let sign = Math.sign(value);\r\n    if (sign == 0) {\r\n        sign = Math.sign(zeroSign);\r\n    }\r\n    return sign;\r\n};\r\n\r\nMath.pp_toDegrees = function pp_toDegrees(angle) {\r\n    return angle * (180 / Math.PI);\r\n};\r\n\r\nMath.pp_toRadians = function pp_toRadians(angle) {\r\n    return angle * (Math.PI / 180);\r\n};\r\n\r\nMath.pp_roundDecimal = function pp_roundDecimal(number, decimalPlaces) {\r\n    let factor = Math.pow(10, decimalPlaces);\r\n    number = Math.round(number * factor) / factor;\r\n\r\n    return number;\r\n};\r\n\r\n// Start range value doesn't need to be lower than the end one, so you can map from [0,1] to [3,2], where 3 is greater than 2\r\nMath.pp_mapToRange = function pp_mapToRange(value, originRangeStart, originRangeEnd, newRangeStart, newRangeEnd) {\r\n    if (originRangeStart == originRangeEnd) {\r\n        return newRangeStart;\r\n    }\r\n\r\n    let clampedValue = Math.pp_clamp(value, originRangeStart, originRangeEnd);\r\n\r\n    if (clampedValue == originRangeStart) {\r\n        return newRangeStart;\r\n    } else if (clampedValue == originRangeEnd) {\r\n        return newRangeEnd;\r\n    }\r\n\r\n    let newValue = newRangeStart + ((newRangeEnd - newRangeStart) / (originRangeEnd - originRangeStart)) * (clampedValue - originRangeStart);\r\n    let clampedNewValue = Math.pp_clamp(newValue, newRangeStart, newRangeEnd);\r\n    return clampedNewValue;\r\n};\r\n\r\n//Range is [start, end)\r\nMath.pp_random = function pp_random(start = 0, end = 1) {\r\n    return Math.random() * (end - start) + start;\r\n};\r\n\r\n//Range is [start, end]\r\nMath.pp_randomInt = function pp_randomInt(start, end) {\r\n    let min = Math.min(start, end);\r\n    let max = Math.max(start, end);\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nMath.pp_randomBool = function pp_randomBool() {\r\n    return Math.pp_randomInt(0, 1) == 0;\r\n};\r\n\r\n//Return 1 or -1\r\nMath.pp_randomSign = function pp_randomSign() {\r\n    return (Math.random() < 0.5) ? 1 : -1;\r\n};\r\n\r\n//You give it a list of parameters and returns one\r\nMath.pp_randomPick = function pp_randomPick(...args) {\r\n    let random = null;\r\n\r\n    if (args.length > 0) {\r\n        if (args.length == 1 && args[0].length != null) {\r\n            if (args[0].length > 0) {\r\n                let randomIndex = Math.pp_randomInt(0, args[0].length - 1);\r\n                random = args[0][randomIndex];\r\n            }\r\n        } else {\r\n            let randomIndex = Math.pp_randomInt(0, args.length - 1);\r\n            random = args[randomIndex];\r\n        }\r\n    }\r\n\r\n    return random;\r\n};\r\n\r\nMath.pp_lerp = function pp_lerp(from, to, interpolationValue) {\r\n    if (interpolationValue <= 0) {\r\n        return from;\r\n    } else if (interpolationValue >= 1) {\r\n        return to;\r\n    }\r\n\r\n    return interpolationValue * (to - from) + from;\r\n};\r\n\r\nPP.EasingFunction = {\r\n    linear: t => t,\r\n    easeIn: t => t * t * t,\r\n    easeOut: t => (t - 1) * (t - 1) * (t - 1) + 1,\r\n    easeInOut: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\r\n};\r\n\r\nMath.pp_interpolate = function pp_interpolate(from, to, interpolationValue, easingFunction = PP.EasingFunction.linear) {\r\n    let lerpValue = easingFunction(interpolationValue);\r\n    return Math.pp_lerp(from, to, lerpValue);\r\n};\r\n\r\nMath.pp_angleDistance = function pp_angleDistance(from, to) {\r\n    return Math.pp_angleDistanceDegrees(from, to);\r\n};\r\n\r\nMath.pp_angleDistanceDegrees = function pp_angleDistanceDegrees(from, to) {\r\n    return Math.abs(Math.pp_angleDistanceSignedDegrees(from, to));\r\n};\r\n\r\nMath.pp_angleDistanceRadians = function pp_angleDistanceRadians(from, to) {\r\n    return Math.abs(Math.pp_angleDistanceSignedRadians(from, to));\r\n};\r\n\r\nMath.pp_angleDistanceSigned = function pp_angleDistanceSigned(from, to) {\r\n    return Math.pp_angleDistanceSignedDegrees(from, to);\r\n};\r\n\r\nMath.pp_angleDistanceSignedDegrees = function pp_angleDistanceSignedDegrees(from, to) {\r\n    let clampedFrom = Math.pp_angleClampDegrees(from, true);\r\n    let clampedTo = Math.pp_angleClampDegrees(to, true);\r\n\r\n    let distance = clampedTo - clampedFrom;\r\n    if (clampedTo - clampedFrom > 180) {\r\n        distance = (clampedTo - clampedFrom) - 360;\r\n    } else if (clampedTo - clampedFrom < -180) {\r\n        distance = (clampedTo - clampedFrom) + 360;\r\n    }\r\n\r\n    return distance;\r\n};\r\n\r\nMath.pp_angleDistanceSignedRadians = function pp_angleDistanceSignedRadians(from, to) {\r\n    return Math.pp_toRadians(Math.pp_angleDistanceSignedDegrees(Math.pp_toDegrees(from), Math.pp_toDegrees(to)));\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClamp = function pp_angleClamp(angle, usePositiveRange = false) {\r\n    return Math.pp_angleClampDegrees(angle, usePositiveRange);\r\n};\r\n\r\n//Clamp the angle to -180/+180, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/360\r\nMath.pp_angleClampDegrees = function pp_angleClampDegrees(angle, usePositiveRange = false) {\r\n    let clampedAngle = angle % 360;\r\n\r\n    if (clampedAngle < 0) {\r\n        clampedAngle += 360;\r\n    }\r\n\r\n    if (!usePositiveRange) {\r\n        if (clampedAngle > 180) {\r\n            clampedAngle -= 360;\r\n        }\r\n    }\r\n\r\n    return clampedAngle;\r\n};\r\n\r\n//Clamp the angle to -Pi/+Pi, so that, for example, 270 will be -90\r\n//if usePositiveRange is true, the angle will be clamped to 0/2Pi\r\nMath.pp_angleClampRadians = function pp_angleClampRadians(angle, usePositiveRange = false) {\r\n    return Math.pp_toRadians(Math.pp_angleClampDegrees(Math.pp_toDegrees(angle), usePositiveRange));\r\n};\r\n\r\n//The range goes from start to end by going toward the positive direction (if useShortestAngle is false)\r\n//[20,300] is a 280 degrees range, [300, 20] is an 80 degrees range, [-150,-170] = [210, 190] is a 240 degrees range, [0, -10] = [0, 350] is a 350 degrees range\r\nMath.pp_isInsideAngleRange = function pp_isInsideAngleRange(angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle);\r\n};\r\n\r\nMath.pp_isInsideAngleRangeDegrees = function pp_isInsideAngleRangeDegrees(angle, start, end, useShortestAngle = false) {\r\n    let isInside = false;\r\n\r\n    let anglePositive = Math.pp_angleClampDegrees(angle, true);\r\n    let startPositive = Math.pp_angleClampDegrees(start, true);\r\n    let endPositive = Math.pp_angleClampDegrees(end, true);\r\n\r\n    if (useShortestAngle) {\r\n        if (Math.pp_angleDistanceSignedDegrees(startPositive, endPositive) < 0) {\r\n            let temp = startPositive;\r\n            startPositive = endPositive;\r\n            endPositive = temp;\r\n        }\r\n    }\r\n\r\n    if (startPositive < endPositive) {\r\n        isInside = anglePositive >= startPositive && anglePositive <= endPositive;\r\n    } else {\r\n        isInside = anglePositive >= startPositive || anglePositive <= endPositive;\r\n    }\r\n\r\n    return isInside;\r\n};\r\n\r\nMath.pp_isInsideAngleRangeRadians = function pp_isInsideAngleRangeRadians(angle, start, end, useShortestAngle = false) {\r\n    return Math.pp_isInsideAngleRangeDegrees(Math.pp_toDegrees(angle), Math.pp_toDegrees(start), Math.pp_toDegrees(end), useShortestAngle);\r\n};\r\n\r\n\r\n\r\nfor (let key in Math) {\r\n    let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n    let found = false;\r\n    for (let prefix of prefixes) {\r\n        if (key.startsWith(prefix)) {\r\n            found = true;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (found) {\r\n        Object.defineProperty(Math, key, { enumerable: false });\r\n    }\r\n}", "/*\r\n    How to use\r\n\r\n    By default the functions work on World space, rotations are in Degrees and transforms are Matrix (and not Quat 2) \r\n    For functions that work with rotations, Matrix means Matrix 3 and Quat means Quat\r\n    For functions that work with transforms, Matrix means Matrix 4 and Quat means Quat 2\r\n\r\n    You can add a suffix like World/Local/Object at the end of some functions to specify the space, example:\r\n        - pp_getPositionLocal to get the position in local space (parent space)\r\n        - pp_translateObject to translate in object space\r\n\r\n    For rotations u can add a suffix like Degrees/Radians/Quat/Matrix to use a specific version, example:\r\n        - pp_getRotationDegrees\r\n        - pp_setRotationLocalMatrix\r\n        - pp_rotateWorldQuat\r\n        \r\n    For transform u can add a suffix like Quat/Matrix to use a specific version, example:\r\n        - pp_getTransformQuat\r\n        - pp_setTransformWorldMatrix\r\n        \r\n    Some functions let you specify if u want them to work on the Hierarchy/Descendants/Children/Self where:\r\n        - Self: the current object only\r\n        - Children: direct children of the object\r\n        - Descendants: all the children of the object, including child of child and so on \r\n        - Hierarchy: Descendants plus the current object\r\n    Examples:\r\n        - pp_getComponent\r\n        - pp_getComponentHierarchy\r\n        - pp_getComponentsAmountMapDescendants\r\n        - pp_setActiveChildren\r\n        - pp_setActiveSelf\r\n    By default the functions work on the Hierarchy\r\n    On some of the functions where u can specify Hierarchy/Descendants u can also specify \r\n    if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getComponentHierarchyBreadth\r\n        - pp_setActiveDescendantsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    In static functions (accessible directly through WL.Object) the suffix Objects means it will work on a given object list, example:\r\n        - pp_getComponentsObjects\r\n        - pp_getObjectByNameObjects\r\n\r\n    The functions leave u the choice of forwarding an out parameter or just get the return value, example:\r\n        - let position = this.object.pp_getPosition()\r\n        - this.object.pp_getPosition(position)\r\n        - the out parameter is always the last one\r\n\r\n    List of functions:\r\n        Notes:\r\n            - The suffixes (like World or Radians) are omitted \r\n\r\n        - pp_getPosition    / pp_setPosition    / pp_resetPosition\r\n        - pp_getRotation    / pp_setRotation    / pp_resetRotation\r\n        - pp_getScale       / pp_setScale       (u can specify a single number instead of a vector to uniform scale easily) / pp_resetScale \r\n        - pp_getTransform   / pp_setTransform   / pp_resetTransform\r\n\r\n        - pp_getAxes        / pp_setAxes\r\n        - pp_getLeft        / pp_getRight       / pp_setLeft        / pp_setRight\r\n        - pp_getUp          / pp_getDown        / pp_setUp          / pp_setDown\r\n        - pp_getForward     / pp_getBackward    / pp_setForward     / pp_setBackward\r\n\r\n        - pp_translate      / pp_translateAxis\r\n        - pp_rotate         / pp_rotateAxis     / pp_rotateAround    / pp_rotateAroundAxis\r\n        - pp_scaleObject    (for now scale only have this variant) (u can specify a single number instead of a vector to uniform scale easily)\r\n\r\n        - pp_lookAt         / pp_lookTo (u can avoid to specify up and the function will pickup the object up by default)\r\n\r\n        - pp_getParent      / pp_setParent (let u specify if u want to keep the transform or not)\r\n\r\n        - pp_convertPositionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertDirectionObjectToWorld (you can use all the combinations between Object/Local/World)\r\n        - pp_convertTransformObjectToWorld (you can use all the combinations between Object/Local/World) (u also have Quat and Matrix version)\r\n\r\n        - pp_hasUniformScale\r\n\r\n        - pp_addComponent\r\n        - pp_getComponent   / pp_getComponentHierarchy  / pp_getComponentDescendants  / pp_getComponentChildren / pp_getComponentSelf\r\n        - pp_getComponents  / pp_getComponentsHierarchy / pp_getComponentsDescendants / pp_getComponentsChildren / pp_getComponentsSelf\r\n\r\n        - pp_setActive  / pp_setActiveHierarchy / pp_setActiveDescendants / pp_setActiveChildren / pp_setActiveSelf\r\n\r\n        - pp_clone      / pp_isCloneable\r\n        \r\n        - pp_toString   / pp_toStringCompact / pp_toStringExtended\r\n        \r\n        - pp_getObjectByName  / pp_getObjectByNameHierarchy / pp_getObjectByNameDescendants / pp_getObjectByNameChildren\r\n        - pp_getObjectsByName  / pp_getObjectsByNameHierarchy / pp_getObjectsByNameDescendants / pp_getObjectsByNameChildren\r\n\r\n        - pp_getHierarchy / pp_getHierarchyBreadth / pp_getHierarchyDepth \r\n        - pp_getDescendants / pp_getDescendantsBreadth / pp_getDescendantsDepth \r\n        - pp_getChildren\r\n        - pp_getSelf\r\n\r\n        - pp_addObject\r\n        - pp_getName    / pp_setName\r\n        - pp_getID\r\n        - pp_reserveObjects / pp_reserveObjectsHierarchy / pp_reserveObjectsDescendants / pp_reserveObjectsChildren / pp_reserveObjectsSelf\r\n        - pp_getComponentsAmountMap / pp_getComponentsAmountMapHierarchy / pp_getComponentsAmountMapDescendants / pp_getComponentsAmountMapChildren / pp_getComponentsAmountMapSelf\r\n        - pp_markDirty\r\n        - pp_equals\r\n        - pp_destroy\r\n\r\n        STATIC FUNCTIONS:\r\n        - pp_getComponentObjects\r\n        - pp_getComponentsObjects\r\n        - pp_setActiveObjects\r\n        - pp_getObjectByNameObjects\r\n        - pp_getObjectsByNameObjects\r\n*/\r\n\r\nif (WL && WL.Object) {\r\n\r\n    //GETTER\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_getPosition = function pp_getPosition(position) {\r\n        return this.pp_getPositionWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getPositionWorld = function pp_getPositionWorld(position = PP.vec3_create()) {\r\n        this.getTranslationWorld(position);\r\n        return position;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getPositionLocal = function pp_getPositionLocal(position = PP.vec3_create()) {\r\n        this.getTranslationLocal(position);\r\n        return position;\r\n    };\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_getRotation = function pp_getRotation(rotation) {\r\n        return this.pp_getRotationWorld(rotation);\r\n    };\r\n    WL.Object.prototype.pp_getRotationDegrees = function pp_getRotationDegrees(rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationRadians = function pp_getRotationRadians(rotation) {\r\n        return this.pp_getRotationWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationMatrix = function pp_getRotationMatrix(rotation) {\r\n        return this.pp_getRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationQuat = function pp_getRotationQuat(rotation) {\r\n        return this.pp_getRotationWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotation World\r\n\r\n    WL.Object.prototype.pp_getRotationWorld = function pp_getRotationWorld(rotation) {\r\n        return this.pp_getRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationWorldDegrees = function pp_getRotationWorldDegrees(rotation) {\r\n        rotation = this.pp_getRotationWorldRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationWorldRadians = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_getRotationWorldRadians(rotation = PP.vec3_create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            this._pp_quaternionToRadians(quat, rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationWorldMatrix = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_getRotationWorldMatrix(rotation = PP.mat3_create()) {\r\n            this.pp_getRotationWorldQuat(quat);\r\n            quat.quat_toMatrix(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationWorldQuat = function pp_getRotationWorldQuat(rotation = PP.quat_create()) {\r\n        rotation.quat_copy(this.rotationWorld);\r\n        return rotation;\r\n    };\r\n\r\n    //Rotation Local\r\n\r\n    WL.Object.prototype.pp_getRotationLocal = function pp_getRotationLocal(rotation) {\r\n        return this.pp_getRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationLocalDegrees = function pp_getRotationLocalDegrees(rotation) {\r\n        rotation = this.pp_getRotationLocalRadians(rotation);\r\n        rotation.forEach(function (value, index, array) {\r\n            array[index] = this._pp_toDegrees(value);\r\n        }.bind(this));\r\n        return rotation;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRotationLocalRadians = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_getRotationLocalRadians(rotation = PP.vec3_create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            this._pp_quaternionToRadians(quat, rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationLocalMatrix = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_getRotationLocalMatrix(rotation = PP.mat3_create()) {\r\n            this.pp_getRotationLocalQuat(quat);\r\n            quat.quat_toMatrix(rotation);\r\n            return rotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRotationLocalQuat = function pp_getRotationLocalQuat(rotation = PP.quat_create()) {\r\n        rotation.quat_copy(this.rotationLocal);\r\n        return rotation;\r\n    };\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_getScale = function pp_getScale(scale) {\r\n        return this.pp_getScaleWorld(scale);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getScaleWorld = function pp_getScaleWorld(scale = PP.vec3_create()) {\r\n        scale.vec3_copy(this.scalingWorld);\r\n        return scale;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getScaleLocal = function pp_getScaleLocal(scale = PP.vec3_create()) {\r\n        scale.vec3_copy(this.scalingLocal);\r\n        return scale;\r\n    };\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_getTransform = function pp_getTransform(transform) {\r\n        return this.pp_getTransformWorld(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformMatrix = function pp_getTransformMatrix(transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformQuat = function pp_getTransformQuat(transform) {\r\n        return this.pp_getTransformWorldQuat(transform);\r\n    };\r\n\r\n    //Transform World\r\n\r\n    WL.Object.prototype.pp_getTransformWorld = function pp_getTransformWorld(transform) {\r\n        return this.pp_getTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformWorldMatrix = function () {\r\n        let transformQuat = PP.quat2_create();\r\n        let scale = PP.vec3_create();\r\n        return function pp_getTransformWorldMatrix(transform = PP.mat4_create()) {\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            this.pp_getScaleWorld(scale);\r\n            transform.mat4_fromQuat(transformQuat);\r\n            transform.mat4_scale(scale, transform);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getTransformWorldQuat = function pp_getTransformWorldQuat(transform = PP.quat2_create()) {\r\n        transform.quat2_copy(this.transformWorld);\r\n        return transform;\r\n    };\r\n\r\n    //Transform Local\r\n\r\n    WL.Object.prototype.pp_getTransformLocal = function (transform) {\r\n        return this.pp_getTransformLocalMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getTransformLocalMatrix = function pp_getTransformLocalMatrix() {\r\n        let transformQuat = PP.quat2_create();\r\n        let scale = PP.vec3_create();\r\n        return function pp_getTransformLocal(transform = PP.mat4_create()) {\r\n            this.pp_getTransformLocalQuat(transformQuat);\r\n            this.pp_getScaleLocal(scale);\r\n            transform.mat4_fromQuat(transformQuat);\r\n            transform.mat4_scale(scale, transform);\r\n            return transform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getTransformLocalQuat = function pp_getTransformLocalQuat(transform = PP.quat2_create()) {\r\n        transform.quat2_copy(this.transformLocal);\r\n        return transform;\r\n    };\r\n\r\n    //Axes\r\n\r\n    WL.Object.prototype.pp_getAxes = function pp_getAxes(axes) {\r\n        return this.pp_getAxesWorld(axes);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getAxesWorld = function pp_getAxesWorld(axes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()]) {\r\n        this.pp_getLeftWorld(axes[0]);\r\n        this.pp_getUpWorld(axes[1]);\r\n        this.pp_getForwardWorld(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getAxesLocal = function pp_getAxesLocal(axes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()]) {\r\n        this.pp_getLeftLocal(axes[0]);\r\n        this.pp_getUpLocal(axes[1]);\r\n        this.pp_getForwardLocal(axes[2]);\r\n        return axes;\r\n    };\r\n\r\n    //Forward\r\n\r\n    WL.Object.prototype.pp_getForward = function pp_getForward(forward) {\r\n        return this.pp_getForwardWorld(forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getForwardWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getForwardWorld(forward = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getForwardLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getForwardLocal(forward = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            forward[0] = rotation[6];\r\n            forward[1] = rotation[7];\r\n            forward[2] = rotation[8];\r\n            return forward;\r\n        };\r\n    }();\r\n\r\n    //Backward\r\n\r\n    WL.Object.prototype.pp_getBackward = function pp_getBackward(backward) {\r\n        return this.pp_getBackwardWorld(backward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getBackwardWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getBackwardWorld(backward = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getBackwardLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getBackwardLocal(backward = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            backward[0] = -rotation[6];\r\n            backward[1] = -rotation[7];\r\n            backward[2] = -rotation[8];\r\n            return backward;\r\n        };\r\n    }();\r\n\r\n    //Up\r\n\r\n    WL.Object.prototype.pp_getUp = function pp_getUp(up) {\r\n        return this.pp_getUpWorld(up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getUpWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getUpWorld(up = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getUpLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getUpLocal(up = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            up[0] = rotation[3];\r\n            up[1] = rotation[4];\r\n            up[2] = rotation[5];\r\n            return up;\r\n        };\r\n    }();\r\n\r\n    //Down\r\n\r\n    WL.Object.prototype.pp_getDown = function pp_getDown(down) {\r\n        return this.pp_getDownWorld(down);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDownWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getDownWorld(down = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getDownLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getDownLocal(down = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            down[0] = -rotation[3];\r\n            down[1] = -rotation[4];\r\n            down[2] = -rotation[5];\r\n            return down;\r\n        };\r\n    }();\r\n\r\n    //Left\r\n\r\n    WL.Object.prototype.pp_getLeft = function pp_getLeft(left) {\r\n        return this.pp_getLeftWorld(left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getLeftWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getLeftWorld(left = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getLeftLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getLeftLocal(left = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            left[0] = rotation[0];\r\n            left[1] = rotation[1];\r\n            left[2] = rotation[2];\r\n            return left;\r\n        };\r\n    }();\r\n\r\n    //Right\r\n\r\n    WL.Object.prototype.pp_getRight = function pp_getRight(right) {\r\n        return this.pp_getRightWorld(right);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getRightWorld = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getRightWorld(right = PP.vec3_create()) {\r\n            this.pp_getRotationWorldMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getRightLocal = function () {\r\n        let rotation = PP.mat3_create();\r\n        return function pp_getRightLocal(right = PP.vec3_create()) {\r\n            this.pp_getRotationLocalMatrix(rotation);\r\n            right[0] = -rotation[0];\r\n            right[1] = -rotation[1];\r\n            right[2] = -rotation[2];\r\n            return right;\r\n        };\r\n    }();\r\n\r\n    //SETTER\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_setPosition = function pp_setPosition(position) {\r\n        this.pp_setPositionWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setPositionWorld = function pp_setPositionWorld(position) {\r\n        this.setTranslationWorld(position);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setPositionLocal = function pp_setPositionLocal(position) {\r\n        this.setTranslationLocal(position);\r\n    };\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_setRotation = function pp_setRotation(rotation) {\r\n        this.pp_setRotationWorld(rotation);\r\n    };\r\n    WL.Object.prototype.pp_setRotationDegrees = function pp_setRotationDegrees(rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationRadians = function pp_setRotationRadians(rotation) {\r\n        this.pp_setRotationWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationMatrix = function pp_setRotationMatrix(rotation) {\r\n        this.pp_setRotationWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationQuat = function pp_setRotationQuat(rotation) {\r\n        this.pp_setRotationWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotation World\r\n\r\n    WL.Object.prototype.pp_setRotationWorld = function pp_setRotationWorld(rotation) {\r\n        this.pp_setRotationWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationWorldDegrees = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_setRotationWorldDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, quat);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_setRotationWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldMatrix = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_setRotationWorldMatrix(rotation) {\r\n            rotation.mat3_toQuat(quat);\r\n            this.pp_setRotationWorldQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationWorldQuat = function pp_setRotationWorldQuat(rotation) {\r\n        this.rotationWorld = rotation;\r\n    };\r\n\r\n    //Rotation Local\r\n\r\n    WL.Object.prototype.pp_setRotationLocal = function pp_setRotationLocal(rotation) {\r\n        this.pp_setRotationLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRotationLocalDegrees = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_setRotationLocalDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, quat);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_setRotationLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_setRotationLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalMatrix = function () {\r\n        let quat = PP.quat_create();\r\n        return function pp_setRotationLocalMatrix(rotation) {\r\n            rotation.mat3_toQuat(quat);\r\n            this.pp_setRotationLocalQuat(quat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRotationLocalQuat = function pp_setRotationLocalQuat(rotation) {\r\n        this.rotationLocal = rotation;\r\n    };\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_setScale = function pp_setScale(scale) {\r\n        this.pp_setScaleWorld(scale);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setScaleWorld = function () {\r\n        let vector = PP.vec3_create();\r\n        return function pp_setScaleWorld(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingWorld = scale;\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scalingWorld = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setScaleLocal = function () {\r\n        let vector = PP.vec3_create();\r\n        return function pp_setScaleLocal(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scalingLocal = scale;\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scalingLocal = vector;\r\n            }\r\n        };\r\n    }();\r\n\r\n    //Axes    \r\n\r\n    WL.Object.prototype.pp_setAxes = function pp_setAxes(left, up, forward) {\r\n        this.pp_setAxesWorld(left, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setAxesWorld = function pp_setAxesWorld(left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardWorld(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpWorld(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftWorld(left, up, forward);\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_setAxesLocal = function pp_setAxesLocal(left, up, forward) {\r\n        if (forward != null) {\r\n            this.pp_setForwardLocal(forward, up, left);\r\n        } else if (up != null) {\r\n            this.pp_setUpLocal(up, forward, left);\r\n        } else {\r\n            this.pp_setLeftLocal(left, up, forward);\r\n        }\r\n    };\r\n\r\n    //Forward\r\n\r\n    WL.Object.prototype.pp_setForward = function pp_setForward(forward, up, left) {\r\n        this.pp_setForwardWorld(forward, up, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setForwardWorld = function pp_setForwardWorld(forward, up = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [2, 1, 0], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setForwardLocal = function pp_setForwardLocal(forward, up = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [2, 1, 0], true);\r\n    };\r\n\r\n    //Backward\r\n\r\n    WL.Object.prototype.pp_setBackward = function pp_setBackward(backward, up, left) {\r\n        this.pp_setBackwardWorld(backward, up, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setBackwardWorld = function () {\r\n        let forward = PP.vec3_create();\r\n        return function pp_setBackwardWorld(backward, up = null, left = null) {\r\n            backward.vec3_negate(forward);\r\n            this._pp_setAxes([left, up, forward], [2, 1, 0], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setBackwardLocal = function () {\r\n        let forward = PP.vec3_create();\r\n        return function pp_setBackwardLocal(backward, up = null, left = null) {\r\n            backward.vec3_negate(forward);\r\n            this._pp_setAxes([left, up, forward], [2, 1, 0], true);\r\n        };\r\n    }();\r\n\r\n    //Up\r\n\r\n    WL.Object.prototype.pp_setUp = function pp_setUp(up, forward, left) {\r\n        this.pp_setUpWorld(up, forward, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setUpWorld = function pp_setUpWorld(up, forward = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [1, 2, 0], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setUpLocal = function pp_setUpLocal(up, forward = null, left = null) {\r\n        this._pp_setAxes([left, up, forward], [1, 2, 0], true);\r\n    };\r\n\r\n    //Down\r\n\r\n    WL.Object.prototype.pp_setDown = function pp_setDown(down, forward, left) {\r\n        this.pp_setDownWorld(down, forward, left);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setDownWorld = function () {\r\n        let up = PP.vec3_create();\r\n        return function pp_setDownWorld(down, forward = null, left = null) {\r\n            down.vec3_negate(up);\r\n            this._pp_setAxes([left, up, forward], [1, 2, 0], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setDownLocal = function () {\r\n        let up = PP.vec3_create();\r\n        return function pp_setDownLocal(down, forward = null, left = null) {\r\n            down.vec3_negate(up);\r\n            this._pp_setAxes([left, up, forward], [1, 2, 0], true);\r\n        };\r\n    }();\r\n\r\n    //Left\r\n\r\n    WL.Object.prototype.pp_setLeft = function pp_setLeft(left, up, forward) {\r\n        this.pp_setLeftWorld(left, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setLeftWorld = function pp_setLeftWorld(left, up = null, forward = null) {\r\n        this._pp_setAxes([left, up, forward], [0, 1, 2], false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setLeftLocal = function pp_setLeftLocal(left, up = null, forward = null) {\r\n        this._pp_setAxes([left, up, forward], [0, 1, 2], true);\r\n    };\r\n\r\n    //Right\r\n\r\n    WL.Object.prototype.pp_setRight = function pp_setRight(right, up, forward) {\r\n        this.pp_setRightWorld(right, up, forward);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setRightWorld = function () {\r\n        let left = PP.vec3_create();\r\n        return function pp_setRightWorld(right, up = null, forward = null) {\r\n            right.vec3_negate(left);\r\n            this._pp_setAxes([left, up, forward], [0, 1, 2], false);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setRightLocal = function () {\r\n        let left = PP.vec3_create();\r\n        return function pp_setRightLocal(right, up = null, forward = null) {\r\n            right.vec3_negate(left);\r\n            this._pp_setAxes([left, up, forward], [0, 1, 2], true);\r\n        };\r\n    }();\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_setTransform = function pp_setTransform(transform) {\r\n        this.pp_setTransformWorld(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformMatrix = function pp_setTransformMatrix(transform) {\r\n        this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformQuat = function pp_setTransformQuat(transform) {\r\n        this.pp_setTransformWorldQuat(transform);\r\n    };\r\n\r\n    //Transform World\r\n\r\n    WL.Object.prototype.pp_setTransformWorld = function pp_setTransformWorld(transform) {\r\n        return this.pp_setTransformWorldMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformWorldMatrix = function () {\r\n        let position = PP.vec3_create();\r\n        let rotation = PP.quat_create();\r\n        let scale = PP.vec3_create();\r\n        let transformMatrixNoScale = PP.mat4_create();\r\n        let inverseScale = PP.vec3_create();\r\n        let one = PP.vec3_create(1);\r\n        return function pp_setTransformWorldMatrix(transform) {\r\n            transform.mat4_getPosition(position);\r\n            transform.mat4_getScale(scale);\r\n            one.vec3_div(scale, inverseScale);\r\n            transform.mat4_scale(inverseScale, transformMatrixNoScale);\r\n            transformMatrixNoScale.mat4_getRotationQuat(rotation);\r\n            rotation.quat_normalize(rotation);\r\n            this.pp_setScaleWorld(scale);\r\n            this.pp_setRotationWorldQuat(rotation);\r\n            this.pp_setPositionWorld(position);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setTransformWorldQuat = function pp_setTransformWorldQuat(transform) {\r\n        this.transformWorld = transform;\r\n    };\r\n\r\n    //Transform Local\r\n\r\n    WL.Object.prototype.pp_setTransformLocal = function pp_setTransformLocal(transform) {\r\n        return this.pp_setTransformLocalMatrix(transform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setTransformLocalMatrix = function () {\r\n        let position = PP.vec3_create();\r\n        let rotation = PP.quat_create();\r\n        let scale = PP.vec3_create();\r\n        let transformMatrixNoScale = PP.mat4_create();\r\n        let inverseScale = PP.vec3_create();\r\n        let one = PP.vec3_create(1);\r\n        return function pp_setTransformLocalMatrix(transform) {\r\n            transform.mat4_getPosition(position);\r\n            transform.mat4_getScale(scale);\r\n            one.vec3_div(scale, inverseScale);\r\n            transform.mat4_scale(inverseScale, transformMatrixNoScale);\r\n            transformMatrixNoScale.mat4_getRotationQuat(rotation);\r\n            rotation.quat_normalize(rotation);\r\n            this.pp_setScaleLocal(scale);\r\n            this.pp_setRotationLocalQuat(rotation);\r\n            this.pp_setPositionLocal(position);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_setTransformLocalQuat = function pp_setTransformLocalQuat(transform) {\r\n        this.transformLocal = transform;\r\n    };\r\n\r\n    //RESET\r\n\r\n    //Position\r\n\r\n    WL.Object.prototype.pp_resetPosition = function pp_resetPosition() {\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetPositionWorld = function () {\r\n        let zero = PP.vec3_create();\r\n        return function pp_resetPositionWorld() {\r\n            this.pp_setPositionWorld(zero);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetPositionLocal = function () {\r\n        let zero = PP.vec3_create();\r\n        return function pp_resetPositionLocal() {\r\n            this.pp_setPositionLocal(zero);\r\n        };\r\n    }();\r\n\r\n    //Rotation\r\n\r\n    WL.Object.prototype.pp_resetRotation = function pp_resetRotation() {\r\n        this.pp_resetRotationWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetRotationWorld = function () {\r\n        let identity = PP.quat_create();\r\n        return function pp_resetRotationWorld() {\r\n            this.pp_setRotationWorldQuat(identity);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetRotationLocal = function () {\r\n        let identity = PP.quat_create();\r\n        return function pp_resetRotationLocal() {\r\n            this.pp_setRotationLocalQuat(identity);\r\n        };\r\n    }();\r\n\r\n    //Scale\r\n\r\n    WL.Object.prototype.pp_resetScale = function pp_resetScale() {\r\n        this.pp_resetScaleWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetScaleWorld = function () {\r\n        let one = PP.vec3_create(1);\r\n        return function pp_resetScaleWorld() {\r\n            this.pp_setScaleWorld(one);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_resetScaleLocal = function () {\r\n        let one = PP.vec3_create(1);\r\n        return function pp_resetScaleLocal() {\r\n            this.pp_setScaleLocal(one);\r\n        };\r\n    }();\r\n\r\n    //Transform\r\n\r\n    WL.Object.prototype.pp_resetTransform = function pp_resetTransform() {\r\n        this.pp_resetTransformWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetTransformWorld = function pp_resetTransformWorld() {\r\n        this.pp_resetScaleWorld();\r\n        this.pp_resetRotationWorld();\r\n        this.pp_resetPositionWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_resetTransformLocal = function pp_resetTransformLocal() {\r\n        this.pp_resetScaleLocal();\r\n        this.pp_resetRotationLocal();\r\n        this.pp_resetPositionLocal();\r\n    };\r\n\r\n    //TRANSFORMATIONS\r\n\r\n    //Translate\r\n\r\n    WL.Object.prototype.pp_translate = function pp_translate(translation) {\r\n        this.pp_translateWorld(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateWorld = function pp_translateWorld(translation) {\r\n        this.translateWorld(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateLocal = function pp_translateLocal(translation) {\r\n        this.translate(translation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateObject = function pp_translateObject(translation) {\r\n        this.translateObject(translation);\r\n    };\r\n\r\n    //Translate Axis\r\n\r\n    WL.Object.prototype.pp_translateAxis = function pp_translateAxis(amount, direction) {\r\n        this.pp_translateAxisWorld(amount, direction);\r\n    };\r\n\r\n    WL.Object.prototype.pp_translateAxisWorld = function () {\r\n        let translation = PP.vec3_create();\r\n        return function pp_translateAxisWorld(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateWorld(translation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_translateAxisLocal = function () {\r\n        let translation = PP.vec3_create();\r\n        return function pp_translateAxisLocal(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateLocal(translation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_translateAxisObject = function () {\r\n        let translation = PP.vec3_create();\r\n        return function pp_translateAxisObject(amount, direction) {\r\n            direction.vec3_scale(amount, translation);\r\n            this.pp_translateObject(translation);\r\n        };\r\n    }();\r\n\r\n    //Rotate\r\n\r\n    WL.Object.prototype.pp_rotate = function pp_rotate(rotation) {\r\n        this.pp_rotateWorld(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateDegrees = function pp_rotateDegrees(rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateRadians = function pp_rotateRadians(rotation) {\r\n        this.pp_rotateWorldRadians(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateMatrix = function pp_rotateMatrix(rotation) {\r\n        this.pp_rotateWorldMatrix(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateQuat = function pp_rotateQuat(rotation) {\r\n        this.pp_rotateWorldQuat(rotation);\r\n    };\r\n\r\n    //Rotate World\r\n\r\n    WL.Object.prototype.pp_rotateWorld = function pp_rotateWorld(rotation) {\r\n        this.pp_rotateWorldDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateWorldDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateWorldDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateWorldRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateWorldDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateWorldMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateWorldQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateWorldQuat = function () {\r\n        let currentRotationQuat = PP.quat_create();\r\n        return function pp_rotateWorldQuat(rotation) {\r\n            this.pp_getRotationWorldQuat(currentRotationQuat);\r\n            rotation.quat_mul(currentRotationQuat, currentRotationQuat);\r\n            currentRotationQuat.quat_normalize(currentRotationQuat);\r\n            this.pp_setRotationWorldQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Local\r\n\r\n    WL.Object.prototype.pp_rotateLocal = function pp_rotateLocal(rotation) {\r\n        this.pp_rotateLocalDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateLocalDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateLocalDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateLocalRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateLocalDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateLocalMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateLocalQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateLocalQuat = function () {\r\n        let currentRotationQuat = PP.quat_create();\r\n        return function pp_rotateLocalQuat(rotation) {\r\n            this.pp_getRotationLocalQuat(currentRotationQuat);\r\n            rotation.quat_mul(currentRotationQuat, currentRotationQuat);\r\n            currentRotationQuat.quat_normalize(currentRotationQuat);\r\n            this.pp_setRotationLocalQuat(currentRotationQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Object\r\n\r\n    WL.Object.prototype.pp_rotateObject = function pp_rotateObject(rotation) {\r\n        this.pp_rotateObjectDegrees(rotation);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateObjectDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateObjectDegrees(rotation) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateObjectRadians(rotation) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateObjectDegrees(degreesRotation);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateObjectMatrix(rotation) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateObjectQuat(rotationQuat);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateObjectQuat = function pp_rotateObjectQuat(rotation) {\r\n        this.rotateObject(rotation);\r\n    };\r\n\r\n    //Rotate Axis\r\n\r\n    WL.Object.prototype.pp_rotateAxis = function pp_rotateAxis(angle, axis) {\r\n        this.pp_rotateAxisWorld(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisDegrees = function pp_rotateAxisDegrees(angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisRadians = function pp_rotateAxisRadians(angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(angle, axis);\r\n    };\r\n\r\n    //Rotate Axis World\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorld = function pp_rotateAxisWorld(angle, axis) {\r\n        this.pp_rotateAxisWorldDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorldDegrees = function pp_rotateAxisWorldDegrees(angle, axis) {\r\n        this.pp_rotateAxisWorldRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisWorldRadians = function () {\r\n        let rotation = PP.quat_create();\r\n        return function pp_rotateAxisWorldRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateWorldQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Axis Local\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocal = function pp_rotateAxisLocal(angle, axis) {\r\n        this.pp_rotateAxisLocalDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocalDegrees = function pp_rotateAxisLocalDegrees(angle, axis) {\r\n        this.pp_rotateAxisLocalRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisLocalRadians = function () {\r\n        let rotation = PP.quat_create();\r\n        return function pp_rotateAxisLocalRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateLocalQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Axis Object\r\n\r\n    WL.Object.prototype.pp_rotateAxisObject = function pp_rotateAxisObject(angle, axis) {\r\n        this.pp_rotateAxisObjectDegrees(angle, axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisObjectDegrees = function pp_rotateAxisObjectDegrees(angle, axis) {\r\n        this.pp_rotateAxisObjectRadians(Math.pp_toRadians(angle), axis);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAxisObjectRadians = function () {\r\n        let rotation = PP.quat_create();\r\n        return function pp_rotateAxisObjectRadians(angle, axis) {\r\n            rotation.quat_fromAxisRadians(angle, axis);\r\n            this.pp_rotateObjectQuat(rotation);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around\r\n\r\n    WL.Object.prototype.pp_rotateAround = function pp_rotateAround(rotation, origin) {\r\n        this.pp_rotateAroundWorld(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundDegrees = function pp_rotateAroundDegrees(rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundRadians = function pp_rotateAroundRadians(rotation, origin) {\r\n        this.pp_rotateAroundWorldRadians(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundMatrix = function pp_rotateAroundMatrix(rotation, origin) {\r\n        this.pp_rotateAroundWorldMatrix(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundQuat = function pp_rotateAroundQuat(rotation, origin) {\r\n        this.pp_rotateAroundWorldQuat(rotation, origin);\r\n    };\r\n\r\n    //Rotate Around World\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorld = function pp_rotateAroundWorld(rotation, origin) {\r\n        this.pp_rotateAroundWorldDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundWorldDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateAroundWorldRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundWorldDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundWorldMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundWorldQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundWorldQuat = function () {\r\n        let axis = PP.vec3_create();\r\n        return function pp_rotateAroundWorldQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Local\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocal = function pp_rotateAroundLocal(rotation, origin) {\r\n        this.pp_rotateAroundLocalDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundLocalDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateAroundLocalRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundLocalDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundLocalMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundLocalQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundLocalQuat = function () {\r\n        let axis = PP.vec3_create();\r\n        return function pp_rotateAroundLocalQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisLocalRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Object\r\n\r\n    WL.Object.prototype.pp_rotateAroundObject = function pp_rotateAroundObject(rotation, origin) {\r\n        this.pp_rotateAroundObjectDegrees(rotation, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectDegrees = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundObjectDegrees(rotation, origin) {\r\n            this._pp_degreesToQuaternion(rotation, rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectRadians = function () {\r\n        let degreesRotation = PP.vec3_create();\r\n        return function pp_rotateAroundObjectRadians(rotation, origin) {\r\n            rotation.forEach(function (value, index, array) {\r\n                degreesRotation[index] = this._pp_toDegrees(value);\r\n            }.bind(this));\r\n            this.pp_rotateAroundObjectDegrees(degreesRotation, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectMatrix = function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function pp_rotateAroundObjectMatrix(rotation, origin) {\r\n            rotation.mat3_toQuat(rotationQuat);\r\n            rotationQuat.quat_normalize(rotationQuat);\r\n            this.pp_rotateAroundObjectQuat(rotationQuat, origin);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_rotateAroundObjectQuat = function () {\r\n        let axis = PP.vec3_create();\r\n        return function pp_rotateAroundObjectQuat(rotation, origin) {\r\n            rotation.quat_getAxis(axis);\r\n            let angle = rotation.quat_getAngleRadians();\r\n            this.pp_rotateAroundAxisObjectRadians(angle, axis, origin);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxis = function pp_rotateAroundAxis(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorld(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisDegrees = function pp_rotateAroundAxisDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisRadians = function pp_rotateAroundAxisRadians(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(angle, axis, origin);\r\n    };\r\n\r\n    //Rotate Around Axis World\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorld = function pp_rotateAroundAxisWorld(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorldDegrees = function pp_rotateAroundAxisWorldDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisWorldRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisWorldRadians = function () {\r\n        let transformToRotate = PP.quat2_create();\r\n        let transformToRotateConjugate = PP.quat2_create();\r\n        let transformQuat = PP.quat2_create();\r\n        let defaultQuat = PP.quat_create();\r\n        return function pp_rotateAroundAxisWorldRadians(angle, axis, origin) {\r\n            transformToRotate.quat2_setPositionRotationQuat(origin, defaultQuat);\r\n            this.pp_getTransformWorldQuat(transformQuat);\r\n            transformToRotate.quat2_conjugate(transformToRotateConjugate);\r\n            transformToRotateConjugate.quat2_mul(transformQuat, transformQuat);\r\n            transformToRotate.quat2_rotateAxisRadians(angle, axis, transformToRotate);\r\n            transformToRotate.quat2_mul(transformQuat, transformQuat);\r\n            this.pp_setTransformWorldQuat(transformQuat);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis Local\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocal = function pp_rotateAroundAxisLocal(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocalDegrees = function pp_rotateAroundAxisLocalDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisLocalRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisLocalRadians = function () {\r\n        let convertedPosition = PP.vec3_create();\r\n        let convertedAxis = PP.vec3_create();\r\n        return function pp_rotateAroundAxisLocalRadians(angle, axis, origin) {\r\n            this.pp_convertPositionLocalToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionLocalToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    //Rotate Around Axis Object\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObject = function pp_rotateAroundAxisObject(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectDegrees(angle, axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObjectDegrees = function pp_rotateAroundAxisObjectDegrees(angle, axis, origin) {\r\n        this.pp_rotateAroundAxisObjectRadians(Math.pp_toRadians(angle), axis, origin);\r\n    };\r\n\r\n    WL.Object.prototype.pp_rotateAroundAxisObjectRadians = function () {\r\n        let convertedPosition = PP.vec3_create();\r\n        let convertedAxis = PP.vec3_create();\r\n        return function pp_rotateAroundAxisObjectRadians(angle, axis, origin) {\r\n            this.pp_convertPositionObjectToWorld(origin, convertedPosition);\r\n            this.pp_convertDirectionObjectToWorld(axis, convertedAxis);\r\n            this.pp_rotateAroundAxisWorldRadians(angle, convertedAxis, convertedPosition);\r\n        };\r\n    }();\r\n\r\n    //Scale\r\n\r\n    //For now it does not really make sense in wle to scale in world space or parent space\r\n    //so there is no pp_scale default function\r\n\r\n    WL.Object.prototype.pp_scaleObject = function () {\r\n        let vector = PP.vec3_create();\r\n        return function pp_scaleObject(scale) {\r\n            if (isNaN(scale)) {\r\n                this.scale(scale);\r\n            } else {\r\n                vector.vec3_set(scale);\r\n                this.scale(vector);\r\n            }\r\n        };\r\n    }();\r\n\r\n    //Look At\r\n\r\n    WL.Object.prototype.pp_lookAt = function pp_lookAt(position, up) {\r\n        this.pp_lookAtWorld(position, up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_lookAtWorld = function () {\r\n        let direction = PP.vec3_create();\r\n        return function pp_lookAtWorld(position, up) {\r\n            this.pp_getPositionWorld(direction);\r\n            position.vec3_sub(direction, direction);\r\n            this.pp_lookToWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookAtLocal = function () {\r\n        let direction = PP.vec3_create();\r\n        return function pp_lookAtLocal(position, up) {\r\n            this.pp_getPositionLocal(direction);\r\n            position.vec3_sub(direction, direction);\r\n            this.pp_lookToLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookTo = function pp_lookTo(direction, up) {\r\n        this.pp_lookToWorld(direction, up);\r\n    };\r\n\r\n    WL.Object.prototype.pp_lookToWorld = function () {\r\n        let internalUp = PP.vec3_create();\r\n        return function pp_lookToWorld(direction, up = this.pp_getUpWorld(internalUp)) {\r\n            this.pp_setForwardWorld(direction, up);\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_lookToLocal = function () {\r\n        let internalUp = PP.vec3_create();\r\n        return function pp_lookToLocal(direction, up = this.pp_getUpLocal(internalUp)) {\r\n            this.pp_setForwardLocal(direction, up);\r\n        };\r\n    }();\r\n\r\n    //EXTRA\r\n\r\n    //Parent\r\n\r\n    WL.Object.prototype.pp_setParent = function () {\r\n        let position = PP.vec3_create();\r\n        let rotation = PP.quat_create();\r\n        let scale = PP.vec3_create();\r\n        return function pp_setParent(newParent, keepTransform = true) {\r\n            if (!keepTransform) {\r\n                this.parent = newParent;\r\n            } else {\r\n                this.pp_getPositionWorld(position);\r\n                this.pp_getRotationWorldQuat(rotation);\r\n                this.pp_getScaleWorld(scale);\r\n                this.parent = newParent;\r\n                this.pp_setScaleWorld(scale);\r\n                this.pp_setRotationWorldQuat(rotation);\r\n                this.pp_setPositionWorld(position);\r\n            }\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_getParent = function pp_getParent() {\r\n        return this.parent;\r\n    };\r\n\r\n    //Convert Vector Object World\r\n\r\n    WL.Object.prototype.pp_convertPositionObjectToWorld = function () {\r\n        let matrix = PP.mat4_create();\r\n        return function pp_convertPositionObjectToWorld(position, resultPosition = PP.vec3_create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            position.vec3_transformMat4(matrix, resultPosition);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertDirectionObjectToWorld = function () {\r\n        let rotation = PP.quat_create();\r\n        return function pp_convertDirectionObjectToWorld(direction, resultDirection = PP.vec3_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            direction.vec3_transformQuat(rotation, resultDirection);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertPositionWorldToObject = function () {\r\n        let matrix = PP.mat4_create();\r\n        return function pp_convertPositionWorldToObject(position, resultPosition = PP.vec3_create()) {\r\n            this.pp_getTransformWorldMatrix(matrix);\r\n            matrix.mat4_invert(matrix);\r\n            position.vec3_transformMat4(matrix, resultPosition);\r\n            return resultPosition;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertDirectionWorldToObject = function () {\r\n        let rotation = PP.quat_create();\r\n        return function pp_convertDirectionWorldToObject(direction, resultDirection = PP.vec3_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_conjugate(rotation);\r\n            direction.vec3_transformQuat(rotation, resultDirection);\r\n            return resultDirection;\r\n        };\r\n    }();\r\n\r\n    //Convert Vector Local World\r\n\r\n    WL.Object.prototype.pp_convertPositionLocalToWorld = function pp_convertPositionLocalToWorld(position, resultPosition = PP.vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionObjectToWorld(position, resultPosition);\r\n        } else {\r\n            resultPosition.vec3_copy(position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionLocalToWorld = function pp_convertDirectionLocalToWorld(direction, resultDirection = PP.vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        } else {\r\n            resultDirection.vec3_copy(direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertPositionWorldToLocal = function pp_convertPositionWorldToLocal(position, resultPosition = PP.vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertPositionWorldToObject(position, resultPosition);\r\n        } else {\r\n            resultPosition.vec3_copy(position);\r\n        }\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionWorldToLocal = function pp_convertDirectionWorldToLocal(direction, resultDirection = PP.vec3_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertDirectionWorldToObject(direction, resultDirection);\r\n        } else {\r\n            resultDirection.vec3_copy(direction);\r\n        }\r\n        return resultDirection;\r\n    };\r\n\r\n    //Convert Vector Local Object\r\n\r\n    //I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    WL.Object.prototype.pp_convertPositionObjectToLocal = function pp_convertPositionObjectToLocal(position, resultPosition = PP.vec3_create()) {\r\n        this.pp_convertPositionObjectToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToLocal(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionObjectToLocal = function pp_convertDirectionObjectToLocal(direction, resultDirection = PP.vec3_create()) {\r\n        this.pp_convertDirectionObjectToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToLocal(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertPositionLocalToObject = function pp_convertPositionLocalToObject(position, resultPosition = PP.vec3_create()) {\r\n        this.pp_convertPositionLocalToWorld(position, resultPosition);\r\n        this.pp_convertPositionWorldToObject(resultPosition, resultPosition);\r\n        return resultPosition;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertDirectionLocalToObject = function pp_convertDirectionLocalToObject(direction, resultDirection = PP.vec3_create()) {\r\n        this.pp_convertDirectionLocalToWorld(direction, resultDirection);\r\n        this.pp_convertDirectionWorldToObject(resultDirection, resultDirection);\r\n        return resultDirection;\r\n    };\r\n\r\n    //Convert Transform Object World\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorld = function pp_convertTransformObjectToWorld(transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorldMatrix = function () {\r\n        let convertTransform = PP.mat4_create();\r\n        let position = PP.vec3_create();\r\n        let scale = PP.vec3_create();\r\n        let inverseScale = PP.vec3_create();\r\n        let one = PP.vec3_create(1);\r\n        return function pp_convertTransformObjectToWorldMatrix(transform, resultTransform = PP.mat4_create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n            } else {\r\n                position.vec3_set(transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionObjectToWorld(position, position);\r\n\r\n                convertTransform.mat4_getScale(scale);\r\n                one.vec3_div(scale, inverseScale);\r\n                convertTransform.mat4_scale(inverseScale, convertTransform);\r\n\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n                resultTransform.mat4_scale(scale, resultTransform);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToWorldQuat = function () {\r\n        let position = PP.vec3_create();\r\n        let rotation = PP.quat_create();\r\n        return function pp_convertTransformObjectToWorldQuat(transform, resultTransform = PP.quat2_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_mul(transform, rotation);\r\n            transform.quat2_getPosition(position);\r\n            this.pp_convertPositionObjectToWorld(position, position);\r\n            resultTransform.quat2_setPositionRotationQuat(position, rotation);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObject = function pp_convertTransformWorldToObject(transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObjectMatrix = function () {\r\n        let convertTransform = PP.mat4_create();\r\n        let position = PP.vec3_create();\r\n        let scale = PP.vec3_create();\r\n        let inverseScale = PP.vec3_create();\r\n        let one = PP.vec3_create(1);\r\n        return function pp_convertTransformWorldToObjectMatrix(transform, resultTransform = PP.mat4_create()) {\r\n            this.pp_getTransformWorldMatrix(convertTransform);\r\n            if (this.pp_hasUniformScaleWorld()) {\r\n                convertTransform.mat4_invert(convertTransform);\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n            } else {\r\n                position.vec3_set(transform[12], transform[13], transform[14]);\r\n                this.pp_convertPositionWorldToObject(position, position);\r\n\r\n                convertTransform.mat4_getScale(scale);\r\n                one.vec3_div(scale, inverseScale);\r\n                convertTransform.mat4_scale(inverseScale, convertTransform);\r\n\r\n                convertTransform.mat4_invert(convertTransform);\r\n                convertTransform.mat4_mul(transform, resultTransform);\r\n                resultTransform.mat4_scale(inverseScale, resultTransform);\r\n\r\n                resultTransform[12] = position[0];\r\n                resultTransform[13] = position[1];\r\n                resultTransform[14] = position[2];\r\n                resultTransform[15] = 1;\r\n            }\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToObjectQuat = function () {\r\n        let position = PP.vec3_create();\r\n        let rotation = PP.quat_create();\r\n        return function pp_convertTransformWorldToObjectQuat(transform, resultTransform = PP.quat2_create()) {\r\n            this.pp_getRotationWorldQuat(rotation);\r\n            rotation.quat_conjugate(rotation);\r\n            rotation.quat_mul(transform, rotation);\r\n            transform.quat2_getPosition(position);\r\n            this.pp_convertPositionWorldToObject(position, position);\r\n            resultTransform.quat2_setPositionRotationQuat(position, rotation);\r\n            return resultTransform;\r\n        };\r\n    }();\r\n\r\n    //Convert Transform Local World\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorld = function pp_convertTransformLocalToWorld(transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorldMatrix = function pp_convertTransformLocalToWorldMatrix(transform, resultTransform = PP.mat4_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        } else {\r\n            resultTransform.mat4_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToWorldQuat = function pp_convertTransformLocalToWorldQuat(transform, resultTransform = PP.quat2_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        } else {\r\n            resultTransform.quat2_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocal = function pp_convertTransformWorldToLocal(transform, resultTransform) {\r\n        return this.pp_convertTransformWorldToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocalMatrix = function pp_convertTransformWorldToLocalMatrix(transform, resultTransform = PP.mat4_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectMatrix(transform, resultTransform);\r\n        } else {\r\n            resultTransform.mat4_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformWorldToLocalQuat = function pp_convertTransformWorldToLocalQuat(transform, resultTransform = PP.quat2_create()) {\r\n        if (this.pp_getParent()) {\r\n            this.pp_getParent().pp_convertTransformWorldToObjectQuat(transform, resultTransform);\r\n        } else {\r\n            resultTransform.quat2_copy(transform);\r\n        }\r\n        return resultTransform;\r\n    };\r\n\r\n    //Convert Transform Object Local\r\n\r\n    //I need to use the converson to world and then local also use the parent scale that changes the position in local space\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocal = function pp_convertTransformObjectToLocal(transform, resultTransform) {\r\n        return this.pp_convertTransformObjectToLocalMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocalMatrix = function pp_convertTransformObjectToLocalMatrix(transform, resultTransform = PP.mat4_create()) {\r\n        this.pp_convertTransformObjectToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformObjectToLocalQuat = function pp_convertTransformObjectToLocalQuat(transform, resultTransform = PP.quat2_create()) {\r\n        this.pp_convertTransformObjectToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToLocalQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObject = function pp_convertTransformLocalToObject(transform, resultTransform) {\r\n        return this.pp_convertTransformLocalToObjectMatrix(transform, resultTransform);\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObjectMatrix = function pp_convertTransformLocalToObjectMatrix(transform, resultTransform = PP.mat4_create()) {\r\n        this.pp_convertTransformLocalToWorldMatrix(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectMatrix(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    WL.Object.prototype.pp_convertTransformLocalToObjectQuat = function pp_convertTransformLocalToObjectQuat(transform, resultTransform = PP.quat2_create()) {\r\n        this.pp_convertTransformLocalToWorldQuat(transform, resultTransform);\r\n        this.pp_convertTransformWorldToObjectQuat(resultTransform, resultTransform);\r\n        return resultTransform;\r\n    };\r\n\r\n    //Component\r\n\r\n    WL.Object.prototype.pp_addComponent = function pp_addComponent(type, paramsOrActive, active = null) {\r\n        let params = null;\r\n\r\n        if (typeof paramsOrActive == \"boolean\") {\r\n            params = {};\r\n            params[\"active\"] = paramsOrActive;\r\n        } else {\r\n            params = paramsOrActive;\r\n\r\n            if (active != null) {\r\n                if (params == null) {\r\n                    params = {};\r\n                }\r\n                params[\"active\"] = active;\r\n            }\r\n        }\r\n\r\n        return this.addComponent(type, params);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponent = function pp_getComponent(type, index = 0) {\r\n        return this.pp_getComponentHierarchy(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentSelf = function pp_getComponentSelf(type, index = 0) {\r\n        return this.getComponent(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchy = function pp_getComponentHierarchy(type, index = 0) {\r\n        return this.pp_getComponentHierarchyBreadth(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchyBreadth = function pp_getComponentHierarchyBreadth(type, index = 0) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentHierarchyDepth = function pp_getComponentHierarchyDepth(type, index = 0) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendants = function pp_getComponentDescendants(type, index = 0) {\r\n        return this.pp_getComponentDescendantsBreadth(type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendantsBreadth = function pp_getComponentDescendantsBreadth(type, index = 0) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentDescendantsDepth = function pp_getComponentDescendantsDepth(type, index = 0) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentChildren = function pp_getComponentChildren(type, index = 0) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getComponentObjects(objects, type, index);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponents = function pp_getComponents(type) {\r\n        return this.pp_getComponentsHierarchy(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsSelf = function pp_getComponentsSelf(type) {\r\n        return this.getComponents(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchy = function pp_getComponentsHierarchy(type) {\r\n        return this.pp_getComponentsHierarchyBreadth(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchyBreadth = function pp_getComponentsHierarchyBreadth(type) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsHierarchyDepth = function pp_getComponentsHierarchyDepth(type) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendants = function pp_getComponentsDescendants(type) {\r\n        return this.pp_getComponentsDescendantsBreadth(type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendantsBreadth = function pp_getComponentsDescendantsBreadth(type) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsDescendantsDepth = function pp_getComponentsDescendantsDepth(type) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsChildren = function pp_getComponentsChildren(type) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getComponentsObjects(objects, type);\r\n    };\r\n\r\n    //Active\r\n\r\n    WL.Object.prototype.pp_setActive = function pp_setActive(active, applyToHierarchy = true) {\r\n        if (applyToHierarchy) {\r\n            this.pp_setActiveHierarchy(active);\r\n        } else {\r\n            this.active = active;\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveSelf = function pp_setActiveSelf(active) {\r\n        this.pp_setActive(active, false);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchy = function pp_setActiveHierarchy(active) {\r\n        this.pp_setActiveHierarchyBreadth(active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchyBreadth = function pp_setActiveHierarchyBreadth(active) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveHierarchyDepth = function pp_setActiveHierarchyDepth(active) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendants = function pp_setActiveDescendants(active) {\r\n        this.pp_setActiveDescendantsBreadth(active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendantsBreadth = function pp_setActiveDescendantsBreadth(active) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveDescendantsDepth = function pp_setActiveDescendantsDepth(active) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    WL.Object.prototype.pp_setActiveChildren = function pp_setActiveChildren(active) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_setActiveObjects(objects, active);\r\n    };\r\n\r\n    //Uniform Scale\r\n\r\n    WL.Object.prototype.pp_hasUniformScale = function pp_hasUniformScale() {\r\n        return this.pp_hasUniformScaleWorld();\r\n    };\r\n\r\n    WL.Object.prototype.pp_hasUniformScaleWorld = function () {\r\n        let scale = PP.vec3_create();\r\n        return function pp_hasUniformScaleWorld() {\r\n            this.pp_getScaleWorld(scale);\r\n            return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_hasUniformScaleLocal = function () {\r\n        let scale = PP.vec3_create();\r\n        return function pp_hasUniformScaleLocal() {\r\n            this.pp_getScaleLocal(scale);\r\n            return Math.abs(scale[0] - scale[1]) < this._pp_epsilon && Math.abs(scale[1] - scale[2]) < this._pp_epsilon && Math.abs(scale[0] - scale[2]) < this._pp_epsilon;\r\n        };\r\n    }();\r\n\r\n    //Clone\r\n\r\n    PP.CloneParams = class CloneParams {\r\n        constructor() {\r\n            this.myIgnoreNonCloneable = false; // Ignores components that are not clonable\r\n            this.myIgnoreComponents = false; // All components are ignored, cloning only the object hierarchy\r\n            this.myIgnoreChildren = false; // Clones only the given object without the children\r\n\r\n            this.myComponentsToIgnore = []; // Ignores all component types in this list (example: \"mesh\"), has lower priority over myComponentsToInclude\r\n            this.myComponentsToInclude = []; // Clones only the component types in this list (example: \"mesh\"), has higher priority over myComponentsToIgnore, if empty it's ignored\r\n            this.myIgnoreComponentCallback = null; // Signature: callback(component) returns true if the component must be ignored, it is called after the previous filters\r\n\r\n            this.myChildrenToIgnore = []; // Ignores all the objects in this list (example: \"mesh\"), has lower priority over myChildrenToInclude\r\n            this.myChildrenToInclude = []; // Clones only the objects in this list (example: \"mesh\"), has higher priority over myChildrenToIgnore, if empty it's ignored\r\n            this.myIgnoreChildCallback = null; // Signature: callback(object) returns true if the object must be ignored, it is called after the previous filters\r\n\r\n            this.myDeepCloneParams = new PP.DeepCloneParams(); // Used to specify if the object must be deep cloned or not, you can also override the behavior for specific components and variables\r\n\r\n            this.myCustomParamsMap = new Map(); // This map can be filled with whatever custom paramater the component clone function could need\r\n        }\r\n    };\r\n\r\n    PP.DeepCloneParams = class DeepCloneParams {\r\n        constructor() {\r\n            this._myDeepCloneObject = false;\r\n            this._myOverrideDeepCloneComponentsMap = new Map();\r\n            this._myOverrideDeepCloneComponentsVariablesMap = new Map();\r\n        }\r\n\r\n        // The implementation is component dependant, not every component implements the deep clone\r\n        setDeepCloneObject(deepClone) {\r\n            this._myDeepCloneObject = deepClone;\r\n        }\r\n\r\n        // This value override the deep clone object value\r\n        // The implementation is component dependant, not every component implements the deep clone\r\n        setDeepCloneComponent(componentName, deepClone) {\r\n            this._myOverrideDeepCloneComponentsMap.set(componentName, deepClone);\r\n        }\r\n\r\n        // This value override both the deep clone object value and the deep clone component one\r\n        // The implementation is component dependant, not every component variable override is taken into consideration\r\n        setDeepCloneComponentVariable(componentName, variableName, deepClone) {\r\n            let componentsVariablesMap = null;\r\n\r\n            if (!this._myOverrideDeepCloneComponentsVariablesMap.has(componentName)) {\r\n                this._myOverrideDeepCloneComponentsVariablesMap.set(componentName, new Map());\r\n            }\r\n\r\n            componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n\r\n            componentsVariablesMap.set(variableName, deepClone);\r\n        }\r\n\r\n        isDeepCloneComponent(componentName) {\r\n            let overrideValue = this._myOverrideDeepCloneComponentsMap.get(componentName);\r\n\r\n            if (overrideValue != null) {\r\n                return overrideValue;\r\n            }\r\n\r\n            return this._myDeepCloneObject;\r\n        }\r\n\r\n        isDeepCloneComponentVariable(componentName, variableName) {\r\n            let componentsVariablesMap = this._myOverrideDeepCloneComponentsVariablesMap.get(componentName);\r\n            if (componentsVariablesMap != null) {\r\n                let overrideValue = componentsVariablesMap.get(variableName);\r\n                if (overrideValue != null) {\r\n                    return overrideValue;\r\n                }\r\n            }\r\n\r\n            return this.isDeepCloneComponent(componentName);\r\n        }\r\n    };\r\n\r\n    WL.Object.prototype.pp_clone = function () {\r\n        let scale = PP.vec3_create();\r\n        let transformQuat = PP.quat2_create();\r\n        return function pp_clone(params = new PP.CloneParams()) {\r\n            let clonedObject = null;\r\n\r\n            if (this.pp_isCloneable(params)) {\r\n                let objectsToCloneData = [];\r\n                objectsToCloneData.push([this.parent, this]);\r\n\r\n                // Create the object hierarchy\r\n                let objectsToCloneComponentsData = [];\r\n                while (objectsToCloneData.length > 0) {\r\n                    let cloneData = objectsToCloneData.shift();\r\n                    let parent = cloneData[0];\r\n                    let objectToClone = cloneData[1];\r\n\r\n                    let currentClonedObject = WL.scene.addObject(parent);\r\n                    currentClonedObject.name = objectToClone.name;\r\n\r\n                    currentClonedObject.pp_setScaleLocal(objectToClone.pp_getScaleLocal(scale));\r\n                    currentClonedObject.pp_setTransformLocalQuat(objectToClone.pp_getTransformLocalQuat(transformQuat));\r\n\r\n                    if (!params.myIgnoreComponents) {\r\n                        objectsToCloneComponentsData.push([objectToClone, currentClonedObject]);\r\n                    }\r\n\r\n                    if (!params.myIgnoreChildren) {\r\n                        for (let child of objectToClone.children) {\r\n                            let cloneChild = false;\r\n                            if (params.myChildrenToInclude.length > 0) {\r\n                                cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                            } else {\r\n                                cloneChild = params.myChildrenToIgnore.find(childToIgnore => childToIgnore.pp_equals(child)) == null;\r\n                            }\r\n\r\n                            if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                                cloneChild = !params.myIgnoreChildCallback(child);\r\n                            }\r\n\r\n                            if (cloneChild) {\r\n                                objectsToCloneData.push([currentClonedObject, child]);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (clonedObject == null) {\r\n                        clonedObject = currentClonedObject;\r\n                    }\r\n                }\r\n\r\n                // Get the components to clone\r\n                let componentsToCloneData = [];\r\n                while (objectsToCloneComponentsData.length > 0) {\r\n                    let cloneData = objectsToCloneComponentsData.shift();\r\n                    let objectToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n\r\n                    let components = objectToClone.pp_getComponentsSelf();\r\n                    for (let component of components) {\r\n                        if (component.pp_clone != null) {\r\n                            let cloneComponent = false;\r\n                            if (params.myComponentsToInclude.length > 0) {\r\n                                cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                            } else {\r\n                                cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                            }\r\n\r\n                            if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                                cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                            }\r\n\r\n                            if (cloneComponent) {\r\n                                componentsToCloneData.push([component, currentClonedObject]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Clone the components\r\n                let componentsToPostProcessData = [];\r\n                while (componentsToCloneData.length > 0) {\r\n                    let cloneData = componentsToCloneData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedObject = cloneData[1];\r\n\r\n                    let clonedComponent = componentToClone.pp_clone(currentClonedObject, params.myDeepCloneParams, params.myCustomParamsMap);\r\n                    if (componentToClone.pp_clonePostProcess != null) {\r\n                        componentsToPostProcessData.push([componentToClone, clonedComponent]);\r\n                    }\r\n                }\r\n\r\n                // Clone post process\r\n                // Can be useful if you have to get some data from other components in the hierarchy which have now been created\r\n                while (componentsToCloneData.length > 0) {\r\n                    let cloneData = componentsToCloneData.shift();\r\n                    let componentToClone = cloneData[0];\r\n                    let currentClonedComponent = cloneData[1];\r\n\r\n                    componentToClone.pp_clonePostProcess(currentClonedComponent, params.myDeepCloneParams, params.myCustomParamsMap);\r\n                }\r\n            }\r\n\r\n            return clonedObject;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_isCloneable = function pp_isCloneable(params = new PP.CloneParams()) {\r\n        if (params.myIgnoreNonCloneable || params.myIgnoreComponents) {\r\n            return true;\r\n        }\r\n\r\n        let isCloneable = true;\r\n\r\n        let objects = [];\r\n        objects.push(this);\r\n\r\n        while (isCloneable && objects.length > 0) {\r\n            let object = objects.shift();\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            for (let component of components) {\r\n                let cloneComponent = false;\r\n                if (params.myComponentsToInclude.length > 0) {\r\n                    cloneComponent = params.myComponentsToInclude.indexOf(component.type) != -1;\r\n                } else {\r\n                    cloneComponent = params.myComponentsToIgnore.indexOf(component.type) == -1;\r\n                }\r\n\r\n                if (cloneComponent && params.myIgnoreComponentCallback != null) {\r\n                    cloneComponent = !params.myIgnoreComponentCallback(component);\r\n                }\r\n\r\n                if (cloneComponent && component.pp_clone == null) {\r\n                    isCloneable = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isCloneable && !params.myIgnoreChildren) {\r\n                for (let child of object.children) {\r\n                    let cloneChild = false;\r\n                    if (params.myChildrenToInclude.length > 0) {\r\n                        cloneChild = params.myChildrenToInclude.find(childToInclude => childToInclude.pp_equals(child)) != null;\r\n                    } else {\r\n                        cloneChild = params.myChildrenToIgnore.find(childToInclude => childToInclude.pp_equals(child)) == null;\r\n                    }\r\n\r\n                    if (cloneChild && params.myIgnoreChildCallback != null) {\r\n                        cloneChild = !params.myIgnoreChildCallback(child);\r\n                    }\r\n\r\n                    if (cloneChild) {\r\n                        objects.push(child);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isCloneable;\r\n    };\r\n\r\n    //To String\r\n\r\n    WL.Object.prototype.pp_toString = function pp_toString() {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    WL.Object.prototype.pp_toStringExtended = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let startObject = \"{\";\r\n        let endObject = \"}\";\r\n        let nameLabel = \"name: \";\r\n        let idLabel = \"id: \";\r\n        let componentsLabel = \"components: \";\r\n        let typeLabel = \"type: \";\r\n        let childrenLabel = \"children: \";\r\n        let startComponents = \"[\";\r\n        let endComponents = \"]\";\r\n        let startChildren = startComponents;\r\n        let endChildren = endComponents;\r\n        let separator = \",\";\r\n        let newLineTab = newLine.concat(tab, tab);\r\n        return function pp_toStringExtended() {\r\n            let objectString = \"\";\r\n            objectString = objectString.concat(startObject, newLine);\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            let children = this.pp_getChildren();\r\n            let name = this.pp_getName();\r\n\r\n            if (components.length > 0 || children.length > 0 || name.length > 0) {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), separator, newLine);\r\n            } else {\r\n                objectString = objectString.concat(tab, idLabel, this.pp_getID(), newLine);\r\n            }\r\n\r\n            if (name.length > 0) {\r\n                if (components.length > 0 || children.length > 0) {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, nameLabel, this.pp_getName(), newLine);\r\n                }\r\n            }\r\n\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(tab, componentsLabel, newLine, tab, startComponents, newLine);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(tab, tab, startObject, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, typeLabel, component.type, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, tab, idLabel, component._id, separator, newLine);\r\n                    objectString = objectString.concat(tab, tab, endObject);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n\r\n                if (children.length > 0) {\r\n                    objectString = objectString.concat(tab, endComponents, separator, newLine);\r\n                } else {\r\n                    objectString = objectString.concat(tab, endComponents, newLine);\r\n                }\r\n            }\r\n\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(tab, childrenLabel, newLine, tab, startChildren, newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringExtended();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(tab, childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(separator, newLine);\r\n                    } else {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n                objectString = objectString.concat(tab, endChildren, newLine);\r\n            }\r\n\r\n            objectString = objectString.concat(endObject);\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype.pp_toStringCompact = function () {\r\n        let tab = \"    \";\r\n        let newLine = \"\\n\";\r\n        let emptyName = \"<none>\";\r\n        let nameLabel = \"name: \";\r\n        let componentsLabel = \"components: \";\r\n        let separator = \", \";\r\n        let newLineTab = newLine.concat(tab);\r\n        return function pp_toStringCompact() {\r\n            let objectString = \"\";\r\n\r\n            let name = this.pp_getName();\r\n            if (name.length > 0) {\r\n                objectString = objectString.concat(nameLabel, name);\r\n            } else {\r\n                objectString = objectString.concat(nameLabel, emptyName);\r\n            }\r\n\r\n            let components = this.pp_getComponentsSelf();\r\n            if (components.length > 0) {\r\n                objectString = objectString.concat(separator, componentsLabel);\r\n                for (let i = 0; i < components.length; i++) {\r\n                    let component = components[i];\r\n\r\n                    objectString = objectString.concat(component.type);\r\n\r\n                    if (i != components.length - 1) {\r\n                        objectString = objectString.concat(separator);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let children = this.pp_getChildren();\r\n            if (children.length > 0) {\r\n                objectString = objectString.concat(newLine);\r\n                for (let i = 0; i < children.length; i++) {\r\n                    let child = children[i];\r\n\r\n                    let childString = child.pp_toStringCompact();\r\n                    childString = childString.replaceAll(newLine, newLineTab);\r\n                    childString = tab.concat(childString);\r\n                    objectString = objectString.concat(childString);\r\n\r\n                    if (i != children.length - 1) {\r\n                        objectString = objectString.concat(newLine);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return objectString;\r\n        };\r\n    }();\r\n\r\n    //Get By Name\r\n\r\n    WL.Object.prototype.pp_getObjectByName = function pp_getObjectByName(name) {\r\n        return this.pp_getObjectByNameHierarchy(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchy = function pp_getObjectByNameHierarchy(name) {\r\n        return this.pp_getObjectByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchyBreadth = function pp_getObjectByNameHierarchyBreadth(name) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameHierarchyDepth = function pp_getObjectByNameHierarchyDepth(name) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendants = function pp_getObjectByNameDescendants(name) {\r\n        return this.pp_getObjectByNameDescendantsBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendantsBreadth = function pp_getObjectByNameDescendantsBreadth(name) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameDescendantsDepth = function pp_getObjectByNameDescendantsDepth(name) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectByNameChildren = function pp_getObjectByNameChildren(name) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getObjectByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByName = function pp_getObjectsByName(name) {\r\n        return this.pp_getObjectsByNameHierarchy(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchy = function pp_getObjectsByNameHierarchy(name) {\r\n        return this.pp_getObjectsByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchyBreadth = function pp_getObjectsByNameHierarchyBreadth(name) {\r\n        let objects = this.pp_getHierarchyBreadth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameHierarchyDepth = function pp_getObjectsByNameHierarchyDepth(name) {\r\n        let objects = this.pp_getHierarchyDepth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendants = function pp_getObjectsByNameDescendants(name) {\r\n        return this.pp_getObjectsByNameDescendantsBreadth(name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendantsBreadth = function pp_getObjectsByNameDescendantsBreadth(name) {\r\n        let objects = this.pp_getDescendantsBreadth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameDescendantsDepth = function pp_getObjectsByNameDescendantsDepth(name) {\r\n        let objects = this.pp_getDescendantsDepth();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    WL.Object.prototype.pp_getObjectsByNameChildren = function pp_getObjectsByNameChildren(name) {\r\n        let objects = this.pp_getChildren();\r\n        return WL.Object.pp_getObjectsByNameObjects(objects, name);\r\n    }\r\n\r\n    //Get Hierarchy\r\n\r\n    WL.Object.prototype.pp_getHierarchy = function pp_getHierarchy() {\r\n        return this.pp_getHierarchyBreadth();\r\n    };\r\n\r\n    WL.Object.prototype.pp_getHierarchyBreadth = function pp_getHierarchyBreadth() {\r\n        let hierarchy = this.pp_getDescendantsBreadth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getHierarchyDepth = function pp_getHierarchyDepth() {\r\n        let hierarchy = this.pp_getDescendantsDepth();\r\n\r\n        hierarchy.unshift(this);\r\n\r\n        return hierarchy;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendants = function pp_getDescendants() {\r\n        return this.pp_getDescendantsBreadth();\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendantsBreadth = function pp_getDescendantsBreadth() {\r\n        let descendants = [];\r\n\r\n        let descendantsQueue = this.children;\r\n\r\n        while (descendantsQueue.length > 0) {\r\n            let descendant = descendantsQueue.shift();\r\n            descendants.push(descendant);\r\n            for (let object of descendant.children) {\r\n                descendantsQueue.push(object);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getDescendantsDepth = function pp_getDescendantsDepth() {\r\n        let descendants = [];\r\n\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let child of children) {\r\n            descendants.push(child);\r\n\r\n            let childDescendants = child.pp_getDescendantsDepth();\r\n            if (childDescendants.length > 0) {\r\n                descendants.push(...childDescendants);\r\n            }\r\n        }\r\n\r\n        return descendants;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getChildren = function pp_getChildren() {\r\n        return this.children;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getSelf = function pp_getSelf() {\r\n        return this;\r\n    };\r\n\r\n    //Cauldron\r\n\r\n    WL.Object.prototype.pp_addObject = function pp_addObject() {\r\n        return WL.scene.addObject(this);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getName = function pp_getName() {\r\n        return this.name;\r\n    };\r\n\r\n    WL.Object.prototype.pp_setName = function pp_setName(name) {\r\n        this.name = name;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getID = function pp_getID() {\r\n        return this.objectId;\r\n    };\r\n\r\n    WL.Object.prototype.pp_markDirty = function pp_markDirty() {\r\n        return this.setDirty();\r\n    };\r\n\r\n    WL.Object.prototype.pp_equals = function pp_equals(otherObject) {\r\n        return this.equals(otherObject);\r\n    };\r\n\r\n    WL.Object.prototype.pp_destroy = function pp_destroy() {\r\n        return this.destroy();\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjects = function pp_reserveObjects(count) {\r\n        this.pp_reserveObjectsHierarchy(count);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsSelf = function pp_reserveObjectsSelf(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapSelf();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsHierarchy = function pp_reserveObjectsHierarchy(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapHierarchy();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsDescendants = function pp_reserveObjectsDescendants(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapDescendants();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_reserveObjectsChildren = function pp_reserveObjectsChildren(count) {\r\n        let componentsAmountMap = this.pp_getComponentsAmountMapChildren();\r\n        this._pp_reserveObjects(count, componentsAmountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return this.pp_getComponentsAmountMapHierarchy(amountMap);\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapSelf = function pp_getComponentsAmountMapSelf(amountMap = new Map()) {\r\n        let objectsAmount = amountMap.get(\"object\");\r\n        if (objectsAmount == null) {\r\n            objectsAmount = 0;\r\n        }\r\n        objectsAmount += 1;\r\n        amountMap.set(\"object\", objectsAmount);\r\n\r\n        let components = this.pp_getComponentsSelf();\r\n        for (let component of components) {\r\n            let type = component.type;\r\n            let typeAmount = amountMap.get(type);\r\n            if (typeAmount == null) {\r\n                typeAmount = 0;\r\n            }\r\n            typeAmount += 1;\r\n            amountMap.set(type, typeAmount);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapHierarchy = function pp_getComponentsAmountMapHierarchy(amountMap = new Map()) {\r\n        let hierarchy = this.pp_getHierarchy();\r\n\r\n        for (let object of hierarchy) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapDescendants = function pp_getComponentsAmountMapDescendants(amountMap = new Map()) {\r\n        let descendants = this.pp_getDescendants();\r\n\r\n        for (let object of descendants) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    WL.Object.prototype.pp_getComponentsAmountMapChildren = function pp_getComponentsAmountMapChildren(amountMap = new Map()) {\r\n        let children = this.pp_getChildren();\r\n\r\n        for (let object of children) {\r\n            object.pp_getComponentsAmountMapSelf(amountMap);\r\n        }\r\n\r\n        return amountMap;\r\n    };\r\n\r\n    //Static\r\n\r\n    WL.Object.pp_getComponentObjects = function pp_getComponentObjects(objects, type, index = 0) {\r\n        let component = null;\r\n\r\n        for (let object of objects) {\r\n            component = object.getComponent(type, index);\r\n            if (component != null) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return component;\r\n    };\r\n\r\n    WL.Object.pp_getComponentsObjects = function pp_getComponentsObjects(objects, type) {\r\n        let components = [];\r\n\r\n        for (let object of objects) {\r\n            components.push(...object.getComponents(type));\r\n        }\r\n\r\n        return components;\r\n    };\r\n\r\n    WL.Object.pp_setActiveObjects = function pp_setActiveObjects(objects, active) {\r\n        for (let object of objects) {\r\n            object.active = active;\r\n        }\r\n    };\r\n\r\n    WL.Object.pp_getObjectByNameObjects = function pp_getObjectByNameObjects(objects, name) {\r\n        let objectFound = null;\r\n\r\n        for (let object of objects) {\r\n            if (object.pp_getName() == name) {\r\n                objectFound = object;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return objectFound;\r\n    }\r\n\r\n    WL.Object.pp_getObjectsByNameObjects = function pp_getObjectsByNameObjects(objects, name) {\r\n        let objectsFound = [];\r\n\r\n        for (let object of objects) {\r\n            if (object.pp_getName() == name) {\r\n                objectsFound.push(object);\r\n            }\r\n        }\r\n\r\n        return objectsFound;\r\n    }\r\n\r\n    //Private Utils\r\n\r\n    WL.Object.prototype._pp_epsilon = 0.000001;\r\n\r\n    WL.Object.prototype._pp_quaternionToRadians = function () {\r\n        let mat3 = PP.mat3_create();\r\n        return function _pp_quaternionToRadians(quatRotation, radiansRotation = PP.vec3_create()) {\r\n            quatRotation.quat_toMatrix(mat3);\r\n\r\n            //Rotation order is ZYX\r\n            radiansRotation[1] = Math.asin(-this._pp_clamp(mat3[2], -1, 1));\r\n\r\n            if (Math.abs(mat3[2]) < 0.9999999) {\r\n\r\n                radiansRotation[0] = Math.atan2(mat3[5], mat3[8]);\r\n                radiansRotation[2] = Math.atan2(mat3[1], mat3[0]);\r\n\r\n            } else {\r\n\r\n                radiansRotation[0] = 0;\r\n                radiansRotation[2] = Math.atan2(-mat3[3], mat3[4]);\r\n            }\r\n\r\n            return radiansRotation;\r\n        };\r\n    }();\r\n\r\n    WL.Object.prototype._pp_degreesToQuaternion = function _pp_degreesToQuaternion(degreesRotation, quatRotation = PP.quat_create()) {\r\n        quatRotation.quat_fromDegrees(degreesRotation);\r\n        return quatRotation;\r\n    };\r\n\r\n    WL.Object.prototype._pp_toDegrees = function _pp_toDegrees(angle) {\r\n        return angle * (180 / Math.PI);\r\n    };\r\n\r\n    WL.Object.prototype._pp_clamp = function _pp_clamp(value, min, max) {\r\n        return Math.min(Math.max(value, min), max);\r\n    };\r\n\r\n    WL.Object.prototype._pp_reserveObjects = function _pp_reserveObjects(count, componentsAmountMap) {\r\n        let objectsToReserve = componentsAmountMap.get(\"object\") * count;\r\n        componentsAmountMap.delete(\"object\");\r\n\r\n        let componentsToReserve = {};\r\n        for (let [componentName, componentCount] of componentsAmountMap.entries()) {\r\n            componentsToReserve[componentName] = componentCount * count;\r\n        }\r\n\r\n        WL.scene.reserveObjects(objectsToReserve, componentsToReserve);\r\n    };\r\n\r\n    WL.Object.prototype._pp_setAxes = function () {\r\n        let fixedAxes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()];\r\n\r\n        let fixedAxesFixSignMap = [\r\n            [1, -1, 1],\r\n            [1, 1, -1],\r\n            [-1, 1, -1]\r\n        ];\r\n\r\n        let fixedLeft = PP.vec3_create();\r\n        let fixedUp = PP.vec3_create();\r\n        let fixedForward = PP.vec3_create();\r\n\r\n        let currentAxis = PP.vec3_create();\r\n\r\n        let rotationAxis = PP.vec3_create();\r\n        let rotationMat = PP.mat3_create();\r\n        let rotationQuat = PP.quat_create();\r\n        return function _pp_setAxes(axes, priority, isLocal) {\r\n            let firstAxis = axes[priority[0]];\r\n            let secondAxis = axes[priority[1]];\r\n            let thirdAxis = axes[priority[2]];\r\n\r\n            if (firstAxis == null || firstAxis.vec3_length() <= this._pp_epsilon) {\r\n                return;\r\n            }\r\n\r\n            let secondAxisValid = false;\r\n            if (secondAxis != null) {\r\n                let angleBetween = firstAxis.vec3_angleRadians(secondAxis);\r\n                if (angleBetween > this._pp_epsilon) {\r\n                    secondAxisValid = true;\r\n                }\r\n            }\r\n\r\n            let thirdAxisValid = false;\r\n            if (thirdAxis != null) {\r\n                let angleBetween = firstAxis.vec3_angleRadians(thirdAxis);\r\n                if (angleBetween > this._pp_epsilon) {\r\n                    thirdAxisValid = true;\r\n                }\r\n            }\r\n\r\n            if (secondAxisValid || thirdAxisValid) {\r\n\r\n                let crossAxis = null;\r\n                let secondAxisIndex = null;\r\n                let thirdAxisIndex = null;\r\n                if (secondAxisValid) {\r\n                    crossAxis = secondAxis;\r\n                    secondAxisIndex = 1;\r\n                    thirdAxisIndex = 2;\r\n                } else {\r\n                    crossAxis = thirdAxis;\r\n                    secondAxisIndex = 2;\r\n                    thirdAxisIndex = 1;\r\n                }\r\n\r\n                let fixSignMap = fixedAxesFixSignMap[priority[0]];\r\n\r\n                firstAxis.vec3_cross(crossAxis, fixedAxes[thirdAxisIndex]);\r\n                fixedAxes[thirdAxisIndex].vec3_scale(fixSignMap[priority[thirdAxisIndex]], fixedAxes[thirdAxisIndex]);\r\n\r\n                firstAxis.vec3_cross(fixedAxes[thirdAxisIndex], fixedAxes[secondAxisIndex]);\r\n                fixedAxes[secondAxisIndex].vec3_scale(fixSignMap[priority[secondAxisIndex]], fixedAxes[secondAxisIndex]);\r\n\r\n                fixedAxes[1].vec3_cross(fixedAxes[2], fixedAxes[0]);\r\n                fixedAxes[0].vec3_scale(fixSignMap[priority[0]], fixedAxes[0]);\r\n\r\n                fixedAxes[priority.pp_findIndexEqual(0)].vec3_normalize(fixedLeft);\r\n                fixedAxes[priority.pp_findIndexEqual(1)].vec3_normalize(fixedUp);\r\n                fixedAxes[priority.pp_findIndexEqual(2)].vec3_normalize(fixedForward);\r\n\r\n                rotationMat.mat3_set(\r\n                    fixedLeft[0], fixedLeft[1], fixedLeft[2],\r\n                    fixedUp[0], fixedUp[1], fixedUp[2],\r\n                    fixedForward[0], fixedForward[1], fixedForward[2]\r\n                );\r\n\r\n                rotationMat.mat3_toQuat(rotationQuat);\r\n                rotationQuat.quat_normalize(rotationQuat);\r\n\r\n                if (isLocal) {\r\n                    this.pp_setRotationLocalQuat(rotationQuat);\r\n                } else {\r\n                    this.pp_setRotationWorldQuat(rotationQuat);\r\n                }\r\n            } else {\r\n                if (priority[0] == 0) {\r\n                    if (isLocal) {\r\n                        this.pp_getLeftLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getLeftWorld(currentAxis);\r\n                    }\r\n                } else if (priority[0] == 1) {\r\n                    if (isLocal) {\r\n                        this.pp_getUpLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getUpWorld(currentAxis);\r\n                    }\r\n                } else {\r\n                    if (isLocal) {\r\n                        this.pp_getForwardLocal(currentAxis);\r\n                    } else {\r\n                        this.pp_getForwardWorld(currentAxis);\r\n                    }\r\n                }\r\n\r\n                let angleBetween = firstAxis.vec3_angleRadians(currentAxis);\r\n                if (angleBetween != 0) {\r\n                    currentAxis.vec3_cross(firstAxis, rotationAxis);\r\n                    rotationAxis.vec3_normalize(rotationAxis);\r\n                    rotationQuat.quat_fromAxisRadians(angleBetween, rotationAxis);\r\n\r\n                    if (isLocal) {\r\n                        this.pp_rotateLocalQuat(rotationQuat);\r\n                    } else {\r\n                        this.pp_rotateWorldQuat(rotationQuat);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }();\r\n\r\n\r\n\r\n    for (let key in WL.Object.prototype) {\r\n        let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n        let found = false;\r\n        for (let prefix of prefixes) {\r\n            if (key.startsWith(prefix)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            Object.defineProperty(WL.Object.prototype, key, { enumerable: false });\r\n        }\r\n    }\r\n\r\n}", "/*\r\n    How to use\r\n\r\n    On some of the functions u can specify if the algorithm should explore by Breadth/Depth, example:\r\n        - pp_getObjectByNameBreadth\r\n        - pp_getComponentsDepth\r\n    By default the functions explore by Breadth\r\n\r\n    List of functions:\r\n        - pp_getRoot\r\n        - pp_getObjects\r\n        \r\n        - pp_getComponent\r\n        - pp_getComponents\r\n        \r\n        - pp_getObjectByName\r\n        - pp_getObjectsByName\r\n        \r\n        - pp_toString / pp_toStringCompact / pp_toStringExtended\r\n\r\n        - pp_getComponentsAmountMap\r\n*/\r\n\r\nif (WL && WL.Scene) {\r\n\r\n    WL.Scene.prototype.pp_getRoot = function pp_getRoot() {\r\n        return new WL.Object(0);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjects = function pp_getObjects() {\r\n        return this.pp_getObjectsBreadth();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsBreadth = function pp_getObjectsBreadth() {\r\n        return this.pp_getRoot().pp_getHierarchyBreadth();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsDepth = function pp_getObjectsDepth() {\r\n        return this.pp_getRoot().pp_getHierarchyDepth();\r\n    }\r\n\r\n    //Get Component    \r\n\r\n    WL.Scene.prototype.pp_getComponent = function pp_getComponent(type, index = 0) {\r\n        return this.pp_getComponentBreadth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentBreadth = function pp_getComponentBreadth(type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyBreadth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentDepth = function pp_getComponentDepth(type, index = 0) {\r\n        return this.pp_getRoot().pp_getComponentHierarchyDepth(type, index);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponents = function pp_getComponents(type) {\r\n        return this.pp_getComponentsBreadth(type);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentsBreadth = function pp_getComponentsBreadth(type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyBreadth(type);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getComponentsDepth = function pp_getComponentsDepth(type) {\r\n        return this.pp_getRoot().pp_getComponentsHierarchyDepth(type);\r\n    }\r\n\r\n    //Get By Name\r\n\r\n    WL.Scene.prototype.pp_getObjectByName = function pp_getObjectByName(name) {\r\n        return this.pp_getObjectByNameBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectByNameBreadth = function pp_getObjectByNameBreadth(name) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectByNameDepth = function pp_getObjectByNameDepth(name) {\r\n        return this.pp_getRoot().pp_getObjectByNameHierarchyDepth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByName = function pp_getObjectsByName(name) {\r\n        return this.pp_getObjectsByNameBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByNameBreadth = function pp_getObjectsByNameBreadth(name) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyBreadth(name);\r\n    }\r\n\r\n    WL.Scene.prototype.pp_getObjectsByNameDepth = function pp_getObjectsByNameDepth(name) {\r\n        return this.pp_getRoot().pp_getObjectsByNameHierarchyDepth(name);\r\n    }\r\n\r\n    //To String\r\n\r\n    WL.Scene.prototype.pp_toString = function pp_toString() {\r\n        return this.pp_toStringCompact();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_toStringCompact = function pp_toStringCompact() {\r\n        return this.pp_getRoot().pp_toStringCompact();\r\n    }\r\n\r\n    WL.Scene.prototype.pp_toStringExtended = function pp_toStringExtended() {\r\n        return this.pp_getRoot().pp_toStringExtended();\r\n    }\r\n\r\n    //Cauldron\r\n\r\n    WL.Scene.prototype.pp_getComponentsAmountMap = function pp_getComponentsAmountMap(amountMap = new Map()) {\r\n        return this.pp_getRoot().pp_getComponentsAmountMapHierarchy(amountMap);\r\n    }\r\n\r\n\r\n\r\n    for (let key in WL.Scene.prototype) {\r\n        let prefixes = [\"pp_\", \"_pp_\"];\r\n\r\n        let found = false;\r\n        for (let prefix of prefixes) {\r\n            if (key.startsWith(prefix)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            Object.defineProperty(WL.Scene.prototype, key, { enumerable: false });\r\n        }\r\n    }\r\n\r\n}", "if (WL && WL.Object) {\r\n\r\n    WL.MeshComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"mesh\", \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"mesh\", \"mesh\")) {\r\n            clonedComponent.mesh = PP.MeshUtils.cloneMesh(this.mesh);\r\n        } else {\r\n            clonedComponent.mesh = this.mesh;\r\n        }\r\n\r\n        clonedComponent.skin = this.skin;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    WL.CollisionComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        clonedComponent.collider = this.collider;\r\n        clonedComponent.extents = this.extents.slice(0);\r\n        clonedComponent.group = this.group;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    WL.TextComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n        clonedComponent.active = this.active;\r\n\r\n        if (deepCloneParams.isDeepCloneComponent(\"text\")) {\r\n            clonedComponent.text = this.text.slice(0);\r\n        } else {\r\n            clonedComponent.text = this.text;\r\n        }\r\n\r\n        if (deepCloneParams.isDeepCloneComponentVariable(\"text\", \"material\")) {\r\n            clonedComponent.material = this.material.clone();\r\n        } else {\r\n            clonedComponent.material = this.material;\r\n        }\r\n\r\n        clonedComponent.alignment = this.alignment;\r\n        clonedComponent.justification = this.justification;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n    // #TODO not completed, missing flags like gravity or groups\r\n    WL.PhysXComponent.prototype.pp_clone = function pp_clone(targetObject, deepCloneParams = new PP.DeepCloneParams(), customParamsMap = null) {\r\n        let componentParams = {\r\n            \"static\": this.static,\r\n            \"simulate\": this.simulate,\r\n            \"angularDamping\": this.angularDamping,\r\n            \"dynamicFriction\": this.dynamicFriction,\r\n            \"extents\": this.extents,\r\n            \"kinematic\": this.kinematic,\r\n            \"linearDamping\": this.linearDamping,\r\n            \"mass\": this.mass,\r\n            \"restituition\": this.restituition,\r\n            \"shape\": this.shape,\r\n            \"shapeData\": this.shapeData,\r\n            \"staticFriction\": this.staticFriction,\r\n            \"bounciness\": this.bounciness,\r\n            \"allowQuery\": this.allowQuery,\r\n            \"allowSimulation\": this.allowSimulation,\r\n            \"gravity\": this.gravity,\r\n            \"trigger\": this.trigger\r\n        };\r\n\r\n        if (!this.static) {\r\n            componentParams[\"angularVelocity\"] = this.angularVelocity;\r\n            componentParams[\"linearVelocity\"] = this.linearVelocity;\r\n        }\r\n\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, componentParams);\r\n\r\n        clonedComponent.active = this.active;\r\n\r\n        return clonedComponent;\r\n    };\r\n\r\n\r\n\r\n    Object.defineProperty(WL.MeshComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.CollisionComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.TextComponent.prototype, \"pp_clone\", { enumerable: false });\r\n    Object.defineProperty(WL.PhysXComponent.prototype, \"pp_clone\", { enumerable: false });\r\n\r\n}", "import { vec3, mat4 } from 'gl-matrix';\r\n\r\nif (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]]) {\r\n\r\n    // Modified Functions\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.init = function init() {\r\n        /* VR session cache, in case in VR */\r\n        this.session = null;\r\n        this.collisionMask = (1 << this.collisionGroup);\r\n        this.maxDistance = 100;\r\n\r\n        this.doubleClickTimer = 0;\r\n        this.tripleClickTimer = 0;\r\n        this.multipleClickObject = null;\r\n        this.multipleClickDelay = 0.3;\r\n\r\n        this.visible = false;\r\n\r\n        const sceneLoaded = this.onDestroy.bind(this);\r\n        WL.onSceneLoaded.push(sceneLoaded);\r\n        this.onDestroyCallbacks = [() => {\r\n            const index = WL.onSceneLoaded.indexOf(sceneLoaded);\r\n            if (index >= 0) WL.onSceneLoaded.splice(index, 1);\r\n        }];\r\n\r\n        this.prevHitLocationLocalToTarget = PP.vec3_create();\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.start = function start() {\r\n        if (this.handedness == 0) {\r\n            const inputComp = this.object.getComponent('input');\r\n            if (!inputComp) {\r\n                console.warn('cursor component on object', this.object.name,\r\n                    'was configured with handedness \"input component\", ' +\r\n                    'but object has no input component.');\r\n            } else {\r\n                this.handedness = inputComp.handedness;\r\n                this.input = inputComp;\r\n            }\r\n        } else {\r\n            this.handedness = ['left', 'right'][this.handedness - 1];\r\n        }\r\n\r\n        this.globalTarget = this.object.addComponent('cursor-target');\r\n\r\n        this.transformQuat = PP.quat2_create();\r\n        this.rotationQuat = PP.quat_create();\r\n        this.transformMatrix = PP.mat4_create();\r\n        this.origin = new Float32Array(3);\r\n        this.cursorObjScale = new Float32Array(3);\r\n        this.direction = PP.vec3_create();\r\n        this.tempQuat = new Float32Array(4);\r\n        this.setViewComponent(this.object.getComponent(\"view\"));\r\n        this.isHovering = false;\r\n        this.visible = true;\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n        this.isRealDown = false;\r\n\r\n        this.cursorPos = new Float32Array(3);\r\n        this.hoveringObject = null;\r\n\r\n        const onXRSessionStart = this.setupVREvents.bind(this);\r\n        WL.onXRSessionStart.push(onXRSessionStart);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            const index = WL.onXRSessionStart.indexOf(onXRSessionStart);\r\n            if (index >= 0) WL.onXRSessionStart.splice(index, 1);\r\n        });\r\n\r\n        this.showRay = true;\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(true);\r\n            this.showRay = false;\r\n            this.cursorRayOrigin = new Float32Array(3);\r\n            this.cursorRayScale = new Float32Array(3);\r\n            this.cursorRayScale.set(this.cursorRayObject.scalingLocal);\r\n\r\n            /* Set ray to a good default distance of the cursor of 1m */\r\n            this._setCursorRayTransform(null);\r\n        }\r\n\r\n        this._setCursorVisibility(false);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.setViewComponent = function setViewComponent(viewComponent) {\r\n        this.viewComponent = viewComponent;\r\n        /* If this object also has a view component, we will enable inverse-projected mouse clicks,\r\n         * otherwise just use the objects transformation */\r\n        if (this.viewComponent != null) {\r\n            const onClick = this.onClick.bind(this);\r\n            WL.canvas.addEventListener(\"click\", onClick);\r\n            const onPointerDown = this.onPointerDown.bind(this);\r\n            WL.canvas.addEventListener(\"pointerdown\", onPointerDown);\r\n            const onPointerMove = this.onPointerMove.bind(this);\r\n            WL.canvas.addEventListener(\"pointermove\", onPointerMove);\r\n            const onPointerUp = this.onPointerUp.bind(this);\r\n            WL.canvas.addEventListener(\"pointerup\", onPointerUp);\r\n            const onPointerLeave = this.onPointerLeave.bind(this);\r\n            WL.canvas.addEventListener(\"pointerleave\", onPointerLeave);\r\n\r\n            this.projectionMatrix = new Float32Array(16);\r\n            mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n            const onViewportResize = this.onViewportResize.bind(this);\r\n            window.addEventListener(\"resize\", onViewportResize);\r\n\r\n            this.onDestroyCallbacks.push(() => {\r\n                WL.canvas.removeEventListener(\"click\", onClick);\r\n                WL.canvas.removeEventListener(\"pointerdown\", onPointerDown);\r\n                WL.canvas.removeEventListener(\"pointermove\", onPointerMove);\r\n                WL.canvas.removeEventListener(\"pointerup\", onPointerUp);\r\n                WL.canvas.removeEventListener(\"pointerleave\", onPointerLeave);\r\n                window.removeEventListener(\"resize\", onViewportResize);\r\n            });\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onViewportResize = function onViewportResize() {\r\n        if (!this.viewComponent) return;\r\n        /* Projection matrix will change if the viewport is resized, which will affect the\r\n         * projection matrix because of the aspect ratio. */\r\n        mat4.invert(this.projectionMatrix, this.viewComponent.projectionMatrix);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._setCursorRayTransform = function _setCursorRayTransform(hitPosition) {\r\n        if (!this.cursorRayObject) return;\r\n        if (this.cursorRayScalingAxis != 4) {\r\n            this.cursorRayObject.resetScaling();\r\n\r\n            if (hitPosition != null) {\r\n                this.cursorRayObject.getTranslationWorld(this.cursorRayOrigin);\r\n                let dist = vec3.dist(this.cursorRayOrigin, hitPosition);\r\n                this.cursorRayScale[this.cursorRayScalingAxis] = dist;\r\n                this.cursorRayObject.scale(this.cursorRayScale);\r\n            }\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._setCursorVisibility = function _setCursorVisibility(visible) {\r\n        this.visible = visible;\r\n        if (!this.cursorObject) return;\r\n\r\n        this.cursorObject.pp_setActive(visible);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.update = function update(dt) {\r\n        if (this.doubleClickTimer > 0) {\r\n            this.doubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this.tripleClickTimer > 0) {\r\n            this.tripleClickTimer -= dt;\r\n        }\r\n\r\n        this.doUpdate(false);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.doUpdate = function doUpdate(doClick) {\r\n        /* If in VR, set the cursor ray based on object transform */\r\n        if (this.session) {\r\n            /* Since Google Cardboard tap is registered as arTouchDown without a gamepad, we need to check for gamepad presence */\r\n            if (this.arTouchDown && this.input && WL.xrSession.inputSources[0].handedness === 'none' && WL.xrSession.inputSources[0].gamepad) {\r\n                const p = WL.xrSession.inputSources[0].gamepad.axes;\r\n                /* Screenspace Y is inverted */\r\n                this.direction.vec3_set(p[0], -p[1], -1.0);\r\n                this.updateDirection();\r\n            } else {\r\n                this.object.getTranslationWorld(this.origin);\r\n                this.object.getForward(this.direction);\r\n            }\r\n            const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n                WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n                WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n            if (rayHit.hitCount > 0) {\r\n                this.cursorPos.set(rayHit.locations[0]);\r\n            } else {\r\n                this.cursorPos.fill(0);\r\n            }\r\n\r\n            this.hoverBehaviour(rayHit, doClick);\r\n        } else {\r\n            if (this.viewComponent != null && this.lastClientX != null) {\r\n                const rayHit = this.updateMousePos(this.lastClientX, this.lastClientY, this.lastWidth, this.lastHeight);\r\n                this.hoverBehaviour(rayHit, false);\r\n            }\r\n        }\r\n\r\n        if (this.cursorObject) {\r\n            if (this.hoveringObject && (this.cursorPos[0] != 0 || this.cursorPos[1] != 0 || this.cursorPos[2] != 0)) {\r\n                this._setCursorVisibility(true);\r\n                this.cursorObject.setTranslationWorld(this.cursorPos);\r\n                this.cursorObject.transformLocal = this.cursorObject.transformLocal.quat2_normalize(this.transformQuat);\r\n                this._setCursorRayTransform(this.cursorPos);\r\n            } else {\r\n                if (this.visible && this.cursorRayObject) {\r\n                    this._setCursorRayTransform(null);\r\n                }\r\n\r\n                this._setCursorVisibility(false);\r\n            }\r\n        }\r\n\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this.hoveringObject == null) {\r\n            this.pointerId = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.hoverBehaviour = function hoverBehaviour(rayHit, doClick, forceUnhover = false) {\r\n        if (!forceUnhover && rayHit.hitCount > 0) {\r\n            let hoveringObjectChanged = false;\r\n            if (!this.hoveringObject || !this.hoveringObject.equals(rayHit.objects[0])) {\r\n                /* Unhover previous, if exists */\r\n                if (this.hoveringObject) {\r\n                    let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                    if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n                    this.globalTarget.onUnhover(this.hoveringObject, this);\r\n                }\r\n\r\n                hoveringObjectChanged = true;\r\n\r\n                /* Hover new object */\r\n                this.hoveringObject = rayHit.objects[0];\r\n                if (this.styleCursor) document.body.style.cursor = \"pointer\";\r\n\r\n                let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n                if (cursorTarget) {\r\n                    cursorTarget.onHover(this.hoveringObject, this);\r\n                }\r\n                this.globalTarget.onHover(this.hoveringObject, this);\r\n\r\n                if (!this._isDown() && this.isRealDown) {\r\n                    this.isDown = false;\r\n                    this.lastIsDown = false;\r\n                    this.isUpWithNoDown = false;\r\n\r\n                    if (cursorTarget) cursorTarget.onDownOnHover(this.hoveringObject, this);\r\n                    this.globalTarget.onDownOnHover(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n\r\n            if (!hoveringObjectChanged && this._isMoving(rayHit.locations[0])) {\r\n                if (cursorTarget) cursorTarget.onMove(this.hoveringObject, this);\r\n                this.globalTarget.onMove(this.hoveringObject, this);\r\n            }\r\n\r\n            if (this._isDown()) {\r\n                /* Cursor down */\r\n                if (cursorTarget) cursorTarget.onDown(this.hoveringObject, this);\r\n                this.globalTarget.onDown(this.hoveringObject, this);\r\n\r\n                /* Click */\r\n                if (this.tripleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onTripleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onTripleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                } else if (this.doubleClickTimer > 0 && this.multipleClickObject && this.multipleClickObject.equals(this.hoveringObject)) {\r\n                    if (cursorTarget) cursorTarget.onDoubleClick(this.hoveringObject, this);\r\n                    this.globalTarget.onDoubleClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = this.multipleClickDelay;\r\n                    this.doubleClickTimer = 0;\r\n                } else {\r\n                    if (cursorTarget) cursorTarget.onClick(this.hoveringObject, this);\r\n                    this.globalTarget.onClick(this.hoveringObject, this);\r\n\r\n                    this.tripleClickTimer = 0;\r\n                    this.doubleClickTimer = this.multipleClickDelay;\r\n                    this.multipleClickObject = this.hoveringObject;\r\n                }\r\n            } else {\r\n                /* Cursor up */\r\n                if (!this.isUpWithNoDown && !hoveringObjectChanged && this._isUp()) {\r\n                    if (cursorTarget) cursorTarget.onUp(this.hoveringObject, this);\r\n                    this.globalTarget.onUp(this.hoveringObject, this);\r\n                } else if (this.isUpWithNoDown || (hoveringObjectChanged && this._isUp())) {\r\n                    if (cursorTarget) cursorTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                    this.globalTarget.onUpWithNoDown(this.hoveringObject, this);\r\n                }\r\n            }\r\n\r\n            this.prevHitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(rayHit.locations[0], this.prevHitLocationLocalToTarget);\r\n        } else if (this.hoveringObject && (forceUnhover || rayHit.hitCount == 0)) {\r\n            let cursorTarget = this.hoveringObject.getComponent(\"cursor-target\");\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n\r\n            this.hoveringObject = null;\r\n            if (this.styleCursor) document.body.style.cursor = \"default\";\r\n        }\r\n\r\n        if (this.hoveringObject) {\r\n            this.lastIsDown = this.isDown;\r\n        } else {\r\n            this.isDown = false;\r\n            this.lastIsDown = false;\r\n        }\r\n\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.setupVREvents = function setupVREvents(s) {\r\n        /* If in VR, one-time bind the listener */\r\n        this.session = s;\r\n        const onSessionEnd = function (e) {\r\n            /* Reset cache once the session ends to rebind select etc, in case\r\n             * it starts again */\r\n            this.session = null;\r\n        }.bind(this);\r\n        s.addEventListener('end', onSessionEnd);\r\n\r\n        const onSelect = this.onSelect.bind(this);\r\n        s.addEventListener('select', onSelect);\r\n        const onSelectStart = this.onSelectStart.bind(this);\r\n        s.addEventListener('selectstart', onSelectStart);\r\n        const onSelectEnd = this.onSelectEnd.bind(this);\r\n        s.addEventListener('selectend', onSelectEnd);\r\n\r\n        this.onDestroyCallbacks.push(() => {\r\n            if (!this.session) return;\r\n            s.removeEventListener('end', onSessionEnd);\r\n            s.removeEventListener('select', onSelect);\r\n            s.removeEventListener('selectstart', onSelectStart);\r\n            s.removeEventListener('selectend', onSelectEnd);\r\n        });\r\n\r\n        /* After AR session was entered, the projection matrix changed */\r\n        this.onViewportResize();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelect = function onSelect(e) {\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelectStart = function onSelectStart(e) {\r\n        if (this.active) {\r\n            this.arTouchDown = true;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                this.isDown = true;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onSelectEnd = function onSelectEnd(e) {\r\n        if (this.active) {\r\n            this.arTouchDown = false;\r\n            if (e.inputSource.handedness == this.handedness) {\r\n                if (!this.isDown) {\r\n                    this.isUpWithNoDown = true;\r\n                }\r\n                this.isDown = false;\r\n            }\r\n        }\r\n\r\n        if (e.inputSource.handedness == this.handedness) {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerMove = function onPointerMove(e) {\r\n        if (this.active) {\r\n            /* Don't care about secondary pointers */\r\n            if (this.pointerId != null && this.pointerId != e.pointerId) return;\r\n\r\n            const bounds = document.body.getBoundingClientRect();\r\n            const rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onClick = function onClick(e) {\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerDown = function onPointerDown(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            const bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            this.isDown = true;\r\n            this.isRealDown = true;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = true;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerUp = function onPointerUp(e) {\r\n        /* Don't care about secondary pointers or non-left clicks */\r\n        if ((this.pointerId != null && this.pointerId != e.pointerId) || e.button !== 0) return;\r\n\r\n        if (this.active) {\r\n            const bounds = document.body.getBoundingClientRect();\r\n            let rayHit = this.updateMousePos(e.clientX, e.clientY, bounds.width, bounds.height);\r\n\r\n            if (!this.isDown) {\r\n                this.isUpWithNoDown = true;\r\n            }\r\n\r\n            this.isDown = false;\r\n            this.isRealDown = false;\r\n\r\n            this.hoverBehaviour(rayHit, false);\r\n\r\n            if (this.hoveringObject != null) {\r\n                this.pointerId = e.pointerId;\r\n            } else {\r\n                this.pointerId = null;\r\n            }\r\n        } else {\r\n            this.isRealDown = false;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onPointerLeave = function onPointerLeave(e) {\r\n        if (this.pointerId == null || this.pointerId == e.pointerId) {\r\n            if (this.active) {\r\n                this.hoverBehaviour(null, false, true); // trigger unhover\r\n            }\r\n\r\n            this.pointerId = null;\r\n\r\n            this.lastClientX = null;\r\n            this.lastClientY = null;\r\n            this.lastWidth = null;\r\n            this.lastHeight = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.updateMousePos = function updateMousePos(clientX, clientY, w, h) {\r\n        this.lastClientX = clientX;\r\n        this.lastClientY = clientY;\r\n        this.lastWidth = w;\r\n        this.lastHeight = h;\r\n\r\n        /* Get direction in normalized device coordinate space from mouse position */\r\n        const left = clientX / w;\r\n        const top = clientY / h;\r\n        this.direction.vec3_set(left * 2 - 1, -top * 2 + 1, -1.0);\r\n        return this.updateDirection();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.updateDirection = function updateDirection() {\r\n        this.object.getTranslationWorld(this.origin);\r\n\r\n        /* Reverse-project the direction into view space */\r\n        vec3.transformMat4(this.direction, this.direction, this.projectionMatrix);\r\n        vec3.normalize(this.direction, this.direction);\r\n        vec3.transformQuat(this.direction, this.direction, this.object.transformWorld);\r\n        const rayHit = this.rayHit = (this.rayCastMode == 0) ?\r\n            WL.scene.rayCast(this.origin, this.direction, this.collisionMask) :\r\n            WL.physics.rayCast(this.origin, this.direction, this.collisionMask, this.maxDistance);\r\n\r\n        if (rayHit.hitCount > 0) {\r\n            this.cursorPos.set(rayHit.locations[0]);\r\n        } else {\r\n            this.cursorPos.fill(0);\r\n        }\r\n\r\n        return rayHit;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onDeactivate = function onDeactivate() {\r\n        if (this.hoveringObject) {\r\n            const cursorTarget = this.hoveringObject.getComponent('cursor-target');\r\n            if (cursorTarget) cursorTarget.onUnhover(this.hoveringObject, this);\r\n            this.globalTarget.onUnhover(this.hoveringObject, this);\r\n        }\r\n\r\n        this.hoveringObject = null;\r\n        if (this.styleCursor) document.body.style.cursor = \"default\";\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n\r\n        this._setCursorVisibility(false);\r\n        if (this.cursorRayObject) {\r\n            this.cursorRayObject.pp_setActive(false);\r\n        }\r\n\r\n        this.pointerId = null;\r\n\r\n        this.lastClientX = null;\r\n        this.lastClientY = null;\r\n        this.lastWidth = null;\r\n        this.lastHeight = null;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onActivate = function onActivate() {\r\n        this.showRay = true;\r\n\r\n        this.isDown = false;\r\n        this.lastIsDown = false;\r\n        this.isUpWithNoDown = false;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype.onDestroy = function onDestroy() {\r\n        for (const f of this.onDestroyCallbacks) f();\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isDown = function _isDown() {\r\n        return this.isDown !== this.lastIsDown && this.isDown;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isUp = function _isUp() {\r\n        return this.isDown !== this.lastIsDown && !this.isDown;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor\"]].prototype._isMoving = function () {\r\n        let hitLocationLocalToTarget = PP.vec3_create();\r\n        return function _isMoving(hitLocation) {\r\n            let isMoving = false;\r\n\r\n            hitLocationLocalToTarget = this.hoveringObject.pp_convertPositionWorldToLocal(hitLocation, hitLocationLocalToTarget);\r\n\r\n            if (!hitLocationLocalToTarget.vec_equals(this.prevHitLocationLocalToTarget, 0.0001)) {\r\n                isMoving = true;\r\n            }\r\n\r\n            return isMoving;\r\n        };\r\n    }();\r\n\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"cursor\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "if (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]]) {\r\n\r\n    // Modified Functions \r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.init = function init() {\r\n        this.hoverFunctions = [];\r\n        this.unHoverFunctions = [];\r\n        this.clickFunctions = [];\r\n        this.doubleClickFunctions = [];\r\n        this.tripleClickFunctions = [];\r\n        this.moveFunctions = [];\r\n        this.downFunctions = [];\r\n        this.upFunctions = [];\r\n        this.downOnHoverFunctions = [];\r\n        this.upWithNoDownFunctions = [];\r\n\r\n        this.isSurface = false; // just a way to specify if this target is just used as a surface between buttons \r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onHover = function onHover(object, cursor) {\r\n        for (let f of this.hoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUnhover = function onUnhover(object, cursor) {\r\n        for (let f of this.unHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onClick = function onClick(object, cursor) {\r\n        for (let f of this.clickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onMove = function onMove(object, cursor) {\r\n        for (let f of this.moveFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDown = function onDown(object, cursor) {\r\n        for (let f of this.downFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUp = function onUp(object, cursor) {\r\n        for (let f of this.upFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addHoverFunction = function addHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.hoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeHoverFunction = function removeHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.hoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUnHoverFunction = function addUnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.unHoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUnHoverFunction = function removeUnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.unHoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addClickFunction = function addClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.clickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeClickFunction = function removeClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.clickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addMoveFunction = function addMoveFunction(f) {\r\n        this._validateCallback(f);\r\n        this.moveFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeMoveFunction = function removeMoveFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.moveFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDownFunction = function addDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this.downFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDownFunction = function removeDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUpFunction = function addUpFunction(f) {\r\n        this._validateCallback(f);\r\n        this.upFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUpFunction = function removeUpFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upFunctions, f);\r\n    };\r\n\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype._removeItemOnce = function _removeItemOnce(arr, value) {\r\n        var index = arr.indexOf(value);\r\n        if (index > -1) arr.splice(index, 1);\r\n        return arr;\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype._validateCallback = function _validateCallback(f) {\r\n        if (typeof f !== \"function\") {\r\n            throw new TypeError(this.object.name + \".cursor-target: Argument needs to be a function\");\r\n        }\r\n    };\r\n\r\n    // New Functions \r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDoubleClick = function onDoubleClick(object, cursor) {\r\n        for (let f of this.doubleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDoubleClickFunction = function addDoubleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.doubleClickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDoubleClickFunction = function removeDoubleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.doubleClickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onTripleClick = function onTripleClick(object, cursor) {\r\n        for (let f of this.tripleClickFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addTripleClickFunction = function addTripleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this.tripleClickFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeTripleClickFunction = function removeTripleClickFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.tripleClickFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDownOnHover = function onDownOnHover(object, cursor) {\r\n        for (let f of this.downOnHoverFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addDownOnHoverFunction = function addDownOnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this.downOnHoverFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeDownOnHoverFunction = function removeDownOnHoverFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.downOnHoverFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onUpWithNoDown = function onUpWithNoDown(object, cursor) {\r\n        for (let f of this.upWithNoDownFunctions) f(object, cursor);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.addUpWithNoDownFunction = function addUpWithNoDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this.upWithNoDownFunctions.push(f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.removeUpWithNoDownFunction = function removeUpWithNoDownFunction(f) {\r\n        this._validateCallback(f);\r\n        this._removeItemOnce(this.upWithNoDownFunctions, f);\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.start = function start() { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.update = function update(dt) { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onActivate = function onActivate() { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDeactivate = function onDeactivate() { };\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"cursor-target\"]].prototype.onDestroy = function onDestroy() { };\r\n\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"cursor-target\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "if (_WL && _WL._componentTypes && _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]]) {\r\n\r\n    // Modified Functions\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype.init = function init() {\r\n        this.pointerId = null;\r\n        this.prevMoveEvent = null;\r\n\r\n        this.resetMovingDelay = 0.15;\r\n        this.resetMovingTimer = new PP.Timer(this.resetMovingDelay, false);\r\n        this.isMoving = false;\r\n\r\n        document.body.addEventListener('pointermove', this._onMove.bind(this));\r\n\r\n        if (this.requireMouseDown) {\r\n            if (this.mouseButtonIndex == 2) {\r\n                WL.canvas.addEventListener(\"contextmenu\", function (event) {\r\n                    event.preventDefault();\r\n                }, false);\r\n            }\r\n\r\n            WL.canvas.addEventListener('pointerdown', function (event) {\r\n                if (this.pointerId != null) return;\r\n\r\n                if (!this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.pointerId = event.pointerId;\r\n                        this.mouseDown = true;\r\n                        document.body.style.cursor = \"grabbing\";\r\n                        if (event.button == 1) {\r\n                            event.preventDefault(); // Prevent scrolling\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }.bind(this));\r\n\r\n            document.body.addEventListener('pointerup', function (event) {\r\n                if (event.pointerId != this.pointerId) return;\r\n\r\n                if (this.mouseDown) {\r\n                    if (event.button == this.mouseButtonIndex) {\r\n                        this.mouseDown = false;\r\n                        document.body.style.cursor = \"initial\";\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        }\r\n\r\n        document.body.addEventListener('pointerleave', function (event) {\r\n            if (event.pointerId != this.pointerId) return;\r\n\r\n            this.pointerId = null;\r\n            this.prevMoveEvent = null;\r\n\r\n            if (this.mouseDown) {\r\n                this.mouseDown = false;\r\n                document.body.style.cursor = \"initial\";\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype.update = function update(dt) {\r\n        if (this.resetMovingTimer.isRunning()) {\r\n            this.resetMovingTimer.update(dt);\r\n            if (this.resetMovingTimer.isDone()) {\r\n                this.resetMovingTimer.reset();\r\n                this.isMoving = false;\r\n            }\r\n        }\r\n\r\n        if (!this.isMoving) {\r\n            if (!this.requireMouseDown || !this.mouseDown) {\r\n                this.pointerId = null;\r\n            }\r\n\r\n            this.prevMoveEvent = null;\r\n        }\r\n    };\r\n\r\n    _WL._componentTypes[_WL._componentTypeIndices[\"mouse-look\"]].prototype._onMove = function () {\r\n        let viewForward = PP.vec3_create();\r\n        let viewUp = PP.vec3_create();\r\n\r\n        let referenceUp = PP.vec3_create();\r\n        let referenceUpNegate = PP.vec3_create();\r\n        let referenceRight = PP.vec3_create();\r\n\r\n        let newUp = PP.vec3_create();\r\n        return function _onMove(event) {\r\n            if (this.pointerId != null && event.pointerId != this.pointerId) return;\r\n\r\n            if (this.active && (this.mouseDown || !this.requireMouseDown)) {\r\n\r\n                viewForward = this.object.pp_getBackward(viewForward); // the view \"real\" forward is actually the backward\r\n                viewUp = this.object.pp_getUp(viewUp);\r\n\r\n                referenceUp.vec3_set(0, 1, 0);\r\n                if (this.object.pp_getParent() != null) {\r\n                    referenceUp = this.object.pp_getParent().pp_getUp(referenceUp);\r\n                }\r\n\r\n                referenceRight = viewForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n                let minAngle = 1;\r\n                if (viewForward.vec3_angle(referenceUp) < minAngle) {\r\n                    referenceRight = viewUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n                } else if (viewForward.vec3_angle(referenceUp.vec3_negate(referenceUpNegate)) < minAngle) {\r\n                    referenceRight = viewUp.vec3_cross(referenceUp, referenceRight);\r\n                } else if (!viewUp.vec3_isConcordant(referenceUp)) {\r\n                    referenceRight.vec3_negate(referenceRight);\r\n                }\r\n                referenceRight.vec3_normalize(referenceRight);\r\n\r\n                let movementX = event.movementX;\r\n                let movementY = event.movementY;\r\n\r\n                if (movementX == null || movementY == null) {\r\n                    if (this.prevMoveEvent != null) {\r\n                        movementX = event.pageX - this.prevMoveEvent.pageX;\r\n                        movementY = event.pageY - this.prevMoveEvent.pageY;\r\n                    } else {\r\n                        movementX = 0;\r\n                        movementY = 0;\r\n                    }\r\n                }\r\n\r\n                this.rotationX = -this.sensitity * movementX;\r\n                this.rotationY = -this.sensitity * movementY;\r\n\r\n                this.object.pp_rotateAxis(this.rotationY, referenceRight);\r\n\r\n                let maxVerticalAngle = 90 - 0.001;\r\n                newUp = this.object.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    this.object.pp_rotateAxis(fixAngle, referenceRight);\r\n                }\r\n\r\n                this.object.pp_rotateAxis(this.rotationX, referenceUp);\r\n\r\n                this.prevMoveEvent = event;\r\n                this.pointerId = event.pointerId;\r\n\r\n                this.resetMovingTimer.start(this.resetMovingDelay);\r\n                this.isMoving = true;\r\n            }\r\n        };\r\n    }();\r\n} else {\r\n    console.error(\"Wonderland Engine \\\"mouse-look\\\" component not found.\\n Add the component to your project to avoid any issue with the PP bundle.\");\r\n}", "/*!\n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.3\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, \u221E]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n", "import { Howler } from 'howler';\r\n\r\nWL.registerComponent(\"pp-spatial-audio-listener\", {\r\n    _myEnabled: { type: WL.Type.Enum, values: ['always', 'vr', 'non vr'], default: 'always' },\r\n}, {\r\n    init: function () {\r\n        this._myOrigin = new Float32Array(3);\r\n        this._myForward = new Float32Array(3);\r\n        this._myUp = new Float32Array(3);\r\n    },\r\n    update: function () {\r\n        if (this._myEnabled == 0 || (this._myEnabled == 1 && WL.xrSession) || (this._myEnabled == 2 && !WL.xrSession)) {\r\n            this.object.pp_getPosition(this._myOrigin);\r\n            this.object.pp_getForward(this._myForward);\r\n            this.object.pp_getUp(this._myUp);\r\n\r\n            Howler.pos(this._myOrigin[0], this._myOrigin[1], this._myOrigin[2]);\r\n            Howler.orientation(this._myForward[0], this._myForward[1], this._myForward[2],\r\n                this._myUp[0], this._myUp[1], this._myUp[2]);\r\n        }\r\n    },\r\n});", "export const bigInt=()=>(async e=>{try{return(await WebAssembly.instantiate(e)).instance.exports.b(BigInt(0))===BigInt(0)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,1,126,1,126,3,2,1,0,7,5,1,1,98,0,0,10,6,1,4,0,32,0,11])),bulkMemory=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,3,1,0,1,10,14,1,12,0,65,0,65,0,65,0,252,10,0,0,11])),exceptions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,6,64,25,11,11])),extendedConst=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,0,1,11,9,1,0,65,1,65,2,106,11,0])),gc=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,10,2,95,1,125,0,96,0,1,107,0,3,2,1,1,10,12,1,10,0,67,0,0,0,0,251,7,0,11])),memory64=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,5,3,1,4,1])),multiValue=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,6,1,96,0,2,127,127,3,2,1,0,10,8,1,6,0,65,0,65,0,11])),mutableGlobals=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,2,8,1,1,97,1,98,3,127,1,6,6,1,127,1,65,0,11,7,5,1,1,97,3,1])),referenceTypes=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,7,1,5,0,208,112,26,11])),relaxedSimd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,15,1,13,0,65,1,253,15,65,2,253,15,253,128,2,11])),saturatedFloatToInt=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,12,1,10,0,67,0,0,0,0,252,0,26,11])),signExtensions=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,8,1,6,0,65,0,192,26,11])),simd=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,10,1,8,0,65,0,253,15,253,98,11])),streamingCompilation=()=>(async()=>\"compileStreaming\"in WebAssembly)(),tailCall=async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,6,1,4,0,18,0,11])),threads=()=>(async e=>{try{return\"undefined\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(e)}catch(e){return!1}})(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]));\n", "/**\n * Types\n */\nconst MISALIGNED_MSG = 'Misaligned pointer: please report a bug';\n/* Component class instances per type to avoid GC */\nlet ComponentCache = {};\n/* Object class instances per type to avoid GC */\nlet ObjectCache = [];\n/* Component properties to exclude when cloning, see addComponent() */\nconst EXCLUDED_COMPONENT_PROPERTIES = ['_id', '_manager', 'type', '_type', 'active'];\n/**\n * Wonderland Engine API\n * @namespace WL\n */\n/**\n * Component parameter type enum\n */\nexport var Type;\n(function (Type) {\n    /**\n     * **Bool**:\n     *\n     * Appears in the editor as checkbox.\n     */\n    Type[Type[\"Bool\"] = 2] = \"Bool\";\n    /**\n     * **Int**:\n     *\n     * Appears in the editor as int input field.\n     */\n    Type[Type[\"Int\"] = 4] = \"Int\";\n    /**\n     * **Float**:\n     *\n     * Appears in the editor as float input field.\n     */\n    Type[Type[\"Float\"] = 8] = \"Float\";\n    /**\n     * **String / Text**:\n     *\n     * Appears in the editor as text input field.\n     */\n    Type[Type[\"String\"] = 16] = \"String\";\n    /**\n     * **Enumeration**:\n     *\n     * Appears in the editor as dropdown with given values.\n     * If parameters is enum, a `values` parameter needs to be\n     * specified for the parameter as well.\n     *\n     * @example\n     *     camera: {type: Type.Enum, values: ['auto', 'back', 'front'], default: 'auto'},\n     */\n    Type[Type[\"Enum\"] = 32] = \"Enum\";\n    /**\n     * **Object reference**:\n     *\n     * Appears in the editor as object resource selection dropdown\n     * with object picker.\n     */\n    Type[Type[\"Object\"] = 64] = \"Object\";\n    /**\n     * **Mesh reference**:\n     *\n     * Appears in the editor as mesh resource selection dropdown.\n     */\n    Type[Type[\"Mesh\"] = 128] = \"Mesh\";\n    /**\n     * **Texture reference**:\n     *\n     * Appears in the editor as texture resource selection dropdown.\n     */\n    Type[Type[\"Texture\"] = 256] = \"Texture\";\n    /**\n     * **Material reference**:\n     *\n     * Appears in the editor as material resource selection dropdown.\n     */\n    Type[Type[\"Material\"] = 512] = \"Material\";\n    /**\n     * **Animation reference**:\n     *\n     * Appears in the editor as animation resource selection dropdown.\n     */\n    Type[Type[\"Animation\"] = 1024] = \"Animation\";\n    /**\n     * **Skin reference**:\n     *\n     * Appears in the editor as skin resource selection dropdown.\n     */\n    Type[Type[\"Skin\"] = 2048] = \"Skin\";\n})(Type || (Type = {}));\n/**\n * Default component parameter value per type.\n */\nconst _componentDefaults = new Array(6);\n_componentDefaults[Type.Bool] = false;\n_componentDefaults[Type.Int] = 0;\n_componentDefaults[Type.Float] = 0.0;\n_componentDefaults[Type.String] = '';\n_componentDefaults[Type.Enum] = 0;\n_componentDefaults[Type.Object] = null;\n_componentDefaults[Type.Mesh] = null;\n_componentDefaults[Type.Texture] = null;\n_componentDefaults[Type.Material] = null;\n_componentDefaults[Type.Animation] = null;\n_componentDefaults[Type.Skin] = null;\n/**\n * Register a custom JavaScript component type.\n *\n * You can register a component directly using a class inheriting from {@link Component}:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n * registerComponent(class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myParam: {type: Type.Float, default: 42.0},\n *     };\n *     init: function() {},\n *     start: function() {},\n *     update: function(dt) {},\n *     onActivate: function() {},\n *     onDeactivate: function() {},\n *     onDestroy: function() {}\n * });\n * ```\n *\n * Or directly use an object literal as a prototype:\n *\n * ```js\n * registerComponent('my-new-type', {\n *    myParam: {type: Type.Float, default: 42.0},\n * }, {\n *    init: function() {},\n *    start: function() {},\n *    update: function(dt) {},\n *    onActivate: function() {},\n *    onDeactivate: function() {},\n *    onDestroy: function() {},\n * });\n * ```\n *\n * @param name Name of the component or a class extending {@link Component}.\n * @param params Dict of param names to {@link CustomParameter}.\n * @param object Object containing functions for the component type.\n */\nfunction registerComponent(name, params, object) {\n    const typeIndex = _WL.registerComponent(name, params, object);\n    const ctor = _WL._componentTypes[typeIndex];\n    /* Set properties to the default value if needed. */\n    for (const name in ctor.Properties) {\n        const p = ctor.Properties[name];\n        p.default = p.default || _componentDefaults[p.type];\n        ctor.prototype[name] = p.default;\n    }\n}\n/**\n * Collider type enum for {@link CollisionComponent}.\n */\nexport var Collider;\n(function (Collider) {\n    /**\n     * **Sphere Collider**:\n     *\n     * Simplest and most performant collision shape. If this type is set on a\n     * {@link CollisionComponent}, only the first component of\n     * {@link CollisionComponent#extents} will be used to determine the radius.\n     */\n    Collider[Collider[\"Sphere\"] = 0] = \"Sphere\";\n    /**\n     * **Axis Aligned Bounding Box Collider**:\n     *\n     * Box that is always aligned to XYZ axis. It cannot be rotated but is more\n     * efficient than {@link Collider.Box}.\n     */\n    Collider[Collider[\"AxisAlignedBox\"] = 1] = \"AxisAlignedBox\";\n    /**\n     * **Aligned Bounding Box Collider**:\n     *\n     * Box that matches the object's rotation and translation correctly. This\n     * is the least efficient collider and should only be chosen over\n     * {@link Collider.Sphere} and {@link Collider.AxisAlignedBox} if really\n     * necessary.\n     */\n    Collider[Collider[\"Box\"] = 2] = \"Box\";\n})(Collider || (Collider = {}));\n/**\n * Alignment type enum for {@link TextComponent}.\n */\nexport var Alignment;\n(function (Alignment) {\n    /** Text start is at object origin */\n    Alignment[Alignment[\"Left\"] = 1] = \"Left\";\n    /** Text center is at object origin */\n    Alignment[Alignment[\"Center\"] = 2] = \"Center\";\n    /** Text end is at object origin */\n    Alignment[Alignment[\"Right\"] = 3] = \"Right\";\n})(Alignment || (Alignment = {}));\n/**\n * Justification type enum for {@link TextComponent}.\n */\nexport var Justification;\n(function (Justification) {\n    /** Text line is at object origin */\n    Justification[Justification[\"Line\"] = 1] = \"Line\";\n    /** Text middle is at object origin */\n    Justification[Justification[\"Middle\"] = 2] = \"Middle\";\n    /** Text top is at object origin */\n    Justification[Justification[\"Top\"] = 3] = \"Top\";\n    /** Text bottom is at object origin */\n    Justification[Justification[\"Bottom\"] = 4] = \"Bottom\";\n})(Justification || (Justification = {}));\n/**\n * Effect type enum for {@link TextComponent}.\n */\nexport var TextEffect;\n(function (TextEffect) {\n    /** Text is rendered normally */\n    TextEffect[TextEffect[\"None\"] = 0] = \"None\";\n    /** Text is rendered with an outline */\n    TextEffect[TextEffect[\"Outline\"] = 1] = \"Outline\";\n})(TextEffect || (TextEffect = {}));\n/**\n * Input type enum for {@link InputComponent}.\n */\nexport var InputType;\n(function (InputType) {\n    /** Head input */\n    InputType[InputType[\"Head\"] = 0] = \"Head\";\n    /** Left eye input */\n    InputType[InputType[\"EyeLeft\"] = 1] = \"EyeLeft\";\n    /** Right eye input */\n    InputType[InputType[\"EyeRight\"] = 2] = \"EyeRight\";\n    /** Left controller input */\n    InputType[InputType[\"ControllerLeft\"] = 3] = \"ControllerLeft\";\n    /** Right controller input */\n    InputType[InputType[\"ControllerRight\"] = 4] = \"ControllerRight\";\n    /** Left ray input */\n    InputType[InputType[\"RayLeft\"] = 5] = \"RayLeft\";\n    /** Right ray input */\n    InputType[InputType[\"RayRight\"] = 6] = \"RayRight\";\n})(InputType || (InputType = {}));\n/**\n * Light type enum for {@link LightComponent}.\n */\nexport var LightType;\n(function (LightType) {\n    /** Point light */\n    LightType[LightType[\"Point\"] = 1] = \"Point\";\n    /** Spot light */\n    LightType[LightType[\"Spot\"] = 2] = \"Spot\";\n    /** Sun light / Directional light */\n    LightType[LightType[\"Sun\"] = 3] = \"Sun\";\n})(LightType || (LightType = {}));\n/**\n * Animation state of {@link AnimationComponent}.\n */\nexport var AnimationState;\n(function (AnimationState) {\n    /** Animation is currently playing */\n    AnimationState[AnimationState[\"Playing\"] = 1] = \"Playing\";\n    /** Animation is paused and will continue at current playback\n     * time on {@link AnimationComponent#play} */\n    AnimationState[AnimationState[\"Paused\"] = 2] = \"Paused\";\n    /** Animation is stopped */\n    AnimationState[AnimationState[\"Stopped\"] = 3] = \"Stopped\";\n})(AnimationState || (AnimationState = {}));\n/**\n * Rigid body force mode for {@link PhysXComponent#addForce} and {@link PhysXComponent#addTorque}.\n *\n * [PhysX API Reference](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxapi/files/structPxForceMode.html)\n */\nexport var ForceMode;\n(function (ForceMode) {\n    /** Apply as force */\n    ForceMode[ForceMode[\"Force\"] = 0] = \"Force\";\n    /** Apply as impulse */\n    ForceMode[ForceMode[\"Impulse\"] = 1] = \"Impulse\";\n    /** Apply as velocity change, mass dependent */\n    ForceMode[ForceMode[\"VelocityChange\"] = 2] = \"VelocityChange\";\n    /** Apply as mass dependent force */\n    ForceMode[ForceMode[\"Acceleration\"] = 3] = \"Acceleration\";\n})(ForceMode || (ForceMode = {}));\n/**\n * Collision callback event type.\n */\nexport var CollisionEventType;\n(function (CollisionEventType) {\n    /** Touch/contact detected, collision */\n    CollisionEventType[CollisionEventType[\"Touch\"] = 0] = \"Touch\";\n    /** Touch/contact lost, uncollide */\n    CollisionEventType[CollisionEventType[\"TouchLost\"] = 1] = \"TouchLost\";\n    /** Touch/contact with trigger detected */\n    CollisionEventType[CollisionEventType[\"TriggerTouch\"] = 2] = \"TriggerTouch\";\n    /** Touch/contact with trigger lost */\n    CollisionEventType[CollisionEventType[\"TriggerTouchLost\"] = 3] = \"TriggerTouchLost\";\n})(CollisionEventType || (CollisionEventType = {}));\n/**\n * Rigid body {@link PhysXComponent#shape}.\n *\n * [PhysX SDK Guide](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/Geometry.html#geometry-types).\n */\nexport var Shape;\n(function (Shape) {\n    /** No shape. */\n    Shape[Shape[\"None\"] = 0] = \"None\";\n    /** Sphere shape. */\n    Shape[Shape[\"Sphere\"] = 1] = \"Sphere\";\n    /** Capsule shape. */\n    Shape[Shape[\"Capsule\"] = 2] = \"Capsule\";\n    /** Box shape. */\n    Shape[Shape[\"Box\"] = 3] = \"Box\";\n    /** Plane shape. */\n    Shape[Shape[\"Plane\"] = 4] = \"Plane\";\n    /** Convex mesh shape. */\n    Shape[Shape[\"ConvexMesh\"] = 5] = \"ConvexMesh\";\n    /** Triangle mesh shape. */\n    Shape[Shape[\"TriangleMesh\"] = 6] = \"TriangleMesh\";\n})(Shape || (Shape = {}));\n/**\n * Mesh attribute enum.\n * @since 0.9.0\n */\nexport var MeshAttribute;\n(function (MeshAttribute) {\n    /** Position attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Position\"] = 0] = \"Position\";\n    /** Tangent attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"Tangent\"] = 1] = \"Tangent\";\n    /** Normal attribute, 3 floats */\n    MeshAttribute[MeshAttribute[\"Normal\"] = 2] = \"Normal\";\n    /** Texture coordinate attribute, 2 floats */\n    MeshAttribute[MeshAttribute[\"TextureCoordinate\"] = 3] = \"TextureCoordinate\";\n    /** Color attribute, 4 floats, RGBA, range `0` to `1` */\n    MeshAttribute[MeshAttribute[\"Color\"] = 4] = \"Color\";\n    /** Joint id attribute, 4 unsigned ints */\n    MeshAttribute[MeshAttribute[\"JointId\"] = 5] = \"JointId\";\n    /** Joint weights attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"JointWeight\"] = 6] = \"JointWeight\";\n    /** Secondary joint id attribute, 4 unsigned ints */\n    MeshAttribute[MeshAttribute[\"SecondaryJointId\"] = 7] = \"SecondaryJointId\";\n    /** Secondary joint weights attribute, 4 floats */\n    MeshAttribute[MeshAttribute[\"SecondaryJointWeight\"] = 8] = \"SecondaryJointWeight\";\n})(MeshAttribute || (MeshAttribute = {}));\n/**\n * Material parameter type.\n */\nexport var MaterialParamType;\n(function (MaterialParamType) {\n    /** Unsigned integer parameter type. */\n    MaterialParamType[MaterialParamType[\"UnsignedInt\"] = 0] = \"UnsignedInt\";\n    /** Integer parameter type. */\n    MaterialParamType[MaterialParamType[\"Int\"] = 1] = \"Int\";\n    /** Float parameter type. */\n    MaterialParamType[MaterialParamType[\"Float\"] = 2] = \"Float\";\n    /** Sampler resource parameter type, i.e., a {@link Texture}. */\n    MaterialParamType[MaterialParamType[\"Sampler\"] = 3] = \"Sampler\";\n    /**\n     * Font resource parameter type.\n     *\n     * **Note**: Changing font isn't exposed yet and will raise an error.\n     */\n    MaterialParamType[MaterialParamType[\"Font\"] = 4] = \"Font\";\n})(MaterialParamType || (MaterialParamType = {}));\n/**\n * Canvas element that Wonderland Engine renders to.\n */\nlet canvas = null;\n/**\n * Current WebXR session or {@link null} if no session active\n * @type {XRSession}\n */\nlet xrSession = null;\n/**\n * List of functions to call if a WebXR session is started\n */\nconst onXRSessionStart = [\n    (s) => {\n        xrSession = s;\n    },\n];\n/**\n * List of functions to call if a WebXR session ends\n */\nconst onXRSessionEnd = [\n    () => {\n        xrSession = null;\n    },\n];\n/**\n * Whether AR is supported by the browser\n *\n * `undefined` until support could be determined\n */\nlet arSupported = undefined;\n/**\n * Whether VR is supported by the browser\n *\n * `undefined` until support could be determined\n */\nlet vrSupported = undefined;\n/**\n * List of functions to call once VR/AR support has been determined.\n *\n * Will be called once for AR and once for VR independent of support for each.\n * This allows you to notify the user of both cases: support and missing support of XR.\n * See the `supported` parameter of the callback, which indicates support.\n */\nlet onXRSupported = [\n    (type, supported) => {\n        if (type == 'ar')\n            arSupported = supported;\n        if (type == 'vr')\n            vrSupported = supported;\n    },\n];\n/**\n * List of functions to call once the main scene has been loaded.\n */\nlet onSceneLoaded = [];\n/**\n * Current main scene\n * @type {Scene}\n */\nlet scene = undefined;\n/**\n * Physics, only available when physx is enabled in the runtime\n * @type {Physics}\n */\nlet physics = undefined;\n/**\n * Image cache.\n *\n * @hidden\n */\nlet _images = [];\n/**\n * List of callbacks triggered when the scene is loaded.\n *\n * @hidden\n */\nlet _sceneLoadedCallback = [];\nlet _tempMem = null;\nlet _tempMemSize = 0;\nlet _tempMemFloat = null;\nlet _tempMemInt = null;\nlet _tempMemUint32 = null;\nlet _tempMemUint16 = null;\nlet _tempMemUint8 = null;\n/**\n * Initialize API resources, called by the engine automatically.\n *\n * @hidden\n */\nfunction init() {\n    scene = new Scene();\n    /* For internal testing, we provide compatibility with DOM-less execution */\n    canvas =\n        typeof document === 'undefined'\n            ? null\n            : document.getElementById('canvas');\n    ComponentCache = {};\n    /* Object class instances per type to avoid GC */\n    ObjectCache = [];\n    /* Target memory for JS API functions that return arrays */\n    allocateTempMemory(1024);\n}\n/**\n * Reset the runtime state, including:\n *     - Component cache\n *     - Images\n *     - Callbacks\n *\n * **Note**: This is used internally.\n *\n * @hidden\n */\nfunction reset() {\n    ComponentCache = {};\n    ObjectCache.length = 0;\n    _images.length = 0;\n    _sceneLoadedCallback.length = 0;\n    _WL.reset();\n}\n/**\n * Initialize API resources, called by the engine automatically, if\n * PhysX is enabled.\n *\n * @hidden\n */\nfunction _initPhysics() {\n    physics = new Physics();\n}\nfunction allocateTempMemory(size) {\n    console.log('Allocating temp mem:', size);\n    _tempMemSize = size;\n    if (_tempMem)\n        _free(_tempMem);\n    _tempMem = _malloc(_tempMemSize);\n    updateTempMemory();\n}\nfunction requireTempMem(size) {\n    if (_tempMemSize >= size)\n        return;\n    /* Grow in 1kb increments */\n    allocateTempMemory(Math.ceil(size / 1024) * 1024);\n}\nfunction updateTempMemory() {\n    _tempMemFloat = new Float32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemInt = new Int32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemUint32 = new Uint32Array(HEAP8.buffer, _tempMem, _tempMemSize >> 2);\n    _tempMemUint16 = new Uint16Array(HEAP8.buffer, _tempMem, _tempMemSize >> 1);\n    _tempMemUint8 = new Uint8Array(HEAP8.buffer, _tempMem, _tempMemSize);\n}\n/**\n * Returns a uint8 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required\n * @returns A {@link TypedArray} over the WASM memory\n */\nfunction getTempBufferU8(count) {\n    requireTempMem(count);\n    return _tempMemUint8;\n}\n/**\n * Returns a uint16 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required\n * @returns A {@link TypedArray} over the WASM memory\n */\nfunction getTempBufferU16(count) {\n    requireTempMem(count * 2);\n    return _tempMemUint16;\n}\n/**\n * Returns a uint32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferU32(count) {\n    requireTempMem(count * 4);\n    return _tempMemUint32;\n}\n/**\n * Returns a int32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferI32(count) {\n    requireTempMem(count * 4);\n    return _tempMemInt;\n}\n/**\n * Returns a float32 buffer view on temporary WASM memory.\n *\n * **Note**: this method might allocate if the requested memory is bigger\n * than the current temporary memory allocated.\n *\n * @param {number} count The number of **elements** required.\n * @returns A {@link TypedArray} over the WASM memory.\n */\nfunction getTempBufferF32(count) {\n    requireTempMem(count * 4);\n    return _tempMemFloat;\n}\nexport { registerComponent, canvas, scene, xrSession, onXRSessionStart, onXRSessionEnd, onXRSupported, onSceneLoaded, arSupported, vrSupported, physics, _images, _sceneLoadedCallback, textures, init, reset, _initPhysics, updateTempMemory, };\n/**\n * Constants.\n */\n/**\n * Default world up vector.\n */\nconst UP_VECTOR = [0, 1, 0];\n/**\n * Provides global scene functionality like raycasting.\n */\nexport class Scene {\n    constructor() {\n        this._rayHit = _malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._rayHit);\n        /* Hidden property, list of functions to call after a\n         * frame has been rendered */\n        this.onPreRender = [];\n        this.onPostRender = [];\n    }\n    /**\n     * Currently active view components.\n     */\n    get activeViews() {\n        const count = _wl_scene_get_active_views(_tempMem, 16);\n        const views = [];\n        const viewTypeIndex = $Object._typeIndexFor('view');\n        for (let i = 0; i < count; ++i) {\n            views.push(new ViewComponent(viewTypeIndex, _tempMemInt[i]));\n        }\n        return views;\n    }\n    /**\n     * Cast a ray through the scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain up to **4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     *\n     * @returns The scene cached {@link RayHit} instance.\n     * @note The returned object is owned by the Scene instance\n     *   will be reused with the next {@link Scene#rayCast} call.\n     */\n    rayCast(o, d, group) {\n        _wl_scene_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, this._rayHit);\n        return this._hit;\n    }\n    /**\n     * Add an object to the scene.\n     *\n     * @param parent Parent object or {@link null}.\n     * @returns A newly created object.\n     */\n    addObject(parent) {\n        const parentId = parent ? parent.objectId : 0;\n        const objectId = _wl_scene_add_object(parentId);\n        return _wrapObject(objectId);\n    }\n    /**\n     * Batch-add objects to the scene.\n     *\n     * Will provide better performance for adding multiple objects (e.g. > 16)\n     * than calling {@link Scene#addObject} repeatedly in a loop.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param count Number of objects to add.\n     * @param parent Parent object or {@link null}, default {@link null}.\n     * @param componentCountHint Hint for how many components in total will\n     *      be added to the created objects afterwards, default `0`.\n     * @returns {$Object[]} newly created objects\n     */\n    addObjects(count, parent, componentCountHint) {\n        const parentId = parent ? parent.objectId : 0;\n        requireTempMem(count * 2);\n        const actualCount = _wl_scene_add_objects(parentId, count, componentCountHint || 0, _tempMem, _tempMemSize >> 1);\n        const ids = _tempMemUint16.subarray(0, actualCount);\n        const objects = Array.from(ids, _wrapObject);\n        return objects;\n    }\n    /**\n     * Pre-allocate memory for a given amount of objects and components.\n     *\n     * Will provide better performance for adding objects later with {@link Scene#addObject}\n     * and {@link Scene#addObjects}.\n     *\n     * By providing upfront information of how many objects will be required,\n     * the engine is able to batch-allocate the required memory rather than\n     * convervatively grow the memory in small steps.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * @param objectCount Number of objects to add.\n     * @param componentCountPerType Amount of components to\n     *      allocate for {@link $Object.addComponent}, e.g. `{mesh: 100, collision: 200, \"my-comp\": 100}`.\n     * @since 0.8.10\n     */\n    reserveObjects(objectCount, componentCountPerType) {\n        componentCountPerType = componentCountPerType || {};\n        const jsManagerIndex = $Object._typeIndexFor('js');\n        let countsPerTypeIndex = _tempMemInt.subarray();\n        countsPerTypeIndex.fill(0);\n        for (const e of Object.entries(componentCountPerType)) {\n            const typeIndex = $Object._typeIndexFor(e[0]);\n            countsPerTypeIndex[typeIndex < 0 ? jsManagerIndex : typeIndex] += e[1];\n        }\n        _wl_scene_reserve_objects(objectCount, _tempMem);\n    }\n    /**\n     * Set the background clear color.\n     *\n     * @param color new clear color (RGBA).\n     * @since 0.8.5\n     */\n    set clearColor(color) {\n        _wl_scene_set_clearColor(color[0], color[1], color[2], color[3]);\n    }\n    /**\n     * Set whether to clear the color framebuffer before drawing.\n     *\n     * This function is useful if an external framework (e.g. an AR tracking\n     * framework) is responsible for drawing a camera frame before Wonderland\n     * Engine draws the scene on top of it.\n     *\n     * @param b Whether to enable color clear.\n     * @since 0.9.4\n     */\n    set colorClearEnabled(b) {\n        _wl_scene_enableColorClear(b);\n    }\n    /**\n     * Load a scene file (.bin)\n     *\n     * Will replace the currently active scene with the one loaded\n     * from given file. It is assumed that JavaScript components required by\n     * the new scene were registered in advance.\n     *\n     * @param filename Path to the .bin file.\n     */\n    load(filename) {\n        const strLen = lengthBytesUTF8(filename) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(filename, ptr, strLen);\n        _wl_load_scene(ptr);\n        _free(ptr);\n    }\n    /**\n     * Load an external 3D file (.gltf, .glb).\n     *\n     * Loads and parses the gltf file and its images and appends the result\n     * to scene.\n     *\n     * ```js\n     * WL.scene.append(filename).then(root => {\n     *     // root contains the loaded scene\n     * });\n     * ```\n     *\n     * In case the `loadGltfExtensions` option is set to true, the response\n     * will be an object containing both the root of the loaded scene and\n     * any glTF extensions found on nodes, meshes and the root of the file.\n     *\n     * ```js\n     * WL.scene.append(filename, { loadGltfExtensions: true }).then(({root, extensions}) => {\n     *     // root contains the loaded scene\n     *     // extensions.root contains any extensions at the root of glTF document\n     *     const rootExtensions = extensions.root;\n     *     // extensions.mesh and extensions.node contain extensions indexed by Object id\n     *     const childObject = root.children[0];\n     *     const meshExtensions = root.meshExtensions[childObject.objectId];\n     *     const nodeExtensions = root.nodeExtensions[childObject.objectId];\n     *     // extensions.idMapping contains a mapping from glTF node index to Object id\n     * });\n     * ```\n     *\n     * @param filename Path to the .gltf or .glb file.\n     * @param options Additional options for loading.\n     * @returns Root of the loaded scene.\n     */\n    append(filename, options) {\n        options = options || {};\n        const loadGltfExtensions = !!options.loadGltfExtensions;\n        const strLen = lengthBytesUTF8(filename) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(filename, ptr, strLen);\n        const callback = _sceneLoadedCallback.length;\n        const promise = new Promise((resolve, reject) => {\n            _sceneLoadedCallback[callback] = {\n                success: (id, extensions) => {\n                    const root = _wrapObject(id);\n                    resolve(extensions ? { root, extensions } : root);\n                },\n                error: () => reject(),\n            };\n        });\n        _wl_append_scene(ptr, loadGltfExtensions, callback);\n        _free(ptr);\n        return promise;\n    }\n    /**\n     * Unmarshalls the GltfExtensions from an Uint32Array.\n     *\n     * @param data Array containing the gltf extension data.\n     * @returns The extensions stored in an object literal.\n     *\n     * @hidden\n     */\n    _unmarshallGltfExtensions(data) {\n        /* @todo: This method should be moved in the internal Emscripten library. */\n        const extensions = {\n            root: {},\n            mesh: {},\n            node: {},\n            idMapping: {},\n        };\n        let index = 0;\n        const readString = () => {\n            const strPtr = data[index++];\n            const strLen = data[index++];\n            return _WL.UTF8ViewToString(strPtr, strPtr + strLen);\n        };\n        const idMappingSize = data[index++];\n        const idMapping = new Array(idMappingSize);\n        for (let i = 0; i < idMappingSize; ++i) {\n            idMapping[i] = data[index++];\n        }\n        extensions.idMapping = idMapping;\n        const meshExtensionsSize = data[index++];\n        for (let i = 0; i < meshExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.mesh[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const nodeExtensionsSize = data[index++];\n        for (let i = 0; i < nodeExtensionsSize; ++i) {\n            const objectId = data[index++];\n            extensions.node[idMapping[objectId]] = JSON.parse(readString());\n        }\n        const rootExtensionsStr = readString();\n        if (rootExtensionsStr) {\n            extensions.root = JSON.parse(rootExtensionsStr);\n        }\n        return extensions;\n    }\n    /**\n     * Reset the scene.\n     *\n     * This method deletes all used and allocated objects, and components.\n     */\n    reset() {\n        _wl_scene_reset();\n    }\n}\n/**\n * Native component\n *\n * Provides access to a native component instance of a specified component type.\n *\n * Usage example:\n *\n * ```js\n * import { Component, Type } from '@wonderlandengine/api';\n *\n * class MyComponent extends Component {\n *     static TypeName = 'my-component';\n *     static Properties = {\n *         myBoolean: { type: Type.Boolean, default: false },\n *     };\n *     start() {}\n *     onActivate() {}\n *     onDeactivate() {}\n *     update(dt) {}\n * }\n * ```\n */\nexport class Component {\n    /**\n     * Create a new instance\n     *\n     * @param managerIndex Index of the manager.\n     * @param id WASM component instance index.\n     *\n     * @hidden\n     */\n    constructor(managerIndex = -1, id = -1) {\n        this._manager = managerIndex;\n        this._id = id;\n        this._object = null;\n        this._type = null;\n    }\n    /** The name of this component's type */\n    get type() {\n        return this._type || $Object._typeNameFor(this._manager);\n    }\n    /** The object this component is attached to. */\n    get object() {\n        if (!this._object) {\n            const objectId = _wl_component_get_object(this._manager, this._id);\n            this._object = _wrapObject(objectId);\n        }\n        return this._object;\n    }\n    /**\n     * Set whether this component is active.\n     *\n     * Activating/deactivating a component comes at a small cost of reordering\n     * components in the respective component manager. This function therefore\n     * is not a trivial assignment.\n     *\n     * Does nothing if the component is already activated/deactivated.\n     *\n     * @param active New active state.\n     */\n    set active(active) {\n        _wl_component_setActive(this._manager, this._id, active);\n    }\n    /**\n     * Whether this component is active\n     */\n    get active() {\n        return _wl_component_isActive(this._manager, this._id) != 0;\n    }\n    /**\n     * Remove this component from its objects and destroy it.\n     *\n     * It is best practice to set the component to `null` after,\n     * to ensure it does not get used later.\n     *\n     * ```js\n     *    c.destroy();\n     *    c = null;\n     * ```\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_component_remove(this._manager, this._id);\n        /* @todo: shouldn't be set to undefined. */\n        // @ts-ignore\n        this._manager = undefined;\n        // @ts-ignore\n        this._id = undefined;\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherComponent Component to check equality with.\n     * @returns Whether this component equals the given component.\n     */\n    equals(otherComponent) {\n        if (!otherComponent)\n            return false;\n        return this._manager == otherComponent._manager && this._id == otherComponent._id;\n    }\n}\n/**\n * Native collision component.\n *\n * Provides access to a native collision component instance.\n */\nexport class CollisionComponent extends Component {\n    /** Collision component collider */\n    get collider() {\n        return _wl_collision_component_get_collider(this._id);\n    }\n    /**\n     * Set collision component collider.\n     *\n     * @param collider Collider of the collision component.\n     */\n    set collider(collider) {\n        _wl_collision_component_set_collider(this._id, collider);\n    }\n    /**\n     * Collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the returned vector is used.\n     */\n    get extents() {\n        return new Float32Array(HEAPF32.buffer, _wl_collision_component_get_extents(this._id), 3);\n    }\n    /**\n     * Set collision component extents.\n     *\n     * If {@link collider} returns {@link Collider.Sphere}, only the first\n     * component of the passed vector is used.\n     *\n     * Example:\n     *\n     * ```js\n     * // Spans 1 unit on the x-axis, 2 on the y-axis, 3 on the z-axis.\n     * collision.extent = [1, 2, 3];\n     * ```\n     *\n     * @param extents Extents of the collision component, expects a\n     *      3 component array.\n     */\n    set extents(extents) {\n        this.extents.set(extents);\n    }\n    /**\n     * Collision component group.\n     *\n     * The groups is a bitmask that is compared to other components in {@link CollisionComponent#queryOverlaps}\n     * or the group in {@link Scene#rayCast}.\n     *\n     * Colliders that have no common groups will not overlap with each other. If a collider\n     * has none of the groups set for {@link Scene#rayCast}, the ray will not hit it.\n     *\n     * Each bit represents belonging to a group, see example.\n     *\n     * ```js\n     *    // c belongs to group 2\n     *    c.group = (1 << 2);\n     *\n     *    // c belongs to group 0\n     *    c.group = (1 << 0);\n     *\n     *    // c belongs to group 0 *and* 2\n     *    c.group = (1 << 0) | (1 << 2);\n     *\n     *    (c.group & (1 << 2)) != 0; // true\n     *    (c.group & (1 << 7)) != 0; // false\n     * ```\n     */\n    get group() {\n        return _wl_collision_component_get_group(this._id);\n    }\n    /**\n     * Set collision component group.\n     *\n     * @param group Group mask of the collision component.\n     */\n    set group(group) {\n        _wl_collision_component_set_group(this._id, group);\n    }\n    /**\n     * Query overlapping objects.\n     *\n     * Usage:\n     *\n     * ```js\n     * const collision = object.getComponent('collision');\n     * const overlaps = collision.queryOverlaps();\n     * for(const otherCollision of overlaps) {\n     *     const otherObject = otherCollision.object;\n     *     console.log(`Collision with object ${otherObject.objectId}`);\n     * }\n     * ```\n     *\n     * @returns Collision components overlapping this collider.\n     */\n    queryOverlaps() {\n        const count = _wl_collision_component_query_overlaps(this._id, _tempMem, _tempMemSize >> 1);\n        let overlaps = new Array(count);\n        for (let i = 0; i < count; ++i) {\n            overlaps[i] = new CollisionComponent(this._manager, _tempMemUint16[i]);\n        }\n        return overlaps;\n    }\n}\n/**\n * Native text component\n *\n * Provides access to a native text component instance\n */\nexport class TextComponent extends Component {\n    /** Text component alignment. */\n    get alignment() {\n        return _wl_text_component_get_horizontal_alignment(this._id);\n    }\n    /**\n     * Set text component alignment.\n     *\n     * @param alignment Alignment for the text component.\n     */\n    set alignment(alignment) {\n        _wl_text_component_set_horizontal_alignment(this._id, alignment);\n    }\n    /** Text component justification. */\n    get justification() {\n        return _wl_text_component_get_vertical_alignment(this._id);\n    }\n    /**\n     * Set text component justification.\n     *\n     * @param justification Justification for the text component.\n     */\n    set justification(justification) {\n        _wl_text_component_set_vertical_alignment(this._id, justification);\n    }\n    /** Text component character spacing. */\n    get characterSpacing() {\n        return _wl_text_component_get_character_spacing(this._id);\n    }\n    /**\n     * Set text component character spacing.\n     *\n     * @param spacing Character spacing for the text component.\n     */\n    set characterSpacing(spacing) {\n        _wl_text_component_set_character_spacing(this._id, spacing);\n    }\n    /** Text component line spacing. */\n    get lineSpacing() {\n        return _wl_text_component_get_line_spacing(this._id);\n    }\n    /**\n     * Set text component line spacing\n     *\n     * @param spacing Line spacing for the text component\n     */\n    set lineSpacing(spacing) {\n        _wl_text_component_set_line_spacing(this._id, spacing);\n    }\n    /** Text component effect. */\n    get effect() {\n        return _wl_text_component_get_effect(this._id);\n    }\n    /**\n     * Set text component effect\n     *\n     * @param effect Effect for the text component\n     */\n    set effect(effect) {\n        _wl_text_component_set_effect(this._id, effect);\n    }\n    /** Text component text. */\n    get text() {\n        return UTF8ToString(_wl_text_component_get_text(this._id));\n    }\n    /**\n     * Set text component text.\n     *\n     * @param text Text of the text component.\n     */\n    set text(text) {\n        const strLen = lengthBytesUTF8(text) + 1;\n        const ptr = _malloc(strLen);\n        stringToUTF8(text, ptr, strLen);\n        _wl_text_component_set_text(this._id, ptr);\n        _free(ptr);\n    }\n    /**\n     * Set material to render the text with.\n     *\n     * @param material New material.\n     */\n    set material(material) {\n        const matIndex = material ? material._index : 0;\n        _wl_text_component_set_material(this._id, matIndex);\n    }\n    /** Material used to render the text. */\n    get material() {\n        const id = _wl_text_component_get_material(this._id);\n        return id > 0 ? new Material(id) : null;\n    }\n}\n/**\n * Native view component.\n *\n * Provides access to a native view component instance.\n */\nexport class ViewComponent extends Component {\n    /** Projection matrix. */\n    get projectionMatrix() {\n        return new Float32Array(HEAPF32.buffer, _wl_view_component_get_projection_matrix(this._id), 16);\n    }\n    /** ViewComponent near clipping plane value. */\n    get near() {\n        return _wl_view_component_get_near(this._id);\n    }\n    /**\n     * Set near clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param near Near depth value.\n     */\n    set near(near) {\n        _wl_view_component_set_near(this._id, near);\n    }\n    /** Far clipping plane value. */\n    get far() {\n        return _wl_view_component_get_far(this._id);\n    }\n    /**\n     * Set far clipping plane distance for the view.\n     *\n     * If an XR session is active, the change will apply in the\n     * following frame, otherwise the change is immediate.\n     *\n     * @param far Near depth value.\n     */\n    set far(far) {\n        _wl_view_component_set_far(this._id, far);\n    }\n    /**\n     * Get the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, this returns the field of view reported by\n     * the device, regardless of the fov that was set.\n     */\n    get fov() {\n        return _wl_view_component_get_fov(this._id);\n    }\n    /**\n     * Set the horizontal field of view for the view, **in degrees**.\n     *\n     * If an XR session is active, the field of view reported by the device is\n     * used and this value is ignored. After the XR session ends, the new value\n     * is applied.\n     *\n     * @param fov Horizontal field of view, **in degrees**.\n     */\n    set fov(fov) {\n        _wl_view_component_set_fov(this._id, fov);\n    }\n}\n/**\n * Native input component.\n *\n * Provides access to a native input component instance.\n */\nexport class InputComponent extends Component {\n    /** Input component type */\n    get inputType() {\n        return _wl_input_component_get_type(this._id);\n    }\n    /**\n     * Set input component type.\n     *\n     * @params New input component type.\n     */\n    set inputType(type) {\n        _wl_input_component_set_type(this._id, type);\n    }\n    /**\n     * WebXR Device API input source associated with this input component,\n     * if type {@link InputType.ControllerLeft} or {@link InputType.ControllerRight}.\n     */\n    get xrInputSource() {\n        if (xrSession) {\n            for (let inputSource of xrSession.inputSources) {\n                if (inputSource.handedness == this.handedness) {\n                    return inputSource;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * 'left', 'right' or {@link null} depending on the {@link InputComponent#inputType}.\n     */\n    get handedness() {\n        const inputType = this.inputType;\n        if (inputType == InputType.ControllerRight ||\n            inputType == InputType.RayRight ||\n            inputType == InputType.EyeRight)\n            return 'right';\n        if (inputType == InputType.ControllerLeft ||\n            inputType == InputType.RayLeft ||\n            inputType == InputType.EyeLeft)\n            return 'left';\n        return null;\n    }\n}\n/**\n * Native light component.\n *\n * Provides access to a native light component instance.\n */\nexport class LightComponent extends Component {\n    /** View on the light color */\n    get color() {\n        return new Float32Array(HEAPF32.buffer, _wl_light_component_get_color(this._id), 4);\n    }\n    /** Light type. */\n    get lightType() {\n        return _wl_light_component_get_type(this._id);\n    }\n    /**\n     * Set light type.\n     *\n     * @param lightType Type of the light component.\n     */\n    set lightType(t) {\n        _wl_light_component_set_type(this._id, t);\n    }\n}\n/**\n * Native animation component.\n *\n * Provides access to a native animation component instance.\n */\nexport class AnimationComponent extends Component {\n    /**\n     * Set animation to play.\n     *\n     * Make sure to {@link Animation#retarget} the animation to affect the\n     * right objects.\n     *\n     * @param anim Animation to play.\n     */\n    set animation(anim) {\n        _wl_animation_component_set_animation(this._id, anim._index);\n    }\n    /** Animation set for this component */\n    get animation() {\n        return new Animation(_wl_animation_component_get_animation(this._id));\n    }\n    /**\n     * Set play count. Set to `0` to loop indefinitely.\n     *\n     * @param playCount Number of times to repeat the animation.\n     */\n    set playCount(playCount) {\n        _wl_animation_component_set_playCount(this._id, playCount);\n    }\n    /** Number of times the animation is played. */\n    get playCount() {\n        return _wl_animation_component_get_playCount(this._id);\n    }\n    /**\n     * Set speed. Set to negative values to run the animation backwards.\n     *\n     * Setting speed has an immediate effect for the current frame's update\n     * and will continue with the speed from the current point in the animation.\n     *\n     * @param speed New speed at which to play the animation.\n     * @since 0.8.10\n     */\n    set speed(speed) {\n        _wl_animation_component_set_speed(this._id, speed);\n    }\n    /**\n     * Speed factor at which the animation is played.\n     *\n     * @since 0.8.10\n     */\n    get speed() {\n        return _wl_animation_component_get_speed(this._id);\n    }\n    /** Current playing state of the animation */\n    get state() {\n        return _wl_animation_component_state(this._id);\n    }\n    /** Play animation. */\n    play() {\n        _wl_animation_component_play(this._id);\n    }\n    /** Stop animation. */\n    stop() {\n        _wl_animation_component_stop(this._id);\n    }\n    /** Pause animation. */\n    pause() {\n        _wl_animation_component_pause(this._id);\n    }\n}\n/**\n * Native mesh component.\n *\n * Provides access to a native mesh component instance.\n */\nexport class MeshComponent extends Component {\n    /**\n     * Set material to render the mesh with.\n     *\n     * @param material Material to render the mesh with.\n     */\n    set material(material) {\n        _wl_mesh_component_set_material(this._id, material ? material._index : 0);\n    }\n    /** Material used to render the mesh. */\n    get material() {\n        const id = _wl_mesh_component_get_material(this._id);\n        return id > 0 ? new Material(id) : null;\n    }\n    /** Mesh rendered by this component. */\n    get mesh() {\n        return new Mesh(_wl_mesh_component_get_mesh(this._id));\n    }\n    /**\n     * Set mesh to rendered with this component.\n     *\n     * @param mesh Mesh rendered by this component.\n     */\n    set mesh(mesh) {\n        _wl_mesh_component_set_mesh(this._id, mesh ? mesh._index : 0);\n    }\n    /** Skin for this mesh component. */\n    get skin() {\n        return new Skin(_wl_mesh_component_get_skin(this._id));\n    }\n    /**\n     * Set skin to transform this mesh component.\n     *\n     * @param {?Skin} skin Skin to use for rendering skinned meshes.\n     */\n    set skin(skin) {\n        _wl_mesh_component_set_skin(this._id, skin._index);\n    }\n}\n/**\n * Native physx rigid body component.\n *\n * Provides access to a native mesh component instance.\n * Only available when using physx enabled runtime, see \"Project Settings > Runtime\".\n */\nclass PhysXComponent extends Component {\n    /**\n     * Set whether this rigid body is static.\n     *\n     * Setting this property only takes effect once the component\n     * switches from inactive to active.\n     *\n     * @param b Whether the rigid body should be static.\n     */\n    set static(b) {\n        _wl_physx_component_set_static(this._id, b);\n    }\n    /**\n     * Whether this rigid body is static.\n     *\n     * This property returns whether the rigid body is *effectively*\n     * static. If static property was set while the rigid body was\n     * active, it will not take effect until the rigid body is set\n     * inactive and active again. Until the component is set inactive,\n     * this getter will return whether the rigidbody is actually\n     * static.\n     */\n    get static() {\n        return !!_wl_physx_component_get_static(this._id);\n    }\n    /**\n     * Set whether this rigid body is kinematic.\n     *\n     * @param b Whether the rigid body should be kinematic.\n     */\n    set kinematic(b) {\n        _wl_physx_component_set_kinematic(this._id, b);\n    }\n    /**\n     * Whether this rigid body is kinematic.\n     */\n    get kinematic() {\n        return !!_wl_physx_component_get_kinematic(this._id);\n    }\n    /**\n     * Set the shape for collision detection.\n     *\n     * @param s New shape.\n     * @since 0.8.5\n     */\n    set shape(s) {\n        _wl_physx_component_set_shape(this._id, s);\n    }\n    /** The shape for collision detection. */\n    get shape() {\n        return _wl_physx_component_get_shape(this._id);\n    }\n    /**\n     * Set additional data for the shape.\n     *\n     * Retrieved only from {@link PhysXComponent#shapeData}.\n     * @since 0.8.10\n     */\n    set shapeData(d) {\n        /* @todo: The array includes is useless and slow. */\n        if (d == null || ![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return;\n        _wl_physx_component_set_shape_data(this._id, d.index);\n    }\n    /**\n     * Additional data for the shape.\n     *\n     * `null` for {@link Shape} values: `None`, `Sphere`, `Capsule`, `Box`, `Plane`.\n     * `{index: n}` for `TriangleMesh` and `ConvexHull`.\n     *\n     * This data is currently only for passing onto or creating other {@link PhysXComponent}.\n     * @since 0.8.10\n     */\n    get shapeData() {\n        if (![Shape.TriangleMesh, Shape.ConvexMesh].includes(this.shape))\n            return null;\n        return { index: _wl_physx_component_get_shape_data(this._id) };\n    }\n    /**\n     * Set the shape extents for collision detection.\n     *\n     * @param e New extents for the shape.\n     * @since 0.8.5\n     */\n    set extents(e) {\n        this.extents.set(e);\n    }\n    /**\n     * The shape extents for collision detection.\n     */\n    get extents() {\n        const ptr = _wl_physx_component_get_extents(this._id);\n        return new Float32Array(HEAPF32.buffer, ptr, 3);\n    }\n    /**\n     * Get staticFriction.\n     */\n    get staticFriction() {\n        return _wl_physx_component_get_staticFriction(this._id);\n    }\n    /**\n     * Set staticFriction.\n     * @param v New staticFriction.\n     */\n    set staticFriction(v) {\n        _wl_physx_component_set_staticFriction(this._id, v);\n    }\n    /**\n     * Get dynamicFriction.\n     */\n    get dynamicFriction() {\n        return _wl_physx_component_get_dynamicFriction(this._id);\n    }\n    /**\n     * Set dynamicFriction\n     * @param v New dynamicDamping.\n     */\n    set dynamicFriction(v) {\n        _wl_physx_component_set_dynamicFriction(this._id, v);\n    }\n    /**\n     * Get bounciness.\n     * @since 0.9.0\n     */\n    get bounciness() {\n        return _wl_physx_component_get_bounciness(this._id);\n    }\n    /**\n     * Set bounciness.\n     * @param v New bounciness.\n     * @since 0.9.0\n     */\n    set bounciness(v) {\n        _wl_physx_component_set_bounciness(this._id, v);\n    }\n    /**\n     * Get linearDamping/\n     */\n    get linearDamping() {\n        return _wl_physx_component_get_linearDamping(this._id);\n    }\n    /**\n     * Set linearDamping.\n     * @param v New linearDamping.\n     */\n    set linearDamping(v) {\n        _wl_physx_component_set_linearDamping(this._id, v);\n    }\n    /** Get angularDamping. */\n    get angularDamping() {\n        return _wl_physx_component_get_angularDamping(this._id);\n    }\n    /**\n     * Set angularDamping.\n     * @param v New angularDamping.\n     */\n    set angularDamping(v) {\n        _wl_physx_component_set_angularDamping(this._id, v);\n    }\n    /**\n     * Set linear velocity.\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New linear velocity.\n     */\n    set linearVelocity(v) {\n        _wl_physx_component_set_linearVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Linear velocity or `[0, 0, 0]` if the component is not active. */\n    get linearVelocity() {\n        _wl_physx_component_get_linearVelocity(this._id, _tempMem);\n        return new Float32Array(HEAPF32.buffer, _tempMem, 3);\n    }\n    /**\n     * Set angular velocity\n     *\n     * [PhysX Manual - \"Velocity\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#velocity)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New angular velocity\n     */\n    set angularVelocity(v) {\n        _wl_physx_component_set_angularVelocity(this._id, v[0], v[1], v[2]);\n    }\n    /** Angular velocity or `[0, 0, 0]` if the component is not active. */\n    get angularVelocity() {\n        _wl_physx_component_get_angularVelocity(this._id, _tempMem);\n        return new Float32Array(HEAPF32.buffer, _tempMem, 3);\n    }\n    /**\n     * Set mass.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * @param m New mass.\n     */\n    set mass(m) {\n        _wl_physx_component_set_mass(this._id, m);\n    }\n    /** Mass */\n    get mass() {\n        return _wl_physx_component_get_mass(this._id);\n    }\n    /**\n     * Set mass space interia tensor.\n     *\n     * [PhysX Manual - \"Mass Properties\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#mass-properties)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param v New mass space interatia tensor.\n     */\n    set massSpaceInteriaTensor(v) {\n        _wl_physx_component_set_massSpaceInertiaTensor(this._id, v[0], v[1], v[2]);\n    }\n    /**\n     * Apply a force.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     * @param localForce Whether the force vector is in local space, default `false`.\n     * @param p Position to apply force at, default is center of mass.\n     * @param local Whether position is in local space, default `false`.\n     */\n    addForce(f, m, localForce, p, local) {\n        /* @todo: `localForce` should be a boolean`. */\n        m = m || ForceMode.Force;\n        if (!p) {\n            _wl_physx_component_addForce(this._id, f[0], f[1], f[2], m, !!localForce);\n        }\n        else {\n            _wl_physx_component_addForceAt(this._id, f[0], f[1], f[2], m, !!localForce, p[0], p[1], p[2], !!local);\n        }\n    }\n    /**\n     * Apply torque.\n     *\n     * [PhysX Manual - \"Applying Forces and Torques\"](https://gameworksdocs.nvidia.com/PhysX/4.1/documentation/physxguide/Manual/RigidBodyDynamics.html#applying-forces-and-torques)\n     *\n     * Has no effect, if the component is not active.\n     *\n     * @param f Force vector.\n     * @param m Force mode, see {@link ForceMode}, default `Force`.\n     */\n    addTorque(f, m = ForceMode.Force) {\n        _wl_physx_component_addTorque(this._id, f[0], f[1], f[2], m);\n    }\n    /**\n     * Add on collision callback.\n     *\n     * @param callback Function to call when this rigid body (un)collides with any other.\n     *\n     * ```js\n     *  let rigidBody = this.object.getComponent('physx');\n     *  rigidBody.onCollision(function(type, other) {\n     *      // Ignore uncollides\n     *      if(type == CollisionEventType.TouchLost) return;\n     *\n     *      // Take damage on collision with enemies\n     *      if(other.object.name.startsWith('enemy-')) {\n     *          this.applyDamage(10);\n     *      }\n     *  }.bind(this));\n     * ```\n     *\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollision(callback) {\n        return this.onCollisionWith(this, callback);\n    }\n    /**\n     * Add filtered on collision callback.\n     *\n     * @param otherComp Component for which callbacks will\n     *        be triggered. If you pass this component, the method is equivalent to.\n     *        {@link PhysXComponent#onCollision}.\n     * @param callback Function to call when this rigid body\n     *        (un)collides with `otherComp`.\n     * @returns Id of the new callback for use with {@link PhysXComponent#removeCollisionCallback}.\n     */\n    onCollisionWith(otherComp, callback) {\n        physics._callbacks[this._id] = physics._callbacks[this._id] || [];\n        physics._callbacks[this._id].push(callback);\n        return _wl_physx_component_addCallback(this._id, otherComp._id || this._id);\n    }\n    /**\n     * Remove a collision callback added with {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     *\n     * @param callbackId Callback id as returned by {@link PhysXComponent#onCollision} or {@link PhysXComponent#onCollisionWith}.\n     * @throws When the callback does not belong to the component.\n     * @throws When the callback does not exist.\n     */\n    removeCollisionCallback(callbackId) {\n        const r = _wl_physx_component_removeCallback(this._id, callbackId);\n        /* r is the amount of object to remove from the end of the\n         * callbacks array for this object */\n        if (r)\n            physics._callbacks[this._id].splice(-r);\n    }\n}\n/** @todo: Remove as this might break tree-shaking. Instead, would be better\n * to extend the `toJSON` method to serialize / unserialize. */\nfor (const prop of [\n    'static',\n    'extents',\n    'staticFriction',\n    'dynamicFriction',\n    'bounciness',\n    'linearDamping',\n    'angularDamping',\n    'shape',\n    'shapeData',\n    'kinematic',\n    'linearVelocity',\n    'angularVelocity',\n    'mass',\n]) {\n    Object.defineProperty(PhysXComponent.prototype, prop, { enumerable: true });\n}\nexport { PhysXComponent };\n/**\n * Access to the physics scene\n */\nexport class Physics {\n    constructor() {\n        this._rayHit = _malloc(4 * (3 * 4 + 3 * 4 + 4 + 2) + 4);\n        this._hit = new RayHit(this._rayHit);\n        this._callbacks = {};\n    }\n    /**\n     * Cast a ray through the physics scene and find intersecting objects.\n     *\n     * The resulting ray hit will contain **up to 4** closest ray hits,\n     * sorted by increasing distance.\n     *\n     * @param o Ray origin.\n     * @param d Ray direction.\n     * @param group Collision group to filter by: only objects that are\n     *        part of given group are considered for raycast.\n     * @param maxDistance Maximum ray distance, default `100.0`.\n     *\n     * @returns The RayHit instance, belonging to this class.\n     *\n     * @note The returned {@link RayHit} object is owned by the Physics instance and\n     *       will be reused with the next {@link Physics#rayCast} call.\n     */\n    rayCast(o, d, group, maxDistance) {\n        if (typeof maxDistance === 'undefined')\n            maxDistance = 100.0;\n        _wl_physx_ray_cast(o[0], o[1], o[2], d[0], d[1], d[2], group, maxDistance || 100, this._rayHit);\n        return this._hit;\n    }\n    /**\n     * Triggered by the WASM runtime.\n     *\n     * @hidden\n     */\n    _callCollisionCallback(a, index, type, b) {\n        physics._callbacks[a][index](type, new PhysXComponent($Object._typeIndexFor('physx'), b));\n    }\n}\n/**\n * Mesh index type.\n */\nexport var MeshIndexType;\n(function (MeshIndexType) {\n    /** Single byte mesh index, range 0-255 */\n    MeshIndexType[MeshIndexType[\"UnsignedByte\"] = 1] = \"UnsignedByte\";\n    /** Two byte mesh index, range 0-65535 */\n    MeshIndexType[MeshIndexType[\"UnsignedShort\"] = 2] = \"UnsignedShort\";\n    /** Four byte mesh index, range 0-4294967295 */\n    MeshIndexType[MeshIndexType[\"UnsignedInt\"] = 4] = \"UnsignedInt\";\n})(MeshIndexType || (MeshIndexType = {}));\n/**\n * Wrapper around a native mesh data.\n *\n * To modify a mesh, you get access to a {@link MeshAttributeAccessor} that allows you to modify\n * the content of the buffers:\n *\n * Usage:\n *\n * ```js\n * const mesh = new Mesh({vertexCount: 3, indexData: [0, 1, 2] });\n * const positions = mesh.attribute(MeshAttribute.Position);\n * ...\n * ```\n */\nexport class Mesh {\n    /**\n     * Size of a vertex in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_FLOAT_SIZE() {\n        return 3 + 3 + 2;\n    }\n    /**\n     * Size of a vertex in bytes.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttributeAccessor}\n     */\n    static get VERTEX_SIZE() {\n        return this.VERTEX_FLOAT_SIZE * 4;\n    }\n    /**\n     * Position attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Position}\n     */\n    static get POS() {\n        return { X: 0, Y: 1, Z: 2 };\n    }\n    /**\n     * Texture coordinate attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#TextureCoordinate}\n     */\n    static get TEXCOORD() {\n        return { U: 3, V: 4 };\n    }\n    /**\n     * Normal attribute offsets in float elements.\n     * @deprecated Replaced with {@link Mesh#attribute} and {@link MeshAttribute#Normal}\n     */\n    static get NORMAL() {\n        return { X: 5, Y: 6, Z: 7 };\n    }\n    /**\n     * Create a new instance.\n     *\n     * @param params Either a mesh index to wrap or set of parameters to create a new mesh.\n     *    For more information, please have a look at the {@link MeshParameters} interface.\n     */\n    constructor(params) {\n        if (typeof params === 'object') {\n            if (!params.vertexCount && params.vertexData) {\n                params.vertexCount = params.vertexData.length / Mesh.VERTEX_FLOAT_SIZE;\n            }\n            if (!params.vertexCount)\n                throw new Error(\"Missing parameter 'vertexCount'\");\n            let indexData = 0;\n            let indexType = 0;\n            let indexDataSize = 0;\n            if (params.indexData) {\n                indexType = params.indexType || MeshIndexType.UnsignedShort;\n                indexDataSize = params.indexData.length * indexType;\n                indexData = _malloc(indexDataSize);\n                /* Copy the index data into wasm memory */\n                switch (indexType) {\n                    case MeshIndexType.UnsignedByte:\n                        HEAPU8.set(params.indexData, indexData);\n                        break;\n                    case MeshIndexType.UnsignedShort:\n                        HEAPU16.set(params.indexData, indexData >> 1);\n                        break;\n                    case MeshIndexType.UnsignedInt:\n                        HEAPU32.set(params.indexData, indexData >> 2);\n                        break;\n                }\n            }\n            const { skinned = false } = params;\n            this._index = _wl_mesh_create(indexData, indexDataSize, indexType, params.vertexCount, skinned);\n            if (params.vertexData) {\n                const positions = this.attribute(MeshAttribute.Position);\n                const normals = this.attribute(MeshAttribute.Normal);\n                const textureCoordinates = this.attribute(MeshAttribute.TextureCoordinate);\n                for (let i = 0; i < params.vertexCount; ++i) {\n                    const start = i * Mesh.VERTEX_FLOAT_SIZE;\n                    positions.set(i, params.vertexData.subarray(start, start + 3));\n                    textureCoordinates === null || textureCoordinates === void 0 ? void 0 : textureCoordinates.set(i, params.vertexData.subarray(start + 3, start + 5));\n                    normals === null || normals === void 0 ? void 0 : normals.set(i, params.vertexData.subarray(start + 5, start + 8));\n                }\n            }\n        }\n        else {\n            this._index = params;\n        }\n    }\n    /**\n     * Vertex data (read-only).\n     *\n     * @deprecated Replaced with {@link attribute}\n     */\n    get vertexData() {\n        const ptr = _wl_mesh_get_vertexData(this._index, _tempMem);\n        return new Float32Array(HEAPF32.buffer, ptr, Mesh.VERTEX_FLOAT_SIZE * HEAPU32[_tempMem / 4]);\n    }\n    /** Number of vertices in this mesh. */\n    get vertexCount() {\n        return _wl_mesh_get_vertexCount(this._index);\n    }\n    /** Index data (read-only) or {@link null} if the mesh is not indexed. */\n    get indexData() {\n        const ptr = _wl_mesh_get_indexData(this._index, _tempMem, _tempMem + 4);\n        if (ptr === null)\n            return null;\n        const indexCount = HEAPU32[_tempMem / 4];\n        const indexSize = HEAPU32[_tempMem / 4 + 1];\n        switch (indexSize) {\n            case MeshIndexType.UnsignedByte:\n                return new Uint8Array(HEAPU8.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedShort:\n                return new Uint16Array(HEAPU16.buffer, ptr, indexCount);\n            case MeshIndexType.UnsignedInt:\n                return new Uint32Array(HEAPU32.buffer, ptr, indexCount);\n        }\n        return null;\n    }\n    /** Updates the bounding sphere to match new vertex positions. */\n    update() {\n        _wl_mesh_update(this._index);\n    }\n    /**\n     * Mesh bounding sphere.\n     *\n     * @param out Preallocated array to write into, to avoid garbage,\n     *     otherwise will allocate a new {@link Float32Array}.\n     *\n     * ```js\n     *  const sphere = new Float32Array(4);\n     *  for(...) {\n     *      mesh.getBoundingSphere(sphere);\n     *      ...\n     *  }\n     * ```\n     *\n     * If the position data is changed, call {@link Mesh#update} to update the\n     * bounding sphere.\n     *\n     * @returns Bounding sphere, 0-2 sphere origin, 3 radius.\n     */\n    getBoundingSphere(out = new Float32Array(4)) {\n        _wl_mesh_get_boundingSphere(this._index, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        return out;\n    }\n    /**\n     * Get an attribute accessor to retrieve or modify data of give attribute.\n     *\n     * @param attr Attribute to get access to\n     * @returns {?MeshAttributeAccessor} attr Attribute to get access to or `null`,\n     *      if mesh does not have this attribute.\n     *\n     * If there are no shaders in the scene that use `TextureCoordinate` for example,\n     * no meshes will have the `TextureCoordinate` attribute.\n     *\n     * For flexible reusable components, take this into account that only `Position`\n     * is guaranteed to be present at all time.\n     */\n    attribute(attr) {\n        if (typeof attr != 'number')\n            throw new TypeError('Expected number, but got ' + typeof attr);\n        _wl_mesh_get_attribute(this._index, attr, _tempMem);\n        if (_tempMemUint32[0] == 255)\n            return null;\n        const a = new MeshAttributeAccessor(attr);\n        a._attribute = _tempMemUint32[0];\n        a._offset = _tempMemUint32[1];\n        a._stride = _tempMemUint32[2];\n        a._formatSize = _tempMemUint32[3];\n        a._componentCount = _tempMemUint32[4];\n        a.length = this.vertexCount;\n        return a;\n    }\n    /**\n     * Destroy and free the meshes memory.\n     *\n     * It is best practice to set the mesh variable to `null` after calling\n     * destroy to prevent accidental use:\n     *\n     * ```js\n     *   mesh.destroy();\n     *   mesh = null;\n     * ```\n     *\n     * Accessing the mesh after destruction behaves like accessing an empty\n     * mesh.\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_mesh_destroy(this._index);\n    }\n}\n/**\n * An iterator over a mesh vertex attribute.\n *\n * Usage:\n *\n * ```js\n *   const mesh = this.object.getComponent('mesh').mesh;\n *   const positions = mesh.attribute(WL.MeshAttribute.Position);\n *\n *   const temp = new Float32Array(3);\n *   for(int i = 0; i < positions.length; ++i) {\n *       // pos will reference temp and thereby not allocate additional\n *       // JavaScript garbage, which would cause a perf spike when collected.\n *       const pos = positions.get(i, temp);\n *       // scale position by 2 on X axis only\n *       pos[0] *= 2.0f;\n *       positions.set(i, pos);\n *   }\n * ```\n */\nexport class MeshAttributeAccessor {\n    /**\n     * Create a new instance.\n     *\n     * @param type The type of data this accessor is wrapping.\n     * @note Do not use this constructor. Instead, please use the {@link Mesh.attribute} method.\n     *\n     * @hidden\n     */\n    constructor(type = MeshAttribute.Position) {\n        /** Attribute index. @hidden */\n        this._attribute = -1;\n        /** Attribute offset. @hidden */\n        this._offset = 0;\n        /** Attribute stride. @hidden */\n        this._stride = 0;\n        /** Format size native enum. @hidden */\n        this._formatSize = 0;\n        /** Number of components per vertex. @hidden */\n        this._componentCount = 0;\n        /** Max number of elements. */\n        this.length = 0;\n        switch (type) {\n            case MeshAttribute.Position:\n            case MeshAttribute.Normal:\n            case MeshAttribute.TextureCoordinate:\n            case MeshAttribute.Tangent:\n            case MeshAttribute.Color:\n            case MeshAttribute.JointWeight:\n            case MeshAttribute.SecondaryJointWeight:\n                this._bufferType = Float32Array;\n                this._tempBufferGetter = getTempBufferF32;\n                break;\n            case MeshAttribute.JointId:\n            case MeshAttribute.SecondaryJointId:\n                this._bufferType = Uint16Array;\n                this._tempBufferGetter = getTempBufferU16;\n                break;\n            default:\n                throw new Error(`Invalid attribute accessor type: ${type}`);\n        }\n    }\n    /**\n     * Create a new TypedArray to hold this attribute values.\n     *\n     * This method is useful to create a view to hold the data to\n     * pass to {@link MeshAttributeAccessor.get} and {@link MeshAttributeAccessor.set}\n     *\n     * Example:\n     *\n     * ```js\n     * const vertexCount = 4;\n     * const positionAttribute = mesh.attribute(MeshAttributes.Position);\n     *\n     * // A position has 3 floats per vertex. Thus, positions has length 3 * 4.\n     * const positions = positionAttribute.createArray(vertexCount);\n     * ```\n     *\n     * @param count The number of **vertices** expected.\n     * @returns A TypedArray with the appropriate format to access the data\n     */\n    createArray(count = 1) {\n        count = count > this.length ? this.length : count;\n        return new this._bufferType(count * this._componentCount);\n    }\n    /**\n     * Get attribute element.\n     *\n     * @param {number} index Index\n     * @param out Preallocated array to write into,\n     *      to avoid garbage, otherwise will allocate a new TypedArray.\n     *\n     * `out.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `out.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns The `out` parameter\n     */\n    get(index, out = this.createArray()) {\n        if (out.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${out.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const dest = this._tempBufferGetter(out.length);\n        const bytesPerElt = this._bufferType.BYTES_PER_ELEMENT;\n        const bytes = bytesPerElt * out.length;\n        const destFormatSize = this._componentCount * bytesPerElt;\n        _wl_mesh_get_attribute_values(this._attribute, this._formatSize, this._offset + index * this._stride, this._stride, destFormatSize, dest.byteOffset, bytes);\n        for (let i = 0; i < out.length; ++i)\n            out[i] = dest[i];\n        return out;\n    }\n    /**\n     * Set attribute element.\n     *\n     * @param i Index\n     * @param v Value to set the element to\n     *\n     * `v.length` needs to be a multiple of the attributes component count, see\n     * {@link MeshAttribute}. If `v.length` is more than one multiple, it will be\n     * filled with the next n attribute elements, which can reduce overhead\n     * of this call.\n     *\n     * @returns Reference to self (for method chaining)\n     */\n    set(i, v) {\n        if (v.length % this._componentCount !== 0)\n            throw new Error(`out.length, ${v.length} is not a multiple of the attribute vector components, ${this._componentCount}`);\n        const bytesPerElt = this._bufferType.BYTES_PER_ELEMENT;\n        const bytes = bytesPerElt * v.length;\n        const srcFormatSize = this._componentCount * bytesPerElt;\n        /* Unless we are already working with data from WASM heap, we\n         * need to copy into temporary memory. */\n        if (v.buffer != HEAPU8.buffer) {\n            const dest = this._tempBufferGetter(v.length);\n            dest.set(v);\n            v = dest;\n        }\n        _wl_mesh_set_attribute_values(this._attribute, srcFormatSize, v.byteOffset, bytes, this._formatSize, this._offset + i * this._stride, this._stride);\n        return this;\n    }\n}\n/**\n * Wrapper around a native material.\n *\n * Each material instance will have properties associated to the pipeline it uses.\n * The material properties are automatically added to each material instance, example:\n *\n * ```js\n * const material = mesh.material; // Material with a `Phong Opaque Textured` pipeline\n * // You can access all the material properties from the editor using:\n * material.diffuseTexture = null;\n * material.diffuseColor = [1.0, 0.0, 0.0, 1.0];\n * ```\n */\nexport class Material {\n    /**\n     * Create a new Material.\n     *\n     * @note Creating material is expensive. Please use {@link Material#clone} to clone a material.\n     * @note Do not use this constructor directly with an index, this is reserved for internal purposes.\n     */\n    constructor(params) {\n        if (typeof params !== 'number') {\n            if (!(params === null || params === void 0 ? void 0 : params.pipeline))\n                throw new Error(\"Missing parameter 'pipeline'\");\n            const pipeline = params.pipeline;\n            const lengthBytes = lengthBytesUTF8(pipeline) + 1;\n            stringToUTF8(pipeline, _tempMem, lengthBytes);\n            this._index = _wl_material_create(_tempMem);\n            if (this._index < 0)\n                throw new Error(`No such pipeline '${pipeline}'`);\n        }\n        else {\n            this._index = params;\n        }\n        this._definition = _wl_material_get_definition(this._index);\n        if (!_WL._materialDefinitions[this._definition])\n            throw new Error(`Material Definition ${this._definition} not found for material with index ${this._index}`);\n        return new Proxy(this, {\n            get(target, prop) {\n                const definition = _WL._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param)\n                    return target[prop];\n                if (_wl_material_get_param_value(target._index, param.index, _tempMem)) {\n                    const type = param.type;\n                    switch (type.type) {\n                        case MaterialParamType.UnsignedInt:\n                            return type.componentCount == 1\n                                ? _tempMemUint32[0]\n                                : new Uint32Array(HEAPU32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Int:\n                            return type.componentCount == 1\n                                ? _tempMemInt[0]\n                                : new Int32Array(HEAP32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Float:\n                            return type.componentCount == 1\n                                ? _tempMemFloat[0]\n                                : new Float32Array(HEAPF32.buffer, _tempMem, type.componentCount);\n                        case MaterialParamType.Sampler:\n                            return new Texture(_tempMemInt[0]);\n                        default:\n                            throw new Error(`Invalid type ${type} on parameter ${param.index} for material ${target._index}`);\n                    }\n                }\n            },\n            set(target, prop, value) {\n                const definition = _WL._materialDefinitions[target._definition];\n                const param = definition.get(prop);\n                if (!param) {\n                    target[prop] = value;\n                    return true;\n                }\n                const type = param.type;\n                switch (type.type) {\n                    case MaterialParamType.UnsignedInt:\n                    case MaterialParamType.Int:\n                    case MaterialParamType.Sampler:\n                        const v = value instanceof Texture ? value.id : value;\n                        _wl_material_set_param_value_uint(target._index, param.index, v);\n                        break;\n                    case MaterialParamType.Float:\n                        let count = 1;\n                        if (typeof value === 'number') {\n                            _tempMemFloat[0] = value;\n                        }\n                        else {\n                            count = value.length;\n                            for (let i = 0; i < count; ++i)\n                                _tempMemFloat[i] = value[i];\n                        }\n                        _wl_material_set_param_value_float(target._index, param.index, _tempMem, count);\n                        break;\n                    case MaterialParamType.Font:\n                        throw new Error('Setting font properties is currently unsupported.');\n                }\n                return true;\n            },\n        });\n    }\n    /** Name of the shader used by this material. */\n    get shader() {\n        return UTF8ToString(_wl_material_get_shader(this._index));\n    }\n    /**\n     * Create a copy of the underlying native material.\n     *\n     * @returns Material clone.\n     */\n    clone() {\n        const id = _wl_material_clone(this._index);\n        return id > 0 ? new Material(id) : null;\n    }\n    /**\n     * Wrap a native material index.\n     *\n     * @param index The index.\n     * @returns Material instance or {@link null} if index <= 0.\n     *\n     * @deprecated Please use `new Material()` instead.\n     */\n    static wrap(index) {\n        /** @todo: this propagate nullable in the entire codebase. Remove. */\n        return index > 0 ? new Material(index) : null;\n    }\n}\n/** Temporary canvas */\nlet tempCanvas = null;\n/**\n * Wrapper around a native texture data.\n */\nexport class Texture {\n    /**\n     * @param param HTML media element to create texture from or texture id to wrap.\n     */\n    constructor(param) {\n        /** Index in the manager. @hidden */\n        this._id = 0;\n        /** HTML image index. @hidden */\n        this._imageIndex = undefined; /* @todo: Remove undefined */\n        if (param instanceof HTMLImageElement ||\n            param instanceof HTMLVideoElement ||\n            param instanceof HTMLCanvasElement) {\n            const index = _images.length;\n            _images.push(param);\n            this._imageIndex = index;\n            this._id = _wl_renderer_addImage(index);\n        }\n        else {\n            this._id = param;\n        }\n        textures[this._id] = this;\n    }\n    /** Whether this texture is valid. */\n    get valid() {\n        return this._id >= 0;\n    }\n    /** Index in this manager. */\n    get id() {\n        return this._id;\n    }\n    /** Update the texture to match the HTML element (e.g. reflect the current frame of a video). */\n    update() {\n        if (!this.valid)\n            return;\n        _wl_renderer_updateImage(this._id, this._imageIndex);\n    }\n    /** Width of the texture. */\n    get width() {\n        return _wl_texture_width(this._id);\n    }\n    /** Height of the texture. */\n    get height() {\n        return _wl_texture_height(this._id);\n    }\n    /**\n     * Update a subrange on the texture to match the HTML element (e.g. reflect the current frame of a video).\n     *\n     * Usage:\n     *\n     * ```js\n     * // Copies rectangle of pixel starting from (10, 20)\n     * texture.updateSubImage(10, 20, 600, 400);\n     * ```\n     *\n     * @param x x offset\n     * @param y y offset\n     * @param w width\n     * @param h height\n     */\n    updateSubImage(x, y, w, h) {\n        var _a;\n        if (!this.valid)\n            return;\n        /* Lazy initialize temp canvas */\n        if (!tempCanvas)\n            tempCanvas = document.createElement('canvas');\n        const img = _images[this._imageIndex];\n        if (!img)\n            return;\n        tempCanvas.width = w;\n        tempCanvas.height = h;\n        /* @todo: Would be smarted to cache context. */\n        (_a = tempCanvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.drawImage(img, x, y, w, h, 0, 0, w, h);\n        /* @todo: Do not store temporary canvas. */\n        _images[this._imageIndex] = tempCanvas;\n        try {\n            _wl_renderer_updateImage(this._id, this._imageIndex, x, (img.videoHeight || img.height) - y - h);\n        }\n        finally {\n            _images[this._imageIndex] = img;\n        }\n    }\n    /**\n     * Destroy and free the texture's texture altas space and memory.\n     *\n     * It is best practice to set the texture variable to `null` after calling\n     * destroy to prevent accidental use of the invalid texture:\n     *\n     * ```js\n     *   texture.destroy();\n     *   texture = null;\n     * ```\n     *\n     * @since 0.9.0\n     */\n    destroy() {\n        _wl_texture_destroy(this._id);\n        if (this._imageIndex) {\n            _images[this._imageIndex] = null;\n            this._imageIndex = undefined;\n        }\n    }\n}\n/**\n * Access to the textures managed by Wonderland Engine.\n */\nconst textures = {\n    /**\n     * Load an image from URL as {@link Texture}\n     * @param {string} filename URL to load from\n     * @param {string} crossOrigin Cross origin flag for the {@link Image} object\n     * @returns {Promise<Texture>} Loaded texture\n     */\n    load: function (filename, crossOrigin) {\n        let image = new Image();\n        if (crossOrigin !== undefined) {\n            image.crossOrigin = crossOrigin;\n        }\n        image.src = filename;\n        return new Promise((resolve, reject) => {\n            image.onload = function () {\n                let texture = new Texture(image);\n                if (!texture.valid) {\n                    reject('Failed to add image ' +\n                        image.src +\n                        ' to texture atlas. Probably incompatible format.');\n                }\n                resolve(texture);\n            };\n        });\n    },\n};\n/**\n * Wrapper around a native animation.\n */\nexport class Animation {\n    /**\n     * @param index Index in the manager\n     */\n    constructor(index) {\n        this._index = index;\n    }\n    /** Duration of this animation. */\n    get duration() {\n        return _wl_animation_get_duration(this._index);\n    }\n    /** Number of tracks in this animation. */\n    get trackCount() {\n        return _wl_animation_get_trackCount(this._index);\n    }\n    /**\n     * Clone this animation retargeted to a new set of objects.\n     *\n     * The clone shares most of the data with the original and is therefore\n     * light-weight.\n     *\n     * **Experimental:** This API might change in upcoming versions.\n     *\n     * If retargetting to {@link Skin}, the join names will be used to determine a mapping\n     * from the previous skin to the new skin. The source skin will be retrieved from\n     * the first track in the animation that targets a joint.\n     *\n     * @param newTargets New targets per track. Expected to have\n     *      {@link Animation#trackCount} elements or to be a {@link Skin}.\n     * @returns The retargeted clone of this animation.\n     */\n    retarget(newTargets) {\n        if (newTargets instanceof Skin) {\n            const animId = _wl_animation_retargetToSkin(this._index, newTargets._index);\n            return new Animation(animId);\n        }\n        if (newTargets.length != this.trackCount) {\n            throw Error('Expected ' +\n                this.trackCount.toString() +\n                ' targets, but got ' +\n                newTargets.length.toString());\n        }\n        const ptr = _malloc(2 * newTargets.length);\n        for (let i = 0; i < newTargets.length; ++i) {\n            HEAPU16[ptr >> (1 + i)] = newTargets[i].objectId;\n        }\n        const animId = _wl_animation_retarget(this._index, ptr);\n        _free(ptr);\n        return new Animation(animId);\n    }\n}\n/**\n * Scene graph object.\n *\n * Node in the scene graph or \"entity\". Consists of transformation and a reference\n * to its parent object. Usually holds components and is accessible by components\n * through {@link Component#object}.\n *\n * Objects are stored in a data oriented manner inside WebAssembly memory. This class\n * is a JavaScript API wrapper around this memory for more convenient use in\n * components.\n *\n * Objects can be created and added to a scene through\n * {@link Scene#addObject} on the {@link scene|main scene}.\n */\nclass $Object {\n    /**\n     * @param o Object id to wrap\n     */\n    constructor(o) {\n        this.objectId = o;\n    }\n    /**\n     * Name of the object.\n     *\n     * Useful for identifying objects during debugging.\n     */\n    get name() {\n        return UTF8ToString(_wl_object_name(this.objectId));\n    }\n    /**\n     * Set the object's name.\n     *\n     * @param newName The new name to set.\n     */\n    set name(newName) {\n        const lengthBytes = lengthBytesUTF8(newName) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(newName, mem, lengthBytes);\n        _wl_object_set_name(this.objectId, mem);\n        _free(mem);\n    }\n    /**\n     * Parent of this object or {@link null} if parented to root.\n     */\n    get parent() {\n        const p = _wl_object_parent(this.objectId);\n        return p == 0 ? null : _wrapObject(p);\n    }\n    /**\n     * Children of this object.\n     */\n    get children() {\n        const childrenCount = _wl_object_get_children_count(this.objectId);\n        if (childrenCount === 0)\n            return [];\n        requireTempMem(childrenCount * 2);\n        _wl_object_get_children(this.objectId, _tempMem, _tempMemSize >> 1);\n        const children = new Array(childrenCount);\n        for (let i = 0; i < childrenCount; ++i) {\n            children[i] = _wrapObject(_tempMemUint16[i]);\n        }\n        return children;\n    }\n    /**\n     * Reparent object to given object.\n     *\n     * @note Reparenting is not trivial and might have a noticeable performance impact.\n     *\n     * @param newParent New parent or {@link null} to parent to root\n     */\n    set parent(newParent) {\n        _wl_object_set_parent(this.objectId, newParent == null ? 0 : newParent.objectId);\n    }\n    /** Reset local transformation (translation, rotation and scaling) to identity. */\n    resetTransform() {\n        _wl_object_reset_translation_rotation(this.objectId);\n        _wl_object_reset_scaling(this.objectId);\n    }\n    /** Reset local translation and rotation to identity */\n    resetTranslationRotation() {\n        _wl_object_reset_translation_rotation(this.objectId);\n    }\n    /**\n     * Reset local rotation, keep translation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetRotation() {\n        _wl_object_reset_rotation(this.objectId);\n    }\n    /**\n     * Reset local translation, keep rotation.\n     * @note To reset both rotation and translation, prefer\n     *       {@link resetTranslationRotation}.\n     */\n    resetTranslation() {\n        _wl_object_reset_translation(this.objectId);\n    }\n    /** Reset local scaling to identity (``[1.0, 1.0, 1.0]``). */\n    resetScaling() {\n        _wl_object_reset_scaling(this.objectId);\n    }\n    /**\n     * Translate object by a vector in the parent's space.\n     * @param v Vector to translate by.\n     */\n    translate(v) {\n        _wl_object_translate(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in object space.\n     * @param v Vector to translate by.\n     */\n    translateObject(v) {\n        _wl_object_translate_obj(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Translate object by a vector in world space.\n     * @param v Vector to translate by.\n     */\n    translateWorld(v) {\n        _wl_object_translate_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in local space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleRad}\n     */\n    rotateAxisAngleDeg(a, d) {\n        _wl_object_rotate_axis_angle(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in local space.\n     *\n     * @param {number[]} a Vector representing the rotation axis.\n     * @param {number} d Angle in radians.\n     *\n     * @note If the object is translated the rotation will be around\n     *     the parent. To rotate around the object origin, use\n     *     {@link rotateAxisAngleDegObject}\n     *\n     * @see {@link rotateAxisAngleDeg}\n     */\n    rotateAxisAngleRad(a, d) {\n        _wl_object_rotate_axis_angle_rad(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (degrees) in object space.\n     *\n     * @param a Vector representing the rotation axis.\n     * @param d Angle in degrees.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @see {@link rotateAxisAngleRadObject}\n     */\n    rotateAxisAngleDegObject(a, d) {\n        _wl_object_rotate_axis_angle_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate around given axis by given angle (radians) in object space\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param a Vector representing the rotation axis\n     * @param d Angle in degrees\n     *\n     * @see {@link rotateAxisAngleDegObject}\n     */\n    rotateAxisAngleRadObject(a, d) {\n        _wl_object_rotate_axis_angle_rad_obj(this.objectId, a[0], a[1], a[2], d);\n    }\n    /**\n     * Rotate by a quaternion.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotate(q) {\n        _wl_object_rotate_quat(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Rotate by a quaternion in object space.\n     *\n     * Equivalent to prepending a rotation quaternion to the object's\n     * local transformation.\n     *\n     * @param q the Quaternion to rotate by.\n     */\n    rotateObject(q) {\n        _wl_object_rotate_quat_obj(this.objectId, q[0], q[1], q[2], q[3]);\n    }\n    /**\n     * Scale object by a vector in object space.\n     *\n     * @param v Vector to scale by.\n     */\n    scale(v) {\n        _wl_object_scale(this.objectId, v[0], v[1], v[2]);\n    }\n    /** Local / object space transformation. */\n    get transformLocal() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_trans_local(this.objectId), 8);\n    }\n    /**\n     * Set local transform.\n     *\n     * @param t Local space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformLocal(t) {\n        this.transformLocal.set(t);\n        this.setDirty();\n    }\n    /**\n     * Compute local / object space translation from transformation.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationLocal(out) {\n        _wl_object_get_translation_local(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Compute world space translation from transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getTranslationWorld(out) {\n        _wl_object_get_translation_world(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Set local / object space translation.\n     *\n     * Concatenates a new translation dual quaternion onto the existing rotation.\n     *\n     * @param v New local translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationLocal(v) {\n        _wl_object_set_translation_local(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Set world space translation.\n     *\n     * Applies the inverse parent transform with a new translation dual quaternion\n     * which is concatenated onto the existing rotation.\n     *\n     * @param v New world translation array/vector, expected to have at least 3 elements.\n     */\n    setTranslationWorld(v) {\n        _wl_object_set_translation_world(this.objectId, v[0], v[1], v[2]);\n    }\n    /**\n     * Global / world space transformation.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get transformWorld() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_trans_world(this.objectId), 8);\n    }\n    /**\n     * Set world transform.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.5\n     */\n    set transformWorld(t) {\n        this.transformWorld.set(t);\n        _wl_object_trans_world_to_local(this.objectId);\n    }\n    /** Local / object space scaling. */\n    get scalingLocal() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_scaling_local(this.objectId), 3);\n    }\n    /**\n     * Set scaling local.\n     *\n     * @param s Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingLocal(s) {\n        this.scalingLocal.set(s);\n        this.setDirty();\n    }\n    /**\n     * Global / world space scaling.\n     *\n     * May recompute transformations of the hierarchy of this object,\n     * if they were changed by JavaScript components this frame.\n     */\n    get scalingWorld() {\n        return new Float32Array(HEAPF32.buffer, _wl_object_scaling_world(this.objectId), 3);\n    }\n    /**\n     * Set scaling world.\n     *\n     * @param t Global / world space transformation.\n     *\n     * @since 0.8.7\n     */\n    set scalingWorld(s) {\n        this.scalingWorld.set(s);\n        _wl_object_scaling_world_to_local(this.objectId);\n    }\n    /**\n     * Local space rotation.\n     *\n     * @since 0.8.7\n     */\n    get rotationLocal() {\n        return this.transformLocal.subarray(0, 4);\n    }\n    /**\n     * Global / world space rotation\n     *\n     * @since 0.8.7\n     */\n    get rotationWorld() {\n        return this.transformWorld.subarray(0, 4);\n    }\n    /**\n     * Set rotation local\n     *\n     * @param r Local space rotation\n     *\n     * @since 0.8.7\n     */\n    set rotationLocal(r) {\n        _wl_object_set_rotation_local(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Set rotation world.\n     *\n     * @param {number} r Global / world space rotation.\n     *\n     * @since 0.8.7\n     */\n    set rotationWorld(r) {\n        _wl_object_set_rotation_world(this.objectId, r[0], r[1], r[2], r[3]);\n    }\n    /**\n     * Compute the object's forward facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getForward(out) {\n        out[0] = 0;\n        out[1] = 0;\n        out[2] = -1;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's up facing world space vector.\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getUp(out) {\n        out[0] = 0;\n        out[1] = 1;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Compute the object's right facing world space vector/\n     *\n     * @param out Destination array/vector, expected to have at least 3 elements.\n     * @return The `out` parameter.\n     */\n    getRight(out) {\n        out[0] = 1;\n        out[1] = 0;\n        out[2] = 0;\n        this.transformVectorWorld(out);\n        return out;\n    }\n    /**\n     * Transform a vector by this object's world transform.\n     *\n     * @param out Out point\n     * @param v Point to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorWorld(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's local transform\n     *\n     * @param out Out point\n     * @param v Point to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorLocal(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's world transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointWorld(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointLocal(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a vector by this object's inverse world transform.\n     *\n     * @param {number[]} out Out point.\n     * @param {number[]} v Vector to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseWorld(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorInverseWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point\n     * @param v Vector to transform, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformVectorInverseLocal(out, v) {\n        v = v || out;\n        _tempMemFloat[0] = v[0];\n        _tempMemFloat[1] = v[1];\n        _tempMemFloat[2] = v[2];\n        _wl_object_transformVectorInverseLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse world transform.\n     *\n     * @param out Out point.\n     * @param v Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseWorld(out, p) {\n        p = p || out;\n        _tempMemFloat[0] = p[0];\n        _tempMemFloat[1] = p[1];\n        _tempMemFloat[2] = p[2];\n        _wl_object_transformPointInverseWorld(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform a point by this object's inverse local transform.\n     *\n     * @param out Out point.\n     * @param p Point to transform, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    transformPointInverseLocal(out, p) {\n        p = p || out;\n        _tempMemFloat.set(p);\n        _wl_object_transformPointInverseLocal(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        return out;\n    }\n    /**\n     * Transform an object space dual quaternion into world space.\n     *\n     * @param out Out transformation.\n     * @param q Local space transformation, default `out`.\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toWorldSpaceTransform(out, q) {\n        q = q || out;\n        _tempMemFloat.set(q);\n        _wl_object_toWorldSpaceTransform(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        out[4] = _tempMemFloat[4];\n        out[5] = _tempMemFloat[5];\n        out[6] = _tempMemFloat[6];\n        out[7] = _tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into local space\n     *\n     * @param {number[]} out Out transformation\n     * @param {number[]} q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toLocalSpaceTransform(out, q) {\n        const p = this.parent;\n        q = q || out;\n        if (!p) {\n            if (out !== q) {\n                out[0] = q[0];\n                out[1] = q[1];\n                out[2] = q[2];\n                out[3] = q[3];\n                out[4] = q[4];\n                out[5] = q[5];\n                out[6] = q[6];\n                out[7] = q[7];\n            }\n        }\n        else {\n            /* @todo: This is broken. It should use `out`. */\n            p.toObjectSpaceTransform(q);\n        }\n        return out;\n    }\n    /**\n     * Transform a world space dual quaternion into object space\n     *\n     * @param out Out transformation.\n     * @param q World space transformation, default `out`\n     * @return The `out` parameter.\n     *\n     * @since 0.8.7\n     */\n    toObjectSpaceTransform(out, q) {\n        q = q || out;\n        _tempMemFloat.set(q);\n        _wl_object_toObjectSpaceTransform(this.objectId, _tempMem);\n        out[0] = _tempMemFloat[0];\n        out[1] = _tempMemFloat[1];\n        out[2] = _tempMemFloat[2];\n        out[3] = _tempMemFloat[3];\n        out[4] = _tempMemFloat[4];\n        out[5] = _tempMemFloat[5];\n        out[6] = _tempMemFloat[6];\n        out[7] = _tempMemFloat[7];\n        return out;\n    }\n    /**\n     * Turn towards / look at target.\n     *\n     * @param v Target vector to turn towards.\n     * @param up Up vector of this object, default `[0, 1, 0]`.\n     */\n    lookAt(v, up = UP_VECTOR) {\n        _wl_object_lookAt(this.objectId, v[0], v[1], v[2], up[0], up[1], up[2]);\n    }\n    /** Destroy the object with all of its components and remove it from the scene */\n    destroy() {\n        _wl_scene_remove_object(this.objectId);\n        /* @todo: Shouldn't be `null` otherwise the API is unexpected */\n        this.objectId = null;\n    }\n    /**\n     * Mark transformation dirty.\n     *\n     * Causes an eventual recalculation of {@link transformWorld}, either\n     * on next {@link getTranslationWorld}, {@link transformWorld} or\n     * {@link scalingWorld} or the beginning of next frame, whichever\n     * happens first.\n     */\n    setDirty() {\n        _wl_object_set_dirty(this.objectId);\n    }\n    /**\n     * Disable/enable all components of this object.\n     *\n     * @param b New state for the components.\n     *\n     * @since 0.8.5\n     */\n    set active(b) {\n        const comps = this.getComponents();\n        for (let c of comps) {\n            c.active = b;\n        }\n    }\n    /**\n     * Get a component attached to this object.\n     *\n     * @param typeOrClass Type name. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field to find the component.\n     * @param index=0 Index for component of given type. This can be used to access specific\n     *      components if the object has multiple components of the same type.\n     * @returns The component or {@link null} if there is no such component on this object\n     */\n    getComponent(typeOrClass, index) {\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const lengthBytes = lengthBytesUTF8(type) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(type, mem, lengthBytes);\n        const componentType = _wl_get_component_manager_index(mem);\n        _free(mem);\n        if (componentType < 0) {\n            /* Not a native component, try js: */\n            const typeIndex = _WL._componentTypeIndices[type];\n            const jsIndex = _wl_get_js_component_index(this.objectId, typeIndex, index || 0);\n            return jsIndex < 0 ? null : _WL._components[jsIndex];\n        }\n        const componentId = _wl_get_component_id(this.objectId, componentType, index || 0);\n        return _wrapComponent(type, componentType, componentId);\n    }\n    /**\n     * @param typeOrClass Type name, pass a falsey value (`undefined` or {@link null}) to retrieve all.\n     *     It's also possible to give a class definition. In this case, the method will use the `class.TypeName` field to\n     *     find the components.\n     * @returns All components of given type attached to this object.\n     *\n     * @note As this function is non-trivial, avoid using it in `update()` repeatedly,\n     *      but rather store its result in `init()` or `start()`\n     * @warning This method will currently return at most 341 components.\n     */\n    getComponents(typeOrClass) {\n        let componentType = null;\n        let type = null;\n        if (typeOrClass) {\n            type = isString(typeOrClass)\n                ? typeOrClass\n                : typeOrClass.TypeName;\n            componentType = $Object._typeIndexFor(type);\n        }\n        const components = [];\n        const maxComps = Math.floor((_tempMemSize / 3) * 2);\n        const componentsCount = _wl_object_get_components(this.objectId, _tempMem, maxComps);\n        const offset = 2 * componentsCount;\n        _wl_object_get_component_types(this.objectId, _tempMem + offset, maxComps);\n        const jsManagerIndex = $Object._typeIndexFor('js');\n        for (let i = 0; i < componentsCount; ++i) {\n            const t = _tempMemUint8[i + offset];\n            const componentId = _tempMemUint16[i];\n            /* Handle JS types separately */\n            if (t == jsManagerIndex) {\n                const comp = _WL._components[_wl_get_js_component_index_for_id(componentId)];\n                if (componentType === null || comp.type == type)\n                    components.push(comp);\n                continue;\n            }\n            if (componentType === null) {\n                const managerName = $Object._typeNameFor(t);\n                components.push(_wrapComponent(managerName, t, componentId));\n            }\n            else if (t == componentType) {\n                /* Optimized manager name retrieval, already have type */\n                components.push(_wrapComponent(type, componentType, componentId));\n            }\n        }\n        return components;\n    }\n    /**\n     * Add component of given type to the object.\n     *\n     * You can use this function to clone components, see the example below.\n     *\n     * ```js\n     *  // Clone existing component (since 0.8.10)\n     *  let original = this.object.getComponent('mesh');\n     *  otherObject.addComponent('mesh', original);\n     *  // Create component from parameters\n     *  this.object.addComponent('mesh', {\n     *      mesh: someMesh,\n     *      material: someMaterial,\n     *  });\n     * ```\n     *\n     * @param typeOrClass Typename to create a component of. Can be native or\n     *     custom JavaScript component type. It's also possible to give a class definition.\n     *     In this case, the method will use the `class.TypeName` field.\n     * @param params Parameters to initialize properties of the new component,\n     *      can be another component to copy properties from.\n     *\n     * @returns {?(Component|CollisionComponent|TextComponent|ViewComponent|MeshComponent|InputComponent|LightComponent|AnimationComponent|PhysXComponent)} The component or {@link null} if the type was not found\n     */\n    addComponent(typeOrClass, params) {\n        const type = isString(typeOrClass)\n            ? typeOrClass\n            : typeOrClass.TypeName;\n        const componentType = $Object._typeIndexFor(type);\n        let component = null;\n        let componentIndex = null;\n        if (componentType < 0) {\n            /* JavaScript component */\n            if (!(type in _WL._componentTypeIndices)) {\n                throw new TypeError(\"Unknown component type '\" + type + \"'\");\n            }\n            const componentId = _wl_object_add_js_component(this.objectId, _WL._componentTypeIndices[type]);\n            componentIndex = _wl_get_js_component_index_for_id(componentId);\n            component = _WL._components[componentIndex];\n        }\n        else {\n            /* native component */\n            const componentId = _wl_object_add_component(this.objectId, componentType);\n            component = _wrapComponent(type, componentType, componentId);\n        }\n        if (params !== undefined) {\n            for (const key in params) {\n                /* active will be set later, other properties should be skipped if\n                 * passing a component for cloning. */\n                if (EXCLUDED_COMPONENT_PROPERTIES.includes(key))\n                    continue;\n                component[key] = params[key];\n            }\n        }\n        /* Explicitly initialize native components */\n        if (componentType < 0) {\n            /* @todo: `componentIndex` can be null here, that's an error */\n            _wljs_component_init(componentIndex);\n            /* start() is called through onActivate() */\n        }\n        /* If it was not explicitly requested by the user to leave the component inactive,\n         * we activate it as a final step. This invalidates componentIndex! */\n        if (!params || !('active' in params && !params.active)) {\n            component.active = true;\n        }\n        return component;\n    }\n    /**\n     * Whether given object's transformation has changed.\n     */\n    get changed() {\n        return !!_wl_object_is_changed(this.objectId);\n    }\n    /**\n     * Checks equality by comparing whether the wrapped native component ids\n     * and component manager types are equal.\n     *\n     * @param otherObject Object to check equality with.\n     * @returns Whether this object equals the given object.\n     */\n    equals(otherObject) {\n        if (!otherObject)\n            return false;\n        return this.objectId == otherObject.objectId;\n    }\n    /**\n     * Used internally.\n     *\n     * @param type The type\n     * @return The component type\n     */\n    static _typeIndexFor(type) {\n        const lengthBytes = lengthBytesUTF8(type) + 1;\n        const mem = _malloc(lengthBytes);\n        stringToUTF8(type, mem, lengthBytes);\n        const componentType = _wl_get_component_manager_index(mem);\n        _free(mem);\n        return componentType;\n    }\n    /**\n     * Used internally.\n     *\n     * @param typeIndex The type index\n     * @return The name as a string\n     */\n    static _typeNameFor(typeIndex) {\n        return UTF8ToString(_wl_component_manager_name(typeIndex));\n    }\n}\n/**\n * Wrapper around a native skin data.\n */\nexport class Skin {\n    constructor(index) {\n        this._index = index;\n    }\n    /** Amount of joints in this skin. */\n    get jointCount() {\n        return _wl_skin_get_joint_count(this._index);\n    }\n    /** Joints object ids for this skin */\n    get jointIds() {\n        return new Uint16Array(HEAPU16.buffer, _wl_skin_joint_ids(this._index), this.jointCount);\n    }\n    /**\n     * Dual quaternions in a flat array of size 8 times {@link jointCount}.\n     *\n     * Inverse bind transforms of the skin.\n     */\n    get inverseBindTransforms() {\n        return new Float32Array(HEAPF32.buffer, _wl_skin_inverse_bind_transforms(this._index), 8 * this.jointCount);\n    }\n    /**\n     * Vectors in a flat array of size 3 times {@link jointCount}.\n     *\n     * Inverse bind scalings of the skin.\n     */\n    get inverseBindScalings() {\n        return new Float32Array(HEAPF32.buffer, _wl_skin_inverse_bind_scalings(this._index), 3 * this.jointCount);\n    }\n}\n/* Unfortunately, the name \"Object\" is reserved, so internally we\n * use $Object, while we expose WL.Object as previously. */\nexport { $Object as Object };\n/**\n * Ray hit.\n *\n * Result of a {@link Scene.rayCast}.\n *\n * @note this class wraps internal engine data and should only be created internally.\n */\nexport class RayHit {\n    /**\n     * @param ptr Pointer to the ray hits memory.\n     */\n    constructor(ptr) {\n        assert((ptr & 3) == 0, MISALIGNED_MSG);\n        this._ptr = ptr;\n    }\n    /** Array of ray hit locations. */\n    get locations() {\n        let p = this._ptr;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /** Array of ray hit normals (only when using {@link Physics#rayCast}. */\n    get normals() {\n        let p = this._ptr + 48;\n        let l = [];\n        for (let i = 0; i < this.hitCount; ++i) {\n            l.push(new Float32Array(HEAPF32.buffer, p + 12 * i, 3));\n        }\n        return l;\n    }\n    /**\n     * Prefer these to recalculating the distance from locations.\n     *\n     * Distances of array hits to ray origin.\n     */\n    get distances() {\n        const p = this._ptr + 48 * 2;\n        return new Float32Array(HEAPF32.buffer, p, this.hitCount);\n    }\n    /** Hit objects */\n    get objects() {\n        let p = this._ptr + (48 * 2 + 16);\n        let objIds = new Uint16Array(HEAPU16.buffer, p, this.hitCount);\n        return [\n            objIds[0] <= 0 ? null : _wrapObject(objIds[0]),\n            objIds[1] <= 0 ? null : _wrapObject(objIds[1]),\n            objIds[2] <= 0 ? null : _wrapObject(objIds[2]),\n            objIds[3] <= 0 ? null : _wrapObject(objIds[3]),\n        ];\n    }\n    /** Number of hits (max 4) */\n    get hitCount() {\n        return Math.min(HEAPU32[this._ptr / 4 + 30], 4);\n    }\n}\nclass math {\n    /** (Experimental!) Cubic Hermite spline interpolation for vector3 and quaternions.\n     *\n     * With `f == 0`, `out` will be `b`, if `f == 1`, `out` will be c.\n     *\n     * Whether a quaternion or vector3 interpolation is intended is determined by\n     * length of `a`.\n     *\n     * @param out Array to write result to.\n     * @param a First tangent/handle.\n     * @param b First point or quaternion.\n     * @param c Second point or quaternion.\n     * @param d Second handle.\n     * @param f Interpolation factor in [0; 1].\n     * @returns The `out` parameter.\n     *\n     * @since 0.8.6\n     */\n    static cubicHermite(out, a, b, c, d, f) {\n        _tempMemFloat.subarray(0).set(a);\n        _tempMemFloat.subarray(4).set(b);\n        _tempMemFloat.subarray(8).set(c);\n        _tempMemFloat.subarray(12).set(d);\n        const isQuat = a.length == 4;\n        _wl_math_cubicHermite(_tempMem + 4 * 16, _tempMem + 4 * 0, _tempMem + 4 * 4, _tempMem + 4 * 8, _tempMem + 4 * 12, f, isQuat);\n        out[0] = _tempMemFloat[16];\n        out[1] = _tempMemFloat[17];\n        out[2] = _tempMemFloat[18];\n        if (isQuat)\n            out[3] = _tempMemFloat[19];\n        return out;\n    }\n}\nexport { math };\n/**\n * Check if a given value is a native string or a `String` instance.\n *\n * @param value The value to check.\n * @returns `true` if the `value` has type string literal or `String`, `false` otherwise.\n */\nexport function isString(value) {\n    return value && (typeof value === 'string' || value.constructor === String);\n}\n/**\n * @param objectId Object ID to wrap\n *\n * @returns Wrapped object\n * @note This is used for internal purposes\n *\n * @hidden\n */\nexport function _wrapObject(objectId) {\n    const o = ObjectCache[objectId] || (ObjectCache[objectId] = new $Object(objectId));\n    o.objectId = objectId;\n    return o;\n}\n/**\n * Retrieves a component instance if it exists, or create and cache\n * a new one.\n *\n * @param type component type name\n * @param {number} componentType Component manager index\n * @param {number} componentId Component id in the manager\n *\n * @returns JavaScript instance wrapping the native component\n *\n * @hidden\n */\nexport function _wrapComponent(type, componentType, componentId) {\n    if (componentId < 0)\n        return null;\n    /* @todo: extremely slow in JS to do that... Better to use a Map or allocate the array. */\n    const c = ComponentCache[componentType] || (ComponentCache[componentType] = []);\n    if (c[componentId]) {\n        return c[componentId];\n    }\n    let component;\n    if (type == 'collision') {\n        component = new CollisionComponent(componentType, componentId);\n    }\n    else if (type == 'text') {\n        component = new TextComponent(componentType, componentId);\n    }\n    else if (type == 'view') {\n        component = new ViewComponent(componentType, componentId);\n    }\n    else if (type == 'mesh') {\n        component = new MeshComponent(componentType, componentId);\n    }\n    else if (type == 'input') {\n        component = new InputComponent(componentType, componentId);\n    }\n    else if (type == 'light') {\n        component = new LightComponent(componentType, componentId);\n    }\n    else if (type == 'animation') {\n        component = new AnimationComponent(componentType, componentId);\n    }\n    else if (type == 'physx') {\n        component = new PhysXComponent(componentType, componentId);\n    }\n    else {\n        const typeIndex = _WL._componentTypeIndices[type];\n        const constructor = _WL._componentTypes[typeIndex];\n        component = new constructor();\n    }\n    /* Sets the manager and identifier from the outside, to\n     * simplify the user's constructor. */\n    component._manager = componentType;\n    component._id = componentId;\n    c[componentId] = component;\n    return component;\n}\n", "import { simd, threads } from 'wasm-feature-detect';\nexport * from './wonderland.js';\n/**\n * Finds whether simd & threading are supported or not.\n *\n * @returns An object containing boolean for simd and thread.\n */\nasync function detectFeatures() {\n    let [simdSupported, threadsSupported] = await Promise.all([simd(), threads()]);\n    if (simdSupported) {\n        console.log('WASM SIMD is supported');\n    }\n    else {\n        console.warn('WASM SIMD is not supported');\n    }\n    if (threadsSupported) {\n        if (self.crossOriginIsolated) {\n            console.log('WASM Threads is supported');\n        }\n        else {\n            console.warn('WASM Threads is supported, but the page is not crossOriginIsolated, therefore thread support is disabled.');\n        }\n    }\n    else {\n        console.warn('WASM Threads is not supported');\n    }\n    threadsSupported = threadsSupported && self.crossOriginIsolated;\n    return {\n        simdSupported,\n        threadsSupported,\n    };\n}\n/**\n * Load the runtime using the WASM and JS files.\n *\n * @param runtime The runtime base string, e.g,: `WonderlandRuntime-loader-physx`.\n * @param options Options to modify the loading behaviour.\n *\n * @returns A promise that resolves when the engine is ready to be used.\n */\nexport async function loadRuntime(runtime, options = {}) {\n    const { simdSupported, threadsSupported } = await detectFeatures();\n    const { simd = simdSupported, threads = threadsSupported } = options;\n    const filename = `${runtime}${simd ? '-simd' : ''}${threads ? '-threads' : ''}`;\n    const r = await fetch(filename + '.wasm');\n    const wasm = await r.arrayBuffer();\n    return new Promise((res) => {\n        window.Module = {\n            worker: `${filename}.worker.js`,\n            wasm,\n        };\n        window.Module.ready = function () {\n            window._wl_application_start();\n            res();\n        };\n        const s = document.createElement('script');\n        s.type = 'text/javascript';\n        s.src = `${filename}.js`;\n        document.body.append(s);\n    });\n}\n", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.myAudioManager = null;\r\n\r\nPP.AudioManagerComponent = class AudioManagerComponent extends Component {\r\n    static TypeName = 'pp-audio-manager';\r\n    static Properties = {};\r\n\r\n    init() {\r\n        PP.myAudioManager = new PP.AudioManager();\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    update(dt) {\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.AudioManagerComponent);", "import { Howler } from 'howler';\r\n\r\nPP.AudioManager = class AudioManager {\r\n    constructor() {\r\n        this._myAudioSetups = new Map();\r\n    }\r\n\r\n    createAudioPlayer(audioSetupID) {\r\n        let audioSetup = this.getAudioSetup(audioSetupID);\r\n        if (audioSetup != null) {\r\n            return new PP.AudioPlayer(this.getAudioSetup(audioSetupID));\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAudioSetup(id) {\r\n        return this._myAudioSetups.get(id);\r\n    }\r\n\r\n    addAudioSetup(id, audioSetup, preload = true) {\r\n        this._myAudioSetups.set(id, audioSetup);\r\n        if (preload) {\r\n            this.createAudioPlayer(id);\r\n        }\r\n    }\r\n\r\n    removeAudioSetup(id) {\r\n        this._myAudioSetups.delete(id);\r\n    }\r\n\r\n    setVolume(volume) {\r\n        Howler.volume(volume);\r\n    }\r\n\r\n    setMute(mute) {\r\n        Howler.mute(mute);\r\n    }\r\n\r\n    stop() {\r\n        Howler.stop();\r\n    }\r\n};", "import { Howl } from 'howler';\r\n\r\nPP.AudioEvent = {\r\n    END: \"end\",\r\n    STOP: \"stop\",\r\n    LOAD: \"load\",\r\n    LOAD_ERROR: \"loaderror\",\r\n    PLAY: \"play\",\r\n    PLAY_ERROR: \"playerror\",\r\n    PAUSE: \"pause\",\r\n    MUTE: \"mute\",\r\n    VOLUME: \"volume\",\r\n    RATE: \"rate\",\r\n    SEEK: \"seek\",\r\n    FADE: \"fade\",\r\n    UNLOCK: \"unlock\"\r\n};\r\n\r\nPP.AudioPlayer = class AudioPlayer {\r\n    constructor(audioSetupOrAudioFilePath, createAudio = true) {\r\n        if (audioSetupOrAudioFilePath == null) {\r\n            this._myAudioSetup = new PP.AudioSetup();\r\n        } else if (typeof audioSetupOrAudioFilePath === 'string') {\r\n            this._myAudioSetup = new PP.AudioSetup(audioSetupOrAudioFile);\r\n        } else {\r\n            this._myAudioSetup = audioSetupOrAudioFilePath.clone();\r\n        }\r\n\r\n        this._myAudio = null;\r\n\r\n        if (createAudio) {\r\n            this._myAudio = new Howl({\r\n                src: [this._myAudioSetup.myAudioFilePath],\r\n                loop: this._myAudioSetup.myLoop,\r\n                volume: this._myAudioSetup.myVolume,\r\n                autoplay: this._myAudioSetup.myAutoplay,\r\n                rate: this._myAudioSetup.myRate,\r\n                pool: this._myAudioSetup.myPool,\r\n                pos: (this._myAudioSetup.mySpatial) ? this._myAudioSetup.myPosition : null,\r\n                refDistance: this._myAudioSetup.myReferenceDistance,\r\n                preload: this._myAudioSetup.myPreload\r\n            });\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n        }\r\n\r\n        this._myLastAudioID = null;\r\n\r\n        this._myCallbacks = new Map();\r\n        for (let eventKey in PP.AudioEvent) {\r\n            this._myCallbacks.set(PP.AudioEvent[eventKey], new Map());    // Signature: callback(audioID)\r\n        }\r\n\r\n        if (createAudio) {\r\n            this._addListeners();\r\n        }\r\n    }\r\n\r\n    isValid() {\r\n        return this._myAudio != null;\r\n    }\r\n\r\n    play() {\r\n        if (Howler.state != \"running\" && this._myAudioSetup.myPreventPlayWhenAudioContextNotRunning) {\r\n            return false;\r\n        }\r\n\r\n        let audioID = this._myAudio.play();\r\n        if (audioID != null) {\r\n            this._myLastAudioID = audioID;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition, true);\r\n            this.updatePitch(this._myAudioSetup.myPitch, true);\r\n            this.updateVolume(this._myAudioSetup.myVolume, true);\r\n        }\r\n\r\n        return audioID != null;\r\n    }\r\n\r\n    stop() {\r\n        this._myAudio.stop();\r\n    }\r\n\r\n    pause() {\r\n        this._myAudio.pause();\r\n    }\r\n\r\n    resume() {\r\n        this._myAudio.play();\r\n    }\r\n\r\n    isPlaying(checkOnlyLast = false) {\r\n        let isPlaying = false;\r\n\r\n        if (checkOnlyLast) {\r\n            isPlaying = this._myAudio.playing(this._myLastAudioID);\r\n        }\r\n        else {\r\n            isPlaying = this._myAudio.playing();\r\n        }\r\n\r\n        return isPlaying;\r\n    }\r\n\r\n    isLoaded() {\r\n        return this._myAudio.state() == \"loaded\";\r\n    }\r\n\r\n    fade(fromVolume, toVolume, duration, updateOnlyLast = false) {\r\n        this.setVolume(toVolume);\r\n\r\n        if (updateOnlyLast) {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000, this._myLastAudioID);\r\n        } else {\r\n            this._myAudio.fade(fromVolume, toVolume, duration * 1000);\r\n        }\r\n    }\r\n\r\n    updatePosition(position, updateOnlyLast = false) {\r\n        this.setPosition(position);\r\n\r\n        if (this._myAudioSetup.mySpatial && position) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.pos(position[0], position[1], position[2], this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.pos(position[0], position[1], position[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePitch(pitch, updateOnlyLast = false) {\r\n        this.updateRate(pitch, updateOnlyLast);\r\n    }\r\n\r\n    updateRate(rate, updateOnlyLast = false) {\r\n        this.setRate(rate);\r\n\r\n        if (rate != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.rate(rate, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.rate(rate);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVolume(volume, updateOnlyLast = false) {\r\n        this.setVolume(volume);\r\n\r\n        if (volume != null) {\r\n            if (updateOnlyLast) {\r\n                this._myAudio.volume(volume, this._myLastAudioID);\r\n            } else {\r\n                this._myAudio.volume(volume);\r\n            }\r\n        }\r\n    }\r\n\r\n    setSpatial(spatial) {\r\n        this._myAudioSetup.mySpatial = spatial;\r\n    }\r\n\r\n    setPosition(position) {\r\n        this._myAudioSetup.myPosition = position;\r\n    }\r\n\r\n    setPitch(pitch) {\r\n        this._myAudioSetup.myPitch = pitch;\r\n    }\r\n\r\n    setRate(rate) {\r\n        this._myAudioSetup.myRate = rate;\r\n    }\r\n\r\n    setVolume(volume) {\r\n        this._myAudioSetup.myVolume = volume;\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myAudio.duration();\r\n    }\r\n\r\n    getVolume() {\r\n        return this._myAudioSetup.myVolume;\r\n    }\r\n\r\n    getPitch() {\r\n        return this._myAudioSetup.myPitch;\r\n    }\r\n\r\n    getRate() {\r\n        return this._myAudioSetup.myRate;\r\n    }\r\n\r\n    registerAudioEventListener(audioEvent, listenerID, callback) {\r\n        this._myCallbacks.get(audioEvent).set(listenerID, callback);\r\n    }\r\n\r\n    unregisterAudioEventListener(audioEvent, listenerID) {\r\n        this._myCallbacks.get(audioEvent).delete(listenerID);\r\n    }\r\n\r\n    _addListeners() {\r\n        if (this._myAudio != null) {\r\n            for (let eventKey in PP.AudioEvent) {\r\n                let event = PP.AudioEvent[eventKey];\r\n                this._myAudio.on(event, function (audioID) {\r\n                    let callbacks = this._myCallbacks.get(event);\r\n                    for (let callback of callbacks.values()) {\r\n                        callback(audioID);\r\n                    }\r\n                }.bind(this));\r\n            }\r\n        }\r\n    }\r\n};", "PP.AudioSetup = class AudioSetup {\r\n    constructor(audioFilePath = null) {\r\n        this.myAudioFilePath = (audioFilePath) ? audioFilePath.slice(0) : null;\r\n\r\n        this.myLoop = false;\r\n        this.myAutoplay = false;\r\n\r\n        this.myVolume = 1.0;\r\n        this._myRate = 1.0; // From 0.5 to 4.0\r\n\r\n        this.myPool = 5;\r\n        this.myPreload = true;\r\n\r\n        this.myPreventPlayWhenAudioContextNotRunning = false;\r\n\r\n        // Spatial Setup\r\n\r\n        this.myPosition = null;\r\n        this.mySpatial = true;\r\n        this.myReferenceDistance = 1.0; // At this distance (and closer) the volume is not reduced\r\n    }\r\n\r\n    clone() {\r\n        let audioSetup = new PP.AudioSetup();\r\n\r\n        audioSetup.myAudioFilePath = this.myAudioFilePath.slice(0);\r\n\r\n        audioSetup.myLoop = this.myLoop;\r\n        audioSetup.myAutoplay = this.myAutoplay;\r\n\r\n        audioSetup.myVolume = this.myVolume;\r\n        audioSetup.myPitch = this.myPitch;\r\n        audioSetup.myRate = this.myRate;\r\n\r\n        audioSetup.myPool = this.myPool;\r\n        audioSetup.myPreload = this.myPreload;\r\n\r\n        audioSetup.myPreventPlayWhenAudioContextNotRunning = this.myPreventPlayWhenAudioContextNotRunning;\r\n\r\n        // Spatial\r\n\r\n        if (this.myPosition != null) {\r\n            audioSetup.myPosition = this.myPosition.vec3_clone();\r\n        } else {\r\n            audioSetup.myPosition = null;\r\n        }\r\n\r\n        audioSetup.mySpatial = this.mySpatial;\r\n        audioSetup.myReferenceDistance = this.myReferenceDistance;\r\n\r\n        return audioSetup;\r\n    }\r\n\r\n    get myPitch() {\r\n        return this._myRate;\r\n    }\r\n\r\n    get myRate() {\r\n        return this._myRate;\r\n    }\r\n\r\n    set myPitch(pitch) {\r\n        this._myRate = pitch;\r\n    }\r\n\r\n    set myRate(rate) {\r\n        this._myRate = rate;\r\n    }\r\n};", "import { Howler } from 'howler';\r\n\r\nWL.registerComponent('pp-mute-everything', {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        Howler.mute(true);\r\n    },\r\n    update: function (dt) {\r\n    },\r\n});", "PP.AudioUtils = {\r\n    isAudioPlaybackBlocked: function () {\r\n        let isBlocked = false;\r\n\r\n        if (Howler != null && Howler.state != \"running\") {\r\n            isBlocked = true;\r\n        }\r\n\r\n        return isBlocked;\r\n    }\r\n}", "PP.HowlerAudioPlayer = class HowlerAudioPlayer extends PP.AudioPlayer {\r\n    constructor(howl, audioSetup = null) {\r\n        super(audioSetup, false);\r\n\r\n        this._myAudio = howl;\r\n\r\n        if (audioSetup == null) {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudioSetup.myLoop = this._myAudio._loop;\r\n            this._myAudioSetup.myAutoplay = this._myAudio._autoplay;\r\n\r\n            this._myAudioSetup.myVolume = this._myAudio._volume;\r\n            this._myAudioSetup.myRate = this._myAudio._rate;\r\n\r\n            this._myAudioSetup.myPool = this._myAudio._pool;\r\n            this._myAudioSetup.myPreload = this._myAudio._preload;\r\n\r\n            this._myAudioSetup.myPosition = (this._myAudio._pos != null) ? this._myAudio._pos.vec3_clone() : null;\r\n            this._myAudioSetup.mySpatial = this._myAudio._pos != null;\r\n            this._myAudioSetup.myReferenceDistance = this._myAudio._pannerAttr.refDistance;\r\n        } else {\r\n            this._myAudioSetup.myAudioFilePath = this._myAudio._src;\r\n\r\n            this._myAudio.loop(this._myAudioSetup.myLoop);\r\n            this._myAudio._autoplay = this._myAudioSetup.myAutoplay;\r\n\r\n            this._myAudio.volume(this._myAudioSetup.myVolume);\r\n            this._myAudio.rate(this._myAudioSetup.myRate);\r\n\r\n            this._myAudio._pool = this._myAudioSetup.myPool;\r\n            this._myAudio._preload = this._myAudioSetup.myPreload;\r\n\r\n            this.updatePosition(this._myAudioSetup.myPosition);\r\n\r\n            this._myAudio._pannerAttr.refDistance = this._myAudioSetup.myReferenceDistance;\r\n\r\n            if (this._myAudioSetup.myAutoplay) {\r\n                this._myAudio.play();\r\n            }\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n}", "// adjust the gravity to a low value like -0.05 to have better results, since the dynamic objects will move slowly instead of quickly falling far away\r\nWL.registerComponent('pp-benchmark-max-physx', {\r\n    _myStaticDomeSize: { type: WL.Type.Float, default: 40 },\r\n    _myStaticPhysXCount: { type: WL.Type.Int, default: 1000 },\r\n    _myDynamicDomeSize: { type: WL.Type.Float, default: 80 },\r\n    _myDynamicPhysXCount: { type: WL.Type.Int, default: 250 },\r\n    _myKinematicDomeSize: { type: WL.Type.Float, default: 120 },\r\n    _myKinematicPhysXCount: { type: WL.Type.Int, default: 250 },\r\n    _myRaycastCount: { type: WL.Type.Int, default: 100 },\r\n    _myVisualizeRaycast: { type: WL.Type.Bool, default: false },\r\n    _myVisualizeRaycastDelay: { type: WL.Type.Float, default: 0.5 },\r\n\r\n    // you can use this to test with convex mesh, \r\n    // but u first need to add a physx with a convex mesh to the scene and read the shapeData index on the component to set it as _myShapeIndex\r\n    _myUseConvexMesh: { type: WL.Type.Bool, default: false },\r\n    _myShapeIndex: { type: WL.Type.Int, default: 0 },\r\n    _myShapeScaleMultiplier: { type: WL.Type.Float, default: 1 }, // used to adjust the scale of the convex mesh if too big or small based on how u imported it\r\n\r\n    _myEnableLog: { type: WL.Type.Bool, default: true },\r\n}, {\r\n    start: function () {\r\n        this._myRootObject = WL.scene.addObject(this.object);\r\n\r\n        this._myRaycastSetup = new PP.RaycastSetup();\r\n        this._myRaycastResults = new PP.RaycastResults();\r\n\r\n        this._myStaticPhysXObjects = [];\r\n        this._myStaticPhysXComponents = [];\r\n        this._myStaticPhysXCollectors = [];\r\n        this._myDynamicPhysXObjects = [];\r\n        this._myDynamicPhysXComponents = [];\r\n        this._myDynamicPhysXCollectors = [];\r\n        this._myKinematicPhysXObjects = [];\r\n        this._myKinematicPhysXComponents = [];\r\n        this._myKinematicPhysXCollectors = [];\r\n\r\n        this._spawnDome(true, false);\r\n        this._spawnDome(false, false);\r\n        this._spawnDome(false, true);\r\n\r\n        this._myStartTimer = new PP.Timer(1);\r\n        this._myTimer = new PP.Timer(0);\r\n        this._myDebugTimer = new PP.Timer(this._myVisualizeRaycastDelay);\r\n        this._myEnableLogTimer = new PP.Timer(1);\r\n        this._myFPSHistory = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            this._myFPSHistory.push(0);\r\n        }\r\n\r\n        this._myAddVelocityDelay = 10;\r\n\r\n        this._myTranslateVec3 = PP.vec3_create();\r\n        this._myRotateVec3 = PP.vec3_create();\r\n    },\r\n    update: function (dt) {\r\n        this._myStartTimer.update(dt);\r\n        if (this._myStartTimer.isDone()) {\r\n            this._myTimer.update(dt);\r\n            this._myDebugTimer.update(dt);\r\n            this._myEnableLogTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.start();\r\n\r\n                let debugActive = false;\r\n                if (this._myDebugTimer.isDone()) {\r\n                    this._myDebugTimer.start();\r\n                    debugActive = true;\r\n                }\r\n\r\n                debugActive = debugActive && this._myVisualizeRaycast;\r\n                this._raycastTest(debugActive);\r\n            }\r\n\r\n            this._myFPSHistory.pop();\r\n            this._myFPSHistory.unshift(Math.round(1 / dt));\r\n\r\n            if (this._myEnableLog) {\r\n                if (this._myEnableLogTimer.isDone()) {\r\n                    this._myEnableLogTimer.start();\r\n                    console.clear();\r\n                    console.log(\"Static PhysX Dome Size:\", this._myStaticPhysXObjects.length);\r\n                    console.log(\"Dynamic PhysX Dome Size:\", this._myDynamicPhysXObjects.length);\r\n                    console.log(\"Kinematic PhysX Dome Size:\", this._myKinematicPhysXObjects.length);\r\n\r\n                    let staticCollisions = 0;\r\n                    for (let collector of this._myStaticPhysXCollectors) {\r\n                        staticCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let dynamicCollisions = 0;\r\n                    for (let collector of this._myDynamicPhysXCollectors) {\r\n                        dynamicCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let kinematicCollisions = 0;\r\n                    for (let collector of this._myKinematicPhysXCollectors) {\r\n                        kinematicCollisions += collector.getCollisions().length;\r\n                    }\r\n\r\n                    let totalCollisions = (staticCollisions + dynamicCollisions + kinematicCollisions) / 2; //every collision is considered twice since it is caught by 2 physX\r\n\r\n                    console.log(\"Current Collisions Count:\", totalCollisions);\r\n                    console.log(\"Raycast Count:\", this._myRaycastCount);\r\n                    console.log(\"FPS History:\");\r\n                    let fpsString = \"\";\r\n                    for (let fps of this._myFPSHistory) {\r\n                        fpsString = fpsString.concat(fps, \"\\n\");\r\n                    }\r\n                    console.log(fpsString);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myAddVelocityDelay > 0) {\r\n            this._myAddVelocityDelay--;\r\n            if (this._myAddVelocityDelay == 0) {\r\n                for (let physX of this._myDynamicPhysXComponents) {\r\n                    physX.kinematic = false;\r\n                    let strength = 50;\r\n                    physX.linearVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                    physX.angularVelocity = [Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength)];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let physX of this._myKinematicPhysXObjects) {\r\n            let strength = 5 * dt;\r\n            this._myTranslateVec3.vec3_set(Math.pp_random(-strength, strength), Math.pp_random(-strength, strength), Math.pp_random(-strength, strength));\r\n            physX.pp_translate(this._myTranslateVec3);\r\n\r\n            rotateStrength = 50 * dt;\r\n            this._myRotateVec3.vec3_set(Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength), Math.pp_random(-rotateStrength, rotateStrength));\r\n            physX.pp_rotate(this._myRotateVec3);\r\n        }\r\n    },\r\n    _raycastTest(debugActive) {\r\n        let raycastCount = this._myRaycastCount;\r\n\r\n        let distance = 10000;\r\n\r\n        for (let i = 0; i < raycastCount; i++) {\r\n            let origin = [Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign(), Math.pp_random(1, 2) * Math.pp_randomSign()];\r\n            let direction = [Math.pp_random(-1, 1), Math.pp_random(-1, 1), Math.pp_random(-1, 1)];\r\n            direction.vec3_normalize(direction);\r\n\r\n            this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n            this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n            this._myRaycastSetup.myDistance = distance;\r\n            this._myRaycastSetup.myBlockLayerFlags.setMask(255);\r\n\r\n            let raycastResults = PP.PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResults);\r\n\r\n            if (debugActive) {\r\n                PP.myDebugVisualManager.drawRaycast(this._myDebugTimer.getDuration(), raycastResults, true, 5, 0.015);\r\n            }\r\n        }\r\n    },\r\n    _spawnDome(isStatic, isDynamic) {\r\n        let maxCount = this._myStaticPhysXCount;\r\n        let physXList = this._myStaticPhysXObjects;\r\n        let cloves = Math.ceil(Math.sqrt(this._myStaticPhysXCount));\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                cloves = Math.ceil(Math.sqrt(this._myDynamicPhysXCount));\r\n                maxCount = this._myDynamicPhysXCount;\r\n                physXList = this._myDynamicPhysXObjects;\r\n            } else {\r\n                cloves = Math.ceil(Math.sqrt(this._myKinematicPhysXCount));\r\n                maxCount = this._myKinematicPhysXCount;\r\n                physXList = this._myKinematicPhysXObjects;\r\n            }\r\n        }\r\n\r\n        let angleForClove = Math.PI * 2 / cloves;\r\n\r\n        let minDistance = Math.max(0, this._myStaticDomeSize - 20);\r\n        let maxDistance = this._myStaticDomeSize + 20;\r\n\r\n        if (!isStatic) {\r\n            if (isDynamic) {\r\n                minDistance = Math.max(0, this._myDynamicDomeSize - 20);\r\n                maxDistance = this._myDynamicDomeSize + 20;\r\n            } else {\r\n                minDistance = Math.max(0, this._myKinematicDomeSize - 20);\r\n                maxDistance = this._myKinematicDomeSize + 20;\r\n            }\r\n        }\r\n\r\n        let minExtraRotation = 0;\r\n        let maxExtraRotation = Math.pp_toRadians(10);\r\n\r\n        let upDirection = PP.vec3_create(0, 1, 0);\r\n        let horizontalDirection = PP.vec3_create(0, 0, -1);\r\n\r\n        for (let i = 0; i < cloves / 2; i++) {\r\n            let verticalDirection = PP.vec3_create(0, 1, 0);\r\n\r\n            let rotationAxis = PP.vec3_create();\r\n            horizontalDirection.vec3_cross(verticalDirection, rotationAxis);\r\n            rotationAxis.vec3_normalize(rotationAxis);\r\n\r\n            for (let j = 0; j < cloves; j++) {\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.slice(0);\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n                if (physXList.length < maxCount) {\r\n                    let distance = Math.random() * (maxDistance - minDistance) + minDistance;\r\n                    let extraAxisRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let extraUpRotation = (Math.random() * 2 - 1) * (maxExtraRotation - minExtraRotation) + minExtraRotation;\r\n                    let physXDirection = verticalDirection.slice(0);\r\n\r\n                    physXDirection.vec3_rotateAxisRadians(extraAxisRotation, rotationAxis, physXDirection);\r\n                    physXDirection.vec3_rotateAxisRadians(extraUpRotation, upDirection, physXDirection);\r\n\r\n                    physXDirection.vec3_scale(distance, physXDirection);\r\n\r\n                    this._addPhysX(physXDirection, isStatic, isDynamic);\r\n                }\r\n\r\n                verticalDirection.vec3_rotateAxisRadians(angleForClove / 2, rotationAxis, verticalDirection);\r\n\r\n            }\r\n\r\n            horizontalDirection.vec3_rotateAxisRadians(angleForClove, upDirection, horizontalDirection);\r\n        }\r\n    },\r\n    _addPhysX(physXDirection, isStatic, isDynamic) {\r\n        let position = physXDirection;\r\n        let scale = Math.pp_random(1, 10);\r\n        let shape = Math.pp_randomPick(WL.Shape.Sphere, WL.Shape.Box);\r\n        if (this._myUseConvexMesh) {\r\n            shape = WL.Shape.ConvexMesh;\r\n            scale *= this._myShapeScaleMultiplier;\r\n        }\r\n\r\n        let physX = WL.scene.addObject(this._myRootObject);\r\n        physX.pp_setPosition(position);\r\n\r\n        let physXComponent = physX.pp_addComponent(\"physx\", {\r\n            \"shape\": shape, \"shapeData\": { index: this._myShapeIndex },\r\n            \"extents\": PP.vec3_create(scale, scale, scale),\r\n            \"static\": isStatic,\r\n            \"kinematic\": !isDynamic,\r\n            \"mass\": 1\r\n        });\r\n\r\n        if (isStatic) {\r\n            this._myStaticPhysXObjects.push(physX);\r\n            this._myStaticPhysXComponents.push(physXComponent);\r\n            this._myStaticPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        } else if (isDynamic) {\r\n            this._myDynamicPhysXObjects.push(physX);\r\n            this._myDynamicPhysXComponents.push(physXComponent);\r\n            this._myDynamicPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        } else {\r\n            this._myKinematicPhysXObjects.push(physX);\r\n            this._myKinematicPhysXComponents.push(physXComponent);\r\n            this._myKinematicPhysXCollectors.push(new PP.PhysicsCollisionCollector(physXComponent));\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-benchmark-max-visible-triangles\", {\r\n    _myTargetFrameRate: { type: WL.Type.Int, default: -1 },     // -1 means it will auto detect it at start\r\n    _myTargetFrameRateThreshold: { type: WL.Type.Int, default: 3 },\r\n    _myStartPlaneCount: { type: WL.Type.Int, default: 1 },\r\n    _myPlaneTriangles: { type: WL.Type.Int, default: 100 },\r\n    _mySecondsBeforeDoubling: { type: WL.Type.Float, default: 0.5 },    // higher gives a better frame rate evaluation\r\n    _myDTHistoryToIgnorePercentage: { type: WL.Type.Float, default: 0.25 },\r\n    _myCloneMaterial: { type: WL.Type.Bool, default: false },\r\n    _myCloneMesh: { type: WL.Type.Bool, default: false },\r\n\r\n    _myEnableLog: { type: WL.Type.Bool, default: true },\r\n\r\n    _myPlaneMaterial: { type: WL.Type.Material },\r\n    _myBackgroundMaterial: { type: WL.Type.Material },\r\n    _myTextMaterial: { type: WL.Type.Material, default: null },\r\n}, {\r\n    _start() {\r\n        this._myBackgroundSize = 4;\r\n        this._myBackgroundObject.pp_setActive(true);\r\n        this._myBackgroundObject.pp_setScale(this._myBackgroundSize + 0.1);\r\n        this._myBackgroundObject.pp_translate(PP.vec3_create(0, 0, -0.001));\r\n\r\n        this._myDoubleTimer = new PP.Timer(this._mySecondsBeforeDoubling);\r\n        this._myIsDone = false;\r\n\r\n        this._myCurrentPlanes = this._myStartPlaneCount;\r\n\r\n        this._myDTHistory = [];\r\n\r\n        this._myUpperLimit = -1;\r\n        this._myLowerLimit = 0;\r\n\r\n        this._myPlanes = [];\r\n        this._mySkipNextFrames = 0;\r\n        this._myMaxWaitFrames = 0;\r\n\r\n        this._myMaxPlanesReached = false;\r\n\r\n        this._myFirstTime = true;\r\n    },\r\n    _update(dt) {\r\n        // Skip lag frames after the new set of plane has been shown, wait for it to be stable\r\n        {\r\n            if (dt < 0.00001) {\r\n                return;\r\n            }\r\n\r\n            if (dt > 0.5 && this._myMaxWaitFrames > 0) {\r\n                this._myMaxWaitFrames--;\r\n                return;\r\n            }\r\n\r\n            this._myMaxWaitFrames = 10;\r\n\r\n            if (this._mySkipNextFrames > 0) {\r\n                this._mySkipNextFrames--;\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!this._myIsDone) {\r\n            this._myDoubleTimer.update(dt);\r\n\r\n            this._myDTHistory.push(dt);\r\n\r\n            if (this._myDoubleTimer.isDone()) {\r\n                this._myDoubleTimer.start();\r\n\r\n                let frameRate = this._computeAverageFrameRate(false);\r\n\r\n                if (this._myFirstTime) {\r\n                    this._myFirstTime = false;\r\n                } else {\r\n\r\n                    // if there is not lag, the current plane count is a good lower limit, otherwise the current count is now a upper threshold, we have to search below it\r\n                    let isLagging = false;\r\n                    if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                        this._myUpperLimit = this._myCurrentPlanes;\r\n\r\n                        isLagging = true;\r\n\r\n                        if (this._myUpperLimit == 1) {\r\n                            this._myLowerLimit = 1;\r\n                        }\r\n                    } else {\r\n                        this._myLowerLimit = this._myCurrentPlanes;\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myUpperLimit = Math.max(this._myUpperLimit, this._myLowerLimit);\r\n                        }\r\n                    }\r\n\r\n                    this._myTriangleTextComponent.text = \"Triangles: \" + this._myCurrentPlanes * this._myRealTrianglesAmount;\r\n                    this._myPlaneTextComponent.text = \"Planes: \" + this._myCurrentPlanes;\r\n                    this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                    if (isLagging) {\r\n                        this._myTriangleTextComponent.material.color = this._myLagColor;\r\n                        this._myPlaneTextComponent.material.color = this._myLagColor;\r\n                        this._myFPSTextComponent.material.color = this._myLagColor;\r\n                    } else {\r\n                        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n                        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n                        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n                    }\r\n\r\n                    let reset = false;\r\n\r\n                    // check if the binary search is completed\r\n                    if ((this._myUpperLimit > 0 &&\r\n                        (!isLagging && (this._myUpperLimit - this._myLowerLimit) <= Math.max(2, 1000 / this._myRealTrianglesAmount)) ||\r\n                        (isLagging && (this._myUpperLimit - this._myLowerLimit) <= 1)) ||\r\n                        (!isLagging && this._myMaxPlanesReached)) {\r\n                        if (frameRate < this._myStableFrameRate - this._myTargetFrameRateThreshold) {\r\n                            // going a bit back with the binary search, maybe the lower limit was not lower after all cause of a bad assumption of average FPS\r\n                            this._myLowerLimit = Math.max(1, Math.floor(this._myUpperLimit / 2.5));\r\n                            this._myUpperLimit = 0;\r\n                            reset = true;\r\n\r\n                            if (this._myEnableLog) {\r\n                                console.log(\"Rst - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                            }\r\n                        } else {\r\n                            if (this._myMaxPlanesReached) {\r\n                                if (this._myEnableLog) {\r\n                                    console.log(\"Aborted - Max Planes Reached\");\r\n\r\n                                    this._myDoneTextComponent.text = \"Aborted - Max Planes Reached\";\r\n                                }\r\n                            } else {\r\n                                this._displayPlanes(this._myLowerLimit);\r\n\r\n                                if (this._myEnableLog) {\r\n                                    console.log(\"\\nEnd - Triangles:\", this._myLowerLimit * this._myRealTrianglesAmount, \"- Planes:\", this._myLowerLimit, \"- Frame Rate:\", frameRate);\r\n                                    console.log(\"Plane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                                    console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                                }\r\n\r\n                                this._myTriangleTextComponent.text = \"Triangles: \" + this._myLowerLimit * this._myRealTrianglesAmount;\r\n                                this._myPlaneTextComponent.text = \"Planes: \" + this._myLowerLimit;\r\n                                this._myFPSTextComponent.text = \"FPS: \" + frameRate + \" / \" + this._myStableFrameRate;\r\n\r\n                                this._myDoneTextComponent.text = \"End\";\r\n                            }\r\n                            this._myIsDone = true;\r\n                        }\r\n                    }\r\n\r\n                    if (isLagging && !reset) {\r\n                        if (this._myEnableLog) {\r\n                            console.log(\"Lag - Triangles:\", this._myCurrentPlanes * this._myRealTrianglesAmount, \"- Planes:\", this._myCurrentPlanes, \"- Frame Rate:\", frameRate);\r\n                        }\r\n                    }\r\n\r\n                    if (!this._myIsDone) {\r\n                        // sort of binary search, if there is no upper limit yet, just double\r\n                        if (this._myUpperLimit > 0) {\r\n                            this._myCurrentPlanes = Math.floor((this._myUpperLimit + this._myLowerLimit) / 2);\r\n                            this._myCurrentPlanes = Math.max(this._myCurrentPlanes, 1);\r\n                        } else if (!reset) {\r\n                            this._myCurrentPlanes = this._myLowerLimit * 2;\r\n                        } else {\r\n                            this._myCurrentPlanes = this._myLowerLimit;\r\n                        }\r\n\r\n                        if (this._myCurrentPlanes > 50000) {\r\n                            this._myCurrentPlanes = 50000;\r\n                            this._myMaxPlanesReached = true;\r\n                        } else {\r\n                            this._myMaxPlanesReached = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myIsDone) {\r\n                    this._displayPlanes(this._myCurrentPlanes);\r\n                    this._myElapsedTime = 0;\r\n                    this._myFrameCount = 0;\r\n\r\n                    this._mySkipNextFrames = 30;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _displayPlanes(count) {\r\n        while (this._myPlanes.length > count) {\r\n            let plane = this._myPlanes.pop();\r\n            this._myPlanePool.release(plane);\r\n        }\r\n\r\n        while (this._myPlanes.length < count) {\r\n            let plane = this._myPlanePool.get();\r\n            this._myPlanes.push(plane);\r\n        }\r\n\r\n        let gridSize = 1;\r\n        while (gridSize * gridSize < count) {\r\n            gridSize++;\r\n        }\r\n\r\n        let spaceBetween = 0.01;\r\n        let totalSpaceBetween = spaceBetween * (gridSize - 1);\r\n        let planeSize = (this._myBackgroundSize * 2 - totalSpaceBetween) / (gridSize * 2);\r\n\r\n        let currentCount = count;\r\n\r\n        for (let i = 0; i < gridSize && currentCount > 0; i++) {\r\n            for (let j = 0; j < gridSize && currentCount > 0; j++) {\r\n                let plane = this._myPlanes[currentCount - 1];\r\n                plane.pp_setScale(planeSize);\r\n\r\n                let position = [-this._myBackgroundSize + planeSize + j * planeSize * 2 + j * spaceBetween, this._myBackgroundSize - planeSize - i * planeSize * 2 - i * spaceBetween, 0];\r\n\r\n                plane.pp_setPositionLocal(position);\r\n                plane.pp_setActive(true);\r\n\r\n                currentCount--;\r\n            }\r\n        }\r\n    },\r\n    start() {\r\n        this._myLagColor = PP.vec4_create(0.5, 0, 0, 1);\r\n        this._myNormalColor = PP.vec4_create(0, 0, 0, 1);\r\n\r\n        this._myRealTrianglesAmount = 0;\r\n\r\n        this._myTrianglesObject = WL.scene.addObject(this.object);\r\n\r\n        this._myBackgroundObject = WL.scene.addObject(this._myTrianglesObject);\r\n        {\r\n            let meshComponent = this._myBackgroundObject.addComponent('mesh');\r\n            meshComponent.mesh = PP.MeshUtils.createPlaneMesh();\r\n            meshComponent.material = this._myBackgroundMaterial.clone();\r\n        }\r\n\r\n        this._myPlaneObject = WL.scene.addObject(this._myTrianglesObject);\r\n        {\r\n            let meshComponent = this._myPlaneObject.addComponent('mesh');\r\n            meshComponent.mesh = this._createPlaneMesh(this._myPlaneTriangles);\r\n            this._myRealTrianglesAmount = meshComponent.mesh.indexData.length / 3;\r\n            meshComponent.material = this._myPlaneMaterial.clone();\r\n        }\r\n\r\n        let poolParams = new PP.ObjectPoolParams();\r\n        if (!this._myCloneMesh) {\r\n            poolParams.myInitialPoolSize = 30000;\r\n        } else {\r\n            if (this._myRealTrianglesAmount <= 4) {\r\n                poolParams.myInitialPoolSize = 15000;\r\n            } else if (this._myRealTrianglesAmount <= 8) {\r\n                poolParams.myInitialPoolSize = 10000;\r\n            } else if (this._myRealTrianglesAmount <= 64) {\r\n                poolParams.myInitialPoolSize = 7500;\r\n            } else {\r\n                poolParams.myInitialPoolSize = 5000;\r\n            }\r\n        }\r\n        poolParams.myPercentageToAddWhenEmpty = 0;\r\n        poolParams.myAmountToAddWhenEmpty = 10000;\r\n        poolParams.myCloneParams = new PP.CloneParams();\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(\"mesh\", \"material\", this._myCloneMaterial);\r\n        poolParams.myCloneParams.myDeepCloneParams.setDeepCloneComponentVariable(\"mesh\", \"mesh\", this._myCloneMesh);\r\n        this._myPlanePool = new PP.ObjectPool(this._myPlaneObject, poolParams);\r\n\r\n        this._myBackgroundObject.pp_setActive(false);\r\n        this._myPlaneObject.pp_setActive(false);\r\n\r\n        this._myStartTimer = new PP.Timer(this._mySecondsBeforeDoubling * 2);\r\n        this._mySessionStarted = false;\r\n\r\n        this._myTextsObject = WL.scene.addObject(this._myTrianglesObject);\r\n        //this._myTextsObject.pp_addComponent(\"pp-easy-transform\");\r\n\r\n        this._myTriangleTextObject = WL.scene.addObject(this._myTextsObject);\r\n        //this._myTriangleTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myTriangleTextComponent = this._myTriangleTextObject.addComponent('text');\r\n\r\n        this._myTriangleTextComponent.alignment = WL.Alignment.Left;\r\n        this._myTriangleTextComponent.justification = WL.Justification.Line;\r\n        this._myTriangleTextComponent.material = this._myTextMaterial.clone();\r\n        this._myTriangleTextComponent.material.color = this._myNormalColor;\r\n        this._myTriangleTextComponent.text = \" \";\r\n        //this._myTriangleTextComponent.text = \"Triangles: 9999999\";\r\n\r\n        this._myPlaneTextObject = WL.scene.addObject(this._myTextsObject);\r\n\r\n        this._myPlaneTextComponent = this._myPlaneTextObject.addComponent('text');\r\n        //this._myPlaneTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myPlaneTextComponent.alignment = WL.Alignment.Left;\r\n        this._myPlaneTextComponent.justification = WL.Justification.Line;\r\n        this._myPlaneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myPlaneTextComponent.material.color = this._myNormalColor;\r\n        this._myPlaneTextComponent.text = \" \";\r\n        //this._myPlaneTextComponent.text = \"Planes: 9999999\";\r\n\r\n        this._myFPSTextObject = WL.scene.addObject(this._myTextsObject);\r\n\r\n        this._myFPSTextComponent = this._myFPSTextObject.addComponent('text');\r\n        //this._myFPSTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myFPSTextComponent.alignment = WL.Alignment.Left;\r\n        this._myFPSTextComponent.justification = WL.Justification.Line;\r\n        this._myFPSTextComponent.material = this._myTextMaterial.clone();\r\n        this._myFPSTextComponent.material.color = this._myNormalColor;\r\n        this._myFPSTextComponent.text = \" \";\r\n        //this._myFPSTextComponent.text = \"FPS: 99.99\";\r\n\r\n        this._myDoneTextObject = WL.scene.addObject(this._myTrianglesObject);\r\n\r\n        this._myDoneTextComponent = this._myDoneTextObject.addComponent('text');\r\n        //this._myDoneTextObject.pp_addComponent(\"pp-easy-transform\", { _myIsLocal: true });\r\n\r\n        this._myDoneTextComponent.alignment = WL.Alignment.Center;\r\n        this._myDoneTextComponent.justification = WL.Justification.Line;\r\n        this._myDoneTextComponent.material = this._myTextMaterial.clone();\r\n        this._myDoneTextComponent.material.color = this._myNormalColor;\r\n        this._myDoneTextComponent.text = \" \";\r\n        //this._myDoneTextComponent.text = \"End\";\r\n\r\n        this._myTextsObject.pp_setPositionLocal(PP.vec3_create(0, 4.3, 0));\r\n        this._myTextsObject.pp_setScale(2.75);\r\n\r\n        this._myTriangleTextObject.pp_setPositionLocal(PP.vec3_create(-1.4, 0, 0));\r\n        this._myPlaneTextObject.pp_setPositionLocal(PP.vec3_create(0.55, 0, 0));\r\n        this._myFPSTextObject.pp_setPositionLocal(PP.vec3_create(-0.315, 0, 0));\r\n        this._myDoneTextObject.pp_setPositionLocal(PP.vec3_create(0, -4.6, 0));\r\n        this._myDoneTextObject.pp_setScale(4);\r\n\r\n        this._myDTHistory = [];\r\n    },\r\n    update(dt) {\r\n        if (this._mySessionStarted) {\r\n            if (this._myStartTimer.isRunning()) {\r\n                this._myStartTimer.update(dt);\r\n\r\n                this._myDTHistory.push(dt);\r\n\r\n                if (this._myStartTimer.isDone()) {\r\n                    this._myStableFrameRate = this._computeAverageFrameRate(true);\r\n                    if (this._myTargetFrameRate > 0) {\r\n                        this._myStableFrameRate = this._myTargetFrameRate;\r\n                    }\r\n\r\n                    if (this._myEnableLog) {\r\n                        console.log(\"\\nPlane Triangles (Adjusted):\", this._myRealTrianglesAmount);\r\n                        console.log(\"Target Frame Rate:\", this._myStableFrameRate, \"- Threshold: \", (this._myStableFrameRate - this._myTargetFrameRateThreshold));\r\n                        console.log(\"\");\r\n                    }\r\n                    this._start();\r\n                }\r\n            } else {\r\n                this._update(dt);\r\n            }\r\n        } else {\r\n            this._mySessionStarted = WL.xrSession != null;\r\n        }\r\n    },\r\n    _computeAverageFrameRate(isStart) {\r\n        let frameRate = 0;\r\n\r\n        this._myDTHistory.sort();\r\n        let elementToRemove = Math.floor(this._myDTHistory.length) * Math.min(0.9, this._myDTHistoryToIgnorePercentage * (isStart ? 2 : 1));\r\n        for (let i = 0; i < elementToRemove; i++) {\r\n            this._myDTHistory.pop();\r\n        }\r\n\r\n        let averageDT = 0;\r\n        for (let dt of this._myDTHistory) {\r\n            averageDT += dt;\r\n        }\r\n        averageDT /= this._myDTHistory.length;\r\n        frameRate = Math.round(1 / averageDT);\r\n\r\n        this._myDTHistory = [];\r\n\r\n        return frameRate;\r\n    },\r\n    _createPlaneMesh(trianglesAmount) {\r\n        let squaresAmount = Math.ceil(trianglesAmount / 2);\r\n\r\n        let row = 1;\r\n        let column = 1;\r\n\r\n        let closestSqrt = 1;\r\n        while (closestSqrt * closestSqrt < squaresAmount) {\r\n            closestSqrt++;\r\n        }\r\n\r\n        row = closestSqrt;\r\n        column = closestSqrt;\r\n\r\n        while (row > 1 && column > 1 && row * column > squaresAmount && ((row - 1) * column >= squaresAmount)) {\r\n            row--;\r\n        }\r\n\r\n        let meshParams = new PP.MeshCreationParams();\r\n\r\n        for (let i = 0; i < row + 1; i++) {\r\n            for (let j = 0; j < column + 1; j++) {\r\n\r\n                let x = (2 / column) * j;\r\n                let y = (2 / row) * i;\r\n\r\n                let vertexParams = new PP.MeshCreationVertexParams();\r\n\r\n                vertexParams.myPosition = new PP.vec3_create();\r\n                vertexParams.myPosition[0] = x - 1;\r\n                vertexParams.myPosition[1] = y - 1;\r\n                vertexParams.myPosition[2] = 0;\r\n\r\n                vertexParams.myTextureCoordinates = new PP.vec2_create();\r\n                vertexParams.myTextureCoordinates[0] = x / 2;\r\n                vertexParams.myTextureCoordinates[1] = y / 2;\r\n\r\n                vertexParams.myNormal = new PP.vec3_create();\r\n                vertexParams.myNormal[0] = 0;\r\n                vertexParams.myNormal[1] = 0;\r\n                vertexParams.myNormal[2] = 1;\r\n\r\n                meshParams.myVertexes.push(vertexParams);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < row; i++) {\r\n            for (let j = 0; j < column; j++) {\r\n                let firstTriangle = new PP.MeshCreationTriangleParams();\r\n                firstTriangle.myIndexes[0] = (i * (column + 1)) + j;\r\n                firstTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                firstTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j;\r\n\r\n                let secondTriangle = new PP.MeshCreationTriangleParams();\r\n                secondTriangle.myIndexes[0] = ((i + 1) * (column + 1)) + j;\r\n                secondTriangle.myIndexes[1] = (i * (column + 1)) + j + 1;\r\n                secondTriangle.myIndexes[2] = ((i + 1) * (column + 1)) + j + 1;\r\n\r\n                meshParams.myTriangles.push(firstTriangle);\r\n                meshParams.myTriangles.push(secondTriangle);\r\n            }\r\n        }\r\n\r\n        let mesh = PP.MeshUtils.createMesh(meshParams);\r\n\r\n        return mesh;\r\n    }\r\n});", "PP.ObjectPoolManager = class ObjectPoolManager {\r\n    constructor() {\r\n        this._myPools = new Map();\r\n    }\r\n\r\n    addPool(poolID, poolObject, objectPoolParams = new PP.ObjectPoolParams()) {\r\n        if (!this._myPools.has(poolID)) {\r\n            let pool = new PP.ObjectPool(poolObject, objectPoolParams);\r\n            this._myPools.set(poolID, pool);\r\n        } else {\r\n            console.error(\"Pool already created with this ID\");\r\n        }\r\n    }\r\n\r\n    increasePool(poolID, amount) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increase(amount);\r\n        }\r\n    }\r\n\r\n    increasePoolPercentage(poolID, percentage) {\r\n        let pool = this._myPools.get(poolID);\r\n        if (pool) {\r\n            pool.increasePercentage(percentage);\r\n        }\r\n    }\r\n\r\n    getPool(poolID) {\r\n        return this._myPools.get(poolID);\r\n    }\r\n\r\n    hasPool(poolID) {\r\n        return this._myPools.has(poolID);\r\n    }\r\n\r\n    getObject(poolID) {\r\n        if (this._myPools.has(poolID)) {\r\n            return this._myPools.get(poolID).get();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    releaseObject(poolID, object) {\r\n        this._myPools.get(poolID).release(object);\r\n    }\r\n};\r\n\r\nPP.ObjectPoolParams = class ObjectPoolParams {\r\n    constructor() {\r\n        this.myInitialPoolSize = 0;\r\n        this.myAmountToAddWhenEmpty = 0;        //If all the objects are busy, this amount will be added to the pool\r\n        this.myPercentageToAddWhenEmpty = 0;    //If all the objects are busy, this percentage of the current pool size will be added to the pool        \r\n\r\n        this.myCloneParams = undefined;\r\n\r\n        this.myOptimizeObjectsAllocation = true;    //If true it will pre-allocate the memory before adding new objects to the pool\r\n\r\n        //These extra functions can be used if u want to use the pool with objects that are not from WLE (WL.Object)\r\n        this.myCloneCallback = undefined;                       //Signature: callback(object, cloneParams) -> clonedObject\r\n        this.mySetActiveCallback = undefined;                   //Signature: callback(object, active)\r\n        this.myEqualCallback = undefined;                       //Signature: callback(firstObject, secondObject) -> bool\r\n        this.myOptimizeObjectsAllocationCallback = undefined;   //Signature: callback(object, numberOfObjectsToAllocate)\r\n\r\n        this.myEnableDebugLog = true;\r\n    }\r\n};\r\n\r\nPP.ObjectPool = class ObjectPool {\r\n    constructor(poolObject, objectPoolParams) {\r\n        this._myObjectPoolParams = objectPoolParams;\r\n        this._myPrototype = this._clone(poolObject);\r\n\r\n        this._myAvailableObjects = [];\r\n        this._myBusyObjects = [];\r\n\r\n        this._addToPool(objectPoolParams.myInitialPoolSize, false);\r\n    }\r\n\r\n    get() {\r\n        let object = this._myAvailableObjects.shift();\r\n\r\n        if (object == null) {\r\n            let amountToAdd = Math.ceil(this._myBusyObjects.length * this._myObjectPoolParams.myPercentageToAddWhenEmpty);\r\n            amountToAdd += this._myObjectPoolParams.myAmountToAddWhenEmpty;\r\n            this._addToPool(amountToAdd, this._myObjectPoolParams.myEnableDebugLog);\r\n            object = this._myAvailableObjects.shift();\r\n        }\r\n\r\n        //object could still be null if the amountToAdd is 0\r\n        if (object != null) {\r\n            this._myBusyObjects.push(object);\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    release(object) {\r\n        let released = this._myBusyObjects.pp_remove(this._equals.bind(this, object));\r\n        if (released) {\r\n            this._setActive(released, false);\r\n            this._myAvailableObjects.push(released);\r\n        }\r\n    }\r\n\r\n    increase(amount) {\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    increasePercentage(percentage) {\r\n        let amount = Math.ceil((this.getSize()) * percentage);\r\n        this._addToPool(amount, false);\r\n    }\r\n\r\n    getSize() {\r\n        return this._myBusyObjects.length + this._myAvailableObjects.length;\r\n    }\r\n\r\n    getAvailableSize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    getBusySize() {\r\n        return this._myAvailableObjects.length;\r\n    }\r\n\r\n    _addToPool(size, log) {\r\n        if (size <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (this._myObjectPoolParams.myOptimizeObjectsAllocation) {\r\n            if (this._myObjectPoolParams.myOptimizeObjectsAllocationCallback) {\r\n                this._myObjectPoolParams.myOptimizeObjectsAllocationCallback(this._myPrototype, size);\r\n            } else if (this._myPrototype.pp_reserveObjectsHierarchy != null) {\r\n                this._myPrototype.pp_reserveObjectsHierarchy(size);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            this._myAvailableObjects.push(this._clone(this._myPrototype));\r\n        }\r\n\r\n        if (log) {\r\n            console.warn(\"Added new elements to the pool:\", size);\r\n        }\r\n    }\r\n\r\n    _clone(object) {\r\n        let clone = null;\r\n\r\n        if (this._myObjectPoolParams.myCloneCallback != null) {\r\n            clone = this._myObjectPoolParams.myCloneCallback(object, this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.pp_clone != null) {\r\n            clone = object.pp_clone(this._myObjectPoolParams.myCloneParams);\r\n        } else if (object.clone != null) {\r\n            clone = object.clone(this._myObjectPoolParams.myCloneParams);\r\n        }\r\n\r\n        if (clone == null) {\r\n            console.error(\"Object not cloneable, pool will return null\");\r\n        } else {\r\n            this._setActive(clone, false);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n\r\n    _setActive(object, active) {\r\n        if (this._myObjectPoolParams.mySetActiveCallback != null) {\r\n            this._myObjectPoolParams.mySetActiveCallback(object, active);\r\n        } else if (object.pp_setActive != null) {\r\n            object.pp_setActive(active);\r\n        } else if (object.setActive != null) {\r\n            object.setActive(active);\r\n        }\r\n    }\r\n\r\n    _equals(first, second) {\r\n        let equals = false;\r\n\r\n        if (this._myObjectPoolParams.myEqualCallback != null) {\r\n            equals = this._myObjectPoolParams.myEqualCallback(first, second);\r\n        } else if (first.pp_equals != null) {\r\n            equals = first.pp_equals(second);\r\n        } else if (first.equals != null) {\r\n            equals = first.equals(second);\r\n        } else {\r\n            equals = first == second;\r\n        }\r\n\r\n        return equals;\r\n    }\r\n};", "PP.SaveManager = class SaveManager {\r\n    constructor() {\r\n        this._mySaveCache = new Map();\r\n        this._myCacheEnabled = true;\r\n\r\n        this._myCommitSavesDelayTimer = new PP.Timer(0, false);\r\n        this._myDelaySavesCommit = true;\r\n        this._myIDsToCommit = [];\r\n\r\n        this._myCacheDefaultValueOnFail = true;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n\r\n        this._myClearCallbacks = new Map();                 // Signature: callback()\r\n        this._myDeleteCallbacks = new Map();                // Signature: callback(id)\r\n        this._myDeleteIDCallbacks = new Map();              // Signature: callback(id)\r\n        this._mySaveCallbacks = new Map();                  // Signature: callback(id, value)\r\n        this._mySaveValueChangedCallbacks = new Map();      // Signature: callback(id, value)\r\n        this._mySaveIDCallbacks = new Map();                // Signature: callback(id, value)\r\n        this._mySaveValueChangedIDCallbacks = new Map();    // Signature: callback(id, value)\r\n        this._myCommitSaveCallbacks = new Map();            // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSaveIDCallbacks = new Map();          // Signature: callback(id, value, isCommitSaveDelayed, failed)\r\n        this._myCommitSavesCallbacks = new Map();           // Signature: callback(isCommitSavesDelayed, failed)\r\n\r\n        this._myLoadCallbacks = new Map();                  // Signature: callback(id, value, loadFromCache, failed)\r\n        this._myLoadIDCallbacks = new Map();                // Signature: callback(id, value, loadFromCache, failed)\r\n    }\r\n\r\n    setCommitSavesDelay(delay) {\r\n        this._myCommitSavesDelayTimer.start(delay);\r\n    }\r\n\r\n    setDelaySavesCommit(delayed) {\r\n        this._myDelaySavesCommit = delayed;\r\n    }\r\n\r\n    setCacheDefaultValueOnFail(cache) {\r\n        this._myCacheDefaultValueOnFail = cache;\r\n    }\r\n\r\n    setCacheEnabled(enabled) {\r\n        this._myCacheEnabled = enabled;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myCommitSavesDelayTimer.isRunning()) {\r\n            this._myCommitSavesDelayTimer.update(dt);\r\n            if (this._myCommitSavesDelayTimer.isDone()) {\r\n                this.commitSaves();\r\n            }\r\n        }\r\n    }\r\n\r\n    save(id, value, overrideDelaySavesCommit = null, overrideCacheEnabled = null) {\r\n        let sameValue = false;\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) {\r\n            sameValue = this._mySaveCache.get(id) === value;\r\n        }\r\n\r\n        if (!sameValue) {\r\n            this._mySaveCache.set(id, value);\r\n            if ((this._myDelaySavesCommit && overrideDelaySavesCommit == null) || (overrideDelaySavesCommit != null && overrideDelaySavesCommit)) {\r\n                this._myIDsToCommit.pp_pushUnique(id);\r\n                if (!this._myCommitSavesDelayTimer.isRunning()) {\r\n                    this._myCommitSavesDelayTimer.start();\r\n                }\r\n            } else {\r\n                let failed = this._commitSave(id, false);\r\n\r\n                if (this._myCommitSavesCallbacks.size > 0) {\r\n                    let isCommitSaveDelayed = false;\r\n                    this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSaveDelayed, failed); });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySaveCallbacks.size > 0) {\r\n            this._mySaveCallbacks.forEach(function (callback) { callback(id, value); });\r\n        }\r\n\r\n        if (this._mySaveIDCallbacks.size > 0) {\r\n            let callbacks = this._mySaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n        }\r\n\r\n        if (!sameValue) {\r\n            if (this._mySaveValueChangedCallbacks.size > 0) {\r\n                this._mySaveValueChangedCallbacks.forEach(function (callback) { callback(id, value); });\r\n            }\r\n\r\n            if (this._mySaveValueChangedIDCallbacks.size > 0) {\r\n                let callbacks = this._mySaveValueChangedIDCallbacks.get(id);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(id, value); });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    commitSaves() {\r\n        if (this._myIDsToCommit.length > 0) {\r\n            let failed = false;\r\n\r\n            for (let id of this._myIDsToCommit) {\r\n                if (this._mySaveCache.has(id)) {\r\n                    let result = this._commitSave(id, true);\r\n                    failed = failed || result;\r\n                }\r\n            }\r\n\r\n            this._myIDsToCommit = [];\r\n\r\n            if (this._myCommitSavesCallbacks.size > 0) {\r\n                let isCommitSavesDelayed = true;\r\n                this._myCommitSavesCallbacks.forEach(function (callback) { callback(isCommitSavesDelayed, failed); });\r\n            }\r\n        }\r\n    }\r\n\r\n    has(id, overrideCacheEnabled = null) {\r\n        return (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) || PP.SaveUtils.has(id);\r\n    }\r\n\r\n    delete(id) {\r\n        this._mySaveCache.delete(id);\r\n        PP.SaveUtils.delete(id);\r\n\r\n        if (this._myDeleteCallbacks.size > 0) {\r\n            this._myDeleteCallbacks.forEach(function (callback) { callback(id); });\r\n        }\r\n\r\n        if (this._myDeleteIDCallbacks.size > 0) {\r\n            let callbacks = this._myDeleteIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id); });\r\n            }\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._mySaveCache.clear();\r\n        PP.SaveUtils.clear();\r\n\r\n        if (this._myClearCallbacks.size > 0) {\r\n            this._myClearCallbacks.forEach(function (callback) { callback(); });\r\n        }\r\n    }\r\n\r\n    load(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"load\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadString(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadString\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadNumber(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadNumber\", overrideCacheEnabled);\r\n    }\r\n\r\n    loadBool(id, defaultValue = null, overrideCacheEnabled = null) {\r\n        return this._load(id, defaultValue, \"loadBool\", overrideCacheEnabled);\r\n    }\r\n\r\n    getCommitSavesDelay() {\r\n        return this._myCommitSavesDelayTimer.getDuration();\r\n    }\r\n\r\n    isDelaySavesCommit() {\r\n        return this._myDelaySavesCommit;\r\n    }\r\n\r\n    isCacheDefaultValueOnFail() {\r\n        return this._myCacheDefaultValueOnFail;\r\n    }\r\n\r\n    isCacheEnabled() {\r\n        return this._myCacheEnabled;\r\n    }\r\n\r\n    _commitSave(id, isCommitSaveDelayed) {\r\n        let value = this._mySaveCache.get(id);\r\n        let failed = false;\r\n\r\n        try {\r\n            PP.SaveUtils.save(id, value);\r\n        } catch (error) {\r\n            failed = true;\r\n        }\r\n\r\n        if (this._myCommitSaveCallbacks.size > 0) {\r\n            this._myCommitSaveCallbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n        }\r\n\r\n        if (this._myCommitSaveIDCallbacks.size > 0) {\r\n            let callbacks = this._myCommitSaveIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, isCommitSaveDelayed, failed); });\r\n            }\r\n        }\r\n\r\n        return failed;\r\n    }\r\n\r\n    _load(id, defaultValue, functionName, overrideCacheEnabled = null) {\r\n        let value = null;\r\n        let failed = false;\r\n        let loadFromCache = false;\r\n\r\n        if (this._mySaveCache.has(id) && this._isCacheEnabled(overrideCacheEnabled)) {\r\n            value = this._mySaveCache.get(id);\r\n\r\n            if (value == null && defaultValue != null) {\r\n                value = defaultValue;\r\n                if (this._myCacheDefaultValueOnFail) {\r\n                    this._mySaveCache.set(id, value);\r\n                }\r\n            }\r\n\r\n            loadFromCache = true;\r\n        } else {\r\n            let saveResult = null;\r\n            try {\r\n                saveResult = PP.SaveUtils[functionName](id, null);\r\n            } catch (error) {\r\n                // Error is managed as if it worked but there was no value\r\n                saveResult = null;\r\n                failed = true;\r\n            }\r\n\r\n            if (saveResult == null) {\r\n                value = defaultValue;\r\n            } else {\r\n                value = saveResult;\r\n            }\r\n\r\n            if (saveResult != null || this._myCacheDefaultValueOnFail) {\r\n                this._mySaveCache.set(id, value);\r\n            } else {\r\n                this._mySaveCache.set(id, null);\r\n            }\r\n        }\r\n\r\n        if (this._myLoadCallbacks.size > 0) {\r\n            this._myLoadCallbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n        }\r\n\r\n        if (this._myLoadIDCallbacks.size > 0) {\r\n            let callbacks = this._myLoadIDCallbacks.get(id);\r\n            if (callbacks != null) {\r\n                callbacks.forEach(function (callback) { callback(id, value, loadFromCache, failed); });\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                this._onXRSessionInterrupt();\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionInterrupt();\r\n    }\r\n\r\n    _onXRSessionInterrupt() {\r\n        this.commitSaves();\r\n    }\r\n\r\n    registerClearEventListener(callbackID, callback) {\r\n        this._myClearCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterClearEventListener(callbackID) {\r\n        this._myClearCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteEventListener(callbackID, callback) {\r\n        this._myDeleteCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteEventListener(callbackID) {\r\n        this._myDeleteCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerDeleteIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myDeleteIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterDeleteIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myDeleteIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myDeleteIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveEventListener(callbackID, callback) {\r\n        this._mySaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveEventListener(callbackID) {\r\n        this._mySaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerSaveValueChangedEventListener(callbackID, callback) {\r\n        this._mySaveValueChangedCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedEventListener(callbackID) {\r\n        this._mySaveValueChangedCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerSaveValueChangedIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._mySaveValueChangedIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterSaveValueChangedIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._mySaveValueChangedIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._mySaveValueChangedIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommitSavesEventListener(callbackID, callback) {\r\n        this._myCommitSavesCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSavesEventListener(callbackID) {\r\n        this._myCommitSavesCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveEventListener(callbackID, callback) {\r\n        this._myCommitSaveCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveEventListener(callbackID) {\r\n        this._myCommitSaveCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCommitSaveIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myCommitSaveIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCommitSaveIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myCommitSaveIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myCommitSaveIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerLoadEventListener(callbackID, callback) {\r\n        this._myLoadCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadEventListener(callbackID) {\r\n        this._myLoadCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerLoadIDEventListener(valueID, callbackID, callback) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks == null) {\r\n            this._myLoadIDCallbacks.set(valueID, new Map());\r\n            valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        }\r\n\r\n        valueIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterLoadIDEventListener(valueID, callbackID) {\r\n        let valueIDCallbacks = this._myLoadIDCallbacks.get(valueID);\r\n        if (valueIDCallbacks != null) {\r\n            valueIDCallbacks.delete(callbackID);\r\n\r\n            if (valueIDCallbacks.size <= 0) {\r\n                this._myLoadIDCallbacks.delete(valueID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _isCacheEnabled(overrideCacheEnabled = null) {\r\n        return (this._myCacheEnabled && overrideCacheEnabled == null) || (overrideCacheEnabled != null && overrideCacheEnabled);\r\n    }\r\n};", "PP.Timer = class Timer {\r\n    constructor(duration, autoStart = true) {\r\n        this._myDuration = duration;\r\n        this._myOnEndCallbacks = new Map();     // Signature: callback()\r\n\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n\r\n        if (autoStart) {\r\n            this.start();\r\n        } else {\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    start(duration = null) {\r\n        this.reset(duration);\r\n        this._myStarted = true;\r\n    }\r\n\r\n    end() {\r\n        this._done();\r\n    }\r\n\r\n    reset(duration = null) {\r\n        if (duration != null) {\r\n            this._myDuration = Math.max(0, duration);\r\n        }\r\n\r\n        this._myTimeLeft = this._myDuration;\r\n        this._myDone = false;\r\n        this._myJustDone = false;\r\n        this._myStarted = false;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myJustDone = false;\r\n\r\n        if (this.isRunning()) {\r\n            this._myTimeLeft = Math.max(0, this._myTimeLeft - dt);\r\n            if (this._myTimeLeft == 0) {\r\n                this._done();\r\n            }\r\n        }\r\n    }\r\n\r\n    isDone() {\r\n        return this._myDone;\r\n    }\r\n\r\n    isJustDone() {\r\n        return this._myJustDone;\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    isRunning() {\r\n        return this.isStarted() && !this.isDone();\r\n    }\r\n\r\n    getDuration() {\r\n        return this._myDuration;\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myDuration = Math.max(0, duration);\r\n    }\r\n\r\n    getTimeLeft() {\r\n        return this._myTimeLeft;\r\n    }\r\n\r\n    getPercentage() {\r\n        let percentage = 1;\r\n        if (this._myTimeLeft > 0 && this._myDuration > 0) {\r\n            percentage = (this._myDuration - this._myTimeLeft) / this._myDuration;\r\n        }\r\n        return Math.pp_clamp(percentage, 0, 1);\r\n    }\r\n\r\n    setPercentage(percentage) {\r\n        if (this.isRunning()) {\r\n            let durationPercentage = Math.pp_clamp(1 - percentage, 0, 1);\r\n            this._myTimeLeft = this._myDuration * durationPercentage;\r\n        }\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myOnEndCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myOnEndCallbacks.delete(id);\r\n    }\r\n\r\n    _done() {\r\n        this._myTimeLeft = 0;\r\n        this._myDone = true;\r\n        this._myJustDone = true;\r\n        if (this._myOnEndCallbacks.size > 0) {\r\n            for (let callback of this._myOnEndCallbacks.values()) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-clear-console-on-xr-session-start\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstTime = true;\r\n        WL.onXRSessionStart.push(function () {\r\n            if (this._myFirstTime) {\r\n                this._myFirstTime = false;\r\n                console.clear();\r\n            }\r\n        }.bind(this));\r\n    },\r\n    update: function (dt) {\r\n    }\r\n});", "WL.registerComponent('pp-set-active', {\r\n    _myActive: { type: WL.Type.Bool, default: true },\r\n    _mySetActiveOn: { type: WL.Type.Enum, values: ['self', 'children', 'descendants', 'hierarchy'], default: 'hierarchy' },\r\n    _mySetActiveWhen: { type: WL.Type.Enum, values: ['init', 'start', 'first_update'], default: 'init' },\r\n}, {\r\n    init: function () {\r\n        if (this.active && this._mySetActiveWhen == 0) {\r\n            this._setActive();\r\n        }\r\n    },\r\n    start: function () {\r\n        if (this._mySetActiveWhen == 1) {\r\n            this._setActive();\r\n        }\r\n        this._myFirst = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetActiveWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._setActive();\r\n        }\r\n    },\r\n    _setActive() {\r\n        if (this._mySetActiveOn == 0) {\r\n            this.object.pp_setActiveSelf(this._myActive);\r\n        } else if (this._mySetActiveOn == 1) {\r\n            this.object.pp_setActiveChildren(this._myActive);\r\n        } else if (this._mySetActiveOn == 2) {\r\n            this.object.pp_setActiveDescendants(this._myActive);\r\n        } else {\r\n            this.object.pp_setActiveHierarchy(this._myActive);\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-adjust-hierarchy-physx-scale', {\r\n    _myWhen: { type: WL.Type.Enum, values: ['init', 'start', 'first_update'], default: 'start' },\r\n}, {\r\n    init: function () {\r\n        if (this.active && this._myWhen == 0) {\r\n            this._adjustScale();\r\n        }\r\n    },\r\n    start: function () {\r\n        if (this._myWhen == 1) {\r\n            this._adjustScale();\r\n        }\r\n        this._myFirst = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myWhen == 2 && this._myFirst) {\r\n            this._myFirst = false;\r\n            this._adjustScale();\r\n        }\r\n    },\r\n    _adjustScale() {\r\n        let scale = this.object.pp_getScale();\r\n        let physXComponents = this.object.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physX of physXComponents) {\r\n            physX.extents[0] = physX.extents[0] * scale[0];\r\n            physX.extents[1] = physX.extents[1] * scale[1];\r\n            physX.extents[2] = physX.extents[2] * scale[2];\r\n\r\n            if (physX.active) {\r\n                physX.active = false;\r\n                physX.active = true;\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-get-player-objects\", {\r\n    _myPlayer: { type: WL.Type.Object },\r\n    _myPlayerPivot: { type: WL.Type.Object },   // if u don't have a pivot under the player you set this to null, by default will be the same as the player\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myEyeLeft: { type: WL.Type.Object },\r\n    _myEyeRight: { type: WL.Type.Object },\r\n    _myHead: { type: WL.Type.Object },\r\n    _myNonVRHead: { type: WL.Type.Object },\r\n    _myVRHead: { type: WL.Type.Object },\r\n    _myHandLeft: { type: WL.Type.Object },\r\n    _myHandRight: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n        PP.myPlayerObjects.myPlayer = this._myPlayer;\r\n        PP.myPlayerObjects.myPlayerPivot = this._myPlayerPivot;\r\n        PP.myPlayerObjects.myNonVRCamera = this._myNonVRCamera;\r\n        PP.myPlayerObjects.myHead = this._myHead;\r\n        PP.myPlayerObjects.myNonVRHead = this._myNonVRHead;\r\n        PP.myPlayerObjects.myVRHead = this._myVRHead;\r\n        PP.myPlayerObjects.myEyeLeft = this._myEyeLeft;\r\n        PP.myPlayerObjects.myEyeRight = this._myEyeRight;\r\n        PP.myPlayerObjects.myHandLeft = this._myHandLeft;\r\n        PP.myPlayerObjects.myHandRight = this._myHandRight;\r\n\r\n        PP.myPlayerObjects.myEyes = [];\r\n        PP.myPlayerObjects.myEyes[PP.Handedness.LEFT] = this._myEyeLeft;\r\n        PP.myPlayerObjects.myEyes[PP.Handedness.RIGHT] = this._myEyeRight;\r\n\r\n        PP.myPlayerObjects.myHands = [];\r\n        PP.myPlayerObjects.myHands[PP.Handedness.LEFT] = this._myHandLeft;\r\n        PP.myPlayerObjects.myHands[PP.Handedness.RIGHT] = this._myHandRight;\r\n\r\n        if (PP.myPlayerObjects.myPlayerPivot == null) {\r\n            PP.myPlayerObjects.myPlayerPivot = PP.myPlayerObjects.myPlayer;\r\n        }\r\n    }\r\n});\r\n\r\nPP.myPlayerObjects = {\r\n    myPlayer: null,\r\n    myPlayerPivot: null,\r\n    myNonVRCamera: null,\r\n    myNonVRHead: null,\r\n    myVRHead: null,\r\n    myHead: null,\r\n    myEyeLeft: null,\r\n    myEyeRight: null,\r\n    myEyes: [],\r\n    myHandLeft: null,\r\n    myHandRight: null,\r\n    myHands: [],\r\n};", "WL.registerComponent('pp-get-default-resources', {\r\n    _myPlane: { type: WL.Type.Mesh },\r\n    _myCube: { type: WL.Type.Mesh },\r\n    _mySphere: { type: WL.Type.Mesh },\r\n    _myCone: { type: WL.Type.Mesh },\r\n    _myCylinder: { type: WL.Type.Mesh },\r\n    _myCircle: { type: WL.Type.Mesh },\r\n\r\n    _myFlatOpaque: { type: WL.Type.Material },\r\n    _myFlatTransparentNoDepth: { type: WL.Type.Material },\r\n    _myPhongOpaque: { type: WL.Type.Material },\r\n    _myText: { type: WL.Type.Material },\r\n\r\n}, {\r\n    init() {\r\n        PP.myDefaultResources.myMeshes.myPlane = PP.MeshUtils.cloneMesh(this._myPlane);\r\n        PP.myDefaultResources.myMeshes.myCube = PP.MeshUtils.cloneMesh(this._myCube);\r\n        PP.myDefaultResources.myMeshes.mySphere = PP.MeshUtils.cloneMesh(this._mySphere);\r\n        PP.myDefaultResources.myMeshes.myCone = PP.MeshUtils.cloneMesh(this._myCone);\r\n        PP.myDefaultResources.myMeshes.myCylinder = PP.MeshUtils.cloneMesh(this._myCylinder);\r\n        PP.myDefaultResources.myMeshes.myCircle = PP.MeshUtils.cloneMesh(this._myCircle);\r\n\r\n        PP.myDefaultResources.myMeshes.myInvertedCube = PP.MeshUtils.invertMesh(this._myCube);\r\n        PP.myDefaultResources.myMeshes.myInvertedSphere = PP.MeshUtils.invertMesh(this._mySphere);\r\n        PP.myDefaultResources.myMeshes.myInvertedCone = PP.MeshUtils.invertMesh(this._myCone);\r\n        PP.myDefaultResources.myMeshes.myInvertedCylinder = PP.MeshUtils.invertMesh(this._myCylinder);\r\n\r\n        if (this._myFlatOpaque != null) {\r\n            PP.myDefaultResources.myMaterials.myFlatOpaque = this._myFlatOpaque.clone();\r\n        }\r\n\r\n        if (this._myFlatTransparentNoDepth != null) {\r\n            PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth = this._myFlatTransparentNoDepth.clone();\r\n        }\r\n\r\n        if (this._myPhongOpaque != null) {\r\n            PP.myDefaultResources.myMaterials.myPhongOpaque = this._myPhongOpaque.clone();\r\n        }\r\n\r\n        if (this._myText != null) {\r\n            PP.myDefaultResources.myMaterials.myText = this._myText.clone();\r\n        }\r\n    }\r\n});\r\n\r\nPP.myDefaultResources = {\r\n    myMeshes: {\r\n        myPlane: null,\r\n        myCube: null,\r\n        mySphere: null,\r\n        myCone: null,\r\n        myCylinder: null,\r\n        myCircle: null,\r\n\r\n        myInvertedCube: null,\r\n        myInvertedSphere: null,\r\n        myInvertedCone: null,\r\n        myInvertedCylinder: null\r\n    },\r\n    myMaterials: {\r\n        myFlatOpaque: null,\r\n        myFlatTransparentNoDepth: null, // for now the pipeline needs to be the last one to make this work properly\r\n        myPhongOpaque: null,\r\n        myText: null,\r\n    }\r\n};", "WL.registerComponent('pp-show-fps', {\r\n    _myRefreshSeconds: { type: WL.Type.Float, default: 0.25 },\r\n    _myTextMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start() {\r\n        this._myTimer = new PP.Timer(this._myRefreshSeconds);\r\n        this._myTotalDT = 0;\r\n        this._myFrames = 0;\r\n\r\n        this._myVisualFPSParent = this.object.pp_addObject();\r\n\r\n        let visualParams = new PP.VisualTextParams();\r\n        visualParams.myText = \"00\";\r\n\r\n        visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.115, -0.115, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n\r\n        if (this._myTextMaterial != null) {\r\n            visualParams.myMaterial = this._myTextMaterial.clone();\r\n        } else {\r\n            visualParams.myMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n            visualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\n        }\r\n\r\n        visualParams.myParent = this._myVisualFPSParent;\r\n        visualParams.myIsLocal = true;\r\n\r\n        this._myVisualFPS = new PP.VisualText(visualParams);\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS X\", -0.25, 0.1, 3));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS Y\", -0.130, 0.1, 3));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"FPS Z\", 0.35, 0.1, 3));\r\n    },\r\n    update: function () {\r\n        let playerTransformQuat = PP.quat2_create();\r\n        return function update(dt) {\r\n            this._myTotalDT += dt;\r\n            this._myFrames++;\r\n\r\n            this._myTimer.update(dt);\r\n            if (this._myTimer.isDone()) {\r\n                this._myTimer.start();\r\n\r\n                let fps = Math.round(this._myFrames / this._myTotalDT);\r\n\r\n                let visualParams = this._myVisualFPS.getParams();\r\n\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.115, -0.115, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n                } else {\r\n                    visualParams.myTransform.mat4_setPositionRotationScale(PP.vec3_create(-0.25, -0.130, 0.35), PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n                }\r\n\r\n                //visualParams.myTransform.mat4_setPositionRotationScale([PP.myEasyTuneVariables.get(\"FPS X\"), PP.myEasyTuneVariables.get(\"FPS Y\"), PP.myEasyTuneVariables.get(\"FPS Z\")], PP.vec3_create(0, 180, 0), PP.vec3_create(0.3, 0.3, 0.3));\r\n\r\n                visualParams.myText = fps.toFixed(0);\r\n                this._myVisualFPS.paramsUpdated();\r\n\r\n                this._myTotalDT = 0;\r\n                this._myFrames = 0;\r\n            }\r\n\r\n            this._myVisualFPSParent.pp_setTransformQuat(PP.myPlayerObjects.myHead.pp_getTransformQuat(playerTransformQuat));\r\n        };\r\n    }()\r\n});", "/*\r\n    You can also use plain functions for state/transition if u want to do something simple and quick\r\n\r\n    Signatures:\r\n        function stateUpdate(dt, fsm)\r\n        function init(fsm, initStateData)\r\n        function transition(fsm, transitionData)\r\n*/\r\n\r\nPP.StateData = class StateData {\r\n    constructor(stateID, stateObject) {\r\n        this.myID = stateID;\r\n        this.myObject = stateObject;\r\n    }\r\n};\r\n\r\nPP.TransitionData = class TransitionData {\r\n    constructor(transitionID, fromStateData, toStateData, transitionObject, skipStateFunction) {\r\n        this.myID = transitionID;\r\n        this.myFromState = fromStateData;\r\n        this.myToState = toStateData;\r\n        this.myObject = transitionObject;\r\n        this.mySkipStateFunction = skipStateFunction;\r\n    }\r\n};\r\n\r\nPP.PendingPerform = class PendingPerform {\r\n    constructor(transitionID, ...args) {\r\n        this.myID = transitionID;\r\n        this.myArgs = args;\r\n    }\r\n};\r\n\r\nPP.PerformMode = {\r\n    IMMEDIATE: 0,\r\n    DELAYED: 1\r\n};\r\n\r\nPP.PerformDelayedMode = {\r\n    QUEUE: 0,\r\n    KEEP_FIRST: 1,\r\n    KEEP_LAST: 2\r\n};\r\n\r\nPP.SkipStateFunction = {\r\n    NONE: 0,\r\n    END: 1,\r\n    START: 2,\r\n    BOTH: 3\r\n};\r\n\r\nPP.FSM = class FSM {\r\n\r\n    constructor(performMode = PP.PerformMode.IMMEDIATE, performDelayedMode = PP.PerformDelayedMode.QUEUE) {\r\n        this._myCurrentStateData = null;\r\n\r\n        this._myStates = new Map();\r\n        this._myTransitions = new Map();\r\n\r\n        this._myDebugLogActive = false;\r\n        this._myDebugShowDelayedInfo = false;\r\n        this._myDebugLogName = \"FSM\";\r\n\r\n        this._myPerformMode = performMode;\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n        this._myPendingPerforms = [];\r\n        this._myCurrentlyPerformedTransition = null;\r\n\r\n        this._myInitCallbacks = new Map();            // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myInitIDCallbacks = new Map();          // Signature: callback(fsm, initStateData, initTransitionObject, ...args)\r\n        this._myTransitionCallbacks = new Map();      // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n        this._myTransitionIDCallbacks = [];           // Signature: callback(fsm, fromStateData, toStateData, transitionData, performMode, ...args)\r\n    }\r\n\r\n    addState(stateID, state = null) {\r\n        let stateObject = null;\r\n        if (!state || typeof state == 'function') {\r\n            stateObject = {};\r\n            if (typeof state == 'function') {\r\n                stateObject.update = function update() { return state(...arguments); };\r\n            } else {\r\n                stateObject.update = null;\r\n            }\r\n            stateObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.update = this.update;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            stateObject = state;\r\n        }\r\n\r\n        let stateData = new PP.StateData(stateID, stateObject);\r\n        this._myStates.set(stateID, stateData);\r\n        this._myTransitions.set(stateID, new Map());\r\n    }\r\n\r\n    addTransition(fromStateID, toStateID, transitionID, transition = null, skipStateFunction = PP.SkipStateFunction.NONE) {\r\n        let transitionObject = null;\r\n        if (!transition || typeof transition == 'function') {\r\n            transitionObject = {};\r\n            if (typeof transition == 'function') {\r\n                transitionObject.perform = function perform() { return transition(...arguments); };\r\n            } else {\r\n                transitionObject.perform = null;\r\n            }\r\n            transitionObject.clone = function clone() {\r\n                let cloneObject = {};\r\n                cloneObject.perform = this.perform;\r\n                cloneObject.clone = this.clone;\r\n                return cloneObject;\r\n            };\r\n        } else {\r\n            transitionObject = transition;\r\n        }\r\n\r\n        if (this.hasState(fromStateID) && this.hasState(toStateID)) {\r\n            let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n            let transitionData = new PP.TransitionData(transitionID, this.getState(fromStateID), this.getState(toStateID), transitionObject, skipStateFunction);\r\n            transitionsFromState.set(transitionID, transitionData);\r\n        } else {\r\n            if (!this.hasState(fromStateID) && !this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID, \"- to state not found:\", toStateID);\r\n            } else if (!this.hasState(fromStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- from state not found:\", fromStateID);\r\n            } else if (!this.hasState(toStateID)) {\r\n                console.error(\"Can't add transition:\", transitionID, \"- to state not found:\", toStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    init(initStateID, initTransition = null, ...args) {\r\n        let initTransitionObject = initTransition;\r\n        if (initTransition && typeof initTransition == 'function') {\r\n            initTransitionObject = {};\r\n            initTransitionObject.performInit = initTransition;\r\n        }\r\n\r\n        if (this.hasState(initStateID)) {\r\n            let initStateData = this._myStates.get(initStateID);\r\n\r\n            if (this._myDebugLogActive) {\r\n                console.log(this._myDebugLogName, \"- Init:\", initStateID);\r\n            }\r\n\r\n            if (initTransitionObject && initTransitionObject.performInit) {\r\n                initTransitionObject.performInit(this, initStateData, ...args);\r\n            } else if (initStateData.myObject && initStateData.myObject.init) {\r\n                initStateData.myObject.init(this, initStateData, ...args);\r\n            }\r\n\r\n            this._myCurrentStateData = initStateData;\r\n\r\n            if (this._myInitCallbacks.size > 0) {\r\n                this._myInitCallbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n            }\r\n\r\n            if (this._myInitIDCallbacks.size > 0) {\r\n                let callbacks = this._myInitIDCallbacks.get(initStateID);\r\n                if (callbacks != null) {\r\n                    callbacks.forEach(function (callback) { callback(this, initStateData, initTransitionObject, ...args); }.bind(this));\r\n                }\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            console.warn(this._myDebugLogName, \"- Init state not found:\", initStateID);\r\n        }\r\n    }\r\n\r\n    update(dt, ...args) {\r\n        if (this._myPendingPerforms.length > 0) {\r\n            for (let i = 0; i < this._myPendingPerforms.length; i++) {\r\n                this._perform(this._myPendingPerforms[i].myID, PP.PerformMode.DELAYED, ...this._myPendingPerforms[i].myArgs);\r\n            }\r\n            this._myPendingPerforms = [];\r\n        }\r\n\r\n        if (this._myCurrentStateData && this._myCurrentStateData.myObject && this._myCurrentStateData.myObject.update) {\r\n            this._myCurrentStateData.myObject.update(dt, this, ...args);\r\n        }\r\n    }\r\n\r\n    perform(transitionID, ...args) {\r\n        if (this._myPerformMode == PP.PerformMode.DELAYED) {\r\n            this.performDelayed(transitionID, ...args);\r\n        } else {\r\n            this.performImmediate(transitionID, ...args);\r\n        }\r\n    }\r\n\r\n    performDelayed(transitionID, ...args) {\r\n        let performDelayed = false;\r\n\r\n        switch (this._myPerformDelayedMode) {\r\n            case PP.PerformDelayedMode.QUEUE:\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n            case PP.PerformDelayedMode.KEEP_FIRST:\r\n                if (!this.hasPendingPerforms()) {\r\n                    this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                    performDelayed = true;\r\n                }\r\n                break;\r\n            case PP.PerformDelayedMode.KEEP_LAST:\r\n                this.resetPendingPerforms();\r\n                this._myPendingPerforms.push(new PP.PendingPerform(transitionID, ...args));\r\n                performDelayed = true;\r\n                break;\r\n        }\r\n\r\n        return performDelayed;\r\n    }\r\n\r\n    performImmediate(transitionID, ...args) {\r\n        return this._perform(transitionID, PP.PerformMode.IMMEDIATE, ...args);\r\n    }\r\n\r\n    canPerform(transitionID) {\r\n        return this.hasTransitionFromState(this._myCurrentStateData.myID, transitionID);\r\n    }\r\n\r\n    canGoTo(stateID, transitionID = null) {\r\n        return this.hasTransitionFromStateToState(this._myCurrentStateData.myID, stateID, transitionID);\r\n    }\r\n\r\n    isInState(stateID) {\r\n        return this._myCurrentStateData != null && this._myCurrentStateData.myID == stateID;\r\n    }\r\n\r\n    isPerformingTransition() {\r\n        return this._myCurrentlyPerformedTransition != null;\r\n    }\r\n\r\n    getCurrentlyPerformedTransition() {\r\n        return this._myCurrentlyPerformedTransition;\r\n    }\r\n\r\n    hasBeenInit() {\r\n        return this._myCurrentStateData != null;\r\n    }\r\n\r\n    reset() {\r\n        this.resetState();\r\n        this.resetPendingPerforms();\r\n    }\r\n\r\n    resetState() {\r\n        this._myCurrentStateData = null;\r\n    }\r\n\r\n    resetPendingPerforms() {\r\n        this._myPendingPerforms = [];\r\n    }\r\n\r\n    getCurrentState() {\r\n        return this._myCurrentStateData;\r\n    }\r\n\r\n    getCurrentTransitions() {\r\n        return this.getTransitionsFromState(this._myCurrentStateData.myID);\r\n    }\r\n\r\n    getCurrentTransitionsToState(stateID) {\r\n        return this.getTransitionsFromStateToState(this._myCurrentStateData.myID, stateID);\r\n    }\r\n\r\n    getState(stateID) {\r\n        return this._myStates.get(stateID);\r\n    }\r\n\r\n    getStates() {\r\n        return this._myStates.values();\r\n    }\r\n\r\n    getTransitions() {\r\n        let transitions = [];\r\n\r\n        for (let transitionsFromState of this._myTransitions.values()) {\r\n            for (let transitionData of transitionsFromState.values()) {\r\n                transitions.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitions;\r\n    }\r\n\r\n    getTransitionsFromState(fromStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n        return Array.from(transitionsFromState.values());\r\n    }\r\n\r\n    getTransitionsFromStateToState(fromStateID, toStateID) {\r\n        let transitionsFromState = this._getTransitionsFromState(fromStateID);\r\n\r\n        let transitionsToState = [];\r\n        for (let transitionData of transitionsFromState.values()) {\r\n            if (transitionData.myToState.myID == toStateID) {\r\n                transitionsToState.push(transitionData);\r\n            }\r\n        }\r\n\r\n        return transitionsToState;\r\n    }\r\n\r\n    removeState(stateID) {\r\n        if (this.hasState(stateID)) {\r\n            this._myStates.delete(stateID);\r\n            this._myTransitions.delete(stateID);\r\n\r\n            for (let transitionsFromState of this._myTransitions.values()) {\r\n                let toDelete = [];\r\n                for (let [transitionID, transitionData] of transitionsFromState.entries()) {\r\n                    if (transitionData.myToState.myID == stateID) {\r\n                        toDelete.push(transitionID);\r\n                    }\r\n                }\r\n\r\n                for (let transitionID of toDelete) {\r\n                    transitionsFromState.delete(transitionID);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    removeTransitionFromState(fromStateID, transitionID) {\r\n        let fromTransitions = this._getTransitionsFromState(fromStateID);\r\n        if (fromTransitions) {\r\n            return fromTransitions.delete(transitionID);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    hasState(stateID) {\r\n        return this._myStates.has(stateID);\r\n    }\r\n\r\n    hasTransitionFromState(fromStateID, transitionID) {\r\n        let transitions = this.getTransitionsFromState(fromStateID);\r\n\r\n        let transitionIndex = transitions.findIndex(function (transition) {\r\n            return transition.myID == transitionID;\r\n        });\r\n\r\n        return transitionIndex >= 0;\r\n    }\r\n\r\n    hasTransitionFromStateToState(fromStateID, toStateID, transitionID = null) {\r\n        let transitions = this.getTransitionsFromStateToState(fromStateID, toStateID);\r\n\r\n        let hasTransition = false;\r\n        if (transitionID) {\r\n            let transitionIndex = transitions.findIndex(function (transition) {\r\n                return transition.myID == transitionID;\r\n            });\r\n\r\n            hasTransition = transitionIndex >= 0;\r\n        } else {\r\n            hasTransition = transitions.length > 0;\r\n        }\r\n\r\n        return hasTransition;\r\n    }\r\n\r\n    setPerformMode(performMode) {\r\n        this._myPerformMode = performMode;\r\n    }\r\n\r\n    getPerformMode() {\r\n        return this._myPerformMode;\r\n    }\r\n\r\n    setPerformDelayedMode(performDelayedMode) {\r\n        this._myPerformDelayedMode = performDelayedMode;\r\n    }\r\n\r\n    getPerformDelayedMode() {\r\n        return this._myPerformDelayedMode;\r\n    }\r\n\r\n    hasPendingPerforms() {\r\n        return this._myPendingPerforms.length > 0;\r\n    }\r\n\r\n    getPendingPerforms() {\r\n        return this._myPendingPerforms.slice(0);\r\n    }\r\n\r\n    clone(deepClone = false) {\r\n        if (!this.isCloneable(deepClone)) {\r\n            return null;\r\n        }\r\n\r\n        let cloneFSM = new PP.FSM();\r\n\r\n        cloneFSM._myDebugLogActive = this._myDebugLogActive;\r\n        cloneFSM._myDebugShowDelayedInfo = this._myDebugShowDelayedInfo;\r\n        cloneFSM._myDebugLogName = this._myDebugLogName.slice(0);\r\n\r\n        cloneFSM._myPerformMode = this._myPerformMode;\r\n        cloneFSM._myPerformDelayedMode = this._myPerformDelayedMode;\r\n        cloneFSM._myPendingPerforms = this._myPendingPerforms.slice(0);\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            let stateData = null;\r\n\r\n            if (deepClone) {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject.clone());\r\n            } else {\r\n                stateData = new PP.StateData(entry[1].myID, entry[1].myObject);\r\n            }\r\n\r\n            cloneFSM._myStates.set(stateData.myID, stateData);\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            let transitionsFromState = new Map();\r\n            cloneFSM._myTransitions.set(entry[0], transitionsFromState);\r\n\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                let transitionData = null;\r\n\r\n                let fromState = cloneFSM.getState(transitonEntry[1].myFromState.myID);\r\n                let toState = cloneFSM.getState(transitonEntry[1].myToState.myID);\r\n\r\n                if (deepClone) {\r\n                    transitionData = new PP.TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject.clone(), transitonEntry[1].mySkipStateFunction);\r\n                } else {\r\n                    transitionData = new PP.TransitionData(transitonEntry[1].myID, fromState, toState, transitonEntry[1].myObject, transitonEntry[1].mySkipStateFunction);\r\n                }\r\n\r\n                transitionsFromState.set(transitionData.myID, transitionData);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            cloneFSM._myCurrentStateData = cloneFSM.getState(this._myCurrentStateData.myID);\r\n        }\r\n\r\n        return cloneFSM;\r\n    }\r\n\r\n    isCloneable(deepClone = false) {\r\n        if (!deepClone) {\r\n            return true;\r\n        }\r\n\r\n        let isDeepCloneable = true;\r\n\r\n        for (let entry of this._myStates.entries()) {\r\n            isDeepCloneable = isDeepCloneable && entry[1].myObject.clone != null;\r\n        }\r\n\r\n        for (let entry of this._myTransitions.entries()) {\r\n            for (let transitonEntry of entry[1].entries()) {\r\n                isDeepCloneable = isDeepCloneable && transitonEntry[1].myObject.clone != null;\r\n            }\r\n        }\r\n\r\n        return isDeepCloneable;\r\n    }\r\n\r\n    setDebugLogActive(active, debugLogName = null, showDelayedInfo = false) {\r\n        this._myDebugLogActive = active;\r\n        this._myDebugShowDelayedInfo = showDelayedInfo;\r\n        if (debugLogName) {\r\n            this._myDebugLogName = \"FSM: \".concat(debugLogName);\r\n        }\r\n    }\r\n\r\n    registerInitEventListener(callbackID, callback) {\r\n        this._myInitCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitEventListener(callbackID) {\r\n        this._myInitCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerInitIDEventListener(initStateID, callbackID, callback) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks == null) {\r\n            this._myInitIDCallbacks.set(initStateID, new Map());\r\n            initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        }\r\n\r\n        initStateIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterInitIDEventListener(initStateID, callbackID) {\r\n        let initStateIDCallbacks = this._myInitIDCallbacks.get(initStateID);\r\n        if (initStateIDCallbacks != null) {\r\n            initStateIDCallbacks.delete(callbackID);\r\n\r\n            if (initStateIDCallbacks.size <= 0) {\r\n                this._myInitIDCallbacks.delete(initStateID);\r\n            }\r\n        }\r\n    }\r\n\r\n    registerTransitionEventListener(callbackID, callback) {\r\n        this._myTransitionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionEventListener(callbackID) {\r\n        this._myTransitionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    //the fsm IDs can be null, that means that the callback is called whenever only the valid IDs match\r\n    //this let you register to all the transitions with a specific ID and from of a specific state but to every state (toStateID == null)\r\n    registerTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID, callback) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks == null) {\r\n            let transitionIDCallbacks = [];\r\n            transitionIDCallbacks[0] = fromStateID;\r\n            transitionIDCallbacks[1] = toStateID;\r\n            transitionIDCallbacks[2] = transitionID;\r\n            transitionIDCallbacks[3] = new Map();\r\n\r\n            internalTransitionIDCallbacks = transitionIDCallbacks[3];\r\n\r\n            this._myTransitionIDCallbacks.push(transitionIDCallbacks);\r\n        }\r\n\r\n        internalTransitionIDCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterTransitionIDEventListener(fromStateID, toStateID, transitionID, callbackID) {\r\n        let internalTransitionIDCallbacks = null;\r\n        for (let value of this._myTransitionIDCallbacks) {\r\n            if (value[0] == fromStateID && value[1] == toStateID && value[2] == transitionID) {\r\n                internalTransitionIDCallbacks = value[3];\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (internalTransitionIDCallbacks != null) {\r\n            internalTransitionIDCallbacks.delete(callbackID);\r\n\r\n            if (internalTransitionIDCallbacks.size <= 0) {\r\n                this._myTransitionIDCallbacks.pp_remove(element => element[0] == fromStateID && element[1] == toStateID && element[2] == transitionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    _perform(transitionID, performMode, ...args) {\r\n        if (this.isPerformingTransition()) {\r\n            let currentlyPerformedTransition = this.getCurrentlyPerformedTransition();\r\n            let consoleArguments = [this._myDebugLogName, \"- Trying to perform:\", transitionID];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            consoleArguments.push(\"- But another transition is currently being performed -\", currentlyPerformedTransition.myID);\r\n            console.warn(...consoleArguments);\r\n\r\n            return false;\r\n        }\r\n\r\n        if (this._myCurrentStateData) {\r\n            if (this.canPerform(transitionID)) {\r\n                let transitions = this._myTransitions.get(this._myCurrentStateData.myID);\r\n                let transitionToPerform = transitions.get(transitionID);\r\n\r\n                this._myCurrentlyPerformedTransition = transitionToPerform;\r\n\r\n                let fromState = this._myCurrentStateData;\r\n                let toState = this._myStates.get(transitionToPerform.myToState.myID);\r\n\r\n                if (this._myDebugLogActive) {\r\n                    let consoleArguments = [this._myDebugLogName, \"- From:\", fromState.myID, \"- To:\", toState.myID, \"- With:\", transitionID];\r\n                    if (this._myDebugShowDelayedInfo) {\r\n                        consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                    }\r\n                    console.log(...consoleArguments);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.END && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    fromState.myObject && fromState.myObject.end) {\r\n                    fromState.myObject.end(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.myObject && transitionToPerform.myObject.perform) {\r\n                    transitionToPerform.myObject.perform(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                if (transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.START && transitionToPerform.mySkipStateFunction != PP.SkipStateFunction.BOTH &&\r\n                    toState.myObject && toState.myObject.start) {\r\n                    toState.myObject.start(this, transitionToPerform, ...args);\r\n                }\r\n\r\n                this._myCurrentStateData = transitionToPerform.myToState;\r\n\r\n                if (this._myTransitionCallbacks.size > 0) {\r\n                    this._myTransitionCallbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                }\r\n\r\n                if (this._myTransitionIDCallbacks.length > 0) {\r\n                    let internalTransitionIDCallbacks = [];\r\n                    for (let value of this._myTransitionIDCallbacks) {\r\n                        if ((value[0] == null || value[0] == fromState.myID) &&\r\n                            (value[1] == null || value[1] == toState.myID) &&\r\n                            (value[2] == null || value[2] == transitionToPerform.myID)) {\r\n                            internalTransitionIDCallbacks.push(value[3]);\r\n                        }\r\n                    }\r\n\r\n                    for (let callbacks of this.internalTransitionIDCallbacks) {\r\n                        callbacks.forEach(function (callback) { callback(this, fromState, toState, transitionToPerform, performMode, ...args); }.bind(this));\r\n                    }\r\n                }\r\n\r\n                this._myCurrentlyPerformedTransition = null;\r\n\r\n                return true;\r\n            } else if (this._myDebugLogActive) {\r\n                let consoleArguments = [this._myDebugLogName, \"- No Transition:\", transitionID, \"- From:\", this._myCurrentStateData.myID];\r\n                if (this._myDebugShowDelayedInfo) {\r\n                    consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n                }\r\n                console.warn(...consoleArguments);\r\n            }\r\n        } else if (this._myDebugLogActive) {\r\n            let consoleArguments = [this._myDebugLogName, \"- FSM not initialized yet\"];\r\n            if (this._myDebugShowDelayedInfo) {\r\n                consoleArguments.push(performMode == PP.PerformMode.DELAYED ? \"- Delayed\" : \"- Immediate\");\r\n            }\r\n            console.warn(...consoleArguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _getTransitionsFromState(fromStateID) {\r\n        return this._myTransitions.get(fromStateID);\r\n    }\r\n};", "/*\r\n    There is no need to inherit from this state, especially since states can be only functions\r\n    It's more like an example of what is needed\r\n    \r\n    If you don't specify some functions the fsm will just skip them\r\n    Or consider them always valid\r\n\r\n    The param state is of type PP.StateData and can be used to retrieve the stateID and other data\r\n    The param transition is of type PP.TransitionData and can be used to retrieve the transitionID, the from and to states and other data\r\n*/\r\n\r\nPP.State = class State {\r\n\r\n    //Called every frame if this is the current state\r\n    //You can retrieve this state data by calling fsm.getCurrentState()\r\n    update(dt, fsm, ...args) {\r\n    }\r\n\r\n    //Called when the fsm is started with this init state if no init transition object is specified or it does not have a performInit function\r\n    //Since the state is set as the current one after the init, you can't use fsm.getCurrentState() to get it, so it is forwarded as a param if needed\r\n    init(fsm, state, ...args) {\r\n    }\r\n\r\n    //Called when entering this state if no transition object is specified or it does not have a perform function\r\n    //You can get this state data by accesing to the to state data inside the transition\r\n    start(fsm, transition, ...args) {\r\n    }\r\n\r\n    //Called when exiting this state if no transition function is specified\r\n    //You can get this state data by accesing to the from state data inside the transition\r\n    end(fsm, transition, ...args) {\r\n    }\r\n\r\n};", "/*\r\n    There is no need to inherit from this transition, especially since states can be only transitions\r\n    It's more like an example of what is needed\r\n    \r\n    The param transition (forwarded at the end every function) is of type PP.TransitionData and can be used to retrieve the transitionID and other data\r\n    The initState param is of type PP.StateData and can be used to retrieve the stateID and other data\r\n*/\r\n\r\nPP.Transition = class Transition {\r\n\r\n    //Called if this is used as an init transition for the fsm\r\n    performInit(fsm, initState, ...args) {\r\n\r\n    }\r\n\r\n    //Called when performing a transition\r\n    //You can find the from and to states inside the transition params\r\n    perform(fsm, transition, ...args) {\r\n    }\r\n\r\n};", "PP.TimerState = class TimerState extends PP.State {\r\n    constructor(duration = 0, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        super();\r\n\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n\r\n        this._myTimer = new PP.Timer(duration, false);\r\n    }\r\n\r\n    setDuration(duration) {\r\n        this._myTimer.setDuration(duration);\r\n    }\r\n\r\n    setTransitionToPerformOnEnd(transitionToPerformOnEnd, ...transitionArgs) {\r\n        this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n        this._myTransitionArgs = transitionArgs;\r\n    }\r\n\r\n    onEnd(callback, id = null) {\r\n        this._myTimer.onEnd(callback, id);\r\n    }\r\n\r\n    unregisterOnEnd(id = null) {\r\n        this._myTimer.unregisterOnEnd(id);\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myTimer.update(dt);\r\n        if (this._myTimer.isDone()) {\r\n            if (this._myTransitionToPerformOnEnd != null) {\r\n                fsm.perform(this._myTransitionToPerformOnEnd, ...this._myTransitionArgs);\r\n            }\r\n        }\r\n    }\r\n\r\n    start(fsm, transition, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n\r\n    init(fsm, state, duration = null, transitionToPerformOnEnd = null, ...transitionArgs) {\r\n        this._myTimer.start(duration);\r\n        if (transitionToPerformOnEnd != null) {\r\n            this._myTransitionToPerformOnEnd = transitionToPerformOnEnd;\r\n            this._myTransitionArgs = transitionArgs;\r\n        }\r\n    }\r\n};", "PP.ColorUtils = {\r\n    //RGB is in [0,1], alpha is not changed\r\n    rgbToHsv: function (rgb) {\r\n        let hsv = rgb.pp_clone();\r\n\r\n        let r = rgb[0];\r\n        let g = rgb[1];\r\n        let b = rgb[2];\r\n\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n            d = max - min,\r\n            h,\r\n            s = (max === 0 ? 0 : d / max),\r\n            v = max;\r\n\r\n        switch (max) {\r\n            case min: h = 0; break;\r\n            case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n            case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n            case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n        }\r\n\r\n        hsv[0] = h;\r\n        hsv[1] = s;\r\n        hsv[2] = v;\r\n\r\n        return hsv;\r\n    },\r\n    //alpha is not changed\r\n    hsvToRgb: function (hsv) {\r\n        let rgb = hsv.pp_clone();\r\n\r\n        let h = hsv[0];\r\n        let s = hsv[1];\r\n        let v = hsv[2];\r\n\r\n        let r, g, b, i, f, p, q, t;\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n\r\n        switch (i % 6) {\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n        }\r\n\r\n        rgb[0] = r;\r\n        rgb[1] = g;\r\n        rgb[2] = b;\r\n\r\n        return rgb;\r\n    },\r\n    rgbCodeToHuman(rgb) {\r\n        return PP.ColorUtils.color1To255(rgb);\r\n    },\r\n    rgbHumanToCode(rgb) {\r\n        return PP.ColorUtils.color255To1(rgb);\r\n    },\r\n    hsvCodeToHuman(hsv) {\r\n        return PP.ColorUtils.color1To255(hsv);\r\n    },\r\n    hsvHumanToCode(hsv) {\r\n        return PP.ColorUtils.color255To1(hsv);\r\n    },\r\n    color255To1(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] /= 255;\r\n            result[i] = Math.pp_clamp(result[i], 0, 1);\r\n        }\r\n\r\n        return result;\r\n    },\r\n    color1To255(color) {\r\n        let result = color.pp_clone();\r\n\r\n        for (let i = 0; i < result.length; i++) {\r\n            result[i] = Math.round(result[i] * 255);\r\n            result[i] = Math.pp_clamp(result[i], 0, 255);\r\n        }\r\n\r\n        return result;\r\n    },\r\n};", "PP.MaterialUtils = {\r\n    setAlpha: function () {\r\n        let color = PP.vec4_create();\r\n        return function setAlpha(material, alpha) {\r\n            if (material.color != null) {\r\n                color.vec4_copy(material.color);\r\n                color[3] = alpha;\r\n                material.color = color;\r\n            }\r\n\r\n            if (material.diffuseColor != null) {\r\n                color.vec4_copy(material.diffuseColor);\r\n                color[3] = alpha;\r\n                material.diffuseColor = color;\r\n            }\r\n\r\n            if (material.ambientColor != null) {\r\n                color.vec4_copy(material.ambientColor);\r\n                color[3] = alpha;\r\n                material.ambientColor = color;\r\n            }\r\n        };\r\n    }(),\r\n    setObjectAlpha: function (object, alpha) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material != null) {\r\n                PP.MaterialUtils.setAlpha(meshComponent.material, alpha);\r\n            }\r\n        }\r\n    },\r\n    setObjectMaterial: function (object, material, cloneMaterial = false) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (cloneMaterial) {\r\n                meshComponent.material = material.clone();\r\n            } else {\r\n                meshComponent.material = material;\r\n            }\r\n        }\r\n    },\r\n    setObjectClonedMaterials: function (object) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            meshComponent.material = meshComponent.material.clone();\r\n        }\r\n    },\r\n    setObjectSpecularColor: function (object, color) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material.specularColor != null) {\r\n                meshComponent.material.specularColor = color;\r\n            }\r\n        }\r\n    },\r\n    setObjectFogColor: function (object, color) {\r\n        let meshComponents = object.pp_getComponentsHierarchy(\"mesh\");\r\n\r\n        for (let meshComponent of meshComponents) {\r\n            if (meshComponent.material.fogColor != null) {\r\n                meshComponent.material.fogColor = color;\r\n            }\r\n        }\r\n    },\r\n};", "PP.MeshCreationVertexParams = class MeshCreationVertexParams {\r\n    constructor() {\r\n        this.myPosition = null;             // vec3\r\n        this.myTextureCoordinates = null;   // vec2\r\n        this.myNormal = null;               // vec3\r\n        this.myColor = null;                // vec4\r\n    }\r\n};\r\n\r\nPP.MeshCreationTriangleParams = class MeshCreationTriangleParams {\r\n    constructor() {\r\n        this.myIndexes = new Uint32Array(3);\r\n    }\r\n};\r\n\r\nPP.MeshCreationParams = class MeshCreationParams {\r\n    constructor() {\r\n        this.myVertexes = [];\r\n        this.myTriangles = [];\r\n    }\r\n};\r\n\r\nPP.MeshUtils = {\r\n    createPlaneMesh: function () {\r\n        let vertexCount = 4;\r\n\r\n        let meshParams = new PP.MeshCreationParams();\r\n\r\n        for (let i = 0; i < vertexCount; ++i) {\r\n            let vertexParams = new PP.MeshCreationVertexParams();\r\n\r\n            vertexParams.myPosition = new PP.vec3_create();\r\n            vertexParams.myPosition[0] = -1 + (i & 1) * 2;\r\n            vertexParams.myPosition[1] = -1 + ((i & 2) >> 1) * 2; // this is a quick way to have positions (-1,-1) (1,-1) (1,-1) (1,1)\r\n            vertexParams.myPosition[2] = 0;\r\n\r\n            vertexParams.myTextureCoordinates = new PP.vec2_create();\r\n            vertexParams.myTextureCoordinates[0] = (i & 1);\r\n            vertexParams.myTextureCoordinates[1] = ((i & 2) >> 1);\r\n\r\n            vertexParams.myNormal = new PP.vec3_create();\r\n            vertexParams.myNormal[0] = 0;\r\n            vertexParams.myNormal[1] = 0;\r\n            vertexParams.myNormal[2] = 1;\r\n\r\n            meshParams.myVertexes.push(vertexParams);\r\n        }\r\n\r\n        let firstTriangle = new PP.MeshCreationTriangleParams();\r\n        firstTriangle.myIndexes[0] = 0;\r\n        firstTriangle.myIndexes[1] = 1;\r\n        firstTriangle.myIndexes[2] = 2;\r\n\r\n        let secondTriangle = new PP.MeshCreationTriangleParams();\r\n        secondTriangle.myIndexes[0] = 2;\r\n        secondTriangle.myIndexes[1] = 1;\r\n        secondTriangle.myIndexes[2] = 3;\r\n\r\n        meshParams.myTriangles.push(firstTriangle);\r\n        meshParams.myTriangles.push(secondTriangle);\r\n\r\n        let mesh = PP.MeshUtils.createMesh(meshParams);\r\n\r\n        return mesh;\r\n    },\r\n    createMesh: function (meshCreationParams) {\r\n        let indexData = [];\r\n        for (let triangle of meshCreationParams.myTriangles) {\r\n            indexData.push(triangle.myIndexes[0]);\r\n            indexData.push(triangle.myIndexes[1]);\r\n            indexData.push(triangle.myIndexes[2]);\r\n        }\r\n\r\n        let indexDataUnsignedInt = new Uint32Array(indexData.length);\r\n        indexDataUnsignedInt.pp_copy(indexData);\r\n\r\n        let vertexCount = meshCreationParams.myVertexes.length;\r\n        let mesh = new WL.Mesh({\r\n            vertexCount: vertexCount,\r\n            indexData: indexDataUnsignedInt,\r\n            indexType: WL.MeshIndexType.UnsignedInt,\r\n        });\r\n\r\n        let positionAttribute = null;\r\n        let textureCoordinatesAttribute = null;\r\n        let normalAttribute = null;\r\n        let colorAttribute = null;\r\n\r\n        try {\r\n            positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n        } catch (error) {\r\n            positionAttribute = null;\r\n        }\r\n\r\n        try {\r\n            textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n        } catch (error) {\r\n            textureCoordinatesAttribute = null;\r\n        }\r\n\r\n        try {\r\n            normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n        } catch (error) {\r\n            normalAttribute = null;\r\n        }\r\n\r\n        try {\r\n            colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n        } catch (error) {\r\n            colorAttribute = null;\r\n        }\r\n\r\n        for (let i = 0; i < meshCreationParams.myVertexes.length; i++) {\r\n            let vertex = meshCreationParams.myVertexes[i];\r\n            if (positionAttribute != null && vertex.myPosition) {\r\n                positionAttribute.set(i, vertex.myPosition);\r\n            }\r\n            if (textureCoordinatesAttribute != null && vertex.myTextureCoordinates) {\r\n                textureCoordinatesAttribute.set(i, vertex.myTextureCoordinates);\r\n            }\r\n            if (normalAttribute != null && vertex.myNormal) {\r\n                normalAttribute.set(i, vertex.myNormal);\r\n            }\r\n            if (colorAttribute != null && vertex.myColor) {\r\n                colorAttribute.set(i, vertex.myColor);\r\n            }\r\n        }\r\n\r\n        return mesh;\r\n    },\r\n    cloneMesh: function () {\r\n        let position = PP.vec3_create();\r\n        let textureCoordinates = PP.vec2_create();\r\n        let normal = PP.vec3_create();\r\n        let color = PP.vec4_create();\r\n\r\n        return function cloneMesh(mesh) {\r\n            if (mesh == null) {\r\n                return null;\r\n            }\r\n\r\n            let clonedIndexData = new Uint32Array(mesh.indexData.length);\r\n            for (let i = 0; i < mesh.indexData.length; i++) {\r\n                clonedIndexData[i] = mesh.indexData[i];\r\n            }\r\n\r\n            let clonedMesh = new WL.Mesh({\r\n                vertexCount: mesh.vertexCount,\r\n                indexData: clonedIndexData,\r\n                indexType: WL.MeshIndexType.UnsignedInt,\r\n            });\r\n\r\n            let positionAttribute = null;\r\n            let textureCoordinatesAttribute = null;\r\n            let normalAttribute = null;\r\n            let colorAttribute = null;\r\n\r\n            let clonedPositionAttribute = null;\r\n            let clonedTextureCoordinatesAttribute = null;\r\n            let clonedNormalAttribute = null;\r\n            let clonedColorAttribute = null;\r\n\r\n\r\n            try {\r\n                positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n                clonedPositionAttribute = clonedMesh.attribute(WL.MeshAttribute.Position);\r\n            } catch (error) {\r\n                positionAttribute = null;\r\n                clonedPositionAttribute = null;\r\n            }\r\n\r\n            try {\r\n                textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n                clonedTextureCoordinatesAttribute = clonedMesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n            } catch (error) {\r\n                textureCoordinatesAttribute = null;\r\n                clonedTextureCoordinatesAttribute = null;\r\n            }\r\n\r\n            try {\r\n                normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n                clonedNormalAttribute = clonedMesh.attribute(WL.MeshAttribute.Normal);\r\n            } catch (error) {\r\n                normalAttribute = null;\r\n                clonedNormalAttribute = null;\r\n            }\r\n\r\n            try {\r\n                colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n                clonedColorAttribute = clonedMesh.attribute(WL.MeshAttribute.Color);\r\n            } catch (error) {\r\n                colorAttribute = null;\r\n                clonedColorAttribute = null;\r\n            }\r\n\r\n            for (let i = 0; i < mesh.vertexCount; i++) {\r\n                if (positionAttribute != null && clonedPositionAttribute != null) {\r\n                    clonedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n                }\r\n                if (textureCoordinatesAttribute != null && clonedTextureCoordinatesAttribute != null) {\r\n                    clonedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n                }\r\n                if (normalAttribute != null && clonedNormalAttribute != null) {\r\n                    clonedNormalAttribute.set(i, normalAttribute.get(i, normal));\r\n                }\r\n                if (colorAttribute != null && clonedColorAttribute != null) {\r\n                    clonedColorAttribute.set(i, colorAttribute.get(i, color));\r\n                }\r\n            }\r\n\r\n            return clonedMesh;\r\n        };\r\n    }(),\r\n    invertMesh: function () {\r\n        let position = PP.vec3_create();\r\n        let textureCoordinates = PP.vec2_create();\r\n        let normal = PP.vec3_create();\r\n        let color = PP.vec4_create();\r\n\r\n        return function invertMesh(mesh) {\r\n            if (mesh == null) {\r\n                return null;\r\n            }\r\n\r\n            let invertedIndexData = new Uint32Array(mesh.indexData.length);\r\n            for (let i = 0; i < mesh.indexData.length / 3; i++) {\r\n                invertedIndexData[i * 3 + 0] = mesh.indexData[i * 3 + 2];\r\n                invertedIndexData[i * 3 + 1] = mesh.indexData[i * 3 + 1];\r\n                invertedIndexData[i * 3 + 2] = mesh.indexData[i * 3 + 0];\r\n            }\r\n\r\n            let invertedMesh = new WL.Mesh({\r\n                vertexCount: mesh.vertexCount,\r\n                indexData: invertedIndexData,\r\n                indexType: WL.MeshIndexType.UnsignedInt,\r\n            });\r\n\r\n            let positionAttribute = null;\r\n            let textureCoordinatesAttribute = null;\r\n            let normalAttribute = null;\r\n            let colorAttribute = null;\r\n\r\n            let invertedPositionAttribute = null;\r\n            let invertedTextureCoordinatesAttribute = null;\r\n            let invertedNormalAttribute = null;\r\n            let invertedColorAttribute = null;\r\n\r\n\r\n            try {\r\n                positionAttribute = mesh.attribute(WL.MeshAttribute.Position);\r\n                invertedPositionAttribute = invertedMesh.attribute(WL.MeshAttribute.Position);\r\n            } catch (error) {\r\n                positionAttribute = null;\r\n                invertedPositionAttribute = null;\r\n            }\r\n\r\n            try {\r\n                textureCoordinatesAttribute = mesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n                invertedTextureCoordinatesAttribute = invertedMesh.attribute(WL.MeshAttribute.TextureCoordinate);\r\n            } catch (error) {\r\n                textureCoordinatesAttribute = null;\r\n                invertedTextureCoordinatesAttribute = null;\r\n            }\r\n\r\n            try {\r\n                normalAttribute = mesh.attribute(WL.MeshAttribute.Normal);\r\n                invertedNormalAttribute = invertedMesh.attribute(WL.MeshAttribute.Normal);\r\n            } catch (error) {\r\n                normalAttribute = null;\r\n                invertedNormalAttribute = null;\r\n            }\r\n\r\n            try {\r\n                colorAttribute = mesh.attribute(WL.MeshAttribute.Color);\r\n                invertedColorAttribute = invertedMesh.attribute(WL.MeshAttribute.Color);\r\n            } catch (error) {\r\n                colorAttribute = null;\r\n                invertedColorAttribute = null;\r\n            }\r\n\r\n            for (let i = 0; i < mesh.vertexCount; i++) {\r\n                if (positionAttribute != null && invertedPositionAttribute != null) {\r\n                    invertedPositionAttribute.set(i, positionAttribute.get(i, position));\r\n                }\r\n                if (textureCoordinatesAttribute != null && invertedTextureCoordinatesAttribute != null) {\r\n                    invertedTextureCoordinatesAttribute.set(i, textureCoordinatesAttribute.get(i, textureCoordinates));\r\n                }\r\n                if (normalAttribute != null && invertedNormalAttribute != null) {\r\n                    normalAttribute.get(i, normal)\r\n                    normal.vec3_negate(normal);\r\n                    invertedNormalAttribute.set(i, normal);\r\n                }\r\n                if (colorAttribute != null && invertedColorAttribute != null) {\r\n                    invertedColorAttribute.set(i, colorAttribute.get(i, color));\r\n                }\r\n            }\r\n\r\n            return invertedMesh;\r\n        };\r\n    }()\r\n};", "PP.SaveUtils = {\r\n    save: function (id, value) {\r\n        if (value != null) {\r\n            localStorage.setItem(id, value);\r\n        }\r\n    },\r\n    has: function (id) {\r\n        return PP.SaveUtils.loadString(id, null) != null;\r\n    },\r\n    delete: function (id) {\r\n        return localStorage.removeItem(id);\r\n    },\r\n    clear: function () {\r\n        return localStorage.clear();\r\n    },\r\n    load: function (id, defaultValue = null) {\r\n        return PP.SaveUtils.loadString(id, defaultValue);\r\n    },\r\n    loadString: function (id, defaultValue = null) {\r\n        let item = localStorage.getItem(id);\r\n\r\n        if (item == null) {\r\n            item = defaultValue;\r\n        }\r\n\r\n        return item;\r\n    },\r\n    loadNumber: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item != null) {\r\n            return Number(item);\r\n        }\r\n\r\n        return defaultValue;\r\n    },\r\n    loadBool: function (id, defaultValue = null) {\r\n        let item = PP.SaveUtils.loadString(id);\r\n\r\n        if (item == \"true\") {\r\n            return true;\r\n        } else if (item == \"false\") {\r\n            return false;\r\n        }\r\n\r\n        return defaultValue;\r\n    }\r\n};", "PP.TextUtils = {\r\n    setClonedMaterials: function (object) {\r\n        let textComponents = object.pp_getComponentsHierarchy(\"text\");\r\n\r\n        for (let textComponent of textComponents) {\r\n            textComponent.material = textComponent.material.clone();\r\n        }\r\n    },\r\n};", "PP.XRUtils = {\r\n    isDeviceEmulated: function () {\r\n        let isEmulated = ('CustomWebXRPolyfill' in window);\r\n        return isEmulated;\r\n    },\r\n    isSessionActive: function () {\r\n        return WL.xrSession != null;\r\n    },\r\n    isReferenceSpaceLocalFloor: function () {\r\n        return ![\"local\", \"viewer\"].includes(WebXR.refSpace);\r\n    }\r\n};", "PP.BrowserUtils = {\r\n    isMobile: function () {\r\n        return /Mobi/i.test(window.navigator.userAgent);\r\n    },\r\n    isDesktop: function () {\r\n        return !PP.BrowserUtils.isMobile();\r\n    },\r\n};", "PP.JSUtils = {\r\n    getReferencePrototypes(reference) {\r\n        let prototypes = [];\r\n\r\n        prototypes.push(reference);\r\n\r\n        let referenceProto = Object.getPrototypeOf(reference);\r\n        while (referenceProto != null) {\r\n            prototypes.pp_pushUnique(referenceProto);\r\n            referenceProto = Object.getPrototypeOf(referenceProto);\r\n        }\r\n\r\n        let prototypesToCheck = [reference];\r\n        while (prototypesToCheck.length > 0) {\r\n            let prototypeToCheck = prototypesToCheck.shift();\r\n            if (prototypeToCheck != null) {\r\n                prototypes.pp_pushUnique(prototypeToCheck);\r\n\r\n                prototypesToCheck.pp_pushUnique(Object.getPrototypeOf(prototypeToCheck));\r\n                prototypesToCheck.pp_pushUnique(prototypeToCheck.prototype);\r\n            }\r\n        }\r\n\r\n        return prototypes;\r\n    },\r\n    getReferencePropertyNames: function (reference) {\r\n        let propertyNames = [];\r\n\r\n        let prototypes = this.getReferencePrototypes(reference);\r\n\r\n        for (let prototype of prototypes) {\r\n            if (prototype != null) {\r\n                let ownPropertyNames = Object.getOwnPropertyNames(prototype);\r\n                for (let ownPropertyName of ownPropertyNames) {\r\n                    propertyNames.pp_pushUnique(ownPropertyName);\r\n                }\r\n            }\r\n        }\r\n\r\n        return propertyNames;\r\n    },\r\n    getReferencePropertyDescriptor: function (reference, propertyName) {\r\n        let propertyDescriptor = null;\r\n\r\n        let propertyParent = this.getReferencePropertyOwnParent(reference, propertyName);\r\n\r\n        if (propertyParent != null) {\r\n            propertyDescriptor = Object.getOwnPropertyDescriptor(propertyParent, propertyName);\r\n        }\r\n\r\n        return propertyDescriptor;\r\n    },\r\n    getReferenceProperty: function (reference, propertyName) {\r\n        let property = undefined;\r\n\r\n        let propertyDescriptor = this.getReferencePropertyDescriptor(reference, propertyName);\r\n        if (propertyDescriptor != null) {\r\n            if (propertyDescriptor.get != null) {\r\n                property = propertyDescriptor.get.bind(reference)();\r\n            } else {\r\n                property = propertyDescriptor.value;\r\n            }\r\n        }\r\n\r\n        return property;\r\n    },\r\n    setReferenceProperty: function (valueToSet, reference, propertyName) {\r\n        let propertyDescriptor = this.getReferencePropertyDescriptor(reference, propertyName);\r\n\r\n        let setUsed = false;\r\n        if (propertyDescriptor != null) {\r\n            if (propertyDescriptor.set != null) {\r\n                setUsed = true;\r\n\r\n                propertyDescriptor.set.bind(reference)(valueToSet);\r\n            }\r\n        }\r\n\r\n        if (!setUsed) {\r\n            let propertyParent = this.getReferencePropertyOwnParent(reference, propertyName);\r\n            if (propertyParent == null) {\r\n                propertyParent = reference;\r\n            }\r\n\r\n            Object.defineProperty(propertyParent, propertyName, {\r\n                value: valueToSet\r\n            });\r\n        }\r\n    },\r\n    getReferencePropertyOwnParent: function (reference, propertyName) {\r\n        let parent = null;\r\n\r\n        let parents = this.getReferencePropertyOwnParents(reference, propertyName);\r\n        if (parents.length > 0) {\r\n            parent = parents[0];\r\n        }\r\n\r\n        return parent;\r\n    },\r\n    getReferencePropertyOwnParents: function (reference, propertyName) {\r\n        let parents = [];\r\n\r\n        let possibleParents = this.getReferencePrototypes(reference);\r\n\r\n        for (let possibleParent of possibleParents) {\r\n            let propertyNames = Object.getOwnPropertyNames(possibleParent);\r\n            if (propertyNames.pp_hasEqual(propertyName)) {\r\n                parents.push(possibleParent);\r\n            }\r\n        }\r\n\r\n        return parents;\r\n    },\r\n    getReferenceFromPath: function (path, pathStartReference = window) {\r\n        let reference = null;\r\n\r\n        let referenceName = this.getReferenceNameFromPath(path);\r\n        if (referenceName != null) {\r\n            reference = this.getReferenceProperty(this.getReferenceParentFromPath(path, pathStartReference), referenceName);\r\n        }\r\n\r\n        return reference;\r\n    },\r\n    getReferenceNameFromPath: function (path) {\r\n        let referenceName = null;\r\n\r\n        if (path != null) {\r\n            let pathSplit = path.split(\".\");\r\n            if (pathSplit.length > 0) {\r\n                referenceName = pathSplit[pathSplit.length - 1];\r\n            }\r\n        }\r\n\r\n        return referenceName;\r\n    },\r\n    getReferenceParentFromPath: function (path, pathStartReference = window) {\r\n        let pathSplit = path.split(\".\");\r\n        let currentParent = pathStartReference;\r\n        for (let i = 0; i < pathSplit.length - 1; i++) {\r\n            currentParent = this.getReferenceProperty(currentParent, pathSplit[i]);\r\n        }\r\n\r\n        return currentParent;\r\n    },\r\n    overwriteReferenceProperty: function (newProperty, reference, propertyName, overwriteOnOwnParent = true, javascriptObjectFunctionsSpecialOverwrite = false, debugLogActive = false) {\r\n        let success = false;\r\n\r\n        try {\r\n            let propertyOwnParent = this.getReferencePropertyOwnParent(reference, propertyName);\r\n            if (propertyOwnParent != null) {\r\n                let originalPropertyDescriptor = Object.getOwnPropertyDescriptor(propertyOwnParent, propertyName);\r\n\r\n                if (originalPropertyDescriptor != null) {\r\n                    if (originalPropertyDescriptor.get == null && originalPropertyDescriptor.set == null && originalPropertyDescriptor.value != null) {\r\n                        let originalProperty = originalPropertyDescriptor.value;\r\n                        this.copyReferenceProperties(originalProperty, newProperty, true, javascriptObjectFunctionsSpecialOverwrite, debugLogActive);\r\n                    }\r\n\r\n                    let overwriteTarget = reference;\r\n                    if (overwriteOnOwnParent) {\r\n                        overwriteTarget = propertyOwnParent;\r\n                    }\r\n\r\n                    Object.defineProperty(overwriteTarget, propertyName, {\r\n                        value: newProperty,\r\n                        enumerable: originalPropertyDescriptor.enumerable,\r\n                        configurable: originalPropertyDescriptor.configurable,\r\n                        writable: originalPropertyDescriptor.writable,\r\n                    });\r\n\r\n                    success = true;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (debugLogActive) {\r\n                console.error(\"Property:\", propertyName, \"of:\", reference, \"can't be overwritten.\");\r\n            }\r\n        }\r\n\r\n        return success;\r\n    },\r\n    copyReferenceProperties(fromReference, toReference, cleanCopy = false, javascriptObjectFunctionsSpecialCopy = false, debugLogActive = false) {\r\n        if (fromReference != null) {\r\n            if (cleanCopy) {\r\n                this.cleanReferenceProperties(toReference);\r\n            }\r\n\r\n            Object.setPrototypeOf(toReference, Object.getPrototypeOf(fromReference));\r\n\r\n            let fromReferencePropertyNames = Object.getOwnPropertyNames(fromReference);\r\n            for (let fromReferencePropertyName of fromReferencePropertyNames) {\r\n                try {\r\n                    let fromReferencePropertyDescriptor = Object.getOwnPropertyDescriptor(fromReference, fromReferencePropertyName);\r\n\r\n                    Object.defineProperty(toReference, fromReferencePropertyName, {\r\n                        value: fromReferencePropertyDescriptor.value,\r\n                        enumerable: fromReferencePropertyDescriptor.enumerable,\r\n                        configurable: fromReferencePropertyDescriptor.configurable,\r\n                        writable: fromReferencePropertyDescriptor.writable\r\n                    });\r\n                } catch (error) {\r\n                    if (debugLogActive) {\r\n                        console.error(\"Property:\", fromReferencePropertyName, \"of:\", fromReference.name, \"can't be overwritten.\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (javascriptObjectFunctionsSpecialCopy) {\r\n                this._javascriptObjectFunctionsSpecialCopy(fromReference, toReference);\r\n            }\r\n        }\r\n    },\r\n    cleanReferenceProperties(reference) {\r\n        let referenceNames = Object.getOwnPropertyNames(reference);\r\n        referenceNames.pp_pushUnique(\"__proto__\");\r\n\r\n        for (let referenceName of referenceNames) {\r\n            try {\r\n                Object.defineProperty(reference, referenceName, {\r\n                    value: undefined\r\n                });\r\n            } catch (error) {\r\n                // ignored\r\n            }\r\n\r\n            try {\r\n                delete reference[referenceName];\r\n            } catch (error) {\r\n                // ignored\r\n            }\r\n        }\r\n\r\n        Object.setPrototypeOf(reference, null);\r\n    },\r\n    doesReferencePropertyUseAccessors(reference, propertyName) {\r\n        let propertyUseAccessors = false;\r\n\r\n        let propertyDescriptor = this.getReferencePropertyDescriptor(reference, propertyName);\r\n\r\n        if (propertyDescriptor != null && (propertyDescriptor.get != null || propertyDescriptor.set != null)) {\r\n            propertyUseAccessors = true;\r\n        }\r\n\r\n        return propertyUseAccessors;\r\n    },\r\n    isFunctionByName(functionParent, functionName) {\r\n        let isFunction = false;\r\n\r\n        let functionProperty = this.getReferenceProperty(functionParent, functionName);\r\n        if (functionProperty != null) {\r\n            isFunction = typeof functionProperty == \"function\" && !this.isClassByName(functionParent, functionName);\r\n        }\r\n\r\n        return isFunction;\r\n    },\r\n    isClassByName(classParent, className) {\r\n        let isClass = false;\r\n\r\n        let classProperty = this.getReferenceProperty(classParent, className);\r\n        if (classProperty != null) {\r\n            isClass =\r\n                typeof classProperty == \"function\" && className != \"constructor\" &&\r\n                classProperty.prototype != null && typeof classProperty.prototype.constructor == \"function\" &&\r\n                classProperty.toString != null && typeof classProperty.toString == \"function\" && (/^class/).test(classProperty.toString());\r\n        }\r\n\r\n        return isClass;\r\n    },\r\n    isObjectByName(objectParent, objectName) {\r\n        let isObject = false;\r\n\r\n        let objectProperty = this.getReferenceProperty(objectParent, objectName);\r\n        if (objectProperty != null) {\r\n            isObject = typeof objectProperty == \"object\";\r\n        }\r\n\r\n        return isObject;\r\n    },\r\n    _javascriptObjectFunctionsSpecialCopy(fromReference, toReference) {\r\n        try {\r\n            if (typeof toReference == \"function\" && typeof fromReference == \"function\") {\r\n                let functionsToOverwrite = [\"toString\", \"toLocaleString\", \"valueOf\"];\r\n\r\n                for (let functionToOverwrite of functionsToOverwrite) {\r\n                    let propertyDescriptorToOverwrite = this.getReferencePropertyDescriptor(fromReference, functionToOverwrite);\r\n\r\n                    if (propertyDescriptorToOverwrite != null && propertyDescriptorToOverwrite.value != null &&\r\n                        (propertyDescriptorToOverwrite.value == Object[functionToOverwrite])) {\r\n                        let valueToReturn = Object[functionToOverwrite].bind(fromReference)();\r\n                        let overwrittenFunction = function () { return valueToReturn; };\r\n                        this.overwriteReferenceProperty(overwrittenFunction, toReference, functionToOverwrite, false, false);\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            // ignored\r\n        }\r\n    }\r\n};", "PP.PhysicsUtils = {\r\n    _myLayerFlagsAmount: 8,\r\n    _myLayerFlagsNames: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\r\n    setLayerFlagsAmount: function (layerFlagsAmount) {\r\n        PP.PhysicsUtils._myLayerFlagsAmount = layerFlagsAmount;\r\n    },\r\n    setLayerFlagsNames: function (layerFlagsNames) {\r\n        PP.PhysicsUtils._myLayerFlagsNames = layerFlagsNames;\r\n    },\r\n    getLayerFlagsAmount: function () {\r\n        return PP.PhysicsUtils._myLayerFlagsAmount;\r\n    },\r\n    getLayerFlagsNames: function () {\r\n        return PP.PhysicsUtils._myLayerFlagsNames;\r\n    },\r\n    raycast: function () {\r\n        let isInsideSubVector = PP.vec3_create();\r\n        let invertedRaycastDirection = PP.vec3_create();\r\n        let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n        return function raycast(raycastSetup, raycastResults = new PP.RaycastResults()) {\r\n            let internalRaycastResults = WL.physics.rayCast(raycastSetup.myOrigin, raycastSetup.myDirection, raycastSetup.myBlockLayerFlags.getMask(), raycastSetup.myDistance);\r\n\r\n            if (raycastResults.myRaycastSetup == null) {\r\n                raycastResults.myRaycastSetup = new PP.RaycastSetup();\r\n            }\r\n\r\n            raycastResults.myRaycastSetup.copy(raycastSetup);\r\n\r\n            let currentValidHitIndex = 0;\r\n            let validHitsCount = 0;\r\n\r\n            let hitCount = internalRaycastResults.hitCount;\r\n            if (hitCount != 0) {\r\n                let objects = null;\r\n                let distances = null;\r\n                let locations = null;\r\n                let normals = null;\r\n\r\n                invertedRaycastDirection = raycastSetup.myDirection.vec3_negate(invertedRaycastDirection);\r\n\r\n                for (let i = 0; i < hitCount; i++) {\r\n                    if (raycastSetup.myObjectsToIgnore.length != 0) {\r\n                        if (objects == null) {\r\n                            objects = internalRaycastResults.objects;\r\n                        }\r\n\r\n                        if (raycastSetup.myObjectsToIgnore.pp_hasEqual(objects[i], objectsEqualCallback)) {\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (distances == null) {\r\n                        distances = internalRaycastResults.distances;\r\n                    }\r\n\r\n                    let isHitInsideCollision = distances[i] == 0;\r\n                    if (isHitInsideCollision) {\r\n                        if (locations == null) {\r\n                            locations = internalRaycastResults.locations;\r\n                        }\r\n\r\n                        isHitInsideCollision &&= raycastSetup.myOrigin.vec3_sub(locations[i], isInsideSubVector).vec3_isZero(Math.PP_EPSILON_NUMBER);\r\n\r\n                        if (isHitInsideCollision) {\r\n                            if (!normals) {\r\n                                normals = internalRaycastResults.normals;\r\n                            }\r\n\r\n                            isHitInsideCollision &&= invertedRaycastDirection.vec3_equals(normals[i], Math.PP_EPSILON_DEGREES);\r\n                        }\r\n                    }\r\n\r\n                    if (!raycastSetup.myIgnoreHitsInsideCollision || !isHitInsideCollision) {\r\n                        let hit = null;\r\n\r\n                        if (currentValidHitIndex < raycastResults.myHits.length) {\r\n                            hit = raycastResults.myHits[currentValidHitIndex];\r\n                        } else if (raycastResults._myUnusedHits != null && raycastResults._myUnusedHits.length > 0) {\r\n                            hit = raycastResults._myUnusedHits.pop();\r\n                            raycastResults.myHits.push(hit);\r\n                        } else {\r\n                            hit = new PP.RaycastHit();\r\n                            raycastResults.myHits.push(hit);\r\n                        }\r\n\r\n                        if (objects == null) {\r\n                            objects = internalRaycastResults.objects;\r\n                        }\r\n\r\n                        if (locations == null) {\r\n                            locations = internalRaycastResults.locations;\r\n                        }\r\n\r\n                        if (normals == null) {\r\n                            normals = internalRaycastResults.normals;\r\n                        }\r\n\r\n                        hit.myPosition.vec3_copy(locations[i]);\r\n                        hit.myNormal.vec3_copy(normals[i]);\r\n                        hit.myDistance = distances[i];\r\n                        hit.myObject = objects[i];\r\n                        hit.myIsInsideCollision = isHitInsideCollision;\r\n\r\n                        validHitsCount++;\r\n                        currentValidHitIndex++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (raycastResults.myHits.length > validHitsCount) {\r\n                if (raycastResults._myUnusedHits == null) {\r\n                    raycastResults._myUnusedHits = [];\r\n                }\r\n\r\n                let hitsToRemove = raycastResults.myHits.length - validHitsCount;\r\n                for (let i = 0; i < hitsToRemove; i++) {\r\n                    raycastResults._myUnusedHits.push(raycastResults.myHits.pop());\r\n                }\r\n            }\r\n\r\n            return raycastResults;\r\n        };\r\n    }()\r\n};", "/*\r\nlet raycastSetup = new PP.RaycastSetup();\r\n\r\nraycastSetup.myOrigin.vec3_copy(origin);\r\nraycastSetup.myDirection.vec3_copy(direction);\r\nraycastSetup.myDistance = distance;\r\nraycastSetup.myBlockLayerFlags.setMask(flags);\r\nraycastSetup.myObjectsToIgnore.pp_clear();\r\nraycastSetup.myIgnoreHitsInsideCollision = false;\r\n\r\nlet raycastResults = PP.PhysicsUtils.raycast(raycastSetup);\r\n*/\r\n\r\nPP.RaycastSetup = class RaycastSetup {\r\n    constructor() {\r\n        this.myOrigin = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n\r\n        this.myObjectsToIgnore = [];\r\n        this.myIgnoreHitsInsideCollision = false;\r\n    }\r\n\r\n    copy(setup) {\r\n        this.myOrigin.vec3_copy(setup.myOrigin);\r\n        this.myDirection.vec3_copy(setup.myDirection);\r\n        this.myDistance = setup.myDistance;\r\n\r\n        this.myBlockLayerFlags.copy(setup.myBlockLayerFlags);\r\n\r\n        this.myObjectsToIgnore.pp_copy(setup.myObjectsToIgnore);\r\n        this.myIgnoreHitsInsideCollision = setup.myIgnoreHitsInsideCollision;\r\n    }\r\n\r\n    reset() {\r\n        this.myOrigin.vec3_zero();\r\n        this.myDirection.vec3_zero();\r\n        this.myDistance = 0;\r\n\r\n        this.myBlockLayerFlags.setAllFlagsActive(false);\r\n\r\n        this.myObjectsToIgnore.pp_clear();\r\n        this.myIgnoreHitsInsideCollision = false;\r\n    }\r\n};\r\n\r\nPP.RaycastResults = class RaycastResult {\r\n    constructor() {\r\n        this.myRaycastSetup = null;\r\n        this.myHits = [];\r\n\r\n        this._myUnusedHits = null;\r\n    }\r\n\r\n    isColliding(ignoreHitsInsideCollision = false) {\r\n        return ignoreHitsInsideCollision ? this.getFirstHitOutsideCollision() != null : this.myHits.length > 0;\r\n    }\r\n\r\n    getFirstHitInsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getFirstHitOutsideCollision() {\r\n        let firstHit = null;\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                firstHit = hit;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return firstHit;\r\n    }\r\n\r\n    getHitsInsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    getHitsOutsideCollision() {\r\n        let hits = [];\r\n\r\n        for (let hit of this.myHits) {\r\n            if (!hit.myIsInsideCollision) {\r\n                hits.push(hit);\r\n            }\r\n        }\r\n\r\n        return hits;\r\n    }\r\n\r\n    removeHit(hitIndex) {\r\n        let removedHit = this.myHits.pp_removeIndex(hitIndex);\r\n\r\n        if (removedHit != null) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            this._myUnusedHits.push(removedHit);\r\n        }\r\n\r\n        return removedHit;\r\n    }\r\n\r\n    removeAllHits() {\r\n        if (this._myUnusedHits == null) {\r\n            this._myUnusedHits = [];\r\n        }\r\n\r\n        this._myUnusedHits.push(...this.myHits);\r\n\r\n        this.myHits.pp_clear();\r\n    }\r\n\r\n    copy(result) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    reset() {\r\n        if (this.myRaycastSetup != null) {\r\n            this.myRaycastSetup.reset();\r\n        }\r\n\r\n        this.removeAllHits();\r\n    }\r\n};\r\n\r\nPP.RaycastHit = class RaycastHit {\r\n    constructor() {\r\n        this.myPosition = PP.vec3_create();\r\n        this.myNormal = PP.vec3_create();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n\r\n        this.myIsInsideCollision = false;\r\n    }\r\n\r\n    isValid() {\r\n        return this.myObject != null;\r\n    }\r\n\r\n    copy(hit) {\r\n        this.myPosition.vec3_copy(hit.myPosition);\r\n        this.myNormal.vec3_copy(hit.myNormal);\r\n        this.myDistance = hit.myDistance;\r\n        this.myObject = hit.myObject;\r\n        this.myIsInsideCollision = hit.myIsInsideCollision;\r\n    }\r\n\r\n    reset() {\r\n        this.myPosition.vec3_zero();\r\n        this.myNormal.vec3_zero();\r\n        this.myDistance = 0;\r\n        this.myObject = null;\r\n        this.myIsInsideCollision = false;\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.RaycastResults.prototype.copy = function () {\r\n    let copyHitCallback = function (currentElement, elementToCopy) {\r\n        if (currentElement == null) {\r\n            currentElement = new PP.RaycastHit();\r\n        }\r\n\r\n        currentElement.copy(elementToCopy);\r\n\r\n        return currentElement;\r\n    };\r\n\r\n    return function copy(result) {\r\n        if (result.myRaycastSetup == null) {\r\n            this.myRaycastSetup = null;\r\n        } else {\r\n            if (this.myRaycastSetup == null) {\r\n                this.myRaycastSetup = new PP.RaycastSetup();\r\n            }\r\n\r\n            this.myRaycastSetup.copy(result.myRaycastSetup);\r\n        }\r\n\r\n        if (this.myHits.length > result.myHits.length) {\r\n            if (this._myUnusedHits == null) {\r\n                this._myUnusedHits = [];\r\n            }\r\n\r\n            for (let i = 0; i < this.myHits.length - result.myHits.length; i++) {\r\n                this._myUnusedHits.push(this.myHits.pop());\r\n            }\r\n        } else if (this.myHits.length < result.myHits.length) {\r\n            if (this._myUnusedHits != null) {\r\n                let length = Math.min(this._myUnusedHits.length, result.myHits.length - this.myHits.length);\r\n\r\n                for (let i = 0; i < length; i++) {\r\n                    this.myHits.push(this._myUnusedHits.pop());\r\n                }\r\n            }\r\n        }\r\n\r\n        this.myHits.pp_copy(result.myHits, copyHitCallback);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.RaycastResults.prototype, \"copy\", { enumerable: false });", "PP.PhysicsLayerFlags = class PhysicsLayerFlags {\r\n    constructor() {\r\n        this._myLayerMask = 0;\r\n    }\r\n\r\n    setFlagActive(indexOrName, active) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PP.PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        if (index >= 0 && index < PP.PhysicsUtils.getLayerFlagsAmount()) {\r\n            let mask = 1 << index;\r\n\r\n            if (active) {\r\n                this._myLayerMask = this._myLayerMask | mask;\r\n            } else {\r\n                this._myLayerMask = this._myLayerMask & ~mask;\r\n            }\r\n        }\r\n    }\r\n\r\n    isFlagActive(indexOrName) {\r\n        let index = indexOrName;\r\n        if (isNaN(indexOrName)) {\r\n            index = PP.PhysicsUtils.getLayerFlagsNames().pp_findIndexEqual(indexOrName);\r\n        }\r\n\r\n        let isActive = false;\r\n\r\n        if (index >= 0 && index < PP.PhysicsUtils.getLayerFlagsAmount()) {\r\n            let mask = 1 << index;\r\n            isActive = !!(this._myLayerMask & mask);\r\n        }\r\n\r\n        return isActive;\r\n    }\r\n\r\n    setAllFlagsActive(active) {\r\n        if (!active) {\r\n            this._myLayerMask = 0;\r\n        } else {\r\n            this._myLayerMask = Math.pow(2, PP.PhysicsUtils.getLayerFlagsAmount()) - 1;\r\n        }\r\n    }\r\n\r\n    add(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask | layerFlags.getMask();\r\n    }\r\n\r\n    remove(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & ~(layerFlags.getMask());\r\n    }\r\n\r\n    intersect(layerFlags) {\r\n        this._myLayerMask = this._myLayerMask & layerFlags.getMask();\r\n    }\r\n\r\n    copy(layerFlags) {\r\n        this._myLayerMask = layerFlags._myLayerMask;\r\n    }\r\n\r\n    getMask() {\r\n        return this._myLayerMask;\r\n    }\r\n\r\n    setMask(layerMask) {\r\n        this._myLayerMask = layerMask;\r\n    }\r\n};", "PP.PhysicsCollisionCollector = class PhysicsCollisionCollector {\r\n    constructor(physXComponent, isTrigger = false) {\r\n        this._myPhysX = physXComponent;\r\n\r\n        this._myIsTrigger = isTrigger;\r\n\r\n        this._myCollisions = [];\r\n\r\n        this._myCollisionsStart = [];\r\n        this._myCollisionsEnd = [];\r\n        this._myUpdateActive = false;\r\n        this._myCollisionsStartToProcess = [];\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        this._myCollisionCallbackID = null;\r\n\r\n        this._myIsActive = false;\r\n        this.setActive(true);\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTriggerDesyncFixDelay = new PP.Timer(0.1);\r\n\r\n        this._myCollisionCallbacks = new Map();          // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionStartCallbacks = new Map();     // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n        this._myCollisionEndCallbacks = new Map();       // Signature: callback(thisPhysX, otherPhysX, collisionType)\r\n\r\n    }\r\n\r\n    getPhysX() {\r\n        return this._myPhysX;\r\n    }\r\n\r\n    getCollisions() {\r\n        return this._myCollisions;\r\n    }\r\n\r\n    getCollisionsStart() {\r\n        return this._myCollisionsStart;\r\n    }\r\n\r\n    getCollisionsEnd() {\r\n        return this._myCollisionsEnd;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this._myIsActive = active;\r\n\r\n            this._myCollisions = [];\r\n\r\n            this._myCollisionsStart = [];\r\n            this._myCollisionsEnd = [];\r\n            this._myUpdateActive = false;\r\n            this._myCollisionsStartToProcess = [];\r\n            this._myCollisionsEndToProcess = [];\r\n\r\n            if (this._myIsActive) {\r\n                this._myCollisionCallbackID = this._myPhysX.onCollision(this._onCollision.bind(this));\r\n            } else if (this._myCollisionCallbackID != null) {\r\n                this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n                this._myCollisionCallbackID = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    //Set to true only if u are going to actually update this object and don't want to lose any collision start/end events prior to updating the first time after activation\r\n    setUpdateActive(active) {\r\n        this._myUpdateActive = active;\r\n    }\r\n\r\n    //Update is not mandatory, use it only if u want to access collisions start and end\r\n    update(dt) {\r\n        if (!this._myIsActive) {\r\n            return;\r\n        }\r\n\r\n        this._myUpdateActive = true;\r\n\r\n        this._myCollisionsStart = this._myCollisionsStartToProcess;\r\n        this._myCollisionsStartToProcess = [];\r\n\r\n        this._myCollisionsEnd = this._myCollisionsEndToProcess;\r\n        this._myCollisionsEndToProcess = [];\r\n\r\n        if (this._myIsTrigger) {\r\n            this._triggerDesyncFix(dt);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        if (this._myCollisionCallbackID != null) {\r\n            this._myPhysX.removeCollisionCallback(this._myCollisionCallbackID);\r\n            this._myCollisionCallbackID = null;\r\n        }\r\n    }\r\n\r\n    setDebugActive(active) {\r\n        this._myDebugActive = active;\r\n    }\r\n\r\n    registerCollisionEventListener(callbackID, callback) {\r\n        this._myCollisionCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEventListener(callbackID) {\r\n        this._myCollisionCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionStartEventListener(callbackID, callback) {\r\n        this._myCollisionStartCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionStartEventListener(callbackID) {\r\n        this._myCollisionStartCallbacks.delete(callbackID);\r\n    }\r\n\r\n    registerCollisionEndEventListener(callbackID, callback) {\r\n        this._myCollisionEndCallbacks.set(callbackID, callback);\r\n    }\r\n\r\n    unregisterCollisionEndEventListener(callbackID) {\r\n        this._myCollisionEndCallbacks.delete(callbackID);\r\n    }\r\n\r\n    _onCollision(type, physXComponent) {\r\n        if (type == WL.CollisionEventType.Touch || type == WL.CollisionEventType.TriggerTouch) {\r\n            this._onCollisionStart(physXComponent);\r\n        } else if (type == WL.CollisionEventType.TouchLost || type == WL.CollisionEventType.TriggerTouchLost) {\r\n            this._onCollisionEnd(physXComponent);\r\n        }\r\n\r\n        if (this._myCollisionCallbacks.size > 0) {\r\n            this._myCollisionCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionStart(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (objectFound) {\r\n                console.error(\"Collision Start on object already collected\");\r\n            }\r\n        }\r\n\r\n        this._myCollisions.push(physXComponent.object);\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsStartToProcess.push(physXComponent.object);\r\n            this._myCollisionsEndToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision Start -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionStartCallbacks.size > 0) {\r\n            this._myCollisionStartCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _onCollisionEnd(physXComponent) {\r\n        if (this._myDebugActive) {\r\n            let objectFound = false;\r\n            for (let object of this._myCollisions) {\r\n                if (object.pp_equals(physXComponent.object)) {\r\n                    objectFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!objectFound) {\r\n                console.error(\"Collision End on object not collected\");\r\n            }\r\n        }\r\n\r\n\r\n        this._myCollisions.pp_removeAll(function (element) {\r\n            return element.pp_equals(physXComponent.object);\r\n        });\r\n\r\n        if (this._myUpdateActive) {\r\n            this._myCollisionsEndToProcess.push(physXComponent.object);\r\n            this._myCollisionsStartToProcess.pp_removeAll(function (element) {\r\n                return element.pp_equals(physXComponent.object);\r\n            });\r\n        }\r\n\r\n        if (this._myDebugActive) {\r\n            console.log(\"Collision End -\", this._myCollisions.length);\r\n        }\r\n\r\n        if (this._myCollisionEndCallbacks.size > 0) {\r\n            this._myCollisionEndCallbacks.forEach(function (callback) { callback(this._myPhysX, physXComponent, type); });\r\n        }\r\n    }\r\n\r\n    _triggerDesyncFix(dt) {\r\n        this._myTriggerDesyncFixDelay.update(dt);\r\n        if (this._myTriggerDesyncFixDelay.isDone()) {\r\n            this._myTriggerDesyncFixDelay.start();\r\n\r\n            let collisionsToEnd = this._myCollisions.pp_findAll(function (element) {\r\n                let physX = element.pp_getComponentSelf(\"physx\");\r\n                return physX == null || !physX.active;\r\n            });\r\n\r\n            if (collisionsToEnd.length > 0) {\r\n                //console.error(\"DESYNC RESOLVED\");\r\n\r\n                for (let collision of collisionsToEnd) {\r\n                    let physX = collision.pp_getComponentSelf(\"physx\");\r\n                    if (physX) {\r\n                        this._onCollisionEnd(physX);\r\n                    } else {\r\n                        console.error(\"NO PHYSX, HOW?\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};", "PP.VisualManager = class VisualManager {\r\n    constructor() {\r\n        this._myVisualElementPrototypeCreationCallbacks = new Map();\r\n\r\n        this._myVisualElementsTypeMap = new Map();\r\n        this._myVisualElementLastID = 0;\r\n        this._myVisualElementsPool = new PP.ObjectPoolManager();\r\n        this._myVisualElementsToShow = [];\r\n\r\n        this._myActive = true;\r\n\r\n        this._addStandardVisualElementTypes();\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (!this._myActive) {\r\n                this.clearDraw();\r\n            }\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return this._myActive;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateDraw(dt);\r\n    }\r\n\r\n    //lifetimeSeconds can be null, in that case the element will be drawn until cleared\r\n    draw(visualElementParams, lifetimeSeconds = 0, idToReuse = null) {\r\n        if (!this._myActive) {\r\n            return 0;\r\n        }\r\n\r\n        let visualElement = null;\r\n        let idReused = false;\r\n        if (idToReuse != null) {\r\n            if (this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n                let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n                if (visualElements.has(idToReuse)) {\r\n                    visualElement = visualElements.get(idToReuse)[0];\r\n                    visualElement.copyParams(visualElementParams);\r\n                    visualElement.setVisible(false);\r\n                    idReused = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            visualElement = this._getVisualElement(visualElementParams);\r\n        }\r\n\r\n        if (visualElement == null) {\r\n            console.error(\"Couldn't create the requested visual element\");\r\n            return null;\r\n        }\r\n\r\n        if (!this._myVisualElementsTypeMap.has(visualElementParams.myType)) {\r\n            this._myVisualElementsTypeMap.set(visualElementParams.myType, new Map());\r\n        }\r\n        let visualElements = this._myVisualElementsTypeMap.get(visualElementParams.myType);\r\n\r\n        let elementID = null;\r\n        if (!idReused) {\r\n            elementID = this._myVisualElementLastID + 1;\r\n            this._myVisualElementLastID = elementID;\r\n\r\n            visualElements.set(elementID, [visualElement, new PP.Timer(lifetimeSeconds, lifetimeSeconds != null)]);\r\n        } else {\r\n            elementID = idToReuse;\r\n            let visualElementPair = visualElements.get(elementID);\r\n            visualElementPair[0] = visualElement;\r\n            visualElementPair[1].reset(lifetimeSeconds);\r\n            if (lifetimeSeconds != null) {\r\n                visualElementPair[1].start();\r\n            }\r\n        }\r\n\r\n        this._myVisualElementsToShow.push(visualElement);\r\n\r\n        return elementID;\r\n    }\r\n\r\n    getDraw(elementID) {\r\n        let visualElement = null;\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            if (visualElements.has(elementID)) {\r\n                let visualElementPair = visualElements.get(elementID);\r\n                visualElement = visualElementPair[0];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return visualElement;\r\n    }\r\n\r\n    clearDraw(elementID = null) {\r\n        if (elementID == null) {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                for (let visualElement of visualElements.values()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                }\r\n            }\r\n\r\n            this._myVisualElementsToShow = [];\r\n            this._myVisualElementsTypeMap = new Map();\r\n            this._myVisualElementLastID = 0;\r\n        } else {\r\n            for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n                if (visualElements.has(elementID)) {\r\n                    let visualElementPair = visualElements.get(elementID);\r\n                    this._myVisualElementsPool.releaseObject(visualElementPair[0].getParams().myType, visualElementPair[0]);\r\n                    visualElements.delete(elementID);\r\n\r\n                    this._myVisualElementsToShow.pp_removeEqual(visualElementPair[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    allocateDraw(visualElementType, amount) {\r\n        if (!this._myVisualElementsPool.hasPool(visualElementType)) {\r\n            this._addVisualElementTypeToPool(visualElementType);\r\n        }\r\n\r\n        let pool = this._myVisualElementsPool.getPool(visualElementType);\r\n\r\n        let difference = pool.getAvailableSize() - amount;\r\n        if (difference < 0) {\r\n            pool.increase(-difference);\r\n        }\r\n    }\r\n\r\n    addVisualElementType(visualElementType, visuaElementPrototypeCreationCallback) {\r\n        this._myVisualElementPrototypeCreationCallbacks.set(visualElementType, visuaElementPrototypeCreationCallback);\r\n    }\r\n\r\n    removeVisualElementType(visualElementType) {\r\n        this._myVisualElementPrototypeCreationCallbacks.delete(visualElementType);\r\n    }\r\n\r\n    _updateDraw(dt) {\r\n        for (let visualElement of this._myVisualElementsToShow) {\r\n            visualElement.setVisible(true);\r\n        }\r\n        this._myVisualElementsToShow = [];\r\n\r\n        for (let visualElements of this._myVisualElementsTypeMap.values()) {\r\n            let idsToRemove = [];\r\n            for (let visualElementsEntry of visualElements.entries()) {\r\n                let visualElement = visualElementsEntry[1];\r\n                if (visualElement[1].isDone()) {\r\n                    this._myVisualElementsPool.releaseObject(visualElement[0].getParams().myType, visualElement[0]);\r\n                    idsToRemove.push(visualElementsEntry[0]);\r\n                }\r\n\r\n                visualElement[1].update(dt);\r\n            }\r\n\r\n            for (let id of idsToRemove) {\r\n                visualElements.delete(id);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getVisualElement(params) {\r\n        let element = null;\r\n\r\n        if (!this._myVisualElementsPool.hasPool(params.myType)) {\r\n            this._addVisualElementTypeToPool(params.myType);\r\n        }\r\n\r\n        element = this._myVisualElementsPool.getObject(params.myType);\r\n\r\n        if (element != null) {\r\n            element.copyParams(params);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    _addVisualElementTypeToPool(type) {\r\n        let objectPoolParams = new PP.ObjectPoolParams();\r\n        objectPoolParams.myInitialPoolSize = 10;\r\n        objectPoolParams.myAmountToAddWhenEmpty = 0;\r\n        objectPoolParams.myPercentageToAddWhenEmpty = 0.5;\r\n        objectPoolParams.myEnableDebugLog = false;\r\n        objectPoolParams.mySetActiveCallback = function (object, active) {\r\n            object.setVisible(active);\r\n        };\r\n\r\n        let visualElementPrototype = null;\r\n        if (this._myVisualElementPrototypeCreationCallbacks.has(type)) {\r\n            visualElementPrototype = this._myVisualElementPrototypeCreationCallbacks.get(type)();\r\n        }\r\n\r\n        if (visualElementPrototype != null) {\r\n            visualElementPrototype.setVisible(false);\r\n            visualElementPrototype.setAutoRefresh(true);\r\n\r\n            this._myVisualElementsPool.addPool(type, visualElementPrototype, objectPoolParams);\r\n        } else {\r\n            console.error(\"Visual element type not supported\");\r\n        }\r\n    }\r\n\r\n    _addStandardVisualElementTypes() {\r\n        this.addVisualElementType(PP.VisualElementType.LINE, () => new PP.VisualLine());\r\n        this.addVisualElementType(PP.VisualElementType.MESH, () => new PP.VisualMesh());\r\n        this.addVisualElementType(PP.VisualElementType.POINT, () => new PP.VisualPoint());\r\n        this.addVisualElementType(PP.VisualElementType.ARROW, () => new PP.VisualArrow());\r\n        this.addVisualElementType(PP.VisualElementType.TEXT, () => new PP.VisualText());\r\n        this.addVisualElementType(PP.VisualElementType.TRANSFORM, () => new PP.VisualTransform());\r\n        this.addVisualElementType(PP.VisualElementType.RAYCAST, () => new PP.VisualRaycast());\r\n        this.addVisualElementType(PP.VisualElementType.TORUS, () => new PP.VisualTorus());\r\n    }\r\n};", "PP.VisualElementType = {\r\n    MESH: 0,\r\n    LINE: 1,\r\n    POINT: 2,\r\n    TEXT: 3,\r\n    ARROW: 4,\r\n    TRANSFORM: 5,\r\n    RAYCAST: 6,\r\n    TORUS: 7,\r\n};", "/*\r\nlet visualParams = new PP.VisualLineParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualLine = new PP.VisualLine(visualParams);\r\n*/\r\n\r\nPP.VisualLineParams = class VisualLineParams {\r\n\r\n    constructor() {\r\n        this.myStart = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myMesh = null;         // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.LINE;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualLine = class VisualLine {\r\n\r\n    constructor(params = new PP.VisualLineParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myLineRootObject = null;\r\n        this._myLineObject = null;\r\n        this._myLineMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myLineRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myLineRootObject = WL.scene.addObject(null);\r\n        this._myLineObject = WL.scene.addObject(this._myLineRootObject);\r\n\r\n        this._myLineMeshComponent = this._myLineObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualLineParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualLine(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualLine.prototype._refresh = function () {\r\n    let scaleLine = PP.vec3_create();\r\n    let translateLine = PP.vec3_create();\r\n\r\n    let forward = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myLineRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineRootObject.pp_setPositionLocal(this._myParams.myStart);\r\n        } else {\r\n            this._myLineRootObject.pp_setPosition(this._myParams.myStart);\r\n        }\r\n\r\n        scaleLine.vec3_set(this._myParams.myThickness / 2, this._myParams.myLength / 2, this._myParams.myThickness / 2);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setScaleLocal(scaleLine);\r\n        } else {\r\n            this._myLineObject.pp_setScale(scaleLine);\r\n        }\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myLineObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myLineObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        this._myLineObject.pp_resetPositionLocal();\r\n        translateLine.vec3_set(0, this._myParams.myLength / 2, 0);\r\n        this._myLineObject.pp_translateObject(translateLine);\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myLineMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myLineMeshComponent.mesh = PP.myDefaultResources.myMeshes.myCylinder;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myLineMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myLineMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myLineMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    };\r\n}();\r\n\r\nPP.VisualLineParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualLine.prototype, \"_refresh\", { enumerable: false });\r\nObject.defineProperty(PP.VisualLineParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualMeshParams();\r\nvisualParams.myTransform = transform;\r\nvisualParams.myMesh = PP.myDefaultResources.myMeshes.mySphere;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualMesh = new PP.VisualMesh(visualParams);\r\n*/\r\n\r\nPP.VisualMeshParams = class VisualMeshParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n\r\n        this.myMesh = null;\r\n        this.myMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.MESH;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualMesh = class VisualMesh {\r\n\r\n    constructor(params = new PP.VisualMeshParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myMeshObject = null;\r\n        this._myMeshComponent = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myMeshObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myMeshObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myMeshObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myMeshObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMesh == null) {\r\n            this._myMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n        } else {\r\n            this._myMeshComponent.mesh = this._myParams.myMesh;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            this._myMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n        } else {\r\n            this._myMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myMeshObject = WL.scene.addObject(null);\r\n\r\n        this._myMeshComponent = this._myMeshObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualMeshParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualMesh(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualMeshParams.prototype.copy = function copy(other) {\r\n    this.myTransform.pp_copy(other.myTransform);\r\n\r\n    if (other.myMesh != null) {\r\n        this.myMesh = other.myMesh;\r\n    } else {\r\n        this.myMesh = null;\r\n    }\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualMeshParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualPointParams();\r\nvisualParams.myPosition.vec3_copy(position);\r\nvisualParams.myRadius = 0.005;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualPoint = new PP.VisualPoint(visualParams);\r\n*/\r\n\r\nPP.VisualPointParams = class VisualPointParams {\r\n\r\n    constructor() {\r\n        this.myPosition = PP.vec3_create();\r\n        this.myRadius = 0.005;\r\n\r\n        this.myMesh = null;         // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.mySphere\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.POINT;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualPoint = class VisualPoint {\r\n\r\n    constructor(params = new PP.VisualPointParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myPointObject = null;\r\n        this._myPointMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myPointObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myPointObject = WL.scene.addObject(null);\r\n\r\n        this._myPointMeshComponent = this._myPointObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualPointParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualPoint(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualPoint.prototype._refresh = function () {\r\n    let rotation = PP.vec3_create(0, 0, 0);\r\n    return function _refresh() {\r\n        this._myPointObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myPointObject.pp_setPositionLocal(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotationLocal(rotation);\r\n            this._myPointObject.pp_setScaleLocal(this._myParams.myRadius);\r\n        } else {\r\n            this._myPointObject.pp_setPosition(this._myParams.myPosition);\r\n            this._myPointObject.pp_setRotation(rotation);\r\n            this._myPointObject.pp_setScale(this._myParams.myRadius);\r\n        }\r\n\r\n        if (this._myParams.myMesh != null) {\r\n            this._myPointMeshComponent.mesh = this._myParams.myMesh;\r\n        } else {\r\n            this._myPointMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myPointMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myPointMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myPointMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n    }\r\n}();\r\n\r\nPP.VisualPointParams.prototype.copy = function copy(other) {\r\n    this.myPosition.vec3_copy(other.myPosition);\r\n    this.myRadius = other.myRadius;\r\n\r\n    this.myMesh = other.myMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualPoint.prototype, \"_refresh\", { enumerable: false });\r\nObject.defineProperty(PP.VisualPointParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualArrowParams();\r\nvisualParams.myStart.vec3_copy(start);\r\nvisualParams.myDirection.vec3_copy(direction);\r\nvisualParams.myLength = 0.2;\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualArrow = new PP.VisualArrow(visualParams);\r\n*/\r\n\r\nPP.VisualArrowParams = class VisualArrowParams {\r\n    constructor() {\r\n        this.myStart = PP.vec3_create();\r\n        this.myDirection = PP.vec3_create(0, 0, 1);\r\n        this.myLength = 0;\r\n\r\n        this.myThickness = 0.005;\r\n\r\n        this.myLineMesh = null;     // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n        this.myArrowMesh = null;    // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCone\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.ARROW;\r\n    }\r\n\r\n    setStartEnd(start, end) {\r\n        end.vec3_sub(start, this.myDirection);\r\n        this.myLength = this.myDirection.vec3_length();\r\n        this.myDirection.vec3_normalize(this.myDirection);\r\n        this.myStart.vec3_copy(start);\r\n\r\n        return this;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualArrow = class VisualArrow {\r\n\r\n    constructor(params = new PP.VisualArrowParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualLine = new PP.VisualLine();\r\n        this._myVisualLine.setAutoRefresh(false);\r\n\r\n        this._myArrowRootObject = null;\r\n        this._myArrowObject = null;\r\n        this._myArrowMeshComponent = null;\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualLine.setVisible(visible);\r\n            this._myArrowRootObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualLine.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualLine.update(dt);\r\n    }\r\n\r\n    _build() {\r\n        this._myArrowRootObject = WL.scene.addObject(null);\r\n        this._myArrowObject = WL.scene.addObject(this._myArrowRootObject);\r\n\r\n        this._myArrowMeshComponent = this._myArrowObject.addComponent('mesh');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualArrowParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualArrow(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualArrow.prototype._refresh = function () {\r\n    let end = PP.vec3_create();\r\n    let translateRoot = PP.vec3_create();\r\n    let scaleArrow = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n\r\n    let forward = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._myArrowRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        this._myParams.myDirection.vec3_scale(Math.max(0.001, this._myParams.myLength - this._myParams.myThickness * 4), end);\r\n        end.vec3_add(this._myParams.myStart, end);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowRootObject.pp_setPositionLocal(end);\r\n            this._myArrowRootObject.pp_setUpLocal(this._myParams.myDirection, forward);\r\n        } else {\r\n            this._myArrowRootObject.pp_setPosition(end);\r\n            this._myArrowRootObject.pp_setUp(this._myParams.myDirection, forward);\r\n        }\r\n\r\n        translateRoot.vec3_set(0, this._myParams.myThickness * 2 - 0.00001, 0);\r\n        this._myArrowRootObject.pp_translateObject(translateRoot);\r\n\r\n        scaleArrow.vec3_set(this._myParams.myThickness * 1.25, this._myParams.myThickness * 2, this._myParams.myThickness * 1.25);\r\n        if (this._myParams.myIsLocal) {\r\n            this._myArrowObject.pp_setScaleLocal(scaleArrow);\r\n        } else {\r\n            this._myArrowObject.pp_setScale(scaleArrow);\r\n        }\r\n\r\n        if (this._myParams.myArrowMesh != null) {\r\n            this._myArrowMeshComponent.mesh = this._myParams.myArrowMesh;\r\n        } else {\r\n            this._myArrowMeshComponent.mesh = PP.myDefaultResources.myMeshes.myCone;\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myArrowMeshComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n            } else {\r\n                if (this._myFlatOpaqueMaterial == null) {\r\n                    this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                }\r\n                this._myArrowMeshComponent.material = this._myFlatOpaqueMaterial;\r\n                this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myArrowMeshComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        direction = end.vec3_sub(this._myParams.myStart, direction);\r\n        let visualLineParams = this._myVisualLine.getParams();\r\n        visualLineParams.myStart.vec3_copy(this._myParams.myStart);\r\n        visualLineParams.myDirection = direction.vec3_normalize(visualLineParams.myDirection);\r\n        visualLineParams.myLength = direction.vec3_length();\r\n        visualLineParams.myThickness = this._myParams.myThickness;\r\n        visualLineParams.myMesh = this._myParams.myLineMesh;\r\n\r\n        visualLineParams.myMaterial = this._myArrowMeshComponent.material;\r\n\r\n        visualLineParams.myParent = this._myParams.myParent;\r\n        visualLineParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n        this._myVisualLine.paramsUpdated();\r\n    };\r\n}();\r\n\r\nPP.VisualArrowParams.prototype.copy = function copy(other) {\r\n    this.myStart.vec3_copy(other.myStart);\r\n    this.myDirection.vec3_copy(other.myDirection);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    this.myArrowMesh = other.myArrowMesh;\r\n    this.myLineMesh = other.myLineMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualArrow.prototype, \"_refresh\", { enumerable: false });\r\nObject.defineProperty(PP.VisualArrowParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualTextParams();\r\nvisualParams.myText = text;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualText = new PP.VisualText(visualParams);\r\n*/\r\n\r\nPP.VisualTextParams = class VisualTextParams {\r\n\r\n    constructor() {\r\n        this.myText = \"\";\r\n        this.myAlignment = WL.Alignment.Center;\r\n        this.myJustification = WL.Justification.Middle;\r\n\r\n        this.myTransform = PP.mat4_create();\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myDefaultTextMaterial\r\n\r\n        this.myColor = null;        // if this is set and material is null, it will use the default text material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TEXT;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualText = class VisualText {\r\n\r\n    constructor(params = new PP.VisualTextParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTextObject = null;\r\n        this._myTextComponent = null;\r\n\r\n        this._myTextMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myTextObject.pp_setActive(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        this._myTextObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTextObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTextObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        if (this._myParams.myMaterial == null) {\r\n            if (this._myParams.myColor == null) {\r\n                this._myTextComponent.material = PP.myVisualData.myDefaultMaterials.myDefaultTextMaterial;\r\n            } else {\r\n                if (this._myTextMaterial == null) {\r\n                    this._myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n                }\r\n                this._myTextComponent.material = this._myTextMaterial;\r\n                this._myTextMaterial.color = this._myParams.myColor;\r\n            }\r\n        } else {\r\n            this._myTextComponent.material = this._myParams.myMaterial;\r\n        }\r\n\r\n        this._myTextComponent.text = this._myParams.myText;\r\n        this._myTextComponent.alignment = this._myParams.myAlignment;\r\n        this._myTextComponent.justification = this._myParams.myJustification;\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _build() {\r\n        this._myTextObject = WL.scene.addObject(null);\r\n        this._myTextComponent = this._myTextObject.addComponent('text');\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTextParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualText(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualTextParams.prototype.copy = function copy(other) {\r\n    this.myText = other.myText;\r\n    this.myAlignment = other.myAlignment;\r\n    this.myJustification = other.myJustification;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualTextParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualTransformParams();\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myLength = 0.2;\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTransform = new PP.VisualTransform(visualParams);\r\n*/\r\n\r\nPP.VisualTransformParams = class VisualTransformParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n        this.myLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myForwardMaterial = null;\r\n        this.myUpMaterial = null;\r\n        this.myRightMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TRANSFORM;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualTransform = class VisualTransform {\r\n\r\n    constructor(params = new PP.VisualTransformParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRight = new PP.VisualArrow();\r\n        this._myVisualUp = new PP.VisualArrow();\r\n        this._myVisualForward = new PP.VisualArrow();\r\n\r\n        this._myVisualRight.setAutoRefresh(false);\r\n        this._myVisualUp.setAutoRefresh(false);\r\n        this._myVisualForward.setAutoRefresh(false);\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n            this._myVisualRight.setVisible(visible);\r\n            this._myVisualUp.setVisible(visible);\r\n            this._myVisualForward.setVisible(visible);\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRight.forceRefresh();\r\n        this._myVisualUp.forceRefresh();\r\n        this._myVisualForward.forceRefresh();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRight.update(dt);\r\n        this._myVisualUp.update(dt);\r\n        this._myVisualForward.update(dt);\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTransformParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualTransform(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualTransform.prototype._refresh = function () {\r\n    let axes = [PP.vec3_create(), PP.vec3_create(), PP.vec3_create()];\r\n    let scale = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    return function _refresh() {\r\n        axes = this._myParams.myTransform.mat4_getAxes(axes);\r\n        scale = this._myParams.myTransform.mat4_getScale(scale);\r\n        let maxValue = 0;\r\n        for (let value of scale) {\r\n            maxValue = Math.max(value, maxValue);\r\n        }\r\n\r\n        if (maxValue == 0) {\r\n            scale[0] = 1;\r\n            scale[1] = 1;\r\n            scale[2] = 1;\r\n        } else {\r\n            scale[0] = scale[0] / maxValue;\r\n            scale[1] = scale[1] / maxValue;\r\n            scale[2] = scale[2] / maxValue;\r\n        }\r\n\r\n        position = this._myParams.myTransform.mat4_getPosition(position);\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualRight.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[0].vec3_negate(visualArrowParams.myDirection).vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[0], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myRightMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myRightMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualRight.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualUp.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[1].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[1], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myUpMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myUpMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualUp.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualArrowParams = this._myVisualForward.getParams();\r\n            visualArrowParams.myStart.vec3_copy(position);\r\n            visualArrowParams.myDirection = axes[2].vec3_normalize(visualArrowParams.myDirection);\r\n            visualArrowParams.myLength = Math.max(this._myParams.myLength * scale[2], 0.001);\r\n            visualArrowParams.myThickness = this._myParams.myThickness;\r\n\r\n            if (this._myParams.myForwardMaterial == null) {\r\n                visualArrowParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial;\r\n            } else {\r\n                visualArrowParams.myMaterial = this._myParams.myForwardMaterial;\r\n            }\r\n\r\n            visualArrowParams.myParent = this._myParams.myParent;\r\n            visualArrowParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n            this._myVisualForward.paramsUpdated();\r\n        }\r\n    };\r\n}();\r\n\r\nPP.VisualTransformParams.prototype.copy = function copy(other) {\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n    this.myLength = other.myLength;\r\n    this.myThickness = other.myThickness;\r\n\r\n    if (other.myRightMaterial != null) {\r\n        this.myRightMaterial = other.myRightMaterial.clone();\r\n    } else {\r\n        this.myRightMaterial = null;\r\n    }\r\n\r\n    if (other.myUpMaterial != null) {\r\n        this.myUpMaterial = other.myUpMaterial.clone();\r\n    } else {\r\n        this.myUpMaterial = null;\r\n    }\r\n\r\n    if (other.myForwardMaterial != null) {\r\n        this.myForwardMaterial = other.myForwardMaterial.clone();\r\n    } else {\r\n        this.myForwardMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualTransform.prototype, \"_refresh\", { enumerable: false });\r\nObject.defineProperty(PP.VisualTransformParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualRaycastParams();\r\nvisualParams.myRaycastResults = raycastResults;\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualRaycast = new PP.VisualRaycast(visualParams);\r\n*/\r\n\r\nPP.VisualRaycastParams = class VisualRaycastParams {\r\n\r\n    constructor() {\r\n        this._myRaycastResults = new PP.RaycastResults();\r\n\r\n        this.myHitNormalLength = 0.2;\r\n        this.myThickness = 0.005;\r\n\r\n        this.myShowOnlyFirstHit = true;\r\n\r\n        this.myRayMaterial = null;\r\n        this.myHitNormalMaterial = null;\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.RAYCAST;\r\n    }\r\n\r\n    get myRaycastResults() {\r\n        return this._myRaycastResults;\r\n    }\r\n\r\n    set myRaycastResults(result) {\r\n        this._myRaycastResults.copy(result);\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualRaycast = class VisualRaycast {\r\n\r\n    constructor(params = new PP.VisualRaycastParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myVisualRaycast = new PP.VisualArrow();\r\n\r\n        this._myVisualRaycast.setAutoRefresh(false);\r\n\r\n        this._myVisualRaycastHitList = [];\r\n        this._addVisualRaycastHit();\r\n\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n                    this._myVisualRaycast.setVisible(true);\r\n                }\r\n\r\n                if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n                    let hitsToShow = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n                    for (let i = 0; i < hitsToShow; i++) {\r\n                        let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                        visualRaycastHit.setVisible(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._myVisualRaycast.setVisible(false);\r\n\r\n                for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n                    visualRaycastHit.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        this._myVisualRaycast.forceRefresh();\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let hitsToRefresh = Math.min(this._myParams.myRaycastResults.myHits.length, this._myVisualRaycastHitList.length);\r\n\r\n            for (let i = 0; i < hitsToRefresh; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n                visualRaycastHit.forceRefresh();\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n            this._myDirty = false;\r\n        }\r\n\r\n        this._myVisualRaycast.update(dt);\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.update(dt);\r\n        }\r\n    }\r\n\r\n    _refresh() {\r\n        for (let visualRaycastHit of this._myVisualRaycastHitList) {\r\n            visualRaycastHit.setVisible(false);\r\n        }\r\n\r\n        if (this._myParams.myRaycastResults.myHits.length > 0) {\r\n            let raycastDistance = this._myParams.myShowOnlyFirstHit ?\r\n                this._myParams.myRaycastResults.myHits.pp_first().myDistance :\r\n                this._myParams.myRaycastResults.myHits.pp_last().myDistance;\r\n\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = raycastDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n\r\n            let hitsToShow = this._myParams.myShowOnlyFirstHit ? 1 : this._myParams.myRaycastResults.myHits.length;\r\n            while (hitsToShow > this._myVisualRaycastHitList.length) {\r\n                this._addVisualRaycastHit();\r\n            }\r\n\r\n            for (let i = 0; i < hitsToShow; i++) {\r\n                let visualRaycastHit = this._myVisualRaycastHitList[i];\r\n\r\n                {\r\n                    let visualRaycastHitParams = visualRaycastHit.getParams();\r\n                    visualRaycastHitParams.myStart.vec3_copy(this._myParams.myRaycastResults.myHits[i].myPosition);\r\n                    visualRaycastHitParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myHits[i].myNormal);\r\n                    visualRaycastHitParams.myLength = this._myParams.myHitNormalLength;\r\n                    visualRaycastHitParams.myThickness = this._myParams.myThickness;\r\n\r\n                    if (this._myParams.myHitNormalMaterial == null) {\r\n                        visualRaycastHitParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial;\r\n                    } else {\r\n                        visualRaycastHitParams.myMaterial = this._myParams.myHitNormalMaterial;\r\n                    }\r\n\r\n                    visualRaycastHitParams.myParent = this._myParams.myParent;\r\n                    visualRaycastHitParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                    visualRaycastHit.paramsUpdated();\r\n\r\n                    visualRaycastHit.setVisible(this._myVisible);\r\n                }\r\n            }\r\n\r\n        } else if (this._myParams.myRaycastResults.myRaycastSetup != null) {\r\n            {\r\n                let visualRaycastParams = this._myVisualRaycast.getParams();\r\n                visualRaycastParams.myStart.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myOrigin);\r\n                visualRaycastParams.myDirection.vec3_copy(this._myParams.myRaycastResults.myRaycastSetup.myDirection);\r\n                visualRaycastParams.myLength = this._myParams.myRaycastResults.myRaycastSetup.myDistance;\r\n                visualRaycastParams.myThickness = this._myParams.myThickness;\r\n\r\n                if (this._myParams.myRayMaterial == null) {\r\n                    visualRaycastParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial;\r\n                } else {\r\n                    visualRaycastParams.myMaterial = this._myParams.myRayMaterial;\r\n                }\r\n\r\n                visualRaycastParams.myParent = this._myParams.myParent;\r\n                visualRaycastParams.myIsLocal = this._myParams.myIsLocal;\r\n\r\n                this._myVisualRaycast.paramsUpdated();\r\n\r\n                this._myVisualRaycast.setVisible(this._myVisible);\r\n            }\r\n        } else {\r\n            this._myVisualRaycast.setVisible(false);\r\n        }\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualRaycastParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualRaycast(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n\r\n    _addVisualRaycastHit() {\r\n        let visualRaycastHit = new PP.VisualArrow();\r\n\r\n        visualRaycastHit.setAutoRefresh(false);\r\n        visualRaycastHit.setVisible(false);\r\n\r\n        this._myVisualRaycastHitList.push(visualRaycastHit);\r\n    }\r\n};\r\n\r\nPP.VisualRaycastParams.prototype.copy = function copy(other) {\r\n    this.myRaycastResults = other.myRaycastResults;\r\n    this.myHitNormalLength = other.myHitNormalLength;\r\n    this.myThickness = other.myThickness;\r\n    this.myShowOnlyFirstHit = other.myShowOnlyFirstHit;\r\n\r\n    if (other.myRayMaterial != null) {\r\n        this.myRayMaterial = other.myRayMaterial.clone();\r\n    } else {\r\n        this.myRayMaterial = null;\r\n    }\r\n\r\n    if (other.myHitNormalMaterial != null) {\r\n        this.myHitNormalMaterial = other.myHitNormalMaterial.clone();\r\n    } else {\r\n        this.myHitNormalMaterial = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualRaycastParams.prototype, \"copy\", { enumerable: false });", "/*\r\nlet visualParams = new PP.VisualTorusParams();\r\nvisualParams.myRadius = 1;\r\nvisualParams.mySegmentsAmount = 12;\r\nvisualParams.mySegmentThickness = 0.05;\r\nvisualParams.myTransform.mat4_copy(transform);\r\nvisualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\nvisualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\nPP.myVisualManager.draw(visualParams);\r\n\r\nor\r\n\r\nlet visualTorus = new PP.VisualTorus(visualParams);\r\n*/\r\n\r\nPP.VisualTorusParams = class VisualTorusParams {\r\n\r\n    constructor() {\r\n        this.myTransform = PP.mat4_create();\r\n        this.myRadius = 0;\r\n\r\n        this.mySegmentsAmount = 12;\r\n        this.mySegmentThickness = 0.05;\r\n\r\n        this.mySegmentMesh = null;  // the mesh is scaled along up axis, null means it will default on PP.myDefaultResources.myMeshes.myCylinder\r\n\r\n        this.myMaterial = null;     // null means it will default on PP.myDefaultResources.myMaterials.myFlatOpaque\r\n        this.myColor = null;        // if this is set and material is null, it will use the default flat opaque material with this color\r\n\r\n        this.myParent = PP.myVisualData.myRootObject;\r\n        this.myIsLocal = false;\r\n\r\n        this.myType = PP.VisualElementType.TORUS;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.VisualTorus = class VisualTorus {\r\n\r\n    constructor(params = new PP.VisualTorusParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = false;\r\n        this._myAutoRefresh = true;\r\n\r\n        this._myDirty = false;\r\n\r\n        this._myTorusRootObject = null;\r\n\r\n        this._myVisualSegmentList = [];\r\n\r\n        this._myFlatOpaqueMaterial = null;\r\n\r\n        this._build();\r\n        this.forceRefresh();\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVisible) {\r\n                let segmentToShow = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n                for (let i = 0; i < segmentToShow; i++) {\r\n                    let visualSegment = this._myVisualSegmentList[i];\r\n                    visualSegment.setVisible(true);\r\n                }\r\n            } else {\r\n                for (let visualSegment of this._myVisualSegmentList) {\r\n                    visualSegment.setVisible(false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setAutoRefresh(autoRefresh) {\r\n        this._myAutoRefresh = autoRefresh;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    setParams(params) {\r\n        this._myParams = params;\r\n        this._markDirty();\r\n    }\r\n\r\n    copyParams(params) {\r\n        this._myParams.copy(params);\r\n        this._markDirty();\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._markDirty();\r\n    }\r\n\r\n    refresh() {\r\n        this.update(0);\r\n    }\r\n\r\n    forceRefresh() {\r\n        this._refresh();\r\n\r\n        let segmentToRefresh = Math.min(this._myParams.mySegmentsAmount, this._myVisualSegmentList.length);\r\n\r\n        for (let i = 0; i < segmentToRefresh; i++) {\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n            visualSegment.forceRefresh();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myDirty) {\r\n            this._refresh();\r\n\r\n            this._myDirty = false;\r\n        }\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.update(dt);\r\n        }\r\n    }\r\n\r\n    _build() {\r\n        this._myTorusRootObject = WL.scene.addObject(null);\r\n\r\n        this._fillSegmentList();\r\n    }\r\n\r\n    _markDirty() {\r\n        this._myDirty = true;\r\n\r\n        if (this._myAutoRefresh) {\r\n            this.update(0);\r\n        }\r\n    }\r\n\r\n    _fillSegmentList() {\r\n        while (this._myVisualSegmentList.length < this._myParams.mySegmentsAmount) {\r\n            let visualSegment = new PP.VisualLine();\r\n\r\n            visualSegment.setAutoRefresh(false);\r\n            visualSegment.setVisible(false);\r\n\r\n            visualSegment.getParams().myParent = this._myTorusRootObject;\r\n            visualSegment.getParams().myIsLocal = true;\r\n\r\n            this._myVisualSegmentList.push(visualSegment);\r\n        }\r\n    }\r\n\r\n    clone() {\r\n        let clonedParams = new PP.VisualTorusParams();\r\n        clonedParams.copy(this._myParams);\r\n\r\n        let clone = new PP.VisualTorus(clonedParams);\r\n        clone.setAutoRefresh(this._myAutoRefresh);\r\n        clone.setVisible(this._myVisible);\r\n        clone._myDirty = this._myDirty;\r\n\r\n        return clone;\r\n    }\r\n};\r\n\r\nPP.VisualTorus.prototype._refresh = function () {\r\n    let segmentStart = PP.vec3_create();\r\n    let segmentEnd = PP.vec3_create();\r\n\r\n    let segmentDirection = PP.vec3_create();\r\n\r\n    let fixedSegmentStart = PP.vec3_create();\r\n    let fixedSegmentEnd = PP.vec3_create();\r\n\r\n    let up = PP.vec3_create(0, 1, 0);\r\n    return function _refresh() {\r\n        this._fillSegmentList();\r\n\r\n        for (let visualSegment of this._myVisualSegmentList) {\r\n            visualSegment.setVisible(false);\r\n        }\r\n\r\n        this._myTorusRootObject.pp_setParent(this._myParams.myParent, false);\r\n\r\n        if (this._myParams.myIsLocal) {\r\n            this._myTorusRootObject.pp_setTransformLocal(this._myParams.myTransform);\r\n        } else {\r\n            this._myTorusRootObject.pp_setTransform(this._myParams.myTransform);\r\n        }\r\n\r\n        let sliceAngle = 2 * Math.PI / this._myParams.mySegmentsAmount;\r\n        segmentStart.vec3_set(this._myParams.myRadius, 0, 0);\r\n        for (let i = 0; i < this._myParams.mySegmentsAmount; i++) {\r\n            segmentEnd = segmentStart.vec3_rotateAxisRadians(sliceAngle, up, segmentEnd);\r\n\r\n            segmentDirection = segmentEnd.vec3_sub(segmentStart, segmentDirection).vec3_normalize(segmentDirection);\r\n\r\n            let extraLength = Math.tan(sliceAngle / 2) * this._myParams.mySegmentThickness / 2;\r\n\r\n            fixedSegmentStart = segmentStart.vec3_sub(segmentDirection.vec3_scale(extraLength, fixedSegmentStart), fixedSegmentStart);\r\n            fixedSegmentEnd = segmentEnd.vec3_add(segmentDirection.vec3_scale(extraLength, fixedSegmentEnd), fixedSegmentEnd);\r\n\r\n            let visualSegment = this._myVisualSegmentList[i];\r\n\r\n            let visualSegmentParams = visualSegment.getParams();\r\n            visualSegmentParams.setStartEnd(fixedSegmentStart, fixedSegmentEnd);\r\n            visualSegmentParams.myThickness = this._myParams.mySegmentThickness;\r\n\r\n            visualSegmentParams.myMesh = this._myParams.mySegmentMesh;\r\n\r\n            if (this._myParams.myMaterial == null) {\r\n                if (this._myParams.myColor == null) {\r\n                    visualSegmentParams.myMaterial = PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial;\r\n                } else {\r\n                    if (this._myFlatOpaqueMaterial == null) {\r\n                        this._myFlatOpaqueMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    }\r\n                    visualSegmentParams.myMaterial = this._myFlatOpaqueMaterial;\r\n                    this._myFlatOpaqueMaterial.color = this._myParams.myColor;\r\n                }\r\n            } else {\r\n                visualSegmentParams.myMaterial = this._myParams.myMaterial;\r\n            }\r\n\r\n            visualSegment.paramsUpdated();\r\n\r\n            visualSegment.setVisible(this._myVisible);\r\n\r\n            segmentStart.vec3_copy(segmentEnd);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.VisualTorusParams.prototype.copy = function copy(other) {\r\n    this.myRadius = other.myRadius;\r\n    this.mySegmentsAmount = other.mySegmentsAmount;\r\n    this.mySegmentThickness = other.mySegmentThickness;\r\n\r\n    this.myTransform.mat4_copy(other.myTransform);\r\n\r\n    this.mySegmentMesh = other.mySegmentMesh;\r\n\r\n    if (other.myMaterial != null) {\r\n        this.myMaterial = other.myMaterial.clone();\r\n    } else {\r\n        this.myMaterial = null;\r\n    }\r\n\r\n    if (other.myColor != null) {\r\n        if (this.myColor != null) {\r\n            this.myColor.vec4_copy(other.myColor);\r\n        } else {\r\n            this.myColor = other.myColor.vec4_clone();\r\n        }\r\n    } else {\r\n        this.myColor = null;\r\n    }\r\n\r\n    this.myParent = other.myParent;\r\n    this.myIsLocal = other.myIsLocal;\r\n\r\n    this.myType = other.myType;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.VisualTorus.prototype, \"_refresh\", { enumerable: false });\r\nObject.defineProperty(PP.VisualTorusParams.prototype, \"copy\", { enumerable: false });", "WL.registerComponent('pp-visual-manager', {\r\n}, {\r\n    init: function () {\r\n        if (this.active) {\r\n            PP.myVisualData.myRootObject = WL.scene.addObject(null);\r\n\r\n            PP.myVisualManager = new PP.VisualManager();\r\n        }\r\n    },\r\n    start() {\r\n        PP.myVisualData.myDefaultMaterials.myDefaultMeshMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRightMaterial.color = PP.vec4_create(1, 0, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultUpMaterial.color = PP.vec4_create(0, 1, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultForwardMaterial.color = PP.vec4_create(0, 0, 1, 1);\r\n\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultRayMaterial.color = PP.vec4_create(0, 1, 0, 1);\r\n        PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        PP.myVisualData.myDefaultMaterials.myDefaultHitNormalMaterial.color = PP.vec4_create(1, 0, 0, 1);\r\n\r\n        PP.myVisualManager.start();\r\n    },\r\n    update(dt) {\r\n        PP.myVisualManager.update(dt);\r\n    }\r\n});\r\n\r\nPP.myVisualManager = null;\r\n\r\nPP.myVisualData = {\r\n    myRootObject: null,\r\n    myDefaultMaterials: {\r\n        myDefaultMeshMaterial: null,\r\n        myDefaultTextMaterial: null,\r\n        myDefaultRightMaterial: null,\r\n        myDefaultUpMaterial: null,\r\n        myDefaultForwardMaterial: null,\r\n        myDefaultRayMaterial: null,\r\n        myDefaultHitNormalMaterial: null\r\n    }\r\n};", "PP.DebugManager = class DebugManager {\r\n    constructor() {\r\n        this._myDebugVisualManager = new PP.DebugVisualManager();\r\n    }\r\n\r\n    getDebugVisualManager() {\r\n        return this._myDebugVisualManager;\r\n    }\r\n\r\n    start() {\r\n        this._myDebugVisualManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myDebugVisualManager.update(dt);\r\n    }\r\n};", "PP.DebugVisualManager = class DebugVisualManager extends PP.VisualManager {\r\n    drawLine(lifetimeSeconds, start, direction, length, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        let visualParams = new PP.VisualLineParams();\r\n        visualParams.myStart.vec3_copy(start);\r\n        visualParams.myDirection.vec3_copy(direction);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawLineEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    drawArrow(lifetimeSeconds, start, direction, length, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        let visualParams = new PP.VisualArrowParams();\r\n        visualParams.myStart.vec3_copy(start);\r\n        visualParams.myDirection.vec3_copy(direction);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawArrowEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    drawPoint(lifetimeSeconds, position, color = PP.vec4_create(0, 1, 0, 1), radius = 0.005) {\r\n        let visualParams = new PP.VisualPointParams();\r\n        visualParams.myPosition.vec3_copy(position);\r\n        visualParams.myRadius = radius;\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawText(lifetimeSeconds, text, transform, color = PP.vec4_create(0, 1, 0, 1), alignment = WL.Alignment.Center, justification = WL.Justification.Middle) {\r\n        let visualParams = new PP.VisualTextParams();\r\n        visualParams.myText = text;\r\n        visualParams.myAlignment = alignment;\r\n        visualParams.myJustification = justification;\r\n        visualParams.myTransform.mat4_copy(transform);\r\n        visualParams.myColor = PP.vec4_create();\r\n        visualParams.myColor.vec4_copy(color);\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawRaycast(lifetimeSeconds, raycastResult, showOnlyFirstHit = true, hitNormalLength = 0.2, thickness = 0.005) {\r\n        let visualParams = new PP.VisualRaycastParams();\r\n        visualParams.myRaycastResults = raycastResult;\r\n        visualParams.myShowOnlyFirstHit = showOnlyFirstHit;\r\n        visualParams.myHitNormalLength = hitNormalLength;\r\n        visualParams.myThickness = thickness;\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n\r\n    drawTransform(lifetimeSeconds, transform, length = 0.2, thickness = 0.005) {\r\n        let visualParams = new PP.VisualTransformParams();\r\n        visualParams.myTransform.mat4_copy(transform);\r\n        visualParams.myLength = length;\r\n        visualParams.myThickness = thickness;\r\n        this.draw(visualParams, lifetimeSeconds);\r\n    }\r\n};\r\n\r\nPP.DebugVisualManager.prototype.drawLineEnd = function () {\r\n    let direction = PP.vec3_create();\r\n    return function drawLineEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        direction = end.vec3_sub(start, direction);\r\n        length = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        this.drawLine(lifetimeSeconds, start, direction, length, color, thickness);\r\n    };\r\n}();\r\n\r\nPP.DebugVisualManager.prototype.drawArrowEnd = function () {\r\n    let direction = PP.vec3_create();\r\n    return function drawArrowEnd(lifetimeSeconds, start, end, color = PP.vec4_create(0, 1, 0, 1), thickness = 0.005) {\r\n        direction = end.vec3_sub(start, direction);\r\n        length = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        this.drawArrow(lifetimeSeconds, start, direction, length, color, thickness);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.DebugVisualManager.prototype, \"drawLineEnd\", { enumerable: false });\r\nObject.defineProperty(PP.DebugVisualManager.prototype, \"drawArrowEnd\", { enumerable: false });", "WL.registerComponent(\"pp-debug-transform\", {\r\n    _myLength: { type: WL.Type.Float, default: 0.1 },\r\n    _myThickness: { type: WL.Type.Float, default: 0.005 }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myDebugTransformParams = new PP.VisualTransformParams();\r\n        this._myDebugTransformParams.myLength = this._myLength;\r\n        this._myDebugTransformParams.myThickness = this._myThickness;\r\n\r\n        this._myDebugVisualTransform = new PP.VisualTransform(this._myDebugTransformParams);\r\n    },\r\n    update: function (dt) {\r\n        this.object.pp_getTransform(this._myDebugTransformParams.myTransform);\r\n        this._myDebugVisualTransform.paramsUpdated();\r\n    }\r\n});", "WL.registerComponent('pp-debug-manager', {\r\n}, {\r\n    init: function () {\r\n        if (this.active) {\r\n            PP.myDebugManager = new PP.DebugManager();\r\n            PP.myDebugVisualManager = PP.myDebugManager.getDebugVisualManager();\r\n        }\r\n    },\r\n    start() {\r\n        PP.myDebugManager.start();\r\n    },\r\n    update(dt) {\r\n        PP.myDebugManager.update(dt);\r\n    }\r\n});\r\n\r\nPP.myDebugManager = null;\r\nPP.myDebugVisualManager = null;", "// #TODO add getter/setter accessors overwrite\r\n// #TODO if both a class and the parent class are in the list, they should be overwritten in parent first order\r\n\r\nPP.DebugFunctionsOverwriterParams = class DebugFunctionsOverwriterParams {\r\n    constructor() {\r\n        this.myObjectsByReference = [];         // You can specify to count the call on a specific object instance\r\n        this.myObjectsByPath = [];              // If you want you can specify the instance by path, but it means it must be reachable from window\r\n\r\n        this.myClassesByReference = [];         // By Reference means by using a reference to the class, like doing PP.Timer, but also let ref = PP.Timer and use ref\r\n        this.myClassesByPath = [];              // By Path means by using the full class path, like \"PP.Timer\", this is requiredneeded if u want to count the constructor\r\n\r\n        this.myFunctionsByPath = [];\r\n        // You can also count the call to a specific function, but it must be reachable from window, no reference way\r\n        // It's mostly for global functions, which could be tracked anyway using window as object reference\r\n\r\n        this.myExcludeConstructors = false;      // constructor calls count can be a problem for some classes (like Array)\r\n        this.myExcludeJavascriptObjectFunctions = false;\r\n\r\n        this.myFunctionNamesToInclude = [];     // empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionNamesToExclude = [];     // empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // these can be used if u want to have a bit more control on function name filtering\r\n        this.myFunctionPathsToInclude = [];         // empty means every function is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myFunctionPathsToExclude = [];         // empty means no function is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectAddObjectDescendantsDepthLevel = 0;        // you can specify if you want to also count the OBJECT descendants of the objects you have specified\r\n        this.myObjectAddClassDescendantsDepthLevel = 0;       // you can specify if you want to also count the CLASS descendants of the objects you have specified\r\n        // the depth level specify how deep in the hierarchy, level 0 means no recursion, 1 only children, 2 also grand children, and so on\r\n        // -1 to select all the hierarchy\r\n\r\n        // these filters are only useful if u are doing recursion\r\n        this.myObjectNamesToInclude = [];           // empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectNamesToExclude = [];           // empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassNamesToInclude = [];            // empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassNamesToExclude = [];            // empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myObjectPathsToInclude = [];           // empty means every object is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myObjectPathsToExclude = [];           // empty means no object is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        this.myClassPathsToInclude = [];            // empty means every class is included, can be a regex (. must be escaped with \\\\.)\r\n        this.myClassPathsToExclude = [];            // empty means no class is excluded, can be a regex (. must be escaped with \\\\.)\r\n\r\n        // Tricks\r\n        // - you can specify an object/class/function as a pair [object, \"name\"] instead of just object\r\n        //   and the name, if not null, will be used as path instead of the default one\r\n        //   WARNING: this means that there is a specific case, an array of 2 elements with a string, which can't be tracked if you don't put it inside an array like above\r\n\r\n        this.myDebugLogActive = false;\r\n    }\r\n};\r\n\r\nPP.DebugFunctionsOverwriter = class DebugFunctionsOverwriter {\r\n    constructor(params = new PP.DebugFunctionsOverwriterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myPropertiesAlreadyOverwritten = new Map();\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        let classesAndParents = this._getReferencesAndParents(this._myParams.myClassesByReference, this._myParams.myClassesByPath, true);\r\n        let objectsAndParents = this._getReferencesAndParents(this._myParams.myObjectsByReference, this._myParams.myObjectsByPath, false);\r\n        let functionsAndParents = this._getReferencesAndParents([], this._myParams.myFunctionsByPath, false);\r\n\r\n        this._objectAddDescendants(objectsAndParents, classesAndParents);\r\n\r\n        for (let referenceAndParent of classesAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, true);\r\n        }\r\n\r\n        for (let referenceAndParent of objectsAndParents) {\r\n            let reference = referenceAndParent[0];\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n            let referenceNameForFilter = referenceAndParent[4];\r\n\r\n            this._overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, false);\r\n        }\r\n\r\n        for (let referenceAndParent of functionsAndParents) {\r\n            let referenceParent = referenceAndParent[1];\r\n            let referenceName = referenceAndParent[2];\r\n            let referencePath = referenceAndParent[3];\r\n\r\n            this._overwriteFunction(referenceParent, referenceName, null, null, referencePath, false, true);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return PP.JSUtils.getReferenceProperty(reference, propertyName);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return PP.JSUtils.getReferenceProperty(reference, propertyName);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _overwriteReferenceFunctions(reference, referenceParent, referenceName, referencePath, referenceNameForFilter, isClass) {\r\n        let includePathList = this._myParams.myObjectPathsToInclude;\r\n        let excludePathList = this._myParams.myObjectPathsToExclude;\r\n        let includeNameList = this._myParams.myObjectNamesToInclude;\r\n        let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n        if (isClass) {\r\n            includePathList = this._myParams.myClassPathsToInclude;\r\n            excludePathList = this._myParams.myClassPathsToExclude;\r\n            includeNameList = this._myParams.myClassNamesToInclude;\r\n            excludeNameList = this._myParams.myClassNamesToExclude;\r\n        }\r\n\r\n        let isValidReferencePath = this._filterName(referencePath, includePathList, excludePathList);\r\n        let isValidReferenceName = this._filterName(referenceNameForFilter, includeNameList, excludeNameList);\r\n        if (isValidReferencePath && isValidReferenceName) {\r\n            let propertyNames = PP.JSUtils.getReferencePropertyNames(reference);\r\n            if (propertyNames.pp_hasEqual(\"constructor\")) {\r\n                propertyNames.unshift(\"constructor\"); // be sure it's added first to spot bugs, not important that it appears twice in the list\r\n            }\r\n\r\n            for (let propertyName of propertyNames) {\r\n                let overwriteTargetReference = null;\r\n\r\n                let referenceParentForConstructor = null;\r\n                let referenceNameForConstructor = null;\r\n\r\n                if (isClass) {\r\n                    let fixedReference = reference;\r\n\r\n                    if (referenceParent != null) {\r\n                        let ownReferenceDescriptor = Object.getOwnPropertyDescriptor(referenceParent, referenceName);\r\n                        if (ownReferenceDescriptor != null && ownReferenceDescriptor.value != null) {\r\n                            fixedReference = ownReferenceDescriptor.value;\r\n                        }\r\n                    }\r\n\r\n                    overwriteTargetReference = fixedReference.prototype;\r\n                    if (overwriteTargetReference == null) {\r\n                        overwriteTargetReference = fixedReference;\r\n                    } else {\r\n                        try {\r\n                            let referenceProperty = PP.JSUtils.getReferenceProperty(overwriteTargetReference, propertyName);\r\n                            if (referenceProperty == null) {\r\n                                overwriteTargetReference = fixedReference;\r\n                            }\r\n                        } catch (error) {\r\n                            overwriteTargetReference = fixedReference;\r\n                        }\r\n                    }\r\n\r\n                    referenceParentForConstructor = referenceParent;\r\n                    referenceNameForConstructor = referenceName;\r\n                } else {\r\n                    overwriteTargetReference = reference;\r\n                }\r\n\r\n                this._overwriteFunction(overwriteTargetReference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, false);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    _overwriteFunction(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction) {\r\n        try {\r\n            let isPropertyCountedAlready = this._myPropertiesAlreadyOverwritten.get(propertyName) != null && this._myPropertiesAlreadyOverwritten.get(propertyName).pp_hasEqual(reference);\r\n            if (!isPropertyCountedAlready) {\r\n                if (PP.JSUtils.isFunctionByName(reference, propertyName)) {\r\n                    if (!this._myParams.myExcludeJavascriptObjectFunctions || !this._isJavascriptObjectFunction(propertyName)) {\r\n                        let isValidFunctionName = this._filterName(propertyName, this._myParams.myFunctionNamesToInclude, this._myParams.myFunctionNamesToExclude);\r\n                        let isValidFunctionPath = this._filterName((referencePath != null ? referencePath + \".\" : \"\") + propertyName, this._myParams.myFunctionPathsToInclude, this._myParams.myFunctionPathsToExclude);\r\n                        if (isValidFunctionName && isValidFunctionPath) {\r\n                            if (!this._myPropertiesAlreadyOverwritten.has(propertyName)) {\r\n                                this._myPropertiesAlreadyOverwritten.set(propertyName, []);\r\n                            }\r\n\r\n                            let overwriteSuccess = false;\r\n                            let isConstructor = false;\r\n                            if (propertyName != \"constructor\") {\r\n                                try {\r\n                                    let newFunction = this._getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction);\r\n                                    if (newFunction != PP.JSUtils.getReferenceProperty(reference, propertyName)) {\r\n                                        overwriteSuccess = PP.JSUtils.overwriteReferenceProperty(newFunction, reference, propertyName, false, true, this._myParams.myDebugLogActive);\r\n                                    } else {\r\n                                        overwriteSuccess = true;\r\n                                    }\r\n                                } catch (error) {\r\n                                    overwriteSuccess = false;\r\n\r\n                                    if (this._myParams.myDebugLogActive) {\r\n                                        console.error(error);\r\n                                    }\r\n                                }\r\n                            } else if (!this._myParams.myExcludeConstructors && isClass && referenceParentForConstructor != null) {\r\n                                let referenceForConstructor = PP.JSUtils.getReferenceProperty(referenceParentForConstructor, referenceNameForConstructor);\r\n                                if (referenceForConstructor != null && referenceForConstructor.prototype != null) {\r\n                                    isConstructor = true;\r\n\r\n                                    try {\r\n                                        let newConstructor = this._getOverwrittenConstructor(referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction);\r\n                                        if (newConstructor != referenceForConstructor) {\r\n                                            overwriteSuccess = PP.JSUtils.overwriteReferenceProperty(newConstructor, referenceParentForConstructor, referenceNameForConstructor, false, true, this._myParams.myDebugLogActive);\r\n                                            if (overwriteSuccess) {\r\n                                                overwriteSuccess = PP.JSUtils.overwriteReferenceProperty(newConstructor, referenceForConstructor.prototype, propertyName, false, true, this._myParams.myDebugLogActive);\r\n                                            }\r\n                                        } else {\r\n                                            overwriteSuccess = true;\r\n                                        }\r\n                                    } catch (error) {\r\n                                        overwriteSuccess = false;\r\n\r\n                                        if (this._myParams.myDebugLogActive) {\r\n                                            console.error(error);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (overwriteSuccess) {\r\n                                this._myPropertiesAlreadyOverwritten.get(propertyName).push(reference);\r\n                                this._onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            } else {\r\n                                this._onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (this._myParams.myDebugLogActive) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    _getReferencesAndParents(byReferenceList, byPathList, isClass) {\r\n        let referenceAndParents = [];\r\n\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        for (let pathPair of byPathList) {\r\n            let path = pathPair;\r\n            let referenceName = \"\";\r\n            let referencePath = pathPair;\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (pathPair != null && Array.isArray(pathPair) && pathPair.length != null && pathPair.length == 2 && typeof pathPair[1] == \"string\") {\r\n                path = pathPair[0];\r\n                referencePath = pathPair[1];\r\n            }\r\n\r\n            referenceName = PP.JSUtils.getReferenceNameFromPath(path);\r\n            referenceNameForFilter = PP.JSUtils.getReferenceNameFromPath(referencePath);\r\n\r\n            let reference = PP.JSUtils.getReferenceFromPath(path);\r\n            let referenceParent = PP.JSUtils.getReferenceParentFromPath(path);\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, referenceParent, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        for (let referencePair of byReferenceList) {\r\n            let reference = referencePair;\r\n            let referenceName = \"\";\r\n            let referencePath = \"\";\r\n            let referenceNameForFilter = \"\";\r\n\r\n            if (referencePair != null && referencePair.length != null && referencePair.length == 2 && typeof referencePair[1] == \"string\") {\r\n                reference = referencePair[0];\r\n                referencePath = referencePair[1];\r\n                referenceNameForFilter = PP.JSUtils.getReferenceNameFromPath(referencePath);\r\n            } else {\r\n                referencePath = isClass ? reference.name : null;\r\n                referenceNameForFilter = isClass ? reference.name : null;\r\n            }\r\n\r\n            if (isClass) {\r\n                referenceName = reference.name;\r\n            } else {\r\n                referenceName = PP.JSUtils.getReferenceNameFromPath(referencePath);\r\n            }\r\n\r\n            if (reference != null) {\r\n                referenceAndParents.pp_pushUnique([reference, null, referenceName, referencePath, referenceNameForFilter], equalCallback);\r\n            }\r\n        }\r\n\r\n        return referenceAndParents;\r\n    }\r\n\r\n    _objectAddDescendants(objectsAndParents, classesAndParents) {\r\n        let equalCallback = (first, second) => first[0] == second[0];\r\n\r\n        let objectsToVisit = [];\r\n        for (let objectAndParent of objectsAndParents) {\r\n            objectsToVisit.pp_pushUnique([objectAndParent[0], 0, objectAndParent[3]], equalCallback);\r\n        }\r\n\r\n        while (objectsToVisit.length > 0) {\r\n            let objectToVisit = objectsToVisit.shift();\r\n\r\n            let object = objectToVisit[0];\r\n            let objectLevel = objectToVisit[1];\r\n            let objectPath = objectToVisit[2];\r\n\r\n            if ((\r\n                objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1) ||\r\n                objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1) {\r\n\r\n                let propertyNames = PP.JSUtils.getReferencePropertyNames(object);\r\n\r\n                for (let propertyName of propertyNames) {\r\n                    let objectProperty = null;\r\n\r\n                    try {\r\n                        objectProperty = PP.JSUtils.getReferenceProperty(object, propertyName);\r\n                        if (objectProperty == null) {\r\n                            continue;\r\n                        }\r\n                    } catch (error) {\r\n                        continue;\r\n                    }\r\n\r\n                    let currentPath = \"\";\r\n                    let currentName = \"\";\r\n                    if (objectPath != null) {\r\n                        if (objectPath == \"_WL._components\" && (objectProperty._type != null)) {\r\n                            currentName = \"[\" + propertyName + \"]\" + \"{\\\"\" + objectProperty._type + \"\\\"}\";\r\n                            currentPath = objectPath + currentName;\r\n                        } else if (objectPath == \"_WL._componentTypes\" && (objectProperty.TypeName != null)) {\r\n                            currentName = objectProperty.TypeName;\r\n                            currentPath = objectPath + \"[\\\"\" + currentName + \"\\\"]\";\r\n                        } else {\r\n                            currentName = propertyName;\r\n                            currentPath = objectPath + \".\" + currentName;\r\n                        }\r\n                    } else {\r\n                        currentName = propertyName;\r\n                        currentPath = currentName;\r\n                    }\r\n\r\n                    let isClass = PP.JSUtils.isClassByName(object, propertyName);\r\n                    let isObject = PP.JSUtils.isObjectByName(object, propertyName);\r\n\r\n                    let includePathList = this._myParams.myObjectPathsToInclude;\r\n                    let excludePathList = this._myParams.myObjectPathsToExclude;\r\n                    let includeNameList = this._myParams.myObjectNamesToInclude;\r\n                    let excludeNameList = this._myParams.myObjectNamesToExclude;\r\n                    if (isClass) {\r\n                        includePathList = this._myParams.myClassPathsToInclude;\r\n                        excludePathList = this._myParams.myClassPathsToExclude;\r\n                        includeNameList = this._myParams.myClassNamesToInclude;\r\n                        excludeNameList = this._myParams.myClassNamesToExclude;\r\n                    }\r\n\r\n                    let isValidReferencePath = this._filterName(currentPath, includePathList, excludePathList);\r\n                    let isValidReferenceName = this._filterName(propertyName, includeNameList, excludeNameList);\r\n                    if (isValidReferencePath && isValidReferenceName) {\r\n                        if (isObject && (objectLevel + 1 <= this._myParams.myObjectAddObjectDescendantsDepthLevel || this._myParams.myObjectAddObjectDescendantsDepthLevel == -1)) {\r\n                            objectsAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isClass && (objectLevel + 1 <= this._myParams.myObjectAddClassDescendantsDepthLevel || this._myParams.myObjectAddClassDescendantsDepthLevel == -1)) {\r\n                            classesAndParents.pp_pushUnique([objectProperty, object, propertyName, currentPath, currentName], equalCallback);\r\n                        }\r\n\r\n                        if (isObject) {\r\n                            objectsToVisit.pp_pushUnique([objectProperty, objectLevel + 1, currentPath], equalCallback);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _filterName(name, includeList, excludeList) {\r\n        let isValidName = includeList.length == 0;\r\n        for (let includeName of includeList) {\r\n            if (name.match(new RegExp(includeName)) != null) {\r\n                isValidName = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isValidName) {\r\n            for (let excludeName of excludeList) {\r\n                if (name.match(new RegExp(excludeName)) != null) {\r\n                    isValidName = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValidName;\r\n    }\r\n};\r\n\r\n\r\n\r\nPP.DebugFunctionsOverwriter.prototype._isJavascriptObjectFunction = function () {\r\n    let javascriptObjectFunctions = [\r\n        \"__defineGetter__\", \"__defineSetter__\", \"hasOwnProperty\", \"__lookupGetter__\", \"__lookupSetter__\", \"isPrototypeOf\",\r\n        \"propertyIsEnumerable\", \"toString\", \"valueOf\", \"__proto__\", \"toLocaleString\", \"arguments\", \"caller\", \"apply\", \"bind\", \"call\", \"callee\"];\r\n    return function _isJavascriptObjectFunction(propertyName) {\r\n        return javascriptObjectFunctions.pp_hasEqual(propertyName);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.DebugFunctionsOverwriter.prototype, \"_isJavascriptObjectFunction\", { enumerable: false });", "PP.DebugFunctionsPerformanceAnalyzerParams = class DebugFunctionsPerformanceAnalyzerParams extends PP.DebugFunctionsOverwriterParams {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myExecutionTimeAnalysisEnabled = true;\r\n\r\n        this.myAddPathPrefixToFunctionID = true;\r\n        // this works at best when the object/class is specified as path\r\n        // since with reference it's not possible to get the full path or get the variable name of the reference\r\n\r\n        this.myFilterDebugFunctionsPerformanceAnalyzerClasses = true;\r\n    }\r\n};\r\n\r\nPP.DebugFunctionPerformanceAnalysisResults = class DebugFunctionPerformanceAnalysisResults {\r\n    constructor() {\r\n        this.myReference = null;\r\n        this.myName = \"\";\r\n        this.myPath = \"\";\r\n        this.myID = \"\";\r\n\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    reset() {\r\n        this.myCallsCount = 0;\r\n        this.myTotalExecutionTime = 0;\r\n        this.myTotalExecutionTimePercentage = 0;\r\n        this.myAverageExecutionTime = 0;\r\n        this.myTimeElapsedSinceLastReset = 0;\r\n\r\n        this._myTotalExecutionTimeInternal = 0;\r\n    }\r\n\r\n    max(other) {\r\n        this.myCallsCount = Math.max(this.myCallsCount, other.myCallsCount);\r\n        this.myTotalExecutionTime = Math.max(this.myTotalExecutionTime, other.myTotalExecutionTime);\r\n        this.myTotalExecutionTimePercentage = Math.max(this.myTotalExecutionTimePercentage, other.myTotalExecutionTimePercentage);\r\n        this.myAverageExecutionTime = Math.max(this.myAverageExecutionTime, other.myAverageExecutionTime);\r\n    }\r\n\r\n    copy(other) {\r\n        this.myReference = other.myReference;\r\n        this.myName = other.myName;\r\n        this.myPath = other.myPath;\r\n        this.myID = other.myID;\r\n\r\n        this.myCallsCount = other.myCallsCount;\r\n        this.myTotalExecutionTime = other.myTotalExecutionTime;\r\n        this.myTotalExecutionTimePercentage = other.myTotalExecutionTimePercentage;\r\n        this.myAverageExecutionTime = other.myAverageExecutionTime;\r\n        this.myTimeElapsedSinceLastReset = other.myTimeElapsedSinceLastReset;\r\n\r\n        this._myTotalExecutionTimeInternal = other._myTotalExecutionTimeInternal;\r\n    }\r\n};\r\n\r\nPP.DebugFunctionsPerformanceAnalyzerSortOrder = {\r\n    NONE: 0,\r\n    CALLS_COUNT: 1,\r\n    TOTAL_EXECUTION_TIME: 2,\r\n    AVERAGE_EXECUTION_TIME: 3\r\n};\r\n\r\nPP.DebugFunctionsPerformanceAnalyzer = class DebugFunctionsPerformanceAnalyzer extends PP.DebugFunctionsOverwriter {\r\n    constructor(params = new PP.DebugFunctionsOverwriterParams()) {\r\n        super(params);\r\n\r\n        this._myFunctionPerformanceAnalysisResults = new Map();\r\n        this._myFunctionPerformanceAnalysisMaxResults = new Map();\r\n\r\n        this._myResultsAlreadyAdded = false;\r\n\r\n        this._myExecutionTimes = {\r\n            myOverheadExecutionTimeSinceLastReset: 0,\r\n            myLastFunctionExecutionTime: 0,\r\n            myOriginalFunctionOverheadExecutionTimes: []\r\n        };\r\n        this._myTimeOfLastReset = window.performance.now();\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n\r\n        let originalPush = Array.prototype[\"push\"];\r\n        let originalPop = Array.prototype[\"pop\"];\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.push = function () { return originalPush.bind(this)(...arguments); }\r\n        this._myExecutionTimes.myOriginalFunctionOverheadExecutionTimes.pop = function () { return originalPop.bind(this)(...arguments); }\r\n    }\r\n\r\n    overwriteFunctions() {\r\n        super.overwriteFunctions();\r\n\r\n        this.resetResults();\r\n        this.resetMaxResults();\r\n    }\r\n\r\n    getTimeElapsedSinceLastReset() {\r\n        return window.performance.now() - this._myTimeOfLastReset - this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset;\r\n    }\r\n\r\n    getMaxTimeElapsedSinceLastReset() {\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n        return this._myMaxTimeElapsedSinceLastReset;\r\n    }\r\n\r\n    resetResults() {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisResults.get(property).reset();\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset = 0;\r\n\r\n        this._myTimeOfLastReset = window.performance.now();\r\n    }\r\n\r\n    resetMaxResults() {\r\n        this._myMaxTimeElapsedSinceLastReset = 0;\r\n        for (let property of this._myFunctionPerformanceAnalysisMaxResults.keys()) {\r\n            this._myFunctionPerformanceAnalysisMaxResults.get(property).reset();\r\n        }\r\n    }\r\n\r\n    getResults(sortOrder = PP.DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    getMaxResults(sortOrder = PP.DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n        this._updateDerivatesResults();\r\n        this._updateMaxResults();\r\n\r\n        let results = this._myFunctionPerformanceAnalysisMaxResults;\r\n        results = this._sortResults(results, sortOrder);\r\n        return results;\r\n    }\r\n\r\n    _getOverwrittenFunction(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, false);\r\n    }\r\n\r\n    _getOverwrittenConstructor(reference, propertyName, referencePath, isClass, isFunction) {\r\n        return this._getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, true);\r\n    }\r\n\r\n    _onOverwriteSuccess(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        this._myResultsAlreadyAdded = false;\r\n    }\r\n\r\n    _onOverwriteFailure(reference, propertyName, referenceParentForConstructor, referenceNameForConstructor, referencePath, isClass, isFunction, isConstructor) {\r\n        if (this._myResultsAlreadyAdded) {\r\n            let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n            this._myFunctionPerformanceAnalysisResults.delete(propertyID);\r\n        }\r\n    }\r\n\r\n    _sortResults(results, sortOrder) {\r\n        let sortedResults = results;\r\n\r\n        if (sortOrder != PP.DebugFunctionsPerformanceAnalyzerSortOrder.NONE) {\r\n            sortedResults = new Map([...results.entries()].sort(function (first, second) {\r\n                let sortResult = 0;\r\n\r\n                if (sortOrder == PP.DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT) {\r\n                    sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        }\r\n                    }\r\n                } else if (sortOrder == PP.DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME) {\r\n                    sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                } else {\r\n                    sortResult = -(first[1].myAverageExecutionTime - second[1].myAverageExecutionTime);\r\n                    if (sortResult == 0) {\r\n                        sortResult = -(first[1].myTotalExecutionTime - second[1].myTotalExecutionTime);\r\n                        if (sortResult == 0) {\r\n                            sortResult = -(first[1].myCallsCount - second[1].myCallsCount);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return sortResult;\r\n            }));\r\n        }\r\n\r\n        return sortedResults;\r\n    }\r\n\r\n    _getPropertyID(propertyName, referencePath, isFunction, isConstructor) {\r\n        let id = isConstructor ? \"constructor\" : propertyName;\r\n\r\n        if (referencePath != null && this._myParams.myAddPathPrefixToFunctionID) {\r\n            if (!isFunction) {\r\n                id = referencePath + \".\" + id;\r\n            } else {\r\n                id = referencePath;\r\n            }\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    _updateDerivatesResults() {\r\n        let timeElapsedSinceLastReset = this.getTimeElapsedSinceLastReset();\r\n        let beforeTime = window.performance.now();\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            let results = this._myFunctionPerformanceAnalysisResults.get(property);\r\n\r\n            if (timeElapsedSinceLastReset != 0) {\r\n                results.myTotalExecutionTimePercentage = results.myTotalExecutionTime / timeElapsedSinceLastReset;\r\n            } else {\r\n                if (results.myCallsCount != 0) {\r\n                    results.myTotalExecutionTimePercentage = 1;\r\n                } else {\r\n                    results.myTotalExecutionTimePercentage = 0;\r\n                }\r\n            }\r\n\r\n            if (results.myCallsCount != 0) {\r\n                results.myAverageExecutionTime = results.myTotalExecutionTime / results.myCallsCount;\r\n            } else {\r\n                results.myAverageExecutionTime = 0;\r\n            }\r\n\r\n            results.myTimeElapsedSinceLastReset = timeElapsedSinceLastReset;\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now() - beforeTime;\r\n    }\r\n\r\n    _updateMaxResults() {\r\n        let beforeTime = window.performance.now();\r\n\r\n        this._myMaxTimeElapsedSinceLastReset = Math.max(this._myMaxTimeElapsedSinceLastReset, this.getTimeElapsedSinceLastReset());\r\n\r\n        for (let property of this._myFunctionPerformanceAnalysisResults.keys()) {\r\n            if (this._myFunctionPerformanceAnalysisMaxResults.has(property)) {\r\n                this._myFunctionPerformanceAnalysisMaxResults.get(property).max(this._myFunctionPerformanceAnalysisResults.get(property));\r\n            } else {\r\n                let maxResults = new PP.DebugFunctionPerformanceAnalysisResults();\r\n                maxResults.copy(this._myFunctionPerformanceAnalysisResults.get(property));\r\n                this._myFunctionPerformanceAnalysisMaxResults.set(property, maxResults)\r\n            }\r\n        }\r\n\r\n        this._myExecutionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now() - beforeTime;\r\n    }\r\n\r\n    _getOverwrittenFunctionInternal(reference, propertyName, referencePath, isClass, isFunction, isConstructor) {\r\n        let newFunction = PP.JSUtils.getReferenceProperty(reference, propertyName);\r\n\r\n        if (!this._myParams.myFilterDebugFunctionsPerformanceAnalyzerClasses || !this._isPerformanceAnalyzer(reference, propertyName, isClass)) {\r\n            if (propertyName != \"_myPerformanceAnalyzerOriginalFunction\") {\r\n                let propertyID = this._getPropertyID(propertyName, referencePath, isFunction, isConstructor);\r\n\r\n                this._myResultsAlreadyAdded = this._myFunctionPerformanceAnalysisResults.has(propertyID);\r\n                let analysisResults = new PP.DebugFunctionPerformanceAnalysisResults();\r\n\r\n                analysisResults.myReference = reference;\r\n                analysisResults.myName = propertyName;\r\n                analysisResults.myPath = referencePath;\r\n                analysisResults.myID = referencePath;\r\n\r\n                this._myFunctionPerformanceAnalysisResults.set(propertyID, analysisResults);\r\n\r\n                try {\r\n                    let functionPerformanceAnalysisResults = this._myFunctionPerformanceAnalysisResults.get(propertyID);\r\n                    let executionTimes = this._myExecutionTimes;\r\n\r\n                    let originalFunction = reference[propertyName];\r\n                    let functionCallOverhead = 0.000175;     // ms taken by an analyzed function that is empty\r\n                    let overheadError = 0.00035;        // ms to add to adjust a bit for window.performance.now() max precision which is 0.0005\r\n\r\n                    let executionTimeAnalysisEnabled = this._myParams.myExecutionTimeAnalysisEnabled;\r\n\r\n                    if (!isConstructor) {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = bindFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    bindFunction = originalFunction.bind(this);\r\n                                    returnValue = bindFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    } else {\r\n                        newFunction = function () {\r\n                            let startTime = window.performance.now();\r\n\r\n                            let errorToThrow = null;\r\n                            let returnValue = undefined;\r\n                            let bindFunction = null;\r\n                            let startOriginalFunctionTime = 0;\r\n                            let endOriginalFunctionTime = 0;\r\n                            let originalFunctionOverheadExecutionTime = 0;\r\n                            let executionTimeToAdjust = 0;\r\n                            let executionTime = 0;\r\n                            let beforeOverhead = 0;\r\n                            let inBetweenOverhead = 0;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                executionTimes.myOriginalFunctionOverheadExecutionTimes.push(0);\r\n\r\n                                startOriginalFunctionTime = window.performance.now();\r\n                                endOriginalFunctionTime = window.performance.now();\r\n\r\n                                try {\r\n                                    startOriginalFunctionTime = window.performance.now();\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                } catch (error) {\r\n                                    endOriginalFunctionTime = window.performance.now();\r\n                                    errorToThrow = error;\r\n                                }\r\n                            } else {\r\n                                try {\r\n                                    returnValue = new originalFunction(...arguments);\r\n                                } catch (error) {\r\n                                    errorToThrow = error;\r\n                                }\r\n                            }\r\n\r\n                            functionPerformanceAnalysisResults.myCallsCount += 1;\r\n\r\n                            if (executionTimeAnalysisEnabled) {\r\n                                originalFunctionOverheadExecutionTime = executionTimes.myOriginalFunctionOverheadExecutionTimes.pop();\r\n\r\n                                executionTimeToAdjust = endOriginalFunctionTime - startOriginalFunctionTime - originalFunctionOverheadExecutionTime;\r\n                                executionTime = executionTimeToAdjust - functionCallOverhead;\r\n                                if (originalFunction._myPerformanceAnalyzerHasBeenOverwritten) {\r\n                                    executionTime = executionTimes.myLastFunctionExecutionTime;\r\n                                }\r\n\r\n                                functionPerformanceAnalysisResults._myTotalExecutionTimeInternal += executionTime;\r\n                                functionPerformanceAnalysisResults.myTotalExecutionTime = Math.max(0, functionPerformanceAnalysisResults._myTotalExecutionTimeInternal);\r\n\r\n                                executionTimes.myLastFunctionExecutionTime = executionTime;\r\n\r\n                                beforeOverhead = startOriginalFunctionTime - startTime;\r\n                                inBetweenOverhead = beforeOverhead - endOriginalFunctionTime - overheadError;\r\n                                if (executionTimes.myOriginalFunctionOverheadExecutionTimes.length > 0) {\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        inBetweenOverhead + originalFunctionOverheadExecutionTime + overheadError * 2.75;\r\n                                    executionTimes.myOriginalFunctionOverheadExecutionTimes[executionTimes.myOriginalFunctionOverheadExecutionTimes.length - 1] +=\r\n                                        window.performance.now();\r\n                                }\r\n\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += inBetweenOverhead;\r\n                                executionTimes.myOverheadExecutionTimeSinceLastReset += window.performance.now();\r\n                            }\r\n\r\n                            if (errorToThrow != null) {\r\n                                throw errorToThrow;\r\n                            }\r\n\r\n                            return returnValue;\r\n                        };\r\n                    }\r\n\r\n                    if (newFunction != null) {\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerHasBeenOverwritten\", {\r\n                            value: true,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n\r\n                        Object.defineProperty(newFunction, \"_myPerformanceAnalyzerOriginalFunction\", {\r\n                            value: originalFunction,\r\n                            enumerable: false,\r\n                            configurable: false,\r\n                            writable: false\r\n                        });\r\n                    }\r\n                } catch (error) {\r\n                    if (this._myParams.myDebugLogActive) {\r\n                        console.error(\"Function:\", propertyName, \"of:\", reference, \"can't be overwritten.\\nError:\", error);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return newFunction;\r\n    }\r\n\r\n    _isPerformanceAnalyzer(reference, propertyName, isClass) {\r\n        let isPerformanceAnalyzer = false;\r\n\r\n        if (isClass) {\r\n            if (reference == PP.DebugFunctionsPerformanceAnalyzer.prototype || reference == PP.DebugFunctionPerformanceAnalysisResults.prototype) {\r\n                isPerformanceAnalyzer = true;\r\n            }\r\n        }\r\n\r\n        return isPerformanceAnalyzer;\r\n    }\r\n};", "PP.DebugFunctionsPerformanceAnalysisResultsLoggerParams = class DebugFunctionsPerformanceAnalysisResultsLoggerParams {\r\n    constructor() {\r\n        this.myPerformanceAnalyzer = null;\r\n\r\n        this.myLogTitle = \"Functions Performance Analysis Results\";\r\n        this.mySecondsBetweenLogs = 1;\r\n        this.myLogFunction = \"log\";\r\n\r\n        this.myFormatLog = true;\r\n        this.myFormatLogIndentationCharacter = \"-\";\r\n\r\n        this.myLogMaxResults = false;\r\n\r\n        this.myLogSortOrder = PP.DebugFunctionsPerformanceAnalyzerSortOrder.NONE;\r\n\r\n        this.myLogMaxAmountOfFunctions = null;\r\n\r\n        this.myLogFunctionsWithCallsCountAbove = null;\r\n        this.myLogFunctionsWithTotalExecutionTimePercentageAbove = null;\r\n\r\n        this.myLogCallsCountResults = false;\r\n        this.myLogTotalExecutionTimeResults = false;\r\n        this.myLogTotalExecutionTimePercentageResults = false;\r\n        this.myLogAverageExecutionTimeResults = false;\r\n\r\n        this.myClearConsoleBeforeLog = false;\r\n    }\r\n};\r\n\r\nPP.DebugFunctionsPerformanceAnalysisResultsLogger = class DebugFunctionsPerformanceAnalysisResultsLogger {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myLogTimer = new PP.Timer(this._myParams.mySecondsBetweenLogs);\r\n\r\n        this._myMaxNameLength = 0;\r\n        this._myMaxCallsCountLength = 0;\r\n        this._myMaxTotalExecutionTimeLength = 0;\r\n        this._myMaxTotalExecutionTimePercentageLength = 0;\r\n        this._myMaxAverageExecutionTimeLength = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myPerformanceAnalyzer == null) {\r\n            return;\r\n        }\r\n\r\n        this._myLogTimer.update(dt);\r\n        if (this._myLogTimer.isDone()) {\r\n            this._myLogTimer.start();\r\n\r\n            let timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getTimeElapsedSinceLastReset();\r\n            if (this._myParams.myLogMaxResults) {\r\n                timeSinceLastReset = this._myParams.myPerformanceAnalyzer.getMaxTimeElapsedSinceLastReset();\r\n            }\r\n\r\n            let analysisResults = null;\r\n            if (!this._myParams.myLogMaxResults) {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getResults(this._myParams.myLogSortOrder);\r\n            } else {\r\n                analysisResults = this._myParams.myPerformanceAnalyzer.getMaxResults(this._myParams.myLogSortOrder);\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithCallsCountAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myCallsCount > this._myParams.myLogFunctionsWithCallsCountAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    let results = analysisResultsClone.get(keys[i]);\r\n                    if (results.myTotalExecutionTimePercentage * 100 > this._myParams.myLogFunctionsWithTotalExecutionTimePercentageAbove) {\r\n                        analysisResults.set(keys[i], results);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myLogMaxAmountOfFunctions != null) {\r\n                let analysisResultsClone = new Map(analysisResults);\r\n                analysisResults = new Map();\r\n                let keys = [...analysisResultsClone.keys()];\r\n                for (let i = 0; i < this._myParams.myLogMaxAmountOfFunctions && i < keys.length; i++) {\r\n                    let counter = analysisResultsClone.get(keys[i]);\r\n                    analysisResults.set(keys[i], counter);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myClearConsoleBeforeLog) {\r\n                console.clear();\r\n            }\r\n\r\n            let analysisResultsToLog = new Map();\r\n            for (let key of analysisResults.keys()) {\r\n                let currentResults = analysisResults.get(key);\r\n\r\n                let resultsToLog = {};\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    resultsToLog.myCallsCount = currentResults.myCallsCount;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    resultsToLog.myTotalExecutionTime = currentResults.myTotalExecutionTime;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    resultsToLog.myTotalExecutionTimePercentage = currentResults.myTotalExecutionTimePercentage;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    resultsToLog.myAverageExecutionTime = currentResults.myAverageExecutionTime;\r\n                }\r\n\r\n                analysisResultsToLog.set(key, resultsToLog);\r\n            }\r\n\r\n            let resultsText = \"\";\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                this._myMaxNameLength = Math.max(this._myMaxNameLength, name.length);\r\n\r\n                this._myMaxCallsCountLength = Math.max(this._myMaxCallsCountLength, results.myCallsCount.toFixed(0).length);\r\n                this._myMaxTotalExecutionTimeLength = Math.max(this._myMaxTotalExecutionTimeLength, results.myTotalExecutionTime.toFixed(5).length);\r\n                this._myMaxTotalExecutionTimePercentageLength = Math.max(this._myMaxTotalExecutionTimePercentageLength, (results.myTotalExecutionTimePercentage * 100).toFixed(2).length);\r\n                this._myMaxAverageExecutionTimeLength = Math.max(this._myMaxAverageExecutionTimeLength, results.myAverageExecutionTime.toFixed(5).length);\r\n            }\r\n\r\n            for (let entry of analysisResults.entries()) {\r\n                let name = entry[0];\r\n                let results = entry[1];\r\n\r\n                let parametersToLog = 0;\r\n                if (this._myParams.myLogCallsCountResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                if (this._myParams.myLogAverageExecutionTimeResults) {\r\n                    parametersToLog++;\r\n                }\r\n\r\n                let textOrdered = [];\r\n\r\n                let callsCountText = ((parametersToLog > 1) ? \"Calls Count: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxCallsCountLength - results.myCallsCount.toFixed(0).length; i++) {\r\n                        callsCountText += \" \";\r\n                    }\r\n                }\r\n                callsCountText += results.myCallsCount.toFixed(0);\r\n\r\n                let totalExecutionTimeText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimeLength - results.myTotalExecutionTime.toFixed(5).length; i++) {\r\n                        totalExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimeText += results.myTotalExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                let totalExecutionTimePercentageText = ((parametersToLog > 1) ? \"Total Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxTotalExecutionTimePercentageLength - (results.myTotalExecutionTimePercentage * 100).toFixed(2).length; i++) {\r\n                        totalExecutionTimePercentageText += \" \";\r\n                    }\r\n                }\r\n                totalExecutionTimePercentageText += (results.myTotalExecutionTimePercentage * 100).toFixed(2) + \"%\";\r\n\r\n                let averageExecutionTimeText = ((parametersToLog > 1) ? \"Average Time: \" : \"\");\r\n                if (this._myParams.myFormatLog) {\r\n                    for (let i = 0; i < this._myMaxAverageExecutionTimeLength - results.myAverageExecutionTime.toFixed(5).length; i++) {\r\n                        averageExecutionTimeText += \" \";\r\n                    }\r\n                }\r\n                averageExecutionTimeText += results.myAverageExecutionTime.toFixed(5) + \"ms\";\r\n\r\n                if (!this._myParams.myLogCallsCountResults) {\r\n                    callsCountText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimeResults) {\r\n                    totalExecutionTimeText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogTotalExecutionTimePercentageResults) {\r\n                    totalExecutionTimePercentageText = null;\r\n                }\r\n\r\n                if (!this._myParams.myLogAverageExecutionTimeResults) {\r\n                    averageExecutionTimeText = null;\r\n                }\r\n\r\n                switch (this._myParams.myLogSortOrder) {\r\n                    case PP.DebugFunctionsPerformanceAnalyzerSortOrder.CALLS_COUNT:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        break;\r\n                    case PP.DebugFunctionsPerformanceAnalyzerSortOrder.TOTAL_EXECUTION_TIME:\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    case PP.DebugFunctionsPerformanceAnalyzerSortOrder.AVERAGE_EXECUTION_TIME:\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(callsCountText);\r\n                        break;\r\n                    default:\r\n                        textOrdered.push(callsCountText);\r\n                        textOrdered.push(totalExecutionTimeText);\r\n                        textOrdered.push(totalExecutionTimePercentageText);\r\n                        textOrdered.push(averageExecutionTimeText);\r\n                }\r\n\r\n                resultsText += \"\\n\";\r\n                if (this._myParams.myFormatLog) {\r\n                    let nameIndented = name + \" \";\r\n                    while (nameIndented.length < this._myMaxNameLength + 1) {\r\n                        nameIndented += this._myParams.myFormatLogIndentationCharacter;\r\n                    }\r\n                    nameIndented += this._myParams.myFormatLogIndentationCharacter + \" \";\r\n                    resultsText += nameIndented;\r\n                } else {\r\n                    resultsText += name + \" - \";\r\n                }\r\n\r\n                let avoidFirst = true;\r\n                for (let text of textOrdered) {\r\n                    if (text != null) {\r\n                        if (avoidFirst) {\r\n                            avoidFirst = false;\r\n                        } else {\r\n                            resultsText += \" - \";\r\n                        }\r\n\r\n                        resultsText += text;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if ((this._myParams.myLogTotalExecutionTimeResults || this._myParams.myLogTotalExecutionTimePercentageResults || this._myParams.myLogAverageExecutionTimeResults)) {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\\nTotal Time:\", timeSinceLastReset.toFixed(5), \"ms\\n\", resultsText);\r\n            } else {\r\n                console[this._myParams.myLogFunction](\"\\n\" + this._myParams.myLogTitle, \"\\n\", resultsText);\r\n            }\r\n        }\r\n    }\r\n};", "\r\nWL.registerComponent('pp-debug-functions-performance-analyzer', {\r\n    _myObjectsByPath: { type: WL.Type.String, default: \"\" },\r\n    _myClassesByPath: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionsByPath: { type: WL.Type.String, default: \"\" },\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogTitle: { type: WL.Type.String, default: \"Functions Performance Analysis Results\" },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myFunctionPathsToInclude: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionPathsToExclude: { type: WL.Type.String, default: \"\" },\r\n    _myExcludeConstructors: { type: WL.Type.Bool, default: false },\r\n    _myExcludeJavascriptObjectFunctions: { type: WL.Type.Bool, default: true },\r\n    _myAddPathPrefixToFunctionID: { type: WL.Type.Bool, default: true },\r\n    _myObjectAddObjectDescendantsDepthLevel: { type: WL.Type.Int, default: 0 },\r\n    _myObjectAddClassDescendantsDepthLevel: { type: WL.Type.Int, default: 0 },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        this._myFunctionsPerformanceAnalyzer = null;\r\n        this._myFunctionsPerformanceAnalysisResultsLogger = null;\r\n\r\n        this._mySkipFirstUpdate = true;\r\n        this._myStartTimer = new PP.Timer(this._myDelayStart);\r\n        if (this._myDelayStart == 0) {\r\n            this._myStartTimer.end();\r\n            this._mySkipFirstUpdate = false;\r\n            this._start();\r\n        }\r\n    },\r\n    update(dt) {\r\n        if (this._mySkipFirstUpdate) {\r\n            this._mySkipFirstUpdate = false;\r\n            return;\r\n        }\r\n\r\n        if (this._myStartTimer.isRunning()) {\r\n            this._myStartTimer.update(dt);\r\n            if (this._myStartTimer.isDone()) {\r\n                this._start();\r\n            }\r\n        } else {\r\n            this._myFunctionsPerformanceAnalysisResultsLogger.update(dt);\r\n            this._myFunctionsPerformanceAnalyzer.resetResults();\r\n        }\r\n\r\n        if (this._myResetMaxResultsShortcutEnabled) {\r\n            if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressEnd(3)) {\r\n                this._myFunctionsPerformanceAnalyzer.resetMaxResults();\r\n            }\r\n        }\r\n    },\r\n    _start() {\r\n        let functionsPerformanceAnalyzerParams = new PP.DebugFunctionsPerformanceAnalyzerParams();\r\n\r\n        if (this._myObjectsByPath.length > 0) {\r\n            let toIncludeList = [...this._myObjectsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myObjectsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myClassesByPath.length > 0) {\r\n            let toIncludeList = [...this._myClassesByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myClassesByPath.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionsByPath.length > 0) {\r\n            let toIncludeList = [...this._myFunctionsByPath.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionsByPath.push(...toIncludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myExcludeConstructors = this._myExcludeConstructors;\r\n        functionsPerformanceAnalyzerParams.myExcludeJavascriptObjectFunctions = this._myExcludeJavascriptObjectFunctions;\r\n        functionsPerformanceAnalyzerParams.myAddPathPrefixToFunctionID = this._myAddPathPrefixToFunctionID;\r\n\r\n        if (this._myFunctionPathsToInclude.length > 0) {\r\n            let toIncludeList = [...this._myFunctionPathsToInclude.split(\",\")];\r\n            for (let i = 0; i < toIncludeList.length; i++) {\r\n                toIncludeList[i] = toIncludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToInclude.push(...toIncludeList);\r\n        }\r\n\r\n        if (this._myFunctionPathsToExclude.length > 0) {\r\n            let toExcludeList = [...this._myFunctionPathsToExclude.split(\",\")];\r\n            for (let i = 0; i < toExcludeList.length; i++) {\r\n                toExcludeList[i] = toExcludeList[i].trim();\r\n            }\r\n            functionsPerformanceAnalyzerParams.myFunctionPathsToExclude.push(...toExcludeList);\r\n        }\r\n\r\n        functionsPerformanceAnalyzerParams.myObjectAddObjectDescendantsDepthLevel = this._myObjectAddObjectDescendantsDepthLevel;\r\n        functionsPerformanceAnalyzerParams.myObjectAddClassDescendantsDepthLevel = this._myObjectAddClassDescendantsDepthLevel;\r\n\r\n        functionsPerformanceAnalyzerParams.myExecutionTimeAnalysisEnabled = this._myLogTotalExecutionTimeResults || this._myLogTotalExecutionTimePercentageResults || this._myLogAverageExecutionTimeResults;\r\n\r\n        functionsPerformanceAnalyzerParams.myClassesByReference = (this._myClassesByReference != null) ? this._myClassesByReference : [];\r\n        functionsPerformanceAnalyzerParams.myObjectsByReference = (this._myObjectsByReference != null) ? this._myObjectsByReference : [];\r\n\r\n        this._myFunctionsPerformanceAnalyzer = new PP.DebugFunctionsPerformanceAnalyzer(functionsPerformanceAnalyzerParams);\r\n        this._myFunctionsPerformanceAnalyzer.overwriteFunctions();\r\n\r\n        let functionsPerformanceAnalysisResultsLoggerParams = new PP.DebugFunctionsPerformanceAnalysisResultsLoggerParams();\r\n        functionsPerformanceAnalysisResultsLoggerParams.myPerformanceAnalyzer = this._myFunctionsPerformanceAnalyzer;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTitle = this._myLogTitle;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.mySecondsBetweenLogs = this._mySecondsBetweenLogs;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunction = ['log', 'error', 'warn', 'debug'][this._myLogFunction];\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxAmountOfFunctions = (this._myLogMaxAmountOfFunctions >= 0) ? this._myLogMaxAmountOfFunctions : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithCallsCountAbove = (this._myLogFunctionsWithCallsCountAbove >= 0) ? this._myLogFunctionsWithCallsCountAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogFunctionsWithTotalExecutionTimePercentageAbove = (this._myLogFunctionsWithTotalExecutionTimePercentageAbove >= 0) ? this._myLogFunctionsWithTotalExecutionTimePercentageAbove : null;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogMaxResults = this._myLogMaxResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myClearConsoleBeforeLog = this._myClearConsoleBeforeLog;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogSortOrder = this._myLogSortOrder;\r\n\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogCallsCountResults = this._myLogCallsCountResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimeResults = this._myLogTotalExecutionTimeResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogTotalExecutionTimePercentageResults = this._myLogTotalExecutionTimePercentageResults;\r\n        functionsPerformanceAnalysisResultsLoggerParams.myLogAverageExecutionTimeResults = this._myLogAverageExecutionTimeResults;\r\n\r\n        this._myFunctionsPerformanceAnalysisResultsLogger = new PP.DebugFunctionsPerformanceAnalysisResultsLogger(functionsPerformanceAnalysisResultsLoggerParams);\r\n    },\r\n});\r\n", "\r\nWL.registerComponent('pp-debug-pp-functions-performance-analyzer', {\r\n    _myAnalyzePPObjects: { type: WL.Type.Bool, default: false },\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myFunctionPathsToInclude: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionPathsToExclude: { type: WL.Type.String, default: \"\" },\r\n    _myExcludeConstructors: { type: WL.Type.Bool, default: false },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        this.object.pp_addComponent(\"pp-debug-functions-performance-analyzer\", {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJavascriptObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: this._myAnalyzePPObjects ? 1 : 0,\r\n            _myObjectAddClassDescendantsDepthLevel: 3,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n});\r\n", "\r\nWL.registerComponent('pp-debug-array-functions-performance-analyzer', {\r\n    _myIncludeOnlyMainArrayTypes: { type: WL.Type.Bool, default: true },\r\n    _myIncludeOnlyArrayExtensionFunctions: { type: WL.Type.Bool, default: false },\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myFunctionPathsToInclude: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionPathsToExclude: { type: WL.Type.String, default: \"\" },\r\n    _myExcludeConstructors: { type: WL.Type.Bool, default: false },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        let classesByPath = \"Array, Uint8ClampedArray, Uint8Array, Uint16Array, Uint32Array, Int8Array, Int16Array, Int32Array, Float32Array, Float64Array\";\r\n        if (this._myIncludeOnlyMainArrayTypes) {\r\n            classesByPath = \"Array, Uint8Array, Uint16Array, Float32Array\";\r\n        }\r\n\r\n        this.object.pp_addComponent(\"pp-debug-functions-performance-analyzer\", {\r\n            _myClassesByPath: classesByPath,\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"Array Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude + (this._myFunctionPathsToInclude.length > 0 && this._myIncludeOnlyArrayExtensionFunctions ? \", \" : \"\") + (this._myIncludeOnlyArrayExtensionFunctions ? \"pp_, vec_, vec2_, vec3_, vec4_, quat_, quat2_, mat3_, mat4_, _pp_, _vec_, _quat_\" : \"\"),\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJavascriptObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n});\r\n", "\r\nWL.registerComponent('pp-debug-pp-array-creation-performance-analyzer', {\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        this.object.pp_addComponent(\"pp-debug-functions-performance-analyzer\", {\r\n            _myObjectsByPath: \"PP\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"PP Array Creation Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: \"vec2_create, vec3_create, vec4_create, quat_create, quat2_create, mat3_create, mat4_create\",\r\n            _myExcludeConstructors: true,\r\n            _myExcludeJavascriptObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n});\r\n", "\r\nWL.registerComponent('pp-debug-wl-functions-performance-analyzer', {\r\n    _myAnalyzeWLObjects: { type: WL.Type.Bool, default: false },\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myFunctionPathsToInclude: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionPathsToExclude: { type: WL.Type.String, default: \"\" },\r\n    _myExcludeConstructors: { type: WL.Type.Bool, default: false },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        this.object.pp_addComponent(\"pp-debug-functions-performance-analyzer\", {\r\n            _myObjectsByPath: \"WL\",\r\n            _myDelayStart: this._myDelayStart,\r\n            _myLogTitle: \"WL Functions Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude,\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJavascriptObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: this._myAnalyzeWLObjects ? 1 : 0,\r\n            _myObjectAddClassDescendantsDepthLevel: 3,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    }\r\n});\r\n", "\r\nWL.registerComponent('pp-debug-wl-components-functions-performance-analyzer', {\r\n    _myAnalyzeComponentTypes: { type: WL.Type.Bool, default: true },\r\n    _myAnalyzeComponentInstances: { type: WL.Type.Bool, default: false },\r\n    _myDelayStart: { type: WL.Type.Float, default: 0.0 },\r\n    _myLogFunction: { type: WL.Type.Enum, values: [\"log\", \"error\", \"warn\", \"debug\"], default: \"log\" },\r\n    _mySecondsBetweenLogs: { type: WL.Type.Float, default: 1.0 },\r\n    _myLogMaxResults: { type: WL.Type.Bool, default: false },\r\n    _myLogSortOrder: { type: WL.Type.Enum, values: [\"none\", \"calls count\", \"total execution time\", \"average execution time\"], default: \"none\" },\r\n    _myLogCallsCountResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogTotalExecutionTimePercentageResults: { type: WL.Type.Bool, default: true },\r\n    _myLogAverageExecutionTimeResults: { type: WL.Type.Bool, default: true },\r\n    _myLogMaxAmountOfFunctions: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithCallsCountAbove: { type: WL.Type.Int, default: -1 },\r\n    _myLogFunctionsWithTotalExecutionTimePercentageAbove: { type: WL.Type.Float, default: -1 },\r\n    _myFunctionPathsToInclude: { type: WL.Type.String, default: \"\" },\r\n    _myFunctionPathsToExclude: { type: WL.Type.String, default: \"\" },\r\n    _myExcludeConstructors: { type: WL.Type.Bool, default: false },\r\n    _myClearConsoleBeforeLog: { type: WL.Type.Bool, default: false },\r\n    _myResetMaxResultsShortcutEnabled: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init() {\r\n        let objectsByPath = \"\";\r\n\r\n        if (this._myAnalyzeComponentTypes) {\r\n            objectsByPath += \"_WL._componentTypes\";\r\n        }\r\n\r\n        if (this._myAnalyzeComponentInstances) {\r\n            if (objectsByPath.length > 0) {\r\n                objectsByPath += \", \";\r\n            }\r\n            objectsByPath += \"_WL._components\";\r\n        }\r\n\r\n        let objectByReference = [];\r\n        let nativeComponentTypes = [\"mesh\", \"physx\", \"animation\", \"collision\", \"input\", \"light\", \"text\", \"view\"];\r\n        for (let nativeComponentType of nativeComponentTypes) {\r\n            objectByReference.push([Object.getPrototypeOf(WL._wrapComponent(nativeComponentType, WL.Object._typeIndexFor(nativeComponentType), 0)), \"_WL._componentTypes[\\\"\" + nativeComponentType + \"\\\"]\"]);\r\n        }\r\n\r\n        this._myAnalyzerComponent = this.object.pp_addComponent(\"pp-debug-functions-performance-analyzer\", {\r\n            _myObjectsByReference: objectByReference,\r\n            _myObjectsByPath: objectsByPath,\r\n            _myDelayStart: this._myDelayStart + 0.001,\r\n            _myLogTitle: \"WL Components Performance Analysis Results\",\r\n            _myLogFunction: this._myLogFunction,\r\n            _mySecondsBetweenLogs: this._mySecondsBetweenLogs,\r\n            _myLogMaxResults: this._myLogMaxResults,\r\n            _myLogSortOrder: this._myLogSortOrder,\r\n            _myLogMaxAmountOfFunctions: this._myLogMaxAmountOfFunctions,\r\n            _myLogFunctionsWithCallsCountAbove: this._myLogFunctionsWithCallsCountAbove,\r\n            _myLogFunctionsWithTotalExecutionTimePercentageAbove: this._myLogFunctionsWithTotalExecutionTimePercentageAbove,\r\n            _myLogCallsCountResults: this._myLogCallsCountResults,\r\n            _myLogTotalExecutionTimeResults: this._myLogTotalExecutionTimeResults,\r\n            _myLogTotalExecutionTimePercentageResults: this._myLogTotalExecutionTimePercentageResults,\r\n            _myLogAverageExecutionTimeResults: this._myLogAverageExecutionTimeResults,\r\n            _myFunctionPathsToInclude: this._myFunctionPathsToInclude,\r\n            _myFunctionPathsToExclude: this._myFunctionPathsToExclude + (this._myFunctionPathsToExclude.length > 0 ? \", \" : \"\") + \"_WL\\\\._components\\\\., _WL\\\\._componentTypes\\\\., functions-performance-analyzer\",\r\n            _myExcludeConstructors: this._myExcludeConstructors,\r\n            _myExcludeJavascriptObjectFunctions: true,\r\n            _myAddPathPrefixToFunctionID: true,\r\n            _myObjectAddObjectDescendantsDepthLevel: 1,\r\n            _myObjectAddClassDescendantsDepthLevel: 1,\r\n            _myClearConsoleBeforeLog: this._myClearConsoleBeforeLog,\r\n            _myResetMaxResultsShortcutEnabled: this._myResetMaxResultsShortcutEnabled\r\n        });\r\n    },\r\n    update(dt) {\r\n        let a = 2;\r\n        let b = a * 2;\r\n    }\r\n});\r\n", "PP.Direction2DTo3DConverterParams = class Direction2DTo3DConverterParams {\r\n    constructor() {\r\n        this.myStartFlyingForward = false;\r\n        this.myStartFlyingRight = false;\r\n\r\n        this.myAutoUpdateFlyForward = false;\r\n        this.myAutoUpdateFlyRight = false;\r\n\r\n        this.myResetFlyForwardWhenZero = false;\r\n        this.myResetFlyRightWhenZero = false;\r\n\r\n        this.myMinAngleToFlyForwardUp = 90;\r\n        this.myMinAngleToFlyForwardDown = 90;\r\n        this.myMinAngleToFlyRightUp = 90;\r\n        this.myMinAngleToFlyRightDown = 90;\r\n    }\r\n};\r\n\r\nPP.Direction2DTo3DConverter = class Direction2DTo3DConverter {\r\n\r\n    constructor(params = new PP.Direction2DTo3DConverterParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myIsFlyingForward = this._myParams.myStartFlyingForward;\r\n        this._myIsFlyingRight = this._myParams.myStartFlyingRight;\r\n\r\n        this._myLastValidFlatForward = PP.vec3_create();\r\n        this._myLastValidFlatRight = PP.vec3_create();\r\n\r\n        //Setup\r\n\r\n        this._myMinAngleToBeValid = 5;\r\n    }\r\n\r\n    // direction3DUp can be used to flat the direction if the conversionTransform is not aligned with it\r\n    // it's also needed to specify the fly axis, if different from the conversionTransform up\r\n    // if direction3DUp is null, conversionTransform up is used\r\n    convert(direction2D, conversionTransform, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        return this.convertTransform(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    isFlying() {\r\n        return this._myIsFlyingForward || this._myIsFlyingRight;\r\n    }\r\n\r\n    isFlyingForward() {\r\n        return this._myIsFlyingForward;\r\n    }\r\n\r\n    isFlyingRight() {\r\n        return this._myIsFlyingRight;\r\n    }\r\n\r\n    startFlying() {\r\n        this._myIsFlyingForward = true;\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    startFlyingForward() {\r\n        this._myIsFlyingForward = true;\r\n    }\r\n\r\n    startFlyingRight() {\r\n        this._myIsFlyingRight = true;\r\n    }\r\n\r\n    stopFlying() {\r\n        this._myIsFlyingForward = false;\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    stopFlyingForward() {\r\n        this._myIsFlyingForward = false;\r\n    }\r\n\r\n    stopFlyingRight() {\r\n        this._myIsFlyingRight = false;\r\n    }\r\n\r\n    resetFly() {\r\n        this.resetFlyForward();\r\n        this.resetFlyRight();\r\n    }\r\n\r\n    resetFlyForward() {\r\n        if (this._myParams.myStartFlyingForward) {\r\n            this.startFlyingForward();\r\n        } else {\r\n            this.stopFlyingForward();\r\n        }\r\n\r\n        this._myLastValidFlatForward.vec3_zero();\r\n    }\r\n\r\n    resetFlyRight() {\r\n        if (this._myParams.myStartFlyingRight) {\r\n            this.startFlyingRight();\r\n        } else {\r\n            this.stopFlyingRight();\r\n        }\r\n\r\n        this._myLastValidFlatRight.vec3_zero();\r\n    }\r\n\r\n    // Convert Alternatives\r\n\r\n    // if direction3DUp is null, PP.vec3_create(0, 1, 0) is used\r\n    // does not work properly if forward is aligned with direction3DUp\r\n    convertForward(direction2D, forward, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    // direction3DUp can be used to flat the direction if the conversionTransform is not aligned with it\r\n    // it's also needed to specify the fly axis, if different from the conversionTransform up\r\n    // if direction3DUp is null, conversionTransform up is used\r\n    convertTransform(direction2D, conversionTransform, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        return this.convertTransformMatrix(direction2D, conversionTransform, direction3DUp, outDirection3D);\r\n    }\r\n\r\n    convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertForward = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertForward(direction2D, forward, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat.quat_identity();\r\n        rotationQuat.quat_setForward(forward, direction3DUp);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertTransformMatrix = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertTransformMatrix(direction2D, conversionTransformMatrix, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat = conversionTransformMatrix.mat4_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertTransformQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    return function convertTransformQuat(direction2D, conversionTransformQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        rotationQuat = conversionTransformQuat.quat2_getRotationQuat(rotationQuat);\r\n        return this.convertRotationQuat(direction2D, rotationQuat, direction3DUp, outDirection3D);\r\n    }\r\n}();\r\n\r\nPP.Direction2DTo3DConverter.prototype.convertRotationQuat = function () {\r\n    let forward = PP.vec3_create();\r\n    let right = PP.vec3_create();\r\n    let direction3DUpNegate = PP.vec3_create();\r\n    let forwardScaled = PP.vec3_create();\r\n    let rightScaled = PP.vec3_create();\r\n    return function convertRotationQuat(direction2D, conversionRotationQuat, direction3DUp = null, outDirection3D = PP.vec3_create()) {\r\n        if (direction2D.vec2_isZero()) {\r\n            let resetFlyForward = this._myParams.myAutoUpdateFlyForward && this._myParams.myResetFlyForwardWhenZero;\r\n            if (resetFlyForward) {\r\n                this.resetFlyForward();\r\n            }\r\n\r\n            let resetFlyRight = this._myParams.myAutoUpdateFlyRight && this._myParams.myResetFlyRightWhenZero;\r\n            if (resetFlyRight) {\r\n                this.resetFlyRight();\r\n            }\r\n\r\n            outDirection3D.vec3_zero();\r\n            return outDirection3D;\r\n        } else {\r\n            if (direction2D[0] == 0) {\r\n                this._myLastValidFlatRight.vec3_zero();\r\n            }\r\n\r\n            if (direction2D[1] == 0) {\r\n                this._myLastValidFlatForward.vec3_zero();\r\n            }\r\n        }\r\n\r\n        forward = conversionRotationQuat.quat_getForward(forward);\r\n        right = conversionRotationQuat.quat_getRight(right);\r\n\r\n        if (direction3DUp != null) {\r\n            direction3DUpNegate = direction3DUp.vec3_negate(direction3DUpNegate);\r\n\r\n            // check if it is flying based on the convert transform orientation \r\n            if (this._myParams.myAutoUpdateFlyForward) {\r\n                let angleForwardWithDirectionUp = forward.vec3_angle(direction3DUp);\r\n                this._myIsFlyingForward = this._myIsFlyingForward ||\r\n                    (angleForwardWithDirectionUp < 90 - this._myParams.myMinAngleToFlyForwardUp || angleForwardWithDirectionUp > 90 + this._myParams.myMinAngleToFlyForwardDown);\r\n            }\r\n\r\n            if (this._myParams.myAutoUpdateFlyRight) {\r\n                let angleRightWithDirectionUp = right.vec3_angle(direction3DUp);\r\n                this._myIsFlyingRight = this._myIsFlyingRight ||\r\n                    (angleRightWithDirectionUp < 90 - this._myParams.myMinAngleToFlyRightUp || angleRightWithDirectionUp > 90 + this._myParams.myMinAngleToFlyRightDown);\r\n            }\r\n\r\n            // remove the component to prevent flying, if needed\r\n            if (!this._myIsFlyingForward) {\r\n                // if the forward is too similar to the up (or down) take the last valid forward\r\n                if (!this._myLastValidFlatForward.vec3_isZero(0.000001) && (forward.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || forward.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (forward.vec3_isConcordant(this._myLastValidFlatForward)) {\r\n                        forward.pp_copy(this._myLastValidFlatForward);\r\n                    } else {\r\n                        forward = this._myLastValidFlatForward.vec3_negate(forward);\r\n                    }\r\n                }\r\n\r\n                forward = forward.vec3_removeComponentAlongAxis(direction3DUp, forward);\r\n                forward.vec3_normalize(forward);\r\n            }\r\n\r\n            if (!this._myIsFlyingRight) {\r\n                // if the right is too similar to the up (or down) take the last valid right\r\n                if (!this._myLastValidFlatRight.vec3_isZero(0.000001) && (right.vec3_angle(direction3DUp) < this._myMinAngleToBeValid || right.vec3_angle(direction3DUpNegate) < this._myMinAngleToBeValid)) {\r\n                    if (right.vec3_isConcordant(this._myLastValidFlatRight)) {\r\n                        right.pp_copy(this._myLastValidFlatRight);\r\n                    } else {\r\n                        right = this._myLastValidFlatRight.vec3_negate(right);\r\n                    }\r\n                }\r\n\r\n                right = right.vec3_removeComponentAlongAxis(direction3DUp, right);\r\n                right.vec3_normalize(right);\r\n            }\r\n\r\n            // update last valid\r\n            if ((forward.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && forward.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[1] != 0 && this._myLastValidFlatForward.vec3_isZero(0.000001))) {\r\n                this._myLastValidFlatForward = forward.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatForward);\r\n                this._myLastValidFlatForward.vec3_normalize(this._myLastValidFlatForward);\r\n            }\r\n\r\n            if ((right.vec3_angle(direction3DUp) > this._myMinAngleToBeValid && right.vec3_angle(direction3DUpNegate) > this._myMinAngleToBeValid) ||\r\n                (direction2D[0] != 0 && this._myLastValidFlatRight.vec3_isZero(0.000001))) {\r\n                this._myLastValidFlatRight = right.vec3_removeComponentAlongAxis(direction3DUp, this._myLastValidFlatRight);\r\n                this._myLastValidFlatRight.vec3_normalize(this._myLastValidFlatRight);\r\n            }\r\n        }\r\n\r\n        // compute direction 3D\r\n        outDirection3D = right.vec3_scale(direction2D[0], rightScaled).vec3_add(forward.vec3_scale(direction2D[1], forwardScaled), outDirection3D);\r\n\r\n        if (direction3DUp != null && !this._myIsFlyingForward && !this._myIsFlyingRight) {\r\n            outDirection3D = outDirection3D.vec3_removeComponentAlongAxis(direction3DUp, outDirection3D);\r\n        }\r\n\r\n        outDirection3D.vec3_normalize(outDirection3D);\r\n\r\n        return outDirection3D;\r\n    };\r\n}();", "//This is added just to make it easy to just use plain number instead of doing new PP.NumberOverValue(<number>) \r\n//You can remove this if it cause issues but you won't be able anymore to use plain number and will have to use new PP.NumberOverValue(<number>) \r\nNumber.prototype.get = function get() {\r\n    return this.valueOf();\r\n};\r\nObject.defineProperty(Number.prototype, \"get\", { enumerable: false });\r\n\r\n//You can just put startNumber if u want a number that doesn't actually change -> new PP.NumberOverValue(13)\r\nPP.NumberOverValue = class NumberOverValue {\r\n    constructor(startNumber, endNumber = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endNumber == null) {\r\n            endNumber = startNumber;\r\n        }\r\n\r\n        this._myStartNumber = startNumber;\r\n        this._myEndNumber = endNumber;\r\n\r\n        this._myStartInterpolationValue = startInterpolationValue;\r\n        this._myEndInterpolationValue = endInterpolationValue;\r\n\r\n        this._myEasingFunction = easingFunction;\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let lerpInterpolationValue = this._myEasingFunction(Math.pp_mapToRange(interpolationValue, this._myStartInterpolationValue, this._myEndInterpolationValue, 0, 1));\r\n        let lerpNumber = Math.pp_lerp(this._myStartNumber, this._myEndNumber, lerpInterpolationValue);\r\n\r\n        if (this._myRoundingFunction) {\r\n            lerpNumber = this._myRoundingFunction(lerpNumber, this._myStartNumber, this._myEndNumber);\r\n        }\r\n\r\n        return lerpNumber;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let number = this.get(interpolationValue);\r\n        return [number, number];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        return this.get(interpolationValue);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        return currentNumber == number;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampDegrees(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampDegrees(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let currentNumber = this.get(interpolationValue);\r\n\r\n        let clampedNumber = Math.pp_angleClampRadians(number);\r\n        let clampedCurrentNumber = Math.pp_angleClampRadians(currentNumber);\r\n\r\n        return clampedNumber == clampedCurrentNumber;\r\n    }\r\n};\r\n\r\nPP.IntOverValue = class IntOverValue extends PP.NumberOverValue {\r\n    constructor(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startNumber, endNumber, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};\r\n\r\n//You can just put startRange if u want a range that doesn't actually change -> new PP.NumberOverValue([1,25])\r\nPP.NumberRangeOverValue = class NumberRangeOverValue {\r\n    constructor(startRange, endRange = null, startInterpolationValue = 0, endInterpolationValue = 0, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (endRange == null) {\r\n            endRange = startRange;\r\n        }\r\n\r\n        this._myStartNumberOverValue = new PP.NumberOverValue(startRange[0], endRange[0], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n        this._myEndNumberOverValue = new PP.NumberOverValue(startRange[1], endRange[1], startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n\r\n        this._myRoundingFunction = roundingFunction; // function(numberToRound, startNumber = null, endNumber = null), Math.round/floor/ceil can be used, must return an int\r\n    }\r\n\r\n    get(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let randomValue = null;\r\n\r\n        if (this._myRoundingFunction) {\r\n            randomValue = Math.pp_randomInt(startNumber, endNumber);\r\n        } else {\r\n            randomValue = Math.pp_random(startNumber, endNumber);\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    getAverage(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let average = (startNumber + endNumber) / 2;\r\n        if (this._myRoundingFunction) {\r\n            average = this._myRoundingFunction(average, startNumber, endNumber);\r\n        }\r\n\r\n        return average;\r\n    }\r\n\r\n    getRange(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return [startNumber, endNumber];\r\n    }\r\n\r\n    getMax(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.max(startNumber, endNumber);\r\n    }\r\n\r\n    getMin(interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.min(startNumber, endNumber);\r\n    }\r\n\r\n    isInside(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        let min = Math.min(startNumber, endNumber);\r\n        let max = Math.max(startNumber, endNumber);\r\n\r\n        return number >= min && number <= max;\r\n    }\r\n\r\n    isInsideAngleRange(number, interpolationValue) {\r\n        return this.isInsideAngleRangeDegrees(number, interpolationValue);\r\n    }\r\n\r\n    isInsideAngleRangeDegrees(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeDegrees(number, startNumber, endNumber);\r\n    }\r\n\r\n    isInsideAngleRangeRadians(number, interpolationValue) {\r\n        let startNumber = this._myStartNumberOverValue.get(interpolationValue);\r\n        let endNumber = this._myEndNumberOverValue.get(interpolationValue);\r\n\r\n        return Math.pp_isInsideAngleRangeRadians(number, startNumber, endNumber);\r\n    }\r\n};\r\n\r\nPP.IntRangeOverValue = class IntRangeOverValue extends PP.NumberRangeOverValue {\r\n    constructor(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction = PP.EasingFunction.linear, roundingFunction = null) {\r\n        if (roundingFunction == null) {\r\n            roundingFunction = function (numberToRound, startNumber, endNumber) {\r\n                let roundedNumber = null;\r\n\r\n                let useFloor = startNumber <= endNumber;\r\n                if (useFloor) {\r\n                    roundedNumber = Math.floor(numberToRound);\r\n                } else {\r\n                    roundedNumber = Math.ceil(numberToRound);\r\n                }\r\n\r\n                return roundedNumber;\r\n            };\r\n        }\r\n\r\n        super(startRange, endRange, startInterpolationValue, endInterpolationValue, easingFunction, roundingFunction);\r\n    }\r\n};", "WL.registerComponent('pp-grabbable', {\r\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myKinematicValueOnRelease: { type: WL.Type.Enum, values: ['true', 'false', 'own'], default: 'false' },\r\n    _myParentOnRelease: { type: WL.Type.Enum, values: ['null', 'own'], default: 'own' },\r\n}, {\r\n    init: function () {\r\n        this._myIsGrabbed = false;\r\n\r\n        this._myGrabber = null;\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n        this._myReleaseCallbacks = new Map();   // Signature: callback(grabber, grabbable, isThrow)\r\n    },\r\n    start: function () {\r\n        this._myOldParent = this.object.parent;\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myOldKinematicValue = null;\r\n    },\r\n    onDeactivate: function () {\r\n        this.release();\r\n    },\r\n    grab: function (grabber) {\r\n        if (!this.isGrabbed()) {\r\n            this._myOldKinematicValue = this._myPhysX.kinematic;\r\n        }\r\n\r\n        this.release();\r\n\r\n        this._myPhysX.kinematic = true;\r\n\r\n        this._myOldParent = this.object.parent;\r\n        this.object.pp_setParent(grabber);\r\n\r\n        this._myIsGrabbed = true;\r\n\r\n        this._myGrabCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n    },\r\n    throw: function (linearVelocity, angularVelocity) {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            //#TODO for now kinematic is not updated instantly, add the if as soon as it is\r\n            //if (!this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = linearVelocity.vec3_scale(this._myThrowLinearVelocityMultiplier);\r\n            this._myPhysX.angularVelocity = angularVelocity.vec3_scale(this._myThrowAngularVelocityMultiplier);\r\n            //}\r\n\r\n            this._myThrowCallbacks.forEach(function (callback) { callback(grabber, this); }.bind(this));\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, true); }.bind(this));\r\n        }\r\n    },\r\n    release() {\r\n        if (this._myIsGrabbed) {\r\n            let grabber = this._myGrabber;\r\n\r\n            this._release();\r\n\r\n            this._myReleaseCallbacks.forEach(function (callback) { callback(grabber, this, false); }.bind(this));\r\n        }\r\n    },\r\n    getLinearVelocity() {\r\n        let linearVelocity = PP.vec3_create();\r\n\r\n        this._myPhysX.linearVelocity.vec3_clone(linearVelocity);\r\n\r\n        return linearVelocity;\r\n    },\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    },\r\n    getAngularVelocityDegrees() {\r\n        let angularVelocityDegrees = PP.vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_toDegrees(angularVelocityDegrees);\r\n\r\n        return angularVelocityDegrees;\r\n    },\r\n    getAngularVelocityRadians() {\r\n        let angularVelocityRadians = PP.vec3_create();\r\n\r\n        this._myPhysX.angularVelocity.vec3_clone(angularVelocityRadians);\r\n\r\n        return angularVelocityRadians;\r\n    },\r\n    isGrabbed() {\r\n        return this._myIsGrabbed;\r\n    },\r\n    getGrabber() {\r\n        return this._myGrabber;\r\n    },\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    },\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    },\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    },\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    },\r\n    registerReleaseEventListener(id, callback) {\r\n        this._myReleaseCallbacks.set(id, callback);\r\n    },\r\n    unregisterReleaseEventListener(id) {\r\n        this._myReleaseCallbacks.delete(id);\r\n    },\r\n    _release() {\r\n        if (this._myParentOnRelease == 0) {\r\n            this.object.pp_setParent(null);\r\n        } else {\r\n            this.object.pp_setParent(this._myOldParent);\r\n        }\r\n\r\n        this._myIsGrabbed = false;\r\n        this._myGrabber = null;\r\n\r\n        if (this._myKinematicValueOnRelease == 0) {\r\n            this._myPhysX.kinematic = true;\r\n        } else if (this._myKinematicValueOnRelease == 1) {\r\n            this._myPhysX.kinematic = false;\r\n        } else if (this._myOldKinematicValue != null) {\r\n            this._myPhysX.kinematic = this._myOldKinematicValue;\r\n        }\r\n\r\n        if (this._myPhysX.kinematic) {\r\n            this._myPhysX.linearVelocity = PP.vec3_create();\r\n            this._myPhysX.angularVelocity = PP.vec3_create();\r\n        }\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n\r\n        clonedComponent._myThrowLinearVelocityMultiplier = this._myThrowLinearVelocityMultiplier;\r\n        clonedComponent._myThrowAngularVelocityMultiplier = this._myThrowAngularVelocityMultiplier;\r\n        clonedComponent._myKinematicValueOnRelease = this._myKinematicValueOnRelease;\r\n\r\n        return clonedComponent;\r\n    },\r\n    pp_clonePostProcess() {\r\n        this.start();\r\n    }\r\n});", "WL.registerComponent('pp-grabber-hand', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myGrabButton: { type: WL.Type.Enum, values: ['select', 'squeeze', 'both', 'both_exclusive'], default: 'squeeze' }, // both_exclusive means u can use both buttons but you have to use the same button you grabbed with to throw\r\n    _mySnapOnPivot: { type: WL.Type.Bool, default: false },\r\n    _myMaxNumberOfObjects: { type: WL.Type.Int, default: 1 }, // how many objects you can grab at the same time\r\n    // ADVANCED SETTINGS\r\n    _myThrowVelocitySource: { type: WL.Type.Enum, values: ['hand', 'grabbable'], default: 'hand' },\r\n    _myThrowLinearVelocityMultiplier: { type: WL.Type.Float, default: 1 }, // multiply the overall throw speed, so slow throws will be multiplied too\r\n    _myThrowMaxLinearSpeed: { type: WL.Type.Float, default: 15 },\r\n    _myThrowAngularVelocityMultiplier: { type: WL.Type.Float, default: 0.5 },\r\n    _myThrowMaxAngularSpeed: { type: WL.Type.Float, default: 1080 }, // degrees\r\n    _myThrowLinearVelocityBoost: { type: WL.Type.Float, default: 1.75 },   // this boost is applied from 0% to 100% based on how fast you throw, so slow throws are not affected\r\n    _myThrowLinearVelocityBoostMinSpeedThreshold: { type: WL.Type.Float, default: 0.6 },   // 0% boost is applied if plain throw speed is under this value\r\n    _myThrowLinearVelocityBoostMaxSpeedThreshold: { type: WL.Type.Float, default: 2.5 },   // 100% boost is applied if plain throw speed is over this value\r\n}, {\r\n    init: function () {\r\n        this._myGrabbables = [];\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myActiveGrabButton = null;\r\n\r\n        this._myLinearVelocityHistorySize = 5;\r\n        this._myLinearVelocityHistorySpeedAverageSamplesFromStart = 1;\r\n        this._myLinearVelocityHistoryDirectionAverageSamplesFromStart = 3;\r\n        this._myLinearVelocityHistoryDirectionAverageSkipFromStart = 0;\r\n\r\n        this._myHandLinearVelocityHistory = new Array(this._myLinearVelocityHistorySize);\r\n        this._myHandLinearVelocityHistory.fill(PP.vec3_create());\r\n\r\n        this._myAngularVelocityHistorySize = 1;\r\n        this._myHandAngularVelocityHistory = new Array(this._myAngularVelocityHistorySize);\r\n        this._myHandAngularVelocityHistory.fill(PP.vec3_create());\r\n\r\n        this._myThrowMaxAngularSpeedRadians = Math.pp_toRadians(this._myThrowMaxAngularSpeed);\r\n\r\n        this._myGrabCallbacks = new Map();      // Signature: callback(grabber, grabbable)\r\n        this._myThrowCallbacks = new Map();     // Signature: callback(grabber, grabbable)\r\n\r\n        this._myDebugActive = false;\r\n    },\r\n    start: function () {\r\n        if (this._myHandedness == PP.HandednessIndex.LEFT) {\r\n            this._myGamepad = PP.myLeftGamepad;\r\n        } else {\r\n            this._myGamepad = PP.myRightGamepad;\r\n        }\r\n\r\n        this._myPhysX = this.object.pp_getComponent('physx');\r\n        this._myCollisionsCollector = new PP.PhysicsCollisionCollector(this._myPhysX, true);\r\n    },\r\n    update: function (dt) {\r\n        this._myCollisionsCollector.update(dt);\r\n\r\n        if (this._myGrabbables.length > 0) {\r\n            this._updateLinearVelocityHistory();\r\n            this._updateAngularVelocityHistory();\r\n        }\r\n    },\r\n    grab: function (grabButton = null) {\r\n        this._grab(grabButton);\r\n    },\r\n    throw: function (throwButton = null) {\r\n        this._throw(throwButton);\r\n    },\r\n    registerGrabEventListener(id, callback) {\r\n        this._myGrabCallbacks.set(id, callback);\r\n    },\r\n    unregisterGrabEventListener(id) {\r\n        this._myGrabCallbacks.delete(id);\r\n    },\r\n    registerThrowEventListener(id, callback) {\r\n        this._myThrowCallbacks.set(id, callback);\r\n    },\r\n    unregisterThrowEventListener(id) {\r\n        this._myThrowCallbacks.delete(id);\r\n    },\r\n    onActivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SELECT));\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n        } else {\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SQUEEZE));\r\n\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this, this._grab.bind(this, PP.GamepadButtonID.SELECT));\r\n            this._myGamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this, this._throw.bind(this, PP.GamepadButtonID.SELECT));\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myGamepad == null) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 0) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this);\r\n        } else if (this._myGrabButton == 1) {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this);\r\n        } else {\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.PRESS_END, this);\r\n\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_START, this);\r\n            this._myGamepad.unregisterButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.PRESS_END, this);\r\n        }\r\n    },\r\n    _grab: function (grabButton) {\r\n        if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n            return;\r\n        }\r\n\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == grabButton || grabButton == null) {\r\n            let grabbablesToGrab = [];\r\n\r\n            let collisions = this._myCollisionsCollector.getCollisions();\r\n            for (let i = 0; i < collisions.length; i++) {\r\n                let grabbable = collisions[i].getComponent(\"pp-grabbable\");\r\n                if (grabbable && grabbable.active) {\r\n                    grabbablesToGrab.push(grabbable);\r\n                }\r\n            }\r\n\r\n            let grabberPosition = this.object.pp_getPosition();\r\n            grabbablesToGrab.sort(function (first, second) {\r\n                let firstPosition = first.object.pp_getPosition();\r\n                let secondPosition = second.object.pp_getPosition();\r\n\r\n                let firstDistance = firstPosition.vec3_distance(grabberPosition);\r\n                let secondDistance = secondPosition.vec3_distance(grabberPosition);\r\n\r\n                return Math.pp_sign(firstDistance - secondDistance, 0);\r\n            });\r\n\r\n            for (let grabbableToGrab of grabbablesToGrab) {\r\n                if (!this._isAlreadyGrabbed(grabbableToGrab)) {\r\n                    let grabbableData = new PP.GrabberHandGrabbableData(grabbableToGrab, this._myThrowVelocitySource == 1, this._myLinearVelocityHistorySize, this._myAngularVelocityHistorySize);\r\n                    this._myGrabbables.push(grabbableData);\r\n                    grabbableToGrab.grab(this.object);\r\n                    grabbableToGrab.registerReleaseEventListener(this, this._onRelease.bind(this));\r\n\r\n                    if (this._mySnapOnPivot) {\r\n                        grabbableToGrab.object.resetTranslation();\r\n                    }\r\n\r\n                    this._myGrabCallbacks.forEach(function (callback) { callback(this, grabbableToGrab); }.bind(this));\r\n                }\r\n\r\n                if (this._myGrabbables.length >= this._myMaxNumberOfObjects) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (this._myGrabbables.length > 0) {\r\n                if (this._myActiveGrabButton == null) {\r\n                    this._myActiveGrabButton = grabButton;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _throw: function (throwButton) {\r\n        if (this._myGrabButton == 2 || this._myActiveGrabButton == null || this._myActiveGrabButton == throwButton || throwButton == null) {\r\n            if (this._myGrabbables.length > 0) {\r\n                let linearVelocity = null;\r\n                let angularVelocity = null;\r\n\r\n                if (this._myThrowVelocitySource == 0) {\r\n                    linearVelocity = this._computeReleaseLinearVelocity(this._myHandLinearVelocityHistory);\r\n                    angularVelocity = this._computeReleaseAngularVelocity(this._myHandAngularVelocityHistory);\r\n                }\r\n\r\n                for (let grabbableData of this._myGrabbables) {\r\n                    let grabbable = grabbableData.getGrabbable();\r\n\r\n                    grabbable.unregisterReleaseEventListener(this);\r\n\r\n                    if (this._myThrowVelocitySource == 1) {\r\n                        linearVelocity = this._computeReleaseLinearVelocity(grabbableData.getLinearVelocityHistory());\r\n                        angularVelocity = this._computeReleaseAngularVelocity(grabbableData.getAngularVelocityHistory());\r\n                    }\r\n\r\n                    grabbable.throw(linearVelocity, angularVelocity);\r\n\r\n                    this._myThrowCallbacks.forEach(function (callback) { callback(this, grabbable); }.bind(this));\r\n                }\r\n\r\n                this._myGrabbables = [];\r\n            }\r\n\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _onRelease(grabber, grabbable) {\r\n        grabbable.unregisterReleaseEventListener(this);\r\n        this._myGrabbables.pp_remove(element => element.getGrabbable() == grabbable);\r\n\r\n        if (this._myGrabbables.length <= 0) {\r\n            this._myActiveGrabButton = null;\r\n        }\r\n    },\r\n    _updateLinearVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandLinearVelocityHistory.unshift(handPose.getLinearVelocity().pp_clone());\r\n        this._myHandLinearVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateLinearVelocityHistory();\r\n        }\r\n    },\r\n    _updateAngularVelocityHistory() {\r\n        let handPose = this._myGamepad.getHandPose();\r\n        this._myHandAngularVelocityHistory.unshift(handPose.getAngularVelocityRadians().pp_clone());\r\n        this._myHandAngularVelocityHistory.pop();\r\n\r\n        for (let grabbable of this._myGrabbables) {\r\n            grabbable.updateAngularVelocityHistory();\r\n        }\r\n    },\r\n    _computeReleaseLinearVelocity(linearVelocityHistory) {\r\n        //speed\r\n        let speed = linearVelocityHistory[0].vec3_length();\r\n        for (let i = 1; i < this._myLinearVelocityHistorySpeedAverageSamplesFromStart; i++) {\r\n            speed += linearVelocityHistory[i].vec3_length();\r\n        }\r\n        speed /= this._myLinearVelocityHistorySpeedAverageSamplesFromStart;\r\n\r\n        // This way I give an increasing and smooth boost to the throw so that when u want to perform a weak throw, the value is not changed, but if u put more speed\r\n        // it will be boosted to make it easier and still feel good and natural (value does not increase suddenly)\r\n        let speedEaseMultiplier = Math.pp_mapToRange(speed, this._myThrowLinearVelocityBoostMinSpeedThreshold, this._myThrowLinearVelocityBoostMaxSpeedThreshold, 0, 1);\r\n        speedEaseMultiplier = PP.EasingFunction.easeIn(speedEaseMultiplier);\r\n\r\n        // Add the boost to the speed\r\n        let extraSpeed = speed * (speedEaseMultiplier * this._myThrowLinearVelocityBoost);\r\n        speed += extraSpeed;\r\n        speed *= this._myThrowLinearVelocityMultiplier;\r\n        speed = Math.pp_clamp(speed, 0, this._myThrowMaxLinearSpeed);\r\n\r\n        if (this._myDebugActive) {\r\n            this._debugDirectionLines(linearVelocityHistory);\r\n        }\r\n\r\n        //direction\r\n        let directionCurrentWeight = this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let lastDirectionIndex = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart;\r\n        let direction = PP.vec3_create();\r\n        for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n            let currentDirection = linearVelocityHistory[i];\r\n            currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n            direction.vec3_add(currentDirection, direction);\r\n\r\n            directionCurrentWeight--;\r\n        }\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    },\r\n    _computeReleaseAngularVelocity(angularVelocityHistory) {\r\n        let angularVelocity = angularVelocityHistory[0];\r\n\r\n        //speed\r\n        let speed = angularVelocity.vec3_length();\r\n\r\n        speed = Math.pp_clamp(speed * this._myThrowAngularVelocityMultiplier, 0, this._myThrowMaxAngularSpeedRadians);\r\n\r\n        //direction\r\n        let direction = angularVelocity;\r\n        direction.vec3_normalize(direction);\r\n\r\n        direction.vec3_scale(speed, direction);\r\n\r\n        return direction;\r\n    },\r\n    _debugDirectionLines(linearVelocityHistory) {\r\n        for (let j = this._myLinearVelocityHistoryDirectionAverageSkipFromStart + this._myLinearVelocityHistoryDirectionAverageSamplesFromStart; j > this._myLinearVelocityHistoryDirectionAverageSkipFromStart; j--) {\r\n\r\n            let directionCurrentWeight = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let lastDirectionIndex = j - this._myLinearVelocityHistoryDirectionAverageSkipFromStart;\r\n            let direction = PP.vec3_create();\r\n            for (let i = this._myLinearVelocityHistoryDirectionAverageSkipFromStart; i < lastDirectionIndex; i++) {\r\n                let currentDirection = linearVelocityHistory[i].pp_clone();\r\n                currentDirection.vec3_scale(directionCurrentWeight, currentDirection);\r\n                direction.vec3_add(currentDirection, direction);\r\n\r\n                directionCurrentWeight--;\r\n            }\r\n            direction.vec3_normalize(direction);\r\n\r\n            let color = 1 / j;\r\n\r\n            PP.myDebugVisualManager.drawLine(5, this.object.pp_getPosition(), direction, 0.2, PP.vec4_create(olor, color, color, 1));\r\n        }\r\n    },\r\n    _isAlreadyGrabbed(grabbable) {\r\n        let found = this._myGrabbables.pp_find(element => element.getGrabbable() == grabbable);\r\n        return found != null;\r\n    }\r\n});\r\n\r\nPP.GrabberHandGrabbableData = class GrabberHandGrabbableData {\r\n    constructor(grabbable, useGrabbableAsVelocitySource, linearVelocityHistorySize, angularVelocityHistorySize) {\r\n        this._myGrabbable = grabbable;\r\n        this._myUseGrabbableAsVelocitySource = useGrabbableAsVelocitySource;\r\n\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory = new Array(linearVelocityHistorySize);\r\n            this._myLinearVelocityHistory.fill(PP.vec3_create());\r\n\r\n            this._myAngularVelocityHistory = new Array(angularVelocityHistorySize);\r\n            this._myAngularVelocityHistory.fill(PP.vec3_create());\r\n        }\r\n    }\r\n\r\n    getGrabbable() {\r\n        return this._myGrabbable;\r\n    }\r\n\r\n    getLinearVelocityHistory() {\r\n        return this._myLinearVelocityHistory;\r\n    }\r\n\r\n    getAngularVelocityHistory() {\r\n        return this._myAngularVelocityHistory;\r\n    }\r\n\r\n    updateLinearVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myLinearVelocityHistory.unshift(this._myGrabbable.getLinearVelocity());\r\n            this._myLinearVelocityHistory.pop();\r\n        }\r\n    }\r\n\r\n    updateAngularVelocityHistory() {\r\n        if (this._myUseGrabbableAsVelocitySource) {\r\n            this._myAngularVelocityHistory.unshift(this._myGrabbable.getAngularVelocityRadians());\r\n            this._myAngularVelocityHistory.pop();\r\n        }\r\n    }\r\n};", "PP.CAError = {\r\n    DUMMY_NOT_INITIALIZED: 0,\r\n    CA_SDK_MISSING: 1,\r\n    SUBMIT_SCORE_FAILED: 2,\r\n    GET_LEADERBOARD_FAILED: 3,\r\n    GET_USER_FAILED: 4,\r\n    USER_HAS_NO_SCORE: 5\r\n};\r\n\r\nPP.CAUtils = {\r\n    _myDummyServer: null,\r\n    _myUseDummyServerOnSDKMissing: false,\r\n    _myUseDummyServerOnError: false,\r\n    setUseDummyServerOnSDKMissing: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnSDKMissing = useDummyServer;\r\n    },\r\n    setUseDummyServerOnError: function (useDummyServer) {\r\n        PP.CAUtils._myUseDummyServerOnError = useDummyServer;\r\n    },\r\n    setDummyServer: function (dummyServer) {\r\n        PP.CAUtils._myDummyServer = dummyServer;\r\n    },\r\n    isUseDummyServerOnSDKMissing: function () {\r\n        return PP.CAUtils._myUseDummyServerOnSDKMissing;\r\n    },\r\n    isUseDummyServerOnError: function () {\r\n        return PP.CAUtils._myUseDummyServerOnError;\r\n    },\r\n    getDummyServer: function () {\r\n        return PP.CAUtils._myDummyServer;\r\n    },\r\n    isSDKAvailable: function () {\r\n        return \"casdk\" in window;\r\n    },\r\n    getLeaderboard: function (leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            if (!isAroundPlayer) {\r\n                casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                    if (result.leaderboard) {\r\n                        if (callbackOnDone) {\r\n                            callbackOnDone(result.leaderboard);\r\n                        }\r\n                    } else {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Get leaderboard failed\";\r\n                            error.type = PP.CAError.GET_LEADERBOARD_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    }\r\n                }).catch(function (result) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get leaderboard failed\";\r\n                        error.type = PP.CAError.GET_LEADERBOARD_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                });\r\n            } else {\r\n                PP.CAUtils.getUser(\r\n                    function (user) {\r\n                        let userName = user.displayName;\r\n                        casdk.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount).then(function (result) {\r\n                            if (result.leaderboard) {\r\n                                let userValid = false;\r\n                                for (let value of result.leaderboard) {\r\n                                    if (value.displayName == userName && value.score != 0) {\r\n                                        userValid = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (userValid) {\r\n                                    if (callbackOnDone) {\r\n                                        callbackOnDone(result.leaderboard);\r\n                                    }\r\n                                } else {\r\n                                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                        PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                    } else if (callbackOnError) {\r\n                                        let error = {};\r\n                                        error.reason = \"Searching for around player but the user has not submitted a score yet\";\r\n                                        error.type = PP.CAError.USER_HAS_NO_SCORE;\r\n                                        callbackOnError(error, result);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                    PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                                } else if (callbackOnError) {\r\n                                    let error = {};\r\n                                    error.reason = \"Get leaderboard failed\";\r\n                                    error.type = PP.CAError.GET_LEADERBOARD_FAILED;\r\n                                    callbackOnError(error, result);\r\n                                }\r\n                            }\r\n                        }).catch(function (result) {\r\n                            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                                (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                            } else if (callbackOnError) {\r\n                                let error = {};\r\n                                error.reason = \"Get leaderboard failed\";\r\n                                error.type = PP.CAError.GET_LEADERBOARD_FAILED;\r\n                                callbackOnError(error, result);\r\n                            }\r\n                        });\r\n\r\n                    },\r\n                    function () {\r\n                        if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                            (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                            PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n                        } else if (callbackOnError) {\r\n                            let error = {};\r\n                            error.reason = \"Searching for around player but the user can't be retrieved\";\r\n                            error.type = PP.CAError.GET_USER_FAILED;\r\n                            callbackOnError(error, result);\r\n                        }\r\n                    },\r\n                    false);\r\n            }\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getLeaderboard != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAError.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getLeaderboardDummy(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAError.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    submitScore: function (leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.submitScore(leaderboardID, scoreToSubmit).then(function (result) {\r\n                if (result.error) {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Submit score failed\";\r\n                        error.type = PP.CAError.SUBMIT_SCORE_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                } else {\r\n                    callbackOnDone();\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Submit score failed\";\r\n                    error.type = PP.CAError.SUBMIT_SCORE_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.submitScore != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAError.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    submitScoreDummy(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAError.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n    getUser: function (callbackOnDone, callbackOnError, overrideUseDummyServer = null) {\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            casdk.getUser().then(function (result) {\r\n                if (result.user) {\r\n                    if (callbackOnDone) {\r\n                        callbackOnDone(result.user);\r\n                    }\r\n                } else {\r\n                    if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                        (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                        PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                    } else if (callbackOnError) {\r\n                        let error = {};\r\n                        error.reason = \"Get user failed\";\r\n                        error.type = PP.CAError.GET_USER_FAILED;\r\n                        callbackOnError(error, result);\r\n                    }\r\n                }\r\n            }).catch(function (result) {\r\n                if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                    (PP.CAUtils._myUseDummyServerOnError && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                    PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n                } else if (callbackOnError) {\r\n                    let error = {};\r\n                    error.reason = \"Get user failed\";\r\n                    error.type = PP.CAError.GET_USER_FAILED;\r\n                    callbackOnError(error, result);\r\n                }\r\n            });\r\n        } else {\r\n            if (PP.CAUtils._myDummyServer != null && PP.CAUtils._myDummyServer.getUser != null &&\r\n                (PP.CAUtils._myUseDummyServerOnSDKMissing && overrideUseDummyServer == null) || (overrideUseDummyServer != null && overrideUseDummyServer)) {\r\n                PP.CAUtils.getUserDummy(callbackOnDone, callbackOnError);\r\n            } else if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Construct Arcade SDK missing\";\r\n                error.type = PP.CAError.CA_SDK_MISSING;\r\n                callbackOnError(error, null);\r\n            }\r\n        }\r\n    },\r\n    getUserDummy(callbackOnDone, callbackOnError) {\r\n        if (PP.CAUtils._myDummyServer) {\r\n            PP.CAUtils._myDummyServer.getUser(callbackOnDone, callbackOnError);\r\n        } else {\r\n            if (callbackOnError) {\r\n                let error = {};\r\n                error.reason = \"Dummy server not initialized\";\r\n                error.type = PP.CAError.DUMMY_NOT_INITIALIZED;\r\n                callbackOnError(error);\r\n            }\r\n        }\r\n    },\r\n};", "PP.CADummyServer = class CADummyServer {\r\n    constructor() {\r\n    }\r\n\r\n    getLeaderboard(leaderboardID, isAscending, isAroundPlayer, scoresAmount, callbackOnDone, callbackOnError) {\r\n        let leaderboard = null;\r\n\r\n        if (PP.CAUtils.isSDKAvailable()) {\r\n            leaderboard = [\r\n                { rank: 0, displayName: \"An\", score: 0 },\r\n                { rank: 1, displayName: \"Error\", score: 0 },\r\n                { rank: 2, displayName: \"Has\", score: 0 },\r\n                { rank: 3, displayName: \"Occurred\", score: 0 },\r\n                { rank: 4, displayName: \"While\", score: 0 },\r\n                { rank: 5, displayName: \"Trying\", score: 0 },\r\n                { rank: 6, displayName: \"To\", score: 0 },\r\n                { rank: 7, displayName: \"Retrieve\", score: 0 },\r\n                { rank: 8, displayName: \"The\", score: 0 },\r\n                { rank: 9, displayName: \"Leaderboard\", score: 0 }\r\n            ];\r\n        } else {\r\n            if (isAroundPlayer) {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"Sign In\", score: 0 },\r\n                    { rank: 1, displayName: \"And\", score: 0 },\r\n                    { rank: 2, displayName: \"Play\", score: 0 },\r\n                    { rank: 3, displayName: \"On\", score: 0 },\r\n                    { rank: 4, displayName: \"HeyVR\", score: 0 },\r\n                    { rank: 5, displayName: \"To\", score: 0 },\r\n                    { rank: 6, displayName: \"Submit\", score: 0 },\r\n                    { rank: 7, displayName: \"Your\", score: 0 },\r\n                    { rank: 8, displayName: \"Own\", score: 0 },\r\n                    { rank: 9, displayName: \"Score\", score: 0 }\r\n                ];\r\n            } else {\r\n                leaderboard = [\r\n                    { rank: 0, displayName: \"The\", score: 0 },\r\n                    { rank: 1, displayName: \"Top 10\", score: 0 },\r\n                    { rank: 2, displayName: \"Leaderboard\", score: 0 },\r\n                    { rank: 3, displayName: \"Is\", score: 0 },\r\n                    { rank: 4, displayName: \"Available\", score: 0 },\r\n                    { rank: 5, displayName: \"Only\", score: 0 },\r\n                    { rank: 5, displayName: \"When\", score: 0 },\r\n                    { rank: 7, displayName: \"Playing\", score: 0 },\r\n                    { rank: 8, displayName: \"On\", score: 0 },\r\n                    { rank: 9, displayName: \"HeyVR\", score: 0 },\r\n                ];\r\n            }\r\n        }\r\n\r\n        while (leaderboard.length > scoresAmount) {\r\n            leaderboard.pop();\r\n        }\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(leaderboard);\r\n        }\r\n    }\r\n\r\n    submitScore(leaderboardID, scoreToSubmit, callbackOnDone, callbackOnError) {\r\n        if (callbackOnDone) {\r\n            callbackOnDone();\r\n        }\r\n    }\r\n\r\n    getUser(callbackOnDone, callbackOnError) {\r\n        let user = {};\r\n        user.displayName = \"J\";\r\n\r\n        if (callbackOnDone) {\r\n            callbackOnDone(user);\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-ca-display-leaderboard\", {\r\n    _myLeaderboardID: { type: WL.Type.String, default: \"\" },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myIsAscending: { type: WL.Type.Bool, default: false },\r\n    _myScoresAmount: { type: WL.Type.Int, default: 10 },\r\n    _myScoreFormat: { type: WL.Type.Enum, values: ['value', 'hours:minutes:seconds', 'minutes:seconds', 'seconds', 'hours:minutes', 'minutes'], default: 'value' },\r\n    _myPositionAndUsernameSeparator: { type: WL.Type.String, default: \" - \" },\r\n    _myNumberOfLinesBetweenScores: { type: WL.Type.Int, default: 1 },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myNamesTextComponent = null;\r\n        this._myScoresTextComponent = null;\r\n\r\n        this._myStarted = false;\r\n\r\n        PP.CAUtils.setDummyServer(new PP.CADummyServer());\r\n        PP.CAUtils.setUseDummyServerOnSDKMissing(true);\r\n        PP.CAUtils.setUseDummyServerOnError(true);\r\n    },\r\n    update: function (dt) {\r\n        if (!this._myStarted) {\r\n            this._myStarted = true;\r\n\r\n            let namesObject = this.object.pp_getObjectByName(\"Names\");\r\n            let scoresObject = this.object.pp_getObjectByName(\"Scores\");\r\n\r\n            if (namesObject != null && scoresObject != null) {\r\n                this._myNamesTextComponent = namesObject.pp_getComponent(\"text\");\r\n                this._myScoresTextComponent = scoresObject.pp_getComponent(\"text\");\r\n            }\r\n\r\n            this.updateLeaderboard();\r\n        }\r\n    },\r\n    updateLeaderboard: function () {\r\n        PP.CAUtils.getLeaderboard(this._myLeaderboardID, this._myIsAscending, this._myIsLocal, this._myScoresAmount, this._onLeaderboardRetrieved.bind(this));\r\n    },\r\n    _onLeaderboardRetrieved(leaderboard) {\r\n        let namesText = \"\";\r\n        let scoresText = \"\";\r\n\r\n        let maxRankDigit = 0;\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            if (rank.toFixed(0).length > maxRankDigit) {\r\n                maxRankDigit = rank.toFixed(0).length;\r\n            }\r\n        }\r\n\r\n        for (let value of leaderboard) {\r\n            let rank = value.rank + 1;\r\n            let fixedRank = rank.toFixed(0);\r\n            while (fixedRank.length < maxRankDigit) {\r\n                fixedRank = \"0\".concat(fixedRank);\r\n            }\r\n\r\n            let newlines = \"\\n\";\r\n            for (let i = 0; i < this._myNumberOfLinesBetweenScores; i++) {\r\n                newlines = newlines + \"\\n\";\r\n            }\r\n\r\n            namesText = namesText.concat(fixedRank, this._myPositionAndUsernameSeparator, value.displayName, newlines);\r\n\r\n            let convertedScore = this._formatScore(value.score);\r\n            scoresText = scoresText.concat(convertedScore, newlines);\r\n        }\r\n\r\n        if (this._myNamesTextComponent != null && this._myScoresTextComponent != null) {\r\n            this._myNamesTextComponent.text = namesText;\r\n            this._myScoresTextComponent.text = scoresText;\r\n        }\r\n    },\r\n    _formatScore(score) {\r\n        let convertedScore = score.toString();\r\n\r\n        if (this._myScoreFormat == 1) {\r\n            convertedScore = this._formatTime(score, true, true, true);\r\n        } else if (this._myScoreFormat == 2) {\r\n            convertedScore = this._formatTime(score, false, true, true);\r\n        } else if (this._myScoreFormat == 3) {\r\n            convertedScore = this._formatTime(score, false, false, true);\r\n        } else if (this._myScoreFormat == 4) {\r\n            convertedScore = this._formatTime(score, true, true, false);\r\n        } else if (this._myScoreFormat == 5) {\r\n            convertedScore = this._formatTime(score, false, true, false);\r\n        }\r\n\r\n        return convertedScore;\r\n    },\r\n    _formatTime(score, hoursEnabled, minutesEnabled, secondsEnabled) {\r\n        let time = Math.floor(score / 1000);\r\n\r\n        let hours = 0;\r\n        if (hoursEnabled) {\r\n            hours = Math.floor(time / 3600);\r\n            time -= hours * 3600;\r\n        }\r\n\r\n        let minutes = 0;\r\n        if (minutesEnabled) {\r\n            minutes = Math.floor(time / 60);\r\n            time -= minutes * 60;\r\n        }\r\n\r\n        let seconds = 0;\r\n        if (secondsEnabled) {\r\n            seconds = Math.floor(time);\r\n        }\r\n\r\n        let convertedTime = \"\";\r\n\r\n        if (secondsEnabled) {\r\n            convertedTime = (seconds.toFixed(0).length < 2 && (minutesEnabled || hoursEnabled)) ? \"0\".concat(seconds.toFixed(0)) : seconds.toFixed(0);\r\n        }\r\n\r\n        if (minutesEnabled) {\r\n            convertedTime = ((minutes.toFixed(0).length < 2 && (secondsEnabled || hoursEnabled)) ? \"0\".concat(minutes.toFixed(0)) : minutes.toFixed(0)) + (secondsEnabled ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        if (hoursEnabled) {\r\n            convertedTime = ((hours.toFixed(0).length < 2 && (secondsEnabled || minutesEnabled)) ? \"0\".concat(hours.toFixed(0)) : hours.toFixed(0)) + (minutesEnabled ? \":\" + convertedTime : \"\");\r\n        }\r\n\r\n        return convertedTime;\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type);\r\n\r\n        clonedComponent._myLeaderboardID = this._myLeaderboardID;\r\n        clonedComponent._myIsLocal = this._myIsLocal;\r\n        clonedComponent._myPositionAndUsernameSeparator = this._myPositionAndUsernameSeparator;\r\n        clonedComponent._myNumberOfLinesBetweenScores = this._myNumberOfLinesBetweenScores;\r\n\r\n        return clonedComponent;\r\n    },\r\n});", "PP.PlayerHeadController = class PlayerHeadController {\r\n    constructor() {\r\n    }\r\n};", "PP.PlayerOcclusion = class PlayerOcclusion {\r\n    constructor() {\r\n    }\r\n};", "\r\nPP.CollisionCheckParams = class CollisionCheckParams {\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n        this.mySplitMovementMaxLength = 0;\r\n        this.mySplitMovementMaxStepsEnabled = false;\r\n        this.mySplitMovementMaxSteps = 0;\r\n        this.mySplitMovementStepEqualLength = false;\r\n        this.mySplitMovementStepEqualLengthMinLength = 0;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = false;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = false;\r\n        this.mySplitMovementStopCallback = null;                        // Signature: callback(collisionRuntimeParams)\r\n        this.mySplitMovementStopReturnPrevious = false;\r\n\r\n        this.myRadius = 0;\r\n        this.myDistanceFromFeetToIgnore = 0;\r\n        this.myDistanceFromHeadToIgnore = 0;\r\n\r\n        this.myPositionOffsetLocal = PP.vec3_create();\r\n        this.myRotationOffsetLocalQuat = PP.quat_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        // usually the horizontal movement is very small and it could be simply skipped has a check, the horizontal position check will be enough\r\n        // with small I mean that it's very unlikely that in 10 cm of movement in a frame u are going to hit something in between but not in the final position\r\n        // if u feel like the movement is bigger or want to be sure u can always enabled this\r\n        // if the movement is really that big it's probably better to use the mySplitMovementEnabled flag and split the movement check into smaller movements\r\n        this.myHorizontalMovementStepEnabled = false;\r\n        this.myHorizontalMovementStepMaxLength = 0;\r\n\r\n        this.myHorizontalMovementRadialStepAmount = 0;\r\n        this.myHorizontalMovementCheckDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckDiagonalInward = false;\r\n        this.myHorizontalMovementCheckStraight = false;\r\n        this.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this.myHorizontalMovementCheckVerticalStraight = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n\r\n        this.myHalfConeAngle = 0;\r\n        this.myHalfConeSliceAmount = 0;\r\n        this.myCheckConeBorder = false;\r\n        this.myCheckConeRay = false;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = true; // true gives less issues(tm), but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionCheckVerticalDirectionType = 0; // somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n        // 0: check upward, gives less issues(tm) (hitting a very small step at the end of a slope /-) with a grounded movement (not fly or snapped to ceiling), but may also collide a bit more, resulting in less sliding\r\n        // 1: check downard, gives less issues(tm) with a ceiling-ed movement (not fly or snapped to ground), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n        // 2: check both directions, more expensive and better prevent collision, sliding more, but is more expensive and gives more issues            \r\n        //                                                                                                                                                      ___\r\n        // the issues(tm) means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n        // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n        // 0 avoid this issue for a grounded movement, 2 instead do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n        // the better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope\r\n        // the step that is created \"on the other side\" in fact can easily be ignored thanks to the myDistanceFromFeetToIgnore field\r\n        // if the level is properly created the best solution should be myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false and myHorizontalPositionCheckVerticalDirectionType = 0\r\n\r\n        this.myCheckHorizontalFixedForwardEnabled = false; // this is basically only useful if the cone angle is 180 degrees\r\n        this.myCheckHorizontalFixedForward = PP.vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalPositionCheckEnabled = false;\r\n        this.myFeetRadius = 0;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = null;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = null;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = null;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = null;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = null;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = null;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = false;\r\n        this.myCheckVerticalFixedForward = PP.vec3_create();\r\n        this.myCheckVerticalBothDirection = false;\r\n\r\n        this.mySnapOnGroundEnabled = false;\r\n        this.mySnapOnGroundExtraDistance = 0;\r\n        this.mySnapOnCeilingEnabled = false;\r\n        this.mySnapOnCeilingExtraDistance = 0;\r\n\r\n        this.myGroundPopOutEnabled = false;\r\n        this.myGroundPopOutExtraDistance = 0;\r\n        this.myCeilingPopOutEnabled = false;\r\n        this.myCeilingPopOutExtraDistance = 0;\r\n\r\n        this.myVerticalMovementReduceEnabled = false;\r\n\r\n        this.myGroundCircumferenceAddCenter = false;\r\n        this.myGroundCircumferenceSliceAmount = 0;\r\n        this.myGroundCircumferenceStepAmount = 0;\r\n        this.myGroundCircumferenceRotationPerStep = 0;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = false;\r\n\r\n        this.myCheckHeight = false;\r\n        this.myCheckHeightVerticalMovement = false;\r\n        this.myCheckHeightVerticalPosition = false;\r\n        this.myCheckHeightTopMovement = false;\r\n        this.myCheckHeightTopPosition = false;\r\n        this.myCheckHeightConeOnCollision = false;\r\n        this.myCheckHeightConeOnCollisionKeepHit = false;\r\n        // if true and myCheckHeightConeOnCollision is true, if the cone does not hit the height hit will be restored\r\n        // the fact that the cone does not hit could be due to the fact that it thinks that the collision can be ignored though, sop restoring can be a bit safer but also collide more\r\n\r\n        this.myHeightCheckStepAmountMovement = 0;\r\n        this.myHeightCheckStepAmountPosition = 0;\r\n        this.myCheckVerticalStraight = false;\r\n        this.myCheckVerticalDiagonalRayOutward = false;\r\n        this.myCheckVerticalDiagonalRayInward = false;\r\n        this.myCheckVerticalDiagonalBorderOutward = false;\r\n        this.myCheckVerticalDiagonalBorderInward = false;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this.myCheckVerticalSearchFartherVerticalHit = false; //somewhat expensive, but can help fix sime sliding issues\r\n\r\n        this.myGroundAngleToIgnore = 0;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = null;\r\n        this.myCeilingAngleToIgnore = 0;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = null;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = null;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = null;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = null;\r\n\r\n        this.myHeight = 0;\r\n\r\n        this.myComputeGroundInfoEnabled = false;\r\n        this.myComputeCeilingInfoEnabled = false;\r\n        this.myDistanceToBeOnGround = 0;\r\n        this.myDistanceToComputeGroundInfo = 0;\r\n        this.myDistanceToBeOnCeiling = 0;\r\n        this.myDistanceToComputeCeilingInfo = 0;\r\n        this.myVerticalFixToBeOnGround = 0;\r\n        this.myVerticalFixToComputeGroundInfo = 0;\r\n        this.myVerticalFixToBeOnCeiling = 0;\r\n        this.myVerticalFixToComputeCeilingInfo = 0;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnGroundIfInsideHit = false;\r\n        this.myIsOnCeilingIfInsideHit = false;\r\n        this.myIsOnGroundMaxSurfaceAngle = null;\r\n        this.myIsOnCeilingMaxSurfaceAngle = null;\r\n        this.myFindGroundDistanceMaxOutsideDistance = 0;\r\n        this.myFindGroundDistanceMaxInsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = 0;\r\n        this.myFindCeilingDistanceMaxInsideDistance = 0;\r\n\r\n        this.myAllowGroundSteepFix = false;\r\n        this.myAllowCeilingSteepFix = false;\r\n        this.myMustStayOnGround = false;\r\n        this.myMustStayOnCeiling = false;\r\n        this.myMustStayOnValidGroundAngleDownhill = false;\r\n        this.myMustStayOnValidCeilingAngleDownhill = false;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = false;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = false;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = false;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = false;\r\n        this.myMustStayBelowGroundAngleDownhill = null;\r\n        this.myMustStayBelowCeilingAngleDownhill = null;\r\n        this.myMovementMustStayOnGroundHitAngle = null;\r\n        this.myMovementMustStayOnCeilingHitAngle = null;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = false;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = false;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = false;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = null;\r\n        this.myCheckTransformMustBeOnGroundAngle = null;\r\n        this.myTeleportMustBeOnCeilingAngle = null;\r\n        this.myCheckTransformMustBeOnCeilingAngle = null;\r\n\r\n        this.myTeleportMustBeOnGround = false;\r\n        this.myCheckTransformMustBeOnGround = false;\r\n        this.myTeleportMustBeOnCeiling = false;\r\n        this.myCheckTransformMustBeOnCeiling = false;\r\n\r\n        this.mySlidingEnabled = false;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = false;\r\n        this.mySlidingMaxAttempts = 0;\r\n        this.mySlidingCheckBothDirections = false;       // expensive, 2 times the check for the whole horizontal movement!\r\n        // this can fix some edge cases in which u can get stuck instead of sliding\r\n        // it basically require that u also add flicker prevention\r\n\r\n        this.mySlidingFlickeringPreventionType = 0;      // expensive, 2 times the check for the whole horizontal movement!\r\n        // 0: no prevention\r\n        // 1: use previous frame data to understand if the sliding could flicker, this avoid stopping the movement when the flicker would just last some frames, \r\n        //    but also allows a bit of flicker that stabilize after 2-3 frames\r\n        // 2: check when sliding collision angle is more then 90 degrees, prevents most flicker apart those on almost flat surfaces\r\n        // 3: check 2 + check when sliding movement angle is more then 85 degrees, prevents almost all flicker, even on almost flat surfaces\r\n        // 4: check every time\r\n        //\r\n        // from 3 and above you could have that the flicker prevents the movement when u expect it, because it's a more aggressive prevention\r\n        // in case a fluid movement is more important than a bit of flicker from time to time, 1 is a better choice (which is also less expensive than 3 and above)\r\n        // 2 is just a less expensive version of 3 (check less times) but also less precise, allowing more flickering\r\n\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = false;\r\n        // this flag make it so the prevention is done only if it was already sliding, this can lead to a few frames of flicker if u go toward a corner directly\r\n        // but allow the movement to be more fluid, avoiding getting stuck\r\n\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        // if the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // this help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // it's especially useful if combo-ed with mySlidingFlickeringPreventionType #1, making it a bit less fluid but also less flickering\r\n\r\n        this.mySlidingAdjustSign90Degrees = false;\r\n\r\n        this.myHorizontalBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalObjectsToIgnore = [];\r\n\r\n        this.myVerticalBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalObjectsToIgnore = [];\r\n\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(startMovement, endMovement, currentPosition, currentTransformUp, currentTransformForward, currentHeight, collisionCheckParams, prevCollisionRuntimeParams, outCollisionRuntimeParams, outFixedMovement) -> outFixedMovement\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(collisionRuntimeParams) -> bool\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(collisionRuntimeParams) -> bool\r\n\r\n        this.myDebugActive = false;\r\n\r\n        this.myDebugHorizontalMovementActive = false;\r\n        this.myDebugHorizontalPositionActive = false;\r\n        this.myDebugVerticalMovementActive = false;\r\n        this.myDebugVerticalPositionActive = false;\r\n        this.myDebugSlidingActive = false;\r\n        this.myDebugGroundInfoActive = false;\r\n        this.myDebugCeilingInfoActive = false;\r\n        this.myDebugRuntimeParamsActive = false;\r\n        this.myDebugMovementActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n        this.mySplitMovementMaxLength = other.mySplitMovementMaxLength;\r\n        this.mySplitMovementMaxStepsEnabled = other.mySplitMovementMaxStepsEnabled;\r\n        this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n        this.mySplitMovementStepEqualLength = other.mySplitMovementStepEqualLength;\r\n        this.mySplitMovementStepEqualLengthMinLength = other.mySplitMovementStepEqualLengthMinLength;\r\n        this.mySplitMovementStopWhenHorizontalMovementCanceled = other.mySplitMovementStopWhenHorizontalMovementCanceled;\r\n        this.mySplitMovementStopWhenVerticalMovementCanceled = other.mySplitMovementStopWhenVerticalMovementCanceled;\r\n        this.mySplitMovementStopCallback = other.mySplitMovementStopCallback;\r\n        this.mySplitMovementStopReturnPrevious = other.mySplitMovementStopReturnPrevious;\r\n\r\n        this.myRadius = other.myRadius;\r\n        this.myDistanceFromFeetToIgnore = other.myDistanceFromFeetToIgnore;\r\n        this.myDistanceFromHeadToIgnore = other.myDistanceFromHeadToIgnore;\r\n\r\n        this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n        this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n        this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n        this.myHorizontalMovementStepEnabled = other.myHorizontalMovementStepEnabled;\r\n        this.myHorizontalMovementStepMaxLength = other.myHorizontalMovementStepMaxLength;\r\n        this.myHorizontalMovementRadialStepAmount = other.myHorizontalMovementRadialStepAmount;\r\n        this.myHorizontalMovementCheckDiagonalOutward = other.myHorizontalMovementCheckDiagonalOutward;\r\n        this.myHorizontalMovementCheckDiagonalInward = other.myHorizontalMovementCheckDiagonalInward;\r\n        this.myHorizontalMovementCheckStraight = other.myHorizontalMovementCheckStraight;\r\n        this.myHorizontalMovementCheckHorizontalBorder = other.myHorizontalMovementCheckHorizontalBorder;\r\n        this.myHorizontalMovementCheckVerticalStraight = other.myHorizontalMovementCheckVerticalStraight;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = other.myHorizontalMovementCheckVerticalDiagonalUpwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalUpwardInward = other.myHorizontalMovementCheckVerticalDiagonalUpwardInward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = other.myHorizontalMovementCheckVerticalDiagonalDownwardOutward;\r\n        this.myHorizontalMovementCheckVerticalDiagonalDownwardInward = other.myHorizontalMovementCheckVerticalDiagonalDownwardInward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalUpward = other.myHorizontalMovementCheckVerticalStraightDiagonalUpward;\r\n        this.myHorizontalMovementCheckVerticalStraightDiagonalDownward = other.myHorizontalMovementCheckVerticalStraightDiagonalDownward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward;\r\n        this.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = other.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n        this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n        this.myHalfConeAngle = other.myHalfConeAngle;\r\n        this.myHalfConeSliceAmount = other.myHalfConeSliceAmount;\r\n        this.myCheckConeBorder = other.myCheckConeBorder;\r\n        this.myCheckConeRay = other.myCheckConeRay;\r\n        this.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = other.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision;\r\n        this.myHorizontalPositionCheckVerticalDirectionType = other.myHorizontalPositionCheckVerticalDirectionType;\r\n\r\n        this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n        this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n        this.myFeetRadius = other.myFeetRadius;\r\n\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhill = other.myAdjustVerticalMovementWithGroundAngleDownhill;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphill = other.myAdjustVerticalMovementWithGroundAngleUphill;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle;\r\n        this.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = other.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhill = other.myAdjustHorizontalMovementWithGroundAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle;\r\n\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhill = other.myAdjustVerticalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphill = other.myAdjustVerticalMovementWithCeilingAngleUphill;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle;\r\n        this.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = other.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhill = other.myAdjustHorizontalMovementWithCeilingAngleDownhill;\r\n        this.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = other.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle;\r\n\r\n        this.myCheckVerticalFixedForwardEnabled = other.myCheckVerticalFixedForwardEnabled;\r\n        this.myCheckVerticalFixedForward.vec3_copy(other.myCheckVerticalFixedForward);\r\n        this.myCheckVerticalBothDirection = other.myCheckVerticalBothDirection;\r\n\r\n        this.mySnapOnGroundEnabled = other.mySnapOnGroundEnabled;\r\n        this.mySnapOnGroundExtraDistance = other.mySnapOnGroundExtraDistance;\r\n        this.mySnapOnCeilingEnabled = other.mySnapOnCeilingEnabled;\r\n        this.mySnapOnCeilingExtraDistance = other.mySnapOnCeilingExtraDistance;\r\n\r\n        this.myGroundPopOutEnabled = other.myGroundPopOutEnabled;\r\n        this.myGroundPopOutExtraDistance = other.myGroundPopOutExtraDistance;\r\n        this.myCeilingPopOutEnabled = other.myCeilingPopOutEnabled;\r\n        this.myCeilingPopOutExtraDistance = other.myCeilingPopOutExtraDistance;\r\n\r\n        this.myVerticalMovementReduceEnabled = other.myVerticalMovementReduceEnabled;\r\n\r\n        this.myGroundCircumferenceAddCenter = other.myGroundCircumferenceAddCenter;\r\n        this.myGroundCircumferenceSliceAmount = other.myGroundCircumferenceSliceAmount;\r\n        this.myGroundCircumferenceStepAmount = other.myGroundCircumferenceStepAmount;\r\n        this.myGroundCircumferenceRotationPerStep = other.myGroundCircumferenceRotationPerStep;\r\n        this.myVerticalAllowHitInsideCollisionIfOneOk = other.myVerticalAllowHitInsideCollisionIfOneOk;\r\n\r\n        this.myCheckHeight = other.myCheckHeight;\r\n        this.myCheckHeightVerticalMovement = other.myCheckHeightVerticalMovement;\r\n        this.myCheckHeightVerticalPosition = other.myCheckHeightVerticalPosition;\r\n        this.myCheckHeightTopMovement = other.myCheckHeightTopMovement;\r\n        this.myCheckHeightTopPosition = other.myCheckHeightTopPosition;\r\n        this.myCheckHeightConeOnCollision = other.myCheckHeightConeOnCollision;\r\n        this.myCheckHeightConeOnCollisionKeepHit = other.myCheckHeightConeOnCollisionKeepHit;\r\n        this.myHeightCheckStepAmountMovement = other.myHeightCheckStepAmountMovement;\r\n        this.myHeightCheckStepAmountPosition = other.myHeightCheckStepAmountPosition;\r\n        this.myCheckVerticalStraight = other.myCheckVerticalStraight;\r\n        this.myCheckVerticalDiagonalRayOutward = other.myCheckVerticalDiagonalRayOutward;\r\n        this.myCheckVerticalDiagonalRayInward = other.myCheckVerticalDiagonalRayInward;\r\n        this.myCheckVerticalDiagonalBorderOutward = other.myCheckVerticalDiagonalBorderOutward;\r\n        this.myCheckVerticalDiagonalBorderInward = other.myCheckVerticalDiagonalBorderInward;\r\n        this.myCheckVerticalDiagonalBorderRayOutward = other.myCheckVerticalDiagonalBorderRayOutward;\r\n        this.myCheckVerticalDiagonalBorderRayInward = other.myCheckVerticalDiagonalBorderRayInward;\r\n        this.myCheckVerticalSearchFartherVerticalHit = other.myCheckVerticalSearchFartherVerticalHit;\r\n\r\n        this.myGroundAngleToIgnore = other.myGroundAngleToIgnore;\r\n        this.myGroundAngleToIgnoreWithPerceivedAngle = other.myGroundAngleToIgnoreWithPerceivedAngle;\r\n        this.myCeilingAngleToIgnore = other.myCeilingAngleToIgnore;\r\n        this.myCeilingAngleToIgnoreWithPerceivedAngle = other.myCeilingAngleToIgnoreWithPerceivedAngle;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreHeight = other.myHorizontalMovementGroundAngleIgnoreHeight;\r\n        this.myHorizontalMovementCeilingAngleIgnoreHeight = other.myHorizontalMovementCeilingAngleIgnoreHeight;\r\n        this.myHorizontalPositionGroundAngleIgnoreHeight = other.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        this.myHorizontalPositionCeilingAngleIgnoreHeight = other.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n\r\n        this.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = other.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n        this.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = other.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n\r\n        this.myHeight = other.myHeight;\r\n\r\n        this.myComputeGroundInfoEnabled = other.myComputeGroundInfoEnabled;\r\n        this.myComputeCeilingInfoEnabled = other.myComputeCeilingInfoEnabled;\r\n        this.myDistanceToBeOnGround = other.myDistanceToBeOnGround;\r\n        this.myDistanceToComputeGroundInfo = other.myDistanceToComputeGroundInfo;\r\n        this.myDistanceToBeOnCeiling = other.myDistanceToBeOnCeiling;\r\n        this.myDistanceToComputeCeilingInfo = other.myDistanceToComputeCeilingInfo;\r\n        this.myVerticalFixToBeOnGround = other.myVerticalFixToBeOnGround;\r\n        this.myVerticalFixToComputeGroundInfo = other.myVerticalFixToComputeGroundInfo;\r\n        this.myVerticalFixToBeOnCeiling = other.myVerticalFixToBeOnCeiling;\r\n        this.myVerticalFixToComputeCeilingInfo = other.myVerticalFixToComputeCeilingInfo;\r\n        this.myGroundIsBaseInsideCollisionCheckEnabled = other.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        this.myCeilingIsBaseInsideCollisionCheckEnabled = other.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        this.myIsOnGroundIfInsideHit = other.myIsOnGroundIfInsideHit;\r\n        this.myIsOnCeilingIfInsideHit = other.myIsOnCeilingIfInsideHit;\r\n        this.myIsOnGroundMaxSurfaceAngle = other.myIsOnGroundMaxSurfaceAngle;\r\n        this.myIsOnCeilingMaxSurfaceAngle = other.myIsOnCeilingMaxSurfaceAngle;\r\n        this.myFindGroundDistanceMaxOutsideDistance = other.myFindGroundDistanceMaxOutsideDistance;\r\n        this.myFindGroundDistanceMaxInsideDistance = other.myFindGroundDistanceMaxInsideDistance;\r\n        this.myFindCeilingDistanceMaxOutsideDistance = other.myFindCeilingDistanceMaxOutsideDistance;\r\n        this.myFindCeilingDistanceMaxInsideDistance = other.myFindCeilingDistanceMaxInsideDistance;\r\n\r\n        this.myAllowGroundSteepFix = other.myAllowGroundSteepFix;\r\n        this.myAllowCeilingSteepFix = other.myAllowCeilingSteepFix;\r\n        this.myMustStayOnGround = other.myMustStayOnGround;\r\n        this.myMustStayOnCeiling = other.myMustStayOnCeiling;\r\n        this.myMustStayOnValidGroundAngleDownhill = other.myMustStayOnValidGroundAngleDownhill;\r\n        this.myMustStayOnValidCeilingAngleDownhill = other.myMustStayOnValidCeilingAngleDownhill;\r\n        this.myRegatherGroundInfoOnSurfaceCheckFail = other.myRegatherGroundInfoOnSurfaceCheckFail;\r\n        this.myRegatherCeilingInfoOnSurfaceCheckFail = other.myRegatherCeilingInfoOnSurfaceCheckFail;\r\n        this.myMustStayBelowGroundAngleDownhill = other.myMustStayBelowGroundAngleDownhill;\r\n        this.myMustStayBelowCeilingAngleDownhill = other.myMustStayBelowCeilingAngleDownhill;\r\n        this.myMustStayBelowIgnorableGroundAngleDownhill = other.myMustStayBelowIgnorableGroundAngleDownhill;\r\n        this.myMustStayBelowIgnorableCeilingAngleDownhill = other.myMustStayBelowIgnorableCeilingAngleDownhill;\r\n        this.myMovementMustStayOnGroundHitAngle = other.myMovementMustStayOnGroundHitAngle;\r\n        this.myMovementMustStayOnCeilingHitAngle = other.myMovementMustStayOnCeilingHitAngle;\r\n\r\n        this.myTeleportMustBeOnIgnorableGroundAngle = other.myTeleportMustBeOnIgnorableGroundAngle;\r\n        this.myCheckTransformMustBeOnIgnorableGroundAngle = other.myCheckTransformMustBeOnIgnorableGroundAngle;\r\n        this.myTeleportMustBeOnIgnorableCeilingAngle = other.myTeleportMustBeOnIgnorableCeilingAngle;\r\n        this.myCheckTransformMustBeOnIgnorableCeilingAngle = other.myCheckTransformMustBeOnIgnorableCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGroundAngle = other.myTeleportMustBeOnGroundAngle;\r\n        this.myCheckTransformMustBeOnGroundAngle = other.myCheckTransformMustBeOnGroundAngle;\r\n        this.myTeleportMustBeOnCeilingAngle = other.myTeleportMustBeOnCeilingAngle;\r\n        this.myCheckTransformMustBeOnCeilingAngle = other.myCheckTransformMustBeOnCeilingAngle;\r\n\r\n        this.myTeleportMustBeOnGround = other.myTeleportMustBeOnGround;\r\n        this.myCheckTransformMustBeOnGround = other.myCheckTransformMustBeOnGround;\r\n        this.myTeleportMustBeOnCeiling = other.myTeleportMustBeOnCeiling;\r\n        this.myCheckTransformMustBeOnCeiling = other.myCheckTransformMustBeOnCeiling;\r\n\r\n        this.mySlidingEnabled = other.mySlidingEnabled;\r\n        this.mySlidingHorizontalMovementCheckBetterNormal = other.mySlidingHorizontalMovementCheckBetterNormal;\r\n        this.mySlidingMaxAttempts = other.mySlidingMaxAttempts;\r\n        this.mySlidingCheckBothDirections = other.mySlidingCheckBothDirections;\r\n        this.mySlidingFlickeringPreventionType = other.mySlidingFlickeringPreventionType;\r\n        this.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = other.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n\r\n        this.mySlidingAdjustSign90Degrees = other.mySlidingAdjustSign90Degrees;\r\n\r\n        this.myHorizontalBlockLayerFlags.copy(other.myHorizontalBlockLayerFlags);\r\n        this.myHorizontalObjectsToIgnore.pp_copy(other.myHorizontalObjectsToIgnore);\r\n\r\n        this.myVerticalBlockLayerFlags.copy(other.myVerticalBlockLayerFlags);\r\n        this.myVerticalObjectsToIgnore.pp_copy(other.myVerticalObjectsToIgnore);\r\n\r\n        this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n        this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n        this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n\r\n        this.myDebugActive = other.myDebugActive;\r\n\r\n        this.myDebugHorizontalMovementActive = other.myDebugHorizontalMovementActive;\r\n        this.myDebugHorizontalPositionActive = other.myDebugHorizontalPositionActive;\r\n        this.myDebugVerticalMovementActive = other.myDebugVerticalMovementActive;\r\n        this.myDebugVerticalPositionActive = other.myDebugVerticalPositionActive;\r\n        this.myDebugSlidingActive = other.myDebugSlidingActive;\r\n        this.myDebugGroundInfoActive = other.myDebugGroundInfoActive;\r\n        this.myDebugCeilingInfoActive = other.myDebugCeilingInfoActive;\r\n        this.myDebugRuntimeParamsActive = other.myDebugRuntimeParamsActive;\r\n        this.myDebugMovementActive = other.myDebugMovementActive;\r\n    }\r\n};\r\n\r\nPP.CollisionRuntimeParams = class CollisionRuntimeParams {\r\n    constructor() {\r\n        this.myOriginalPosition = PP.vec3_create();\r\n        this.myNewPosition = PP.vec3_create();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward = PP.vec3_create();\r\n        this.myOriginalUp = PP.vec3_create();\r\n\r\n        this.myOriginalMovement = PP.vec3_create();\r\n        this.myFixedMovement = PP.vec3_create();\r\n\r\n        this.myLastValidOriginalHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidOriginalVerticalMovement = PP.vec3_create();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement = PP.vec3_create();\r\n        this.myLastValidEndHorizontalMovement = PP.vec3_create();\r\n        this.myLastValidEndVerticalMovement = PP.vec3_create();\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal = PP.vec3_create();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal = PP.vec3_create();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal = PP.vec3_create();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal = PP.vec3_create();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false; // could add HorizontalMovementCanceledReason\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit = new PP.RaycastHit();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit = new PP.RaycastHit();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit = new PP.RaycastHit();\r\n        this.mySlidingWallNormal = new PP.vec3_create();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement = PP.vec3_create();\r\n\r\n        this.myOriginalTeleportPosition = PP.vec3_create();\r\n        this.myFixedTeleportPosition = PP.vec3_create();\r\n\r\n        this.myOriginalPositionCheckPosition = PP.vec3_create();\r\n        this.myFixedPositionCheckPosition = PP.vec3_create();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false; // could be a single bool but not sure if there should be an option and don't want to create an enum for now\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked = PP.vec3_create();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    reset() {\r\n        this.myOriginalPosition.vec3_zero();\r\n        this.myNewPosition.vec3_zero();\r\n\r\n        this.myOriginalHeight = 0;\r\n\r\n        this.myOriginalForward.vec3_zero();\r\n        this.myOriginalUp.vec3_zero();\r\n\r\n        this.myOriginalMovement.vec3_zero();\r\n        this.myFixedMovement.vec3_zero();\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_zero();\r\n        this.myLastValidOriginalVerticalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_zero();\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_zero();\r\n        this.myLastValidEndHorizontalMovement.vec3_zero();\r\n        this.myLastValidEndVerticalMovement.vec3_zero();\r\n\r\n\r\n        this.myIsOnGround = false;\r\n        this.myGroundAngle = 0;\r\n        this.myGroundPerceivedAngle = 0;\r\n        this.myGroundNormal.vec3_zero();\r\n        this.myGroundHitMaxAngle = 0;\r\n        this.myGroundHitMaxNormal.vec3_zero();\r\n        this.myGroundDistance = null;\r\n        this.myGroundIsBaseInsideCollision = false;\r\n\r\n        this.myIsOnCeiling = false;\r\n        this.myCeilingAngle = 0;\r\n        this.myCeilingPerceivedAngle = 0;\r\n        this.myCeilingNormal.vec3_zero();\r\n        this.myCeilingHitMaxAngle = 0;\r\n        this.myCeilingHitMaxNormal.vec3_zero();\r\n        this.myCeilingDistance = null;\r\n        this.myCeilingIsBaseInsideCollision = false;\r\n\r\n        this.myHorizontalMovementCanceled = false;\r\n        this.myIsCollidingHorizontally = false;\r\n        this.myHorizontalCollisionHit.reset();\r\n\r\n        this.myVerticalMovementCanceled = false;\r\n        this.myIsCollidingVertically = false;\r\n        this.myVerticalCollisionHit.reset();\r\n\r\n        this.myHasSnappedOnGround = false;\r\n        this.myHasSnappedOnCeiling = false;\r\n        this.myHasPoppedOutGround = false;\r\n        this.myHasPoppedOutCeiling = false;\r\n        this.myHasReducedVerticalMovement = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = false;\r\n\r\n        this.myIsSliding = false;\r\n        this.myIsSlidingIntoOppositeDirection = false;\r\n        this.myIsSlidingFlickerPrevented = false;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = 0;\r\n        this.mySlidingMovementAngle = 0;\r\n        this.mySlidingCollisionAngle = 0;\r\n        this.mySlidingCollisionHit.reset();\r\n        this.mySliding90DegreesSign = 0;\r\n        this.mySlidingRecompute90DegreesSign = true;\r\n        this.myLastValidIsSliding = false;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_zero();\r\n        this.mySlidingWallNormal.vec3_zero();\r\n\r\n        this.myOriginalTeleportPosition.vec3_zero();\r\n        this.myFixedTeleportPosition.vec3_zero();\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_zero();\r\n        this.myFixedPositionCheckPosition.vec3_zero();\r\n\r\n        this.myTeleportCanceled = false;\r\n\r\n        this.myIsPositionOk = false;\r\n\r\n        this.myIsTeleport = false;\r\n        this.myIsMove = false;\r\n        this.myIsPositionCheck = false;\r\n        this.myIsPositionCheckAllowAdjustments = false;\r\n\r\n        this.mySplitMovementSteps = 0;\r\n        this.mySplitMovementStepsPerformed = 0;\r\n        this.mySplitMovementStop = false;\r\n        this.mySplitMovementMovementChecked.vec3_zero();\r\n\r\n        this.myRealIsOnGround = false;\r\n        this.myRealIsOnCeiling = false;\r\n    }\r\n\r\n    copy(other) {\r\n        this.myOriginalPosition.vec3_copy(other.myOriginalPosition);\r\n        this.myNewPosition.vec3_copy(other.myNewPosition);\r\n\r\n        this.myOriginalHeight = other.myOriginalHeight;\r\n\r\n        this.myOriginalForward.vec3_copy(other.myOriginalForward);\r\n        this.myOriginalUp.vec3_copy(other.myOriginalUp);\r\n\r\n        this.myOriginalMovement.vec3_copy(other.myOriginalMovement);\r\n        this.myFixedMovement.vec3_copy(other.myFixedMovement);\r\n\r\n        this.myLastValidOriginalHorizontalMovement.vec3_copy(other.myLastValidOriginalHorizontalMovement);\r\n        this.myLastValidOriginalVerticalMovement.vec3_copy(other.myLastValidOriginalVerticalMovement);\r\n        this.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(other.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        this.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(other.myLastValidSurfaceAdjustedVerticalMovement);\r\n        this.myLastValidEndHorizontalMovement.vec3_copy(other.myLastValidEndHorizontalMovement);\r\n        this.myLastValidEndVerticalMovement.vec3_copy(other.myLastValidEndVerticalMovement);\r\n\r\n        this.myIsOnGround = other.myIsOnGround;\r\n        this.myGroundAngle = other.myGroundAngle;\r\n        this.myGroundPerceivedAngle = other.myGroundPerceivedAngle;\r\n        this.myGroundNormal.vec3_copy(other.myGroundNormal);\r\n        this.myGroundHitMaxAngle = other.myGroundHitMaxAngle;\r\n        this.myGroundHitMaxNormal.vec3_copy(other.myGroundHitMaxNormal);\r\n        this.myGroundDistance = other.myGroundDistance;\r\n        this.myGroundIsBaseInsideCollision = other.myGroundIsBaseInsideCollision;\r\n\r\n        this.myIsOnCeiling = other.myIsOnCeiling;\r\n        this.myCeilingAngle = other.myCeilingAngle;\r\n        this.myCeilingPerceivedAngle = other.myCeilingPerceivedAngle;\r\n        this.myCeilingNormal.vec3_copy(other.myCeilingNormal);\r\n        this.myCeilingHitMaxAngle = other.myCeilingHitMaxAngle;\r\n        this.myCeilingHitMaxNormal.vec3_copy(other.myCeilingHitMaxNormal);\r\n        this.myCeilingDistance = other.myCeilingDistance;\r\n        this.myCeilingIsBaseInsideCollision = other.myCeilingIsBaseInsideCollision;\r\n\r\n        this.myHorizontalMovementCanceled = other.myHorizontalMovementCanceled;\r\n        this.myIsCollidingHorizontally = other.myIsCollidingHorizontally;\r\n        this.myHorizontalCollisionHit.copy(other.myHorizontalCollisionHit);\r\n\r\n        this.myVerticalMovementCanceled = other.myVerticalMovementCanceled;\r\n        this.myIsCollidingVertically = other.myIsCollidingVertically;\r\n        this.myVerticalCollisionHit.copy(other.myVerticalCollisionHit);\r\n\r\n        this.myHasSnappedOnGround = other.myHasSnappedOnGround;\r\n        this.myHasSnappedOnCeiling = other.myHasSnappedOnCeiling;\r\n        this.myHasPoppedOutGround = other.myHasPoppedOutGround;\r\n        this.myHasPoppedOutCeiling = other.myHasPoppedOutCeiling;\r\n        this.myHasReducedVerticalMovement = other.myHasReducedVerticalMovement;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n        this.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = other.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n        this.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = other.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n        this.myIsSliding = other.myIsSliding;\r\n        this.myIsSlidingIntoOppositeDirection = other.myIsSlidingIntoOppositeDirection;\r\n        this.myIsSlidingFlickerPrevented = other.myIsSlidingFlickerPrevented;\r\n        this.mySlidingFlickerPreventionCheckAnywayCounter = other.mySlidingFlickerPreventionCheckAnywayCounter;\r\n        this.mySlidingMovementAngle = other.mySlidingMovementAngle;\r\n        this.mySlidingCollisionAngle = other.mySlidingCollisionAngle;\r\n        this.mySlidingCollisionHit.copy(other.mySlidingCollisionHit);\r\n        this.mySliding90DegreesSign = other.mySliding90DegreesSign;\r\n        this.mySlidingRecompute90DegreesSign = other.mySlidingRecompute90DegreesSign;\r\n        this.myLastValidIsSliding = other.myLastValidIsSliding;\r\n        this.mySlidingPreviousHorizontalMovement.vec3_copy(other.mySlidingPreviousHorizontalMovement);\r\n        this.mySlidingWallNormal.vec3_copy(other.mySlidingWallNormal);\r\n\r\n        this.myOriginalTeleportPosition.vec3_copy(other.myOriginalTeleportPosition);\r\n        this.myFixedTeleportPosition.vec3_copy(other.myFixedTeleportPosition);\r\n        this.myTeleportCanceled = other.myTeleportCanceled;\r\n\r\n        this.myIsPositionOk = other.myIsPositionOk;\r\n\r\n        this.myOriginalPositionCheckPosition.vec3_copy(other.myOriginalPositionCheckPosition);\r\n        this.myFixedPositionCheckPosition.vec3_copy(other.myFixedPositionCheckPosition);\r\n\r\n        this.myIsTeleport = other.myIsTeleport;\r\n        this.myIsMove = other.myIsMove;\r\n        this.myIsPositionCheck = other.myIsPositionCheck;\r\n        this.myIsPositionCheckAllowAdjustments = other.myIsPositionCheckAllowAdjustments;\r\n\r\n        this.mySplitMovementSteps = other.mySplitMovementSteps;\r\n        this.mySplitMovementStepsPerformed = other.mySplitMovementStepsPerformed;\r\n        this.mySplitMovementStop = other.mySplitMovementStop;\r\n        this.mySplitMovementMovementChecked.vec3_copy(other.mySplitMovementMovementChecked);\r\n\r\n        this.myRealIsOnGround = other.myRealIsOnGround;\r\n        this.myRealIsOnCeiling = other.myRealIsOnCeiling;\r\n    }\r\n};", "PP.CollisionCheckUtils = {\r\n    generate360TeleportParamsFromMovementParams: function (movementParams, outTeleportParams = new PP.CollisionCheckParams()) {\r\n        outTeleportParams.copy(movementParams);\r\n\r\n        outTeleportParams.myHalfConeAngle = 180;\r\n        outTeleportParams.myHalfConeSliceAmount = Math.round((outTeleportParams.myHalfConeAngle / movementParams.myHalfConeAngle) * movementParams.myHalfConeSliceAmount);\r\n\r\n        outTeleportParams.myCheckHorizontalFixedForwardEnabled = true;\r\n        outTeleportParams.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        return outTeleportParams;\r\n    },\r\n};\r\n\r\nPP.CollisionCheck = class CollisionCheck {\r\n    constructor() {\r\n        this._myRaycastSetup = new PP.RaycastSetup();\r\n        this._myRaycastResult = new PP.RaycastResults();\r\n        this._myFixRaycastResult = new PP.RaycastResults();\r\n\r\n        this._myBackupRaycastHit = new PP.RaycastHit();\r\n\r\n        this._myPrevCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n        this._mySlidingCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myInternalSlidingCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._mySlidingFlickeringFixSlidingCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._mySlidingOnVerticalCheckCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n        this._myDebugActive = false;\r\n\r\n        this._myTotalRaycasts = 0;\r\n        this._myTotalRaycastsMax = 0;\r\n    }\r\n\r\n    move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    //#TODO add teleport position/transform and return originalteleportransform\r\n    // instead of position old transform / new transform\r\n    teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._teleport(position, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._positionCheck(allowFix, transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        this._updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams);\r\n    }\r\n\r\n    _debugMovement(movement, fixedMovement, feetPosition, up, collisionCheckParams) {\r\n        let originalHorizontalMovement = movement.vec3_removeComponentAlongAxis(up);\r\n\r\n        let horizontalMovement = fixedMovement.vec3_removeComponentAlongAxis(up);\r\n        let verticalMovement = fixedMovement.vec3_componentAlongAxis(up);\r\n\r\n        let feetPositionPlusOffset = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.001));\r\n\r\n        if (!originalHorizontalMovement.vec3_isZero()) {\r\n            originalHorizontalMovement.vec3_normalize(originalHorizontalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPositionPlusOffset, originalHorizontalMovement, 0.2, PP.vec4_create(0.5, 0.5, 1, 1));\r\n        }\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            horizontalMovement.vec3_normalize(horizontalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPositionPlusOffset, horizontalMovement, 0.2, PP.vec4_create(0, 0, 1, 1));\r\n        }\r\n\r\n        if (!verticalMovement.vec3_isZero()) {\r\n            verticalMovement.vec3_normalize(verticalMovement);\r\n\r\n            PP.myDebugVisualManager.drawArrow(0, feetPosition, verticalMovement, 0.2, PP.vec4_create(0, 0, 1, 1));\r\n        }\r\n    }\r\n\r\n    _debugRuntimeParams(collisionRuntimeParams) {\r\n        if (collisionRuntimeParams.myHorizontalCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myHorizontalCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.mySlidingCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myPosition,\r\n                collisionRuntimeParams.mySlidingCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n\r\n        if (collisionRuntimeParams.myVerticalCollisionHit.isValid()) {\r\n            PP.myDebugVisualManager.drawArrow(0,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myPosition,\r\n                collisionRuntimeParams.myVerticalCollisionHit.myNormal, 0.2, PP.vec4_create(1, 0, 0, 1));\r\n        }\r\n    }\r\n};\r\n\r\nPP.CollisionCheck.prototype._raycastAndDebug = function () {\r\n    let tempRaycastResult = new PP.RaycastResults();\r\n    return function _raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, isHorizontal, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myRaycastSetup.myOrigin.vec3_copy(origin);\r\n        this._myRaycastSetup.myDirection.vec3_copy(direction);\r\n        this._myRaycastSetup.myDistance = distance;\r\n\r\n        if (isHorizontal) {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myHorizontalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myHorizontalObjectsToIgnore;\r\n        } else {\r\n            this._myRaycastSetup.myBlockLayerFlags.copy(collisionCheckParams.myVerticalBlockLayerFlags);\r\n            this._myRaycastSetup.myObjectsToIgnore = collisionCheckParams.myVerticalObjectsToIgnore;\r\n        }\r\n\r\n        this._myRaycastSetup.myIgnoreHitsInsideCollision = ignoreHitsInsideCollision;\r\n\r\n        let raycastResult = null;\r\n        if (true) {\r\n            raycastResult = PP.PhysicsUtils.raycast(this._myRaycastSetup, this._myRaycastResult);\r\n        } else {\r\n            // quick debug to remove raycasts and/or let all raycasts fail\r\n\r\n            let raycastAlways = false;\r\n            if (raycastAlways || !this._myRaycastResult.isColliding()) {\r\n                raycastResult = PP.PhysicsUtils.raycast(this._myRaycastSetup, tempRaycastResult);\r\n            }\r\n\r\n            if (!this._myRaycastResult.isColliding() && tempRaycastResult.isColliding()) {\r\n                this._myRaycastResult.copy(tempRaycastResult);\r\n            }\r\n\r\n            raycastResult = this._myRaycastResult;\r\n        }\r\n\r\n\r\n        this._myTotalRaycasts++;\r\n        //raycastResult.myHits = [];\r\n\r\n        if (this._myDebugActive) {\r\n            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n        }\r\n\r\n        return raycastResult;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_raycastAndDebug\", { enumerable: false });\r\n\r\n", "PP.CollisionCheck.prototype._move = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let horizontalMovement = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let fixedMovementStep = PP.vec3_create();\r\n\r\n    let previousCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n    let previousFixedMovement = PP.vec3_create();\r\n    let previousMovementChecked = PP.vec3_create();\r\n    return function _move(movement, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        //return PP.vec3_create();\r\n        //movement = PP.vec3_create(0, 0, -1);\r\n\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        //feetPosition = feetPosition.vec3_add(horizontalMovement.vec3_normalize().vec3_scale(0.5));\r\n        //height = height / 2;\r\n        //horizontalMovement.vec3_normalize(horizontalMovement).vec3_scale(0.3, horizontalMovement); movement = horizontalMovement.vec3_add(verticalMovement);\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (!movement.vec3_isZero(0.00001) && collisionCheckParams.mySplitMovementEnabled) {\r\n            let equalStepLength = movement.vec3_length() / collisionCheckParams.mySplitMovementMaxSteps;\r\n            if (!collisionCheckParams.mySplitMovementStepEqualLength || equalStepLength < collisionCheckParams.mySplitMovementStepEqualLengthMinLength) {\r\n                let maxLength = collisionCheckParams.mySplitMovementStepEqualLength ? collisionCheckParams.mySplitMovementStepEqualLengthMinLength : collisionCheckParams.mySplitMovementMaxLength;\r\n                movementStepAmount = Math.ceil(movement.vec3_length() / maxLength);\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                    movementStepAmount = (collisionCheckParams.mySplitMovementMaxStepsEnabled) ? Math.min(movementStepAmount, collisionCheckParams.mySplitMovementMaxSteps) : movementStepAmount;\r\n                }\r\n\r\n                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                if (movementStepAmount == 1) {\r\n                    movementStep.vec3_copy(movement);\r\n                }\r\n            } else {\r\n                movementStepAmount = collisionCheckParams.mySplitMovementMaxSteps;\r\n                if (movementStepAmount > 1) {\r\n                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                }\r\n            }\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        movementChecked.vec3_zero();\r\n\r\n        previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        previousFixedMovement.vec3_copy(fixedMovement);\r\n        previousMovementChecked.vec3_copy(movementChecked);\r\n\r\n        let stepsPerformed = 0;\r\n        let splitMovementStop = false;\r\n        for (let i = 0; i < movementStepAmount; i++) {\r\n            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                currentMovementStep.vec3_copy(movementStep);\r\n            } else {\r\n                currentMovementStep = movement.vec3_sub(movementChecked, currentMovementStep);\r\n            }\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n            fixedMovementStep.vec3_zero();\r\n            fixedMovementStep = this._moveStep(currentMovementStep, newFeetPosition, transformUp, transformForward, height, true, collisionCheckParams, collisionRuntimeParams, fixedMovementStep);\r\n            fixedMovement.vec3_add(fixedMovementStep, fixedMovement);\r\n\r\n            movementChecked = movementChecked.vec3_add(movementStep, movementChecked);\r\n\r\n            stepsPerformed = i + 1;\r\n\r\n            if ((collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled) ||\r\n                (collisionRuntimeParams.myHorizontalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled) ||\r\n                (collisionRuntimeParams.myVerticalMovementCanceled && collisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled) ||\r\n                (collisionCheckParams.mySplitMovementStopCallback != null && collisionCheckParams.mySplitMovementStopCallback(collisionRuntimeParams))) {\r\n                if (collisionCheckParams.mySplitMovementStopReturnPrevious) {\r\n                    collisionRuntimeParams.copy(previousCollisionRuntimeParams);\r\n                    fixedMovement.vec3_copy(previousFixedMovement);\r\n                    movementChecked.vec3_copy(previousMovementChecked);\r\n                    stepsPerformed -= 1;\r\n                }\r\n\r\n                splitMovementStop = true;\r\n                break;\r\n            }\r\n\r\n            previousCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            previousFixedMovement.vec3_copy(fixedMovement);\r\n            previousMovementChecked.vec3_copy(movementChecked);\r\n        }\r\n\r\n        //fixedMovement.vec3_zero();\r\n\r\n        collisionRuntimeParams.mySplitMovementSteps = movementStepAmount;\r\n        collisionRuntimeParams.mySplitMovementStepsPerformed = stepsPerformed;\r\n        collisionRuntimeParams.mySplitMovementStop = splitMovementStop;\r\n        collisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(movementChecked);\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        //console.error(collisionRuntimeParams.myOriginalPosition.vec3_sub(feetPosition)[1].toFixed(3));\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalMovement.vec3_copy(movement);\r\n        collisionRuntimeParams.myFixedMovement.vec3_copy(fixedMovement);\r\n\r\n        collisionRuntimeParams.myNewPosition = collisionRuntimeParams.myOriginalPosition.vec3_add(collisionRuntimeParams.myFixedMovement, collisionRuntimeParams.myNewPosition);\r\n\r\n        collisionRuntimeParams.myIsMove = true;\r\n\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n\r\n        //this._myTotalRaycastsMax = Math.max(this._myTotalRaycasts, this._myTotalRaycastsMax);\r\n        //console.error(this._myTotalRaycastsMax);\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._moveStep = function () {\r\n    let horizontalMovement = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let fixedHorizontalMovement = PP.vec3_create();\r\n    let fixedVerticalMovement = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let forwardForHorizontal = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let surfaceAdjustedVerticalMovement = PP.vec3_create();\r\n    let surfaceAdjustedHorizontalMovement = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _moveStep(movement, feetPosition, transformUp, transformForward, height, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        // #TODO refactor and split horizontal check and vertical check into: hMovement + vMovement + hPosition + vPosition?\r\n        // Will make the sliding heavier, if I slide repeating all the 4 steps instead of 2 as now, but would be more correct\r\n\r\n        // #TODO when on high slopes where u are not allowed to move the check does not manage to slide\r\n\r\n        // #TODO when moving upward on the edge of a slope, the edge can be detected as a wall and prevent movement, while it should just keep moving\r\n\r\n        horizontalMovement = movement.vec3_removeComponentAlongAxis(transformUp, horizontalMovement);\r\n        if (horizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalMovement.vec3_zero();\r\n        }\r\n\r\n        verticalMovement = movement.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n        if (verticalMovement.vec3_isZero(0.000001)) {\r\n            verticalMovement.vec3_zero();\r\n        }\r\n\r\n        if (horizontalMovement.vec3_isZero()) {\r\n            //return PP.vec3_create();\r\n        }\r\n\r\n        //this._myTotalRaycasts = 0;\r\n        //collisionCheckParams.myDebugActive = true;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        surfaceAdjustedHorizontalMovement = this._adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedHorizontalMovement);\r\n        if (surfaceAdjustedHorizontalMovement.vec3_isZero(0.00001)) {\r\n            surfaceAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        this._syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n        {\r\n            forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForHorizontal = horizontalMovement.vec3_normalize(forwardForHorizontal);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(transformForward);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForHorizontal.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForHorizontal.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n                forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n                if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                    forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n                }\r\n            }\r\n\r\n            fixedHorizontalMovement.vec3_zero();\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                fixedHorizontalMovement = this._horizontalCheck(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n                //console.error(this._myTotalRaycasts );\r\n                //collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                //collisionRuntimeParams.myHorizontalCollisionHit.myNormal = PP.vec3_create(0, 0, 1);\r\n                if (collisionCheckParams.mySlidingEnabled && collisionRuntimeParams.myIsCollidingHorizontally && this._isSlidingNormalValid(surfaceAdjustedHorizontalMovement, transformUp, collisionRuntimeParams)) {\r\n                    fixedHorizontalMovement = this._horizontalSlide(surfaceAdjustedHorizontalMovement, feetPosition, height, transformUp, forwardForHorizontal, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, fixedHorizontalMovement);\r\n                } else {\r\n                    //console.error(\"no slide\");\r\n                }\r\n            }\r\n\r\n            if (fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                fixedHorizontalMovement.vec3_zero();\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && fixedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            }\r\n        }\r\n\r\n        {\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (fixedHorizontalMovement.vec3_isZero()) {\r\n                    if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else if (!horizontalMovement.vec3_isZero()) {\r\n                        forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(transformForward);\r\n                    }\r\n                } else {\r\n                    forwardForVertical = fixedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            //console.error(this._myTotalRaycasts );\r\n            // collisionCheckParams.myDebugActive = false;\r\n\r\n            surfaceAdjustedVerticalMovement = this._adjustVerticalMovementWithSurface(fixedHorizontalMovement, verticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, surfaceAdjustedVerticalMovement);\r\n\r\n            newFeetPosition = feetPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n            let originalMovementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(transformUp), 0);\r\n\r\n            fixedVerticalMovement.vec3_zero();\r\n            fixedVerticalMovement = this._verticalCheck(surfaceAdjustedVerticalMovement, originalMovementSign, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n\r\n            if (fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                fixedVerticalMovement.vec3_zero();\r\n            }\r\n        }\r\n\r\n        //console.error(this._myTotalRaycasts );\r\n        outFixedMovement.vec3_zero();\r\n        if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n            outFixedMovement = fixedHorizontalMovement.vec3_add(fixedVerticalMovement, outFixedMovement);\r\n        } else {\r\n            collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n            collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n            fixedHorizontalMovement.vec3_zero();\r\n            fixedVerticalMovement.vec3_zero();\r\n\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForVertical = horizontalMovement.vec3_normalize(forwardForVertical);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(transformForward);\r\n                }\r\n            }\r\n        }\r\n\r\n        newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        if (!fixedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = fixedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        } else if (!horizontalMovement.vec3_isZero()) {\r\n            forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (!surfaceAdjustedHorizontalMovement.vec3_isZero() && !collisionRuntimeParams.myHorizontalMovementCanceled) {\r\n            let surfaceCheckOk = this._postSurfaceCheck(fixedHorizontalMovement, fixedVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams);\r\n\r\n            if (!surfaceCheckOk) {\r\n                collisionRuntimeParams.myHorizontalMovementCanceled = true;\r\n                collisionRuntimeParams.myVerticalMovementCanceled = true;\r\n                fixedHorizontalMovement.vec3_zero();\r\n                fixedVerticalMovement.vec3_zero();\r\n                outFixedMovement.vec3_zero();\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n\r\n                if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = surfaceAdjustedHorizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else if (!horizontalMovement.vec3_isZero()) {\r\n                    forwardForPerceivedAngle = horizontalMovement.vec3_normalize(forwardForPerceivedAngle);\r\n                } else {\r\n                    forwardForPerceivedAngle.vec3_copy(transformForward);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                    collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                    collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                    collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                } else {\r\n                    collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                    collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                    collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                    collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                }\r\n            }\r\n        }\r\n\r\n        //return outFixedMovement.vec3_zero();        \r\n\r\n        if (collisionCheckParams.myExtraMovementCheckCallback != null) {\r\n            fixedMovement.vec3_copy(outFixedMovement);\r\n            outFixedMovement = collisionCheckParams.myExtraMovementCheckCallback(\r\n                movement, fixedMovement, feetPosition, transformUp, transformForward, height,\r\n                collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            fixedHorizontalMovement = outFixedMovement.vec3_removeComponentAlongAxis(transformUp, fixedHorizontalMovement);\r\n            fixedVerticalMovement = outFixedMovement.vec3_componentAlongAxis(transformUp, fixedVerticalMovement);\r\n        }\r\n\r\n        {\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myIsSliding && !fixedHorizontalMovement.vec3_isZero()) {\r\n                    /* let angleWithPreviousThreshold = 0.5;\r\n                    check use surfaceAdjustedHorizontalMovement instead of horizontalMovement if reenable this\r\n                    if (!this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_isZero() && !horizontalMovement.vec3_isZero() &&\r\n                        horizontalMovement.vec3_angle(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement) > angleWithPreviousThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = horizontalMovement.vec3_signTo(this._myPrevCollisionRuntimeParams.myLastValidOriginalHorizontalMovement, transformUp);\r\n                        console.error(\"sp\", collisionRuntimeParams.mySliding90DegreesSign, collisionRuntimeParams.myIsSliding);\r\n                    } */\r\n                    collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                    //console.error(\"empty renew\");\r\n                }\r\n            }\r\n\r\n            if (!horizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(horizontalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedHorizontalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(surfaceAdjustedHorizontalMovement);\r\n            }\r\n\r\n            if (!verticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(verticalMovement);\r\n            }\r\n\r\n            if (!surfaceAdjustedVerticalMovement.vec3_isZero()) {\r\n                collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(surfaceAdjustedVerticalMovement);\r\n            }\r\n\r\n            if (!fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidIsSliding = collisionRuntimeParams.myIsSliding;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = false;\r\n                collisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(fixedHorizontalMovement);\r\n                //fixedHorizontalMovement.vec3_error();\r\n\r\n                if (!collisionRuntimeParams.myIsSliding) {\r\n                    //console.error(\"not sliding\");\r\n                } else {\r\n                    //console.error(\"sliding\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n                }\r\n            } else {\r\n                //console.error(\"still\", collisionRuntimeParams.myIsSlidingFlickerPrevented, collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            if (!fixedVerticalMovement.vec3_isZero(0.000001)) {\r\n                collisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(fixedVerticalMovement);\r\n            }\r\n        }\r\n\r\n        let moveStepFixed = false;\r\n        if (!collisionRuntimeParams.myHorizontalMovementCanceled && !fixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n            let surfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, this._myPrevCollisionRuntimeParams);\r\n            if (surfaceTooSteepResults[0] || surfaceTooSteepResults[1]) {\r\n                horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n                let newSurfaceTooSteepResults = this._surfaceTooSteep(transformUp, horizontalDirection, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if ((surfaceTooSteepResults[0] && newSurfaceTooSteepResults[0]) ||\r\n                    (surfaceTooSteepResults[1] && newSurfaceTooSteepResults[1]) ||\r\n                    !allowSurfaceSteepFix ||\r\n                    (surfaceTooSteepResults[0] && !collisionCheckParams.myAllowGroundSteepFix) ||\r\n                    (surfaceTooSteepResults[1] && !collisionCheckParams.myAllowCeilingSteepFix)) {\r\n                    outFixedMovement.vec3_zero();\r\n                    collisionRuntimeParams.copy(this._myPrevCollisionRuntimeParams);\r\n                    this._moveStep(movement, feetPosition, transformUp, transformForward, height, false, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n                    moveStepFixed = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!moveStepFixed) {\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugMovementActive) {\r\n                this._debugMovement(movement, outFixedMovement, newFeetPosition, transformUp, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n                this._debugRuntimeParams(collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._syncCollisionRuntimeParamsWithPrevious = function () {\r\n    let previousFixedHorizontalMovement = PP.vec3_create();\r\n    return function _syncCollisionRuntimeParamsWithPrevious(surfaceAdjustedHorizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        collisionRuntimeParams.myIsSlidingFlickerPrevented = previousCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        //console.error(\"prevented\", collisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n\r\n        collisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n        collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n        collisionRuntimeParams.myLastValidIsSliding = previousCollisionRuntimeParams.myLastValidIsSliding;\r\n\r\n        collisionRuntimeParams.mySliding90DegreesSign = previousCollisionRuntimeParams.mySliding90DegreesSign;\r\n        collisionRuntimeParams.mySlidingRecompute90DegreesSign = previousCollisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n        if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n            let angleWithPreviousThreshold = 0.5;\r\n            if (!previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_isZero() && !surfaceAdjustedHorizontalMovement.vec3_isZero() &&\r\n                surfaceAdjustedHorizontalMovement.vec3_angle(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement) > angleWithPreviousThreshold) {\r\n                //previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n                if (!previousCollisionRuntimeParams.myLastValidIsSliding) {\r\n                    let angleSigned = surfaceAdjustedHorizontalMovement.vec3_angleSigned(previousCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement, up);\r\n                    let angleSignedThreshold = 10;\r\n                    if (Math.abs(angleSigned) < 180 - angleSignedThreshold) {\r\n                        collisionRuntimeParams.mySliding90DegreesSign = Math.pp_sign(angleSigned);\r\n                        //console.error(\"special sign\");\r\n                    }\r\n                }\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = true;\r\n                //console.error(\"direction new\");\r\n            }\r\n        }\r\n\r\n        previousFixedHorizontalMovement = previousCollisionRuntimeParams.myFixedMovement.vec3_removeComponentAlongAxis(up, previousFixedHorizontalMovement);\r\n        if (previousFixedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousCollisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        } else {\r\n            collisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(previousFixedHorizontalMovement);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_move\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_moveStep\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_syncCollisionRuntimeParamsWithPrevious\", { enumerable: false });", "PP.CollisionCheck.prototype._teleport = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let originalFeetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let feetPositionOffsetToOriginal = PP.vec3_create();\r\n    let offsetTeleportPosition = PP.vec3_create();\r\n\r\n    let zero = PP.vec3_create();\r\n    let forwardForHorizontal = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let fixedHorizontalMovement = PP.vec3_create();\r\n    let fixedVerticalMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _teleport(teleportPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, isPositionCheck = false) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        offsetTeleportPosition.vec3_copy(teleportPosition);\r\n        originalFeetPosition = transformQuat.quat2_getPosition(originalFeetPosition);\r\n        feetPositionOffsetToOriginal = originalFeetPosition.vec3_sub(feetPosition, feetPositionOffsetToOriginal);\r\n        if (feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n            feetPositionOffsetToOriginal.vec3_zero();\r\n        } else {\r\n            offsetTeleportPosition = offsetTeleportPosition.vec3_sub(feetPositionOffsetToOriginal, offsetTeleportPosition);\r\n        }\r\n\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n        //height = 1.75;\r\n\r\n        this._myPrevCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        collisionRuntimeParams.reset();\r\n\r\n        forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n        if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n            forwardForHorizontal.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckHorizontalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForHorizontal.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForHorizontal.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForHorizontal = forwardForHorizontal.vec3_removeComponentAlongAxis(transformUp, forwardForHorizontal);\r\n            forwardForHorizontal = forwardForHorizontal.vec3_normalize(forwardForHorizontal);\r\n\r\n            if (forwardForHorizontal.vec_equals(collisionCheckParams.myCheckHorizontalFixedForward, 0.00001)) {\r\n                forwardForHorizontal.vec3_copy(collisionCheckParams.myCheckHorizontalFixedForward);\r\n            }\r\n        }\r\n\r\n        fixedHorizontalMovement = this._horizontalCheck(zero, offsetTeleportPosition, height, transformUp, forwardForHorizontal, false, collisionCheckParams, collisionRuntimeParams, this._myPrevCollisionRuntimeParams, false, fixedHorizontalMovement);\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n            newFeetPosition = offsetTeleportPosition.vec3_add(fixedHorizontalMovement, newFeetPosition);\r\n\r\n            forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n                forwardForVertical.vec3_copy(transformForward);\r\n            } else {\r\n                if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                    if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                        forwardForVertical.vec3_copy(xAxis);\r\n                    } else {\r\n                        forwardForVertical.vec3_copy(zAxis);\r\n                    }\r\n                }\r\n\r\n                forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n                forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n                if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                    forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n                }\r\n            }\r\n\r\n            let downward = -1;\r\n            fixedVerticalMovement = this._verticalCheck(zero, downward, newFeetPosition, height, transformUp, forwardForVertical, collisionCheckParams, collisionRuntimeParams, fixedVerticalMovement);\r\n            if (!collisionRuntimeParams.myIsCollidingVertically) {\r\n                newFeetPosition = newFeetPosition.vec3_add(fixedVerticalMovement, newFeetPosition);\r\n\r\n                forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n                if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n                    this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnGround) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnGround && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnGround && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (!collisionRuntimeParams.myIsOnCeiling) {\r\n                    if ((collisionCheckParams.myTeleportMustBeOnCeiling && !isPositionCheck)\r\n                        || (collisionCheckParams.myCheckTransformMustBeOnCeiling && isPositionCheck)) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnGroundAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle) {\r\n                            minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnGroundAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnGroundAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myIsOnCeiling) {\r\n                    let minAngle = null;\r\n                    if (!isPositionCheck) {\r\n                        if (collisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myTeleportMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myTeleportMustBeOnCeilingAngle);\r\n                        }\r\n                    } else {\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle) {\r\n                            minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckTransformMustBeOnCeilingAngle != null) {\r\n                            minAngle = Math.min(minAngle, collisionCheckParams.myCheckTransformMustBeOnCeilingAngle);\r\n                        }\r\n                    }\r\n\r\n                    if (minAngle != null && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                        collisionRuntimeParams.myTeleportCanceled = true;\r\n                    }\r\n                }\r\n\r\n                if (collisionRuntimeParams.myTeleportCanceled) {\r\n                    if (collisionCheckParams.myComputeGroundInfoEnabled && collisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnGround = this._myPrevCollisionRuntimeParams.myIsOnGround;\r\n                        collisionRuntimeParams.myGroundAngle = this._myPrevCollisionRuntimeParams.myGroundAngle;\r\n                        collisionRuntimeParams.myGroundPerceivedAngle = this._myPrevCollisionRuntimeParams.myGroundPerceivedAngle;\r\n                        collisionRuntimeParams.myGroundNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myGroundNormal);\r\n                    }\r\n\r\n                    if (collisionCheckParams.myComputeCeilingInfoEnabled && collisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail) {\r\n                        this._gatherSurfaceInfo(newFeetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n                    } else {\r\n                        collisionRuntimeParams.myIsOnCeiling = this._myPrevCollisionRuntimeParams.myIsOnCeiling;\r\n                        collisionRuntimeParams.myCeilingAngle = this._myPrevCollisionRuntimeParams.myCeilingAngle;\r\n                        collisionRuntimeParams.myCeilingPerceivedAngle = this._myPrevCollisionRuntimeParams.myCeilingPerceivedAngle;\r\n                        collisionRuntimeParams.myCeilingNormal.vec3_copy(this._myPrevCollisionRuntimeParams.myCeilingNormal);\r\n                    }\r\n                }\r\n\r\n                //regather surface if invalid else use before\r\n            } else {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myTeleportCanceled = true;\r\n        }\r\n\r\n        if (!isPositionCheck) {\r\n            if (collisionCheckParams.myExtraTeleportCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraTeleportCheckCallback(\r\n                    offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        } else {\r\n            if (collisionCheckParams.myExtraCheckTransformCheckCallback != null) {\r\n                endPosition.vec3_copy(newFeetPosition);\r\n                newFeetPosition = collisionCheckParams.myExtraCheckTransformCheckCallback(\r\n                    endPosition, feetPosition, transformUp, transformForward, height,\r\n                    collisionCheckParams, this._myPrevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition);\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalUp = transformQuat.quat2_getUp(collisionRuntimeParams.myOriginalUp);\r\n        collisionRuntimeParams.myOriginalForward = transformQuat.quat2_getForward(collisionRuntimeParams.myOriginalForward);\r\n        collisionRuntimeParams.myOriginalPosition = transformQuat.quat2_getPosition(collisionRuntimeParams.myOriginalPosition);\r\n\r\n        collisionRuntimeParams.myOriginalHeight = collisionCheckParams.myHeight;\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(teleportPosition);\r\n\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            collisionRuntimeParams.myFixedTeleportPosition.vec3_copy(newFeetPosition);\r\n            if (!feetPositionOffsetToOriginal.vec3_isZero(0.00001)) {\r\n                collisionRuntimeParams.myFixedTeleportPosition = collisionRuntimeParams.myFixedTeleportPosition.vec3_add(feetPositionOffsetToOriginal, collisionRuntimeParams.myFixedTeleportPosition);\r\n            }\r\n\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        } else {\r\n            collisionRuntimeParams.myNewPosition.vec3_copy(collisionRuntimeParams.myOriginalPosition);\r\n        }\r\n\r\n        collisionRuntimeParams.myIsTeleport = true;\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugRuntimeParamsActive) {\r\n            this._debugRuntimeParams(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_teleport\", { enumerable: false });\r\n", "PP.CollisionCheck.prototype._positionCheck = function () {\r\n    let feetPosition = PP.vec3_create();\r\n    return function _positionCheck(allowAdjustments, transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        feetPosition = transformQuat.quat2_getPosition(feetPosition);\r\n\r\n        this._teleport(feetPosition, transformQuat, collisionCheckParams, collisionRuntimeParams, true);\r\n\r\n        collisionRuntimeParams.myIsPositionOk = !collisionRuntimeParams.myTeleportCanceled;\r\n        collisionRuntimeParams.myIsPositionCheck = true;\r\n        collisionRuntimeParams.myOriginalPositionCheckPosition.vec3_copy(collisionRuntimeParams.myOriginalTeleportPosition);\r\n        collisionRuntimeParams.myFixedPositionCheckPosition.vec3_copy(collisionRuntimeParams.myFixedTeleportPosition);\r\n        collisionRuntimeParams.myIsPositionCheckAllowAdjustments = allowAdjustments;\r\n\r\n        if (!allowAdjustments) {\r\n            collisionRuntimeParams.myIsPositionOk = collisionRuntimeParams.myIsPositionOk &&\r\n                collisionRuntimeParams.myOriginalPositionCheckPosition.vec_equals(collisionRuntimeParams.myFixedPositionCheckPosition, 0.00001);\r\n        }\r\n\r\n        collisionRuntimeParams.myOriginalTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myFixedTeleportPosition.vec3_zero();\r\n        collisionRuntimeParams.myTeleportCanceled = false;\r\n        collisionRuntimeParams.myIsTeleport = false;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_positionCheck\", { enumerable: false });\r\n", "PP.CollisionCheck.prototype._horizontalCheck = function () {\r\n    let fixedFeetPosition = PP.vec3_create();\r\n    let newFixedFeetPosition = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _horizontalCheck(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, avoidSlidingExtraCheck, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n        outFixedMovement.vec3_zero();\r\n\r\n        horizontalDirection = movement.vec3_normalize(horizontalDirection);\r\n        let surfaceTooSteepResults = this._surfaceTooSteep(up, horizontalDirection, collisionCheckParams, previousCollisionRuntimeParams);\r\n        if (movement.vec3_isZero(0.000001) ||\r\n            ((!surfaceTooSteepResults[0] || (allowSurfaceSteepFix && collisionCheckParams.myAllowGroundSteepFix)) &&\r\n                (!surfaceTooSteepResults[1] || (allowSurfaceSteepFix && collisionCheckParams.myAllowCeilingSteepFix)))) {\r\n            fixedFeetPosition = feetPosition.vec3_add(up.vec3_scale(collisionCheckParams.myDistanceFromFeetToIgnore + 0.0001, fixedFeetPosition), fixedFeetPosition);\r\n            let fixedHeight = Math.max(0, height - collisionCheckParams.myDistanceFromFeetToIgnore - collisionCheckParams.myDistanceFromHeadToIgnore - 0.0001 * 2);\r\n\r\n            let canMove = true;\r\n            if (collisionCheckParams.myHorizontalMovementCheckEnabled && !movement.vec3_isZero(0.000001)) {\r\n                canMove = this._horizontalMovementCheck(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n\r\n            if (canMove) {\r\n                if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n                    newFixedFeetPosition = fixedFeetPosition.vec3_add(movement, newFixedFeetPosition);\r\n                    newFeetPosition = feetPosition.vec3_add(movement, newFeetPosition);\r\n                    let canStay = this._horizontalPositionCheck(newFeetPosition, height, newFixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n                    if (canStay) {\r\n                        outFixedMovement.vec3_copy(movement);\r\n                    }\r\n\r\n                    if (outFixedMovement.vec3_isZero(0.000001)) {\r\n                        outFixedMovement.vec3_zero();\r\n                    }\r\n                } else {\r\n                    outFixedMovement.vec3_copy(movement);\r\n                }\r\n            } else if (!avoidSlidingExtraCheck && collisionCheckParams.mySlidingEnabled && collisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal) {\r\n                this._horizontalCheckBetterSlideNormal(movement, feetPosition, height, fixedFeetPosition, fixedHeight, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalCheckRaycast = function () {\r\n    let direction = PP.vec3_create();\r\n    let fixedFeetPosition = PP.vec3_create();\r\n    let fixedHitPosition = PP.vec3_create();\r\n    return function _horizontalCheckRaycast(startPosition, endPosition, movementDirection, up,\r\n        ignoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n        feetPosition, fixHitOnCollision,\r\n        collisionCheckParams, collisionRuntimeParams, checkAllHits = false, ignoreHitsInsideCollisionIfObjectToIgnore = false) {\r\n\r\n        let origin = startPosition;\r\n        direction = endPosition.vec3_sub(origin, direction);\r\n\r\n        if (movementDirection != null && !direction.vec3_isConcordant(movementDirection)) {\r\n            direction.vec3_negate(direction);\r\n            origin = endPosition;\r\n        }\r\n\r\n        let distance = direction.vec3_length();\r\n        direction.vec3_normalize(direction);\r\n        let raycastResult = this._raycastAndDebug(origin, direction, distance, ignoreHitsInsideCollision, true, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isOk = true;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hitsToControl = checkAllHits ? raycastResult.myHits.length : 1;\r\n            let validHitIndex = 0;\r\n            for (let i = 0; i < hitsToControl; i++) {\r\n                let hit = raycastResult.myHits[i];\r\n                if ((ignoreGroundAngleCallback == null || !ignoreGroundAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore)) &&\r\n                    (ignoreCeilingAngleCallback == null || !ignoreCeilingAngleCallback(hit, ignoreHitsInsideCollisionIfObjectToIgnore))) {\r\n                    isOk = false;\r\n                    validHitIndex = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!isOk && validHitIndex > 0) {\r\n                for (let i = 0; i < validHitIndex; i++) {\r\n                    raycastResult.removeHit(0);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isOk && fixHitOnCollision) {\r\n            let hitPosition = raycastResult.myHits[0].myPosition;\r\n\r\n            fixedFeetPosition = feetPosition.vec3_copyComponentAlongAxis(hitPosition, up, fixedFeetPosition);\r\n            fixedHitPosition.vec3_copy(hitPosition);\r\n\r\n            let directionOffsetEpsilonValue = 0.0001;\r\n            direction = direction.vec3_componentAlongAxis(up, direction);\r\n            if (!direction.vec3_isZero(0.000001)) {\r\n                // if the check has an up part move the hit a bit on the that direction\r\n                direction.vec3_normalize(direction);\r\n                direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n\r\n                // this offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                fixedFeetPosition.vec3_add(direction, fixedFeetPosition);\r\n                fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n            }\r\n\r\n            // move the hit a bit further to prevent miss\r\n            direction = fixedHitPosition.vec3_sub(fixedFeetPosition, direction);\r\n            direction.vec3_normalize(direction);\r\n            direction.vec3_scale(directionOffsetEpsilonValue, direction);\r\n            fixedHitPosition = fixedHitPosition.vec3_add(direction, fixedHitPosition);\r\n\r\n            let swapRaycastResult = this._myRaycastResult;\r\n            this._myRaycastResult = this._myFixRaycastResult;\r\n\r\n            isOk = this._horizontalCheckRaycast(fixedFeetPosition, fixedHitPosition, null, up,\r\n                false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                feetPosition, false,\r\n                collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (this._myRaycastResult.isColliding()) {\r\n                this._myFixRaycastResult = swapRaycastResult;\r\n            } else {\r\n                isOk = false;\r\n                this._myRaycastResult = swapRaycastResult;\r\n            }\r\n        }\r\n\r\n        return isOk;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._ignoreSurfaceAngle = function () {\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = PP.vec3_create();\r\n    let hitDirection = PP.vec3_create();\r\n    let hitMovement = PP.vec3_create();\r\n    let projectAlongAxis = PP.vec3_create();\r\n    return function _ignoreSurfaceAngle(feetPosition, height, movementOrForward, objectsToIgnore, outIgnoredObjects, isGround, isMovementCheck, up, collisionCheckParams, hit, ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n        let isIgnorable = false;\r\n\r\n        let surfaceIgnoreHeight = null;\r\n        let groundIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight;\r\n        let ceilingIgnoreHeight = isMovementCheck ? collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight : collisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight;\r\n        if (isGround && groundIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(groundIgnoreHeight + 0.0002, 0, height);\r\n        } else if (!isGround && ceilingIgnoreHeight != null) {\r\n            surfaceIgnoreHeight = Math.pp_clamp(height - ceilingIgnoreHeight - 0.0002, 0, height);\r\n        }\r\n\r\n        let surfaceIgnoreMaxMovementLeft = null;\r\n        if (isMovementCheck) {\r\n            if (isGround && collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft;\r\n            } else if (!isGround && collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft != null) {\r\n                surfaceIgnoreMaxMovementLeft = collisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft;\r\n            }\r\n        }\r\n\r\n        if (!hit.myIsInsideCollision) {\r\n            movementDirection = movementOrForward.vec3_normalize(movementDirection);\r\n\r\n            let surfaceAngle = hit.myNormal.vec3_angle(up);\r\n            if (!isGround) {\r\n                surfaceAngle = 180 - surfaceAngle;\r\n            }\r\n\r\n            if (isGround && collisionCheckParams.myGroundAngleToIgnore > 0 && (surfaceAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001)) {\r\n                if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, true);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            } else if (!isGround && collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    let perceivedAngle = this.computeSurfacePerceivedAngle(\r\n                        hit.myNormal,\r\n                        movementDirection, up, false);\r\n                    surfaceAngle = Math.abs(perceivedAngle);\r\n                }\r\n            }\r\n\r\n            if ((isGround && (collisionCheckParams.myGroundAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001)) ||\r\n                (!isGround && (collisionCheckParams.myCeilingAngleToIgnore > 0 && surfaceAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001))) {\r\n                if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                    let surfaceHeightCheckOk = true;\r\n                    let maxMovementLeftCheckOk = true;\r\n\r\n                    if (surfaceIgnoreHeight != null) {\r\n                        surfaceHeightCheckOk = false;\r\n\r\n                        let feetPositionUp = feetPosition.vec3_valueAlongAxis(up);\r\n                        let hitUp = hit.myPosition.vec3_valueAlongAxis(up);\r\n                        let hitHeight = hitUp - feetPositionUp;\r\n                        if ((isGround && hitHeight <= surfaceIgnoreHeight) || (!isGround && hitHeight >= surfaceIgnoreHeight)) {\r\n                            surfaceHeightCheckOk = true;\r\n                        } else {\r\n                            //console.error(hitHeight.toFixed(6));\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && isMovementCheck) {\r\n                        if (surfaceIgnoreMaxMovementLeft != null) {\r\n                            let movementLength = movementOrForward.vec3_length();\r\n                            if (movementLength > surfaceIgnoreMaxMovementLeft) {\r\n                                maxMovementLeftCheckOk = false;\r\n\r\n                                let hitPosition = hit.myPosition;\r\n                                let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n                                hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n\r\n                                if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n                                } else {\r\n                                    projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n                                }\r\n\r\n                                hitMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, hitMovement);\r\n\r\n                                let hitMovementLength = hitMovement.vec3_length();\r\n                                let movementLeft = movementLength - hitMovementLength;\r\n\r\n                                if (movementLeft <= surfaceIgnoreMaxMovementLeft) {\r\n                                    maxMovementLeftCheckOk = true;\r\n                                } else {\r\n                                    //console.error(movementLeft.toFixed(3));\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (surfaceHeightCheckOk && maxMovementLeftCheckOk) {\r\n                        isIgnorable = true;\r\n                    }\r\n                }\r\n            }\r\n        } else if (ignoreHitsInsideCollisionIfObjectToIgnore) {\r\n            // #TODO when raycast pierce will work, if it gives the normal even when inside check if the angle is ok and only ignore if that's the case\r\n            if (objectsToIgnore == null || objectsToIgnore.pp_hasEqual(hit.myObject, objectsEqualCallback)) {\r\n                isIgnorable = true;\r\n            }\r\n        }\r\n\r\n        if (isIgnorable) {\r\n            if (outIgnoredObjects != null) {\r\n                outIgnoredObjects.pp_pushUnique(hit.myObject, objectsEqualCallback);\r\n            }\r\n        }\r\n\r\n\r\n        return isIgnorable;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalCheckRaycast\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_ignoreSurfaceAngle\", { enumerable: false });\r\n\r\n", "PP.CollisionCheck.prototype._horizontalSlide = function () {\r\n    let previousHorizontalMovement = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _horizontalSlide(movement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        this._mySlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        outSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, outSlideMovement);\r\n\r\n        if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n            this._horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, this._myPrevCollisionRuntimeParams.myIsSliding, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement);\r\n\r\n            //console.error(\"post oppo:\", outSlideMovement.vec_toString());\r\n        }\r\n\r\n        //console.error(\" \");\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding && collisionCheckParams.mySlidingFlickeringPreventionType > 0) {\r\n            let isFlickering = this._horizontalSlideFlickerCheck(movement, outSlideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingCollisionRuntimeParams, previousCollisionRuntimeParams);\r\n            this._mySlidingCollisionRuntimeParams.myIsSliding = !isFlickering;\r\n        }\r\n\r\n        if (this._mySlidingCollisionRuntimeParams.myIsSliding) {\r\n            let backupFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            collisionRuntimeParams.copy(this._mySlidingCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = backupFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n        } else {\r\n            collisionRuntimeParams.myIsSlidingFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented || this._mySlidingCollisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            //console.error(\"slide cancel\");\r\n            outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalSlideCheckOpposite = function () {\r\n    let horizontalCollisionNormal = PP.vec3_create();\r\n    let oppositeSlideMovement = PP.vec3_create();\r\n    let hitNormal = PP.vec3_create();\r\n    return function _horizontalSlideCheckOpposite(movement, feetPosition, height, up, forward, previousHorizontalMovement, previousIsSliding, allowSurfaceSteepFix, collisionCheckParams, preSlideCollisionRuntimeParams, postSlideCollisionRuntimeParams, previousCollisionRuntimeParams, outSlideMovement) {\r\n        horizontalCollisionNormal = preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, horizontalCollisionNormal);\r\n        horizontalCollisionNormal.vec3_normalize(horizontalCollisionNormal);\r\n\r\n        //console.error(\"oppo\", outSlideMovement.vec_toString(), movement.vec_toString(15));\r\n        let angleNormalWithMovementThreshold = 20;\r\n        if (horizontalCollisionNormal.vec3_angle(movement) > 180 - angleNormalWithMovementThreshold) {\r\n            //console.error(\"opposite normal ok\");\r\n            return;\r\n        } else if (previousIsSliding && postSlideCollisionRuntimeParams.myIsSliding && outSlideMovement.vec3_isConcordant(previousHorizontalMovement)) {\r\n            //console.error(\"previous direction ok\");\r\n            //console.error(postSlideCollisionRuntimeParams.myIsSliding, outSlideMovement.vec3_isConcordant(previousHorizontalMovement), outSlideMovement.vec_toString(), previousHorizontalMovement.vec_toString());\r\n            return;\r\n        } else {\r\n            //console.error(\"no fast exit\");\r\n        }\r\n\r\n        //console.error(horizontalCollisionNormal.vec3_angle(movement));\r\n\r\n        this._mySlidingOppositeDirectionCollisionRuntimeParams.copy(preSlideCollisionRuntimeParams);\r\n\r\n        oppositeSlideMovement = this._internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingOppositeDirectionCollisionRuntimeParams, previousCollisionRuntimeParams, true, oppositeSlideMovement);\r\n\r\n        //console.error(previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n        if (this._mySlidingOppositeDirectionCollisionRuntimeParams.myIsSliding) {\r\n\r\n            let isOppositeBetter = false;\r\n            if (postSlideCollisionRuntimeParams.myIsSliding) {\r\n                if (movement.vec3_angle(oppositeSlideMovement) < movement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                    //console.error(\"oppo minor\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    if (Math.abs(movement.vec3_angle(oppositeSlideMovement) - movement.vec3_angle(outSlideMovement)) <= 0.0001) {\r\n                        if (previousHorizontalMovement.vec3_angle(oppositeSlideMovement) < previousHorizontalMovement.vec3_angle(outSlideMovement) - 0.0001) {\r\n                            let angleNormalWithMovementThreshold = 5;\r\n                            if (horizontalCollisionNormal.vec3_angle(movement) < 90 + angleNormalWithMovementThreshold) {\r\n                                //console.error(\"oppo equal\");\r\n                                isOppositeBetter = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //console.error(movement.vec3_angle(outSlideMovement), movement.vec3_angle(oppositeSlideMovement));\r\n\r\n            } else {\r\n                let angleEpsilon = 0.001;\r\n                if (movement.vec3_isConcordant(oppositeSlideMovement) && movement.vec3_angle(oppositeSlideMovement) < 90 - angleEpsilon) {\r\n                    //console.error(\"oppo not\");\r\n                    isOppositeBetter = true;\r\n                } else {\r\n                    //console.error(\"oppo not prevention\");\r\n                }\r\n            }\r\n\r\n            if (isOppositeBetter) {\r\n                /* {\r\n                    hitNormal.vec3_copy(preSlideCollisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n \r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = slideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(0, 0, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = oppositeSlideMovement.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(1, 0, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                }\r\n \r\n                {\r\n                    let visualParams = new PP.VisualArrowParams();\r\n                    visualParams.myStart = feetPosition;\r\n                    visualParams.myDirection = hitNormal.vec3_normalize();\r\n                    visualParams.myLength = 0.2;\r\n                    visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                    visualParams.myMaterial.color =  PP.vec4_create(1, 1, 1, 1);\r\n                    PP.myDebugVisualManager.draw(visualParams, 1);\r\n                } */\r\n\r\n                outSlideMovement.vec3_copy(oppositeSlideMovement);\r\n                postSlideCollisionRuntimeParams.copy(this._mySlidingOppositeDirectionCollisionRuntimeParams);\r\n            } else {\r\n                //console.error(\"normal\", previousHorizontalMovement.vec_toString(), outSlideMovement.vec_toString(), oppositeSlideMovement.vec_toString());\r\n            }\r\n        } else {\r\n            //console.error(\"oppo not sliding\");\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalSlideFlickerCheck = function () {\r\n    let previousHorizontalMovement = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let flickerFixSlideMovement = PP.vec3_create();\r\n    return function _horizontalSlideFlickerCheck(movement, slideMovement, feetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n        let isFlickering = false;\r\n\r\n        previousHorizontalMovement.vec3_copy(collisionRuntimeParams.mySlidingPreviousHorizontalMovement);\r\n        let shouldCheckFlicker =\r\n            this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented ||\r\n            previousHorizontalMovement.vec3_isZero(0.00001);\r\n\r\n        if (!shouldCheckFlicker) {\r\n            if (this._myPrevCollisionRuntimeParams.myIsSliding || !collisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding) {\r\n                let flickerCollisionAngle = 90;\r\n                let flickerMovementAngle = 85;\r\n                switch (collisionCheckParams.mySlidingFlickeringPreventionType) {\r\n                    case 1:\r\n                        shouldCheckFlicker = previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0);\r\n                        break;\r\n                    case 2:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n                        break;\r\n                    case 3:\r\n                        shouldCheckFlicker = collisionCheckParams.mySlidingCheckBothDirections && collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n                        shouldCheckFlicker = shouldCheckFlicker || Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) > flickerCollisionAngle + 0.00001;\r\n\r\n                        shouldCheckFlicker = shouldCheckFlicker || (\r\n                            Math.abs(Math.abs(collisionRuntimeParams.mySlidingCollisionAngle) - flickerCollisionAngle) < 0.00001 &&\r\n                            Math.abs(collisionRuntimeParams.mySlidingMovementAngle) > flickerMovementAngle + 0.00001);\r\n                        break;\r\n                    case 4:\r\n                        shouldCheckFlicker = true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(this._myPrevCollisionRuntimeParams.myIsSlidingFlickerPrevented);\r\n        if (shouldCheckFlicker || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) {\r\n            if (shouldCheckFlicker) {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = collisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            } else {\r\n                collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = Math.max(0, this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter - 1);\r\n                //console.error(collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter);\r\n            }\r\n\r\n            //console.error(previousHorizontalMovement.vec3_signTo(movement, up, 0), slideMovement.vec3_signTo(movement, up, 0));\r\n            if ((collisionCheckParams.mySlidingFlickeringPreventionType != 1 || collisionRuntimeParams.myIsSlidingFlickerPrevented || this._myPrevCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter > 0) &&\r\n                (this._myPrevCollisionRuntimeParams.myIsSliding && previousHorizontalMovement.vec3_signTo(movement, up, 0) != slideMovement.vec3_signTo(movement, up, 0))) {\r\n                isFlickering = true;\r\n                collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                //console.error(\"quick flicker fix\");\r\n            } else {\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.reset();\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySliding90DegreesSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                this._mySlidingFlickeringFixCollisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n\r\n                //console.error(\"slide movement\", slideMovement.vec_toString(), feetPosition.vec_toString());\r\n                newFeetPosition = feetPosition.vec3_add(slideMovement, newFeetPosition);\r\n\r\n                let backupDebugActive = collisionCheckParams.myDebugActive;\r\n                collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(movement, newFeetPosition, height, up, forward, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, previousCollisionRuntimeParams, false, fixedMovement);\r\n                collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n                if (fixedMovement.vec3_isZero(0.00001)) {\r\n                    this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.copy(this._mySlidingFlickeringFixCollisionRuntimeParams);\r\n\r\n                    flickerFixSlideMovement = this._internalHorizontalSlide(movement, newFeetPosition, height, up, forward, slideMovement, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, false, flickerFixSlideMovement);\r\n\r\n                    if (collisionCheckParams.mySlidingCheckBothDirections) {\r\n                        this._horizontalSlideCheckOpposite(movement, newFeetPosition, height, up, forward, slideMovement, true, allowSurfaceSteepFix, collisionCheckParams, this._mySlidingFlickeringFixCollisionRuntimeParams, this._mySlidingFlickeringFixSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, flickerFixSlideMovement);\r\n                    }\r\n\r\n                    if (this._mySlidingFlickeringFixSlidingCollisionRuntimeParams.myIsSliding) {\r\n                        if (slideMovement.vec3_signTo(movement, up, 0) != flickerFixSlideMovement.vec3_signTo(movement, up, 0)) {\r\n\r\n                            /* {\r\n                                hitNormal.vec3_copy(collisionRuntimeParams.mySlidingCollisionHit.myNormal);\r\n    \r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = slideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(0.5, 0.5, 0.5, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = flickerFixSlideMovement.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(1, 1, 1, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            }\r\n    \r\n                            {\r\n                                let visualParams = new PP.VisualArrowParams();\r\n                                visualParams.myStart = feetPosition;\r\n                                visualParams.myDirection = hitNormal.vec3_normalize();\r\n                                visualParams.myLength = 0.2;\r\n                                visualParams.myMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n                                visualParams.myMaterial.color = PP.vec4_create(1, 0, 0.5, 1);\r\n                                PP.myDebugVisualManager.draw(visualParams, 2);\r\n                            } */\r\n\r\n                            isFlickering = true;\r\n                            collisionRuntimeParams.myIsSlidingFlickerPrevented = true;\r\n                            //console.error(\"expensive flicker fix\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            //console.error(\"no flicker check\");\r\n        }\r\n\r\n        if (isFlickering) {\r\n            //console.error(\"flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        } else {\r\n            //console.error(\"no flicker\", shouldCheckFlicker, slideMovement.vec_toString(), \"\\n\");\r\n        }\r\n\r\n        return isFlickering;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._internalHorizontalSlide = function () {\r\n    let invertedNormal = PP.vec3_create();\r\n    let slidingMovement = PP.vec3_create();\r\n    let movement90 = PP.vec3_create();\r\n    let currentMovement = PP.vec3_create();\r\n    let slideMovementForward = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function _internalHorizontalSlide(movement, feetPosition, height, up, forward, previousHorizontalMovement, allowSurfaceSteepFix, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, checkOppositeDirection, outSlideMovement) {\r\n        if (movement.vec3_isZero(0.00001)) {\r\n            return outSlideMovement.vec3_zero();\r\n        }\r\n\r\n        //let copiedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.pp_clone();\r\n        invertedNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_negate(invertedNormal);\r\n        invertedNormal.vec3_removeComponentAlongAxis(up, invertedNormal);\r\n        invertedNormal[0] = Math.abs(invertedNormal[0]) < 0.01 ? 0 : invertedNormal[0];\r\n        invertedNormal[2] = Math.abs(invertedNormal[2]) < 0.01 ? 0 : invertedNormal[2];\r\n        invertedNormal.vec3_normalize(invertedNormal);\r\n\r\n        collisionRuntimeParams.mySlidingCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n        collisionRuntimeParams.mySlidingWallNormal.vec3_copy(collisionRuntimeParams.myHorizontalCollisionHit.myNormal);\r\n\r\n        outSlideMovement.vec3_zero();\r\n\r\n        slidingMovement.vec3_copy(invertedNormal);\r\n        if (checkOppositeDirection) {\r\n            slidingMovement.vec3_copy(movement);\r\n            slidingMovement.vec3_normalize(slidingMovement);\r\n        }\r\n\r\n        if (!slidingMovement.vec3_isZero(0.00001)) {\r\n\r\n            slidingMovement.vec3_scale(movement.vec3_length(), slidingMovement);\r\n\r\n            let slidingSign = invertedNormal.vec3_signTo(movement, up);\r\n\r\n            if (collisionCheckParams.mySlidingAdjustSign90Degrees) {\r\n                let angleThreshold = 0.1;\r\n                if (invertedNormal.vec3_angle(movement) < angleThreshold && collisionRuntimeParams.mySliding90DegreesSign != 0) {\r\n                    //console.error(slidingSign, collisionRuntimeParams.mySliding90DegreesSign);\r\n                    slidingSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n                } else if (collisionRuntimeParams.mySliding90DegreesSign == 0 || collisionRuntimeParams.mySlidingRecompute90DegreesSign) {\r\n                    collisionRuntimeParams.mySliding90DegreesSign = slidingSign;\r\n                } else {\r\n                    //console.error(\"no fix\");\r\n                }\r\n\r\n                collisionRuntimeParams.mySlidingRecompute90DegreesSign = false;\r\n            }\r\n\r\n            if (checkOppositeDirection) {\r\n                slidingSign *= -1;\r\n            }\r\n\r\n            let currentAngle = 90 * slidingSign;\r\n            let maxAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement.vec3_rotateAxis(90 * slidingSign, up, movement90), up) * slidingSign, true) * slidingSign;\r\n            let minAngle = Math.pp_angleClamp(slidingMovement.vec3_angleSigned(movement, up) * slidingSign, true) * slidingSign;\r\n\r\n            if (checkOppositeDirection) {\r\n                maxAngle = currentAngle;\r\n                minAngle = 0;\r\n            } else {\r\n                if (Math.abs(maxAngle) < Math.abs(minAngle)) {\r\n                    // this should only happens because of the 90 degrees adjustment\r\n                    //console.error(\"90 adjust\");\r\n                    minAngle = 0;\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    minAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(maxAngle) < Math.abs(currentAngle) || Math.abs(Math.abs(maxAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"max\", currentAngle.toFixed(15), maxAngle.toFixed(15));\r\n                    currentAngle = maxAngle;\r\n                }\r\n\r\n                if (Math.abs(currentAngle) < Math.abs(minAngle) || Math.abs(Math.abs(minAngle) - Math.abs(currentAngle)) < 0.0001) {\r\n                    //console.error(\"min\", currentAngle.toFixed(3), minAngle.toFixed(3));\r\n                    currentAngle = minAngle;\r\n                }\r\n\r\n                //console.error(maxAngle.toFixed(3), minAngle.toFixed(3));\r\n            }\r\n\r\n            if (checkOppositeDirection && !previousHorizontalMovement.vec3_isZero(0.000001)) {\r\n                let angleWithPrevious = movement.vec3_angleSigned(previousHorizontalMovement, up);\r\n                if (Math.pp_sign(angleWithPrevious) == Math.pp_sign(maxAngle) && Math.abs(maxAngle) > Math.abs(angleWithPrevious)) {\r\n                    currentAngle = angleWithPrevious;\r\n                    //console.error(\"better angle\", currentAngle, previousHorizontalMovement.vec_toString(10), movement.vec_toString(10));\r\n                }\r\n            }\r\n\r\n            currentMovement.vec3_zero();\r\n\r\n            let backupDebugActive = collisionCheckParams.myDebugActive;\r\n            collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n            let originalCurrentAngle = currentAngle;\r\n            for (let i = 0; i < collisionCheckParams.mySlidingMaxAttempts; i++) {\r\n                this._myInternalSlidingCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n\r\n                currentMovement = slidingMovement.vec3_rotateAxis(currentAngle, up, currentMovement);\r\n\r\n                slideMovementForward.vec3_copy(forward);\r\n                if (!collisionCheckParams.myCheckHorizontalFixedForwardEnabled) {\r\n                    if (!currentMovement.vec3_isZero()) {\r\n                        slideMovementForward = currentMovement.vec3_normalize(slideMovementForward);\r\n                    }\r\n                }\r\n\r\n                fixedMovement.vec3_zero();\r\n                fixedMovement = this._horizontalCheck(currentMovement, feetPosition, height, up, slideMovementForward, allowSurfaceSteepFix, collisionCheckParams, this._myInternalSlidingCollisionRuntimeParams, previousCollisionRuntimeParams, true, fixedMovement);\r\n                if (!fixedMovement.vec3_isZero(0.00001)) {\r\n                    outSlideMovement.vec3_copy(currentMovement);\r\n                    collisionRuntimeParams.copy(this._myInternalSlidingCollisionRuntimeParams);\r\n                    collisionRuntimeParams.myIsSliding = true;\r\n                    collisionRuntimeParams.myIsSlidingIntoOppositeDirection = checkOppositeDirection;\r\n                    collisionRuntimeParams.mySlidingMovementAngle = movement.vec3_angleSigned(currentMovement, up);\r\n                    collisionRuntimeParams.mySlidingCollisionAngle = invertedNormal.vec3_angleSigned(currentMovement, up);\r\n\r\n                    maxAngle = currentAngle;\r\n                    currentAngle = (maxAngle + minAngle) / 2;\r\n                } else {\r\n                    if (currentAngle != maxAngle) {\r\n                        minAngle = currentAngle;\r\n                    }\r\n\r\n                    if (i == 0 && currentAngle != maxAngle) {\r\n                        currentAngle = maxAngle;\r\n                    } else {\r\n                        currentAngle = (minAngle + maxAngle) / 2;\r\n                    }\r\n                }\r\n\r\n                if (Math.abs(Math.abs(maxAngle) - Math.abs(minAngle)) < 0.0001) {\r\n                    //console.error(\"fast slide exit\", maxAngle, minAngle, originalCurrentAngle, collisionRuntimeParams.myIsSliding, checkOppositeDirection);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            collisionCheckParams.myDebugActive = backupDebugActive;\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsSliding) {\r\n            collisionRuntimeParams.mySlidingCollisionHit.reset();\r\n        } else {\r\n            //console.error(\"slide angle\", movement.vec3_angleSigned(invertedNormal, up), invertedNormal.vec_toString(), copiedNormal.vec_toString());\r\n        }\r\n\r\n        return outSlideMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalCheckBetterSlideNormal = function () {\r\n    let movementDirection = PP.vec3_create();\r\n    let hitDirection = PP.vec3_create();\r\n    let projectAlongAxis = PP.vec3_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    let newFixedFeetPosition = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    return function _horizontalCheckBetterSlideNormal(movement, originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        //check for a better slide hit position and normal\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        let hitPosition = collisionRuntimeParams.myHorizontalCollisionHit.myPosition;\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        hitDirection = hitPosition.vec3_sub(feetPosition, hitDirection);\r\n        if (hitDirection.vec3_isToTheRight(movementDirection, up)) {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(-halfConeAngle, up, projectAlongAxis);\r\n        } else {\r\n            projectAlongAxis = movementDirection.vec3_rotateAxis(halfConeAngle, up, projectAlongAxis);\r\n        }\r\n\r\n        fixedMovement = hitDirection.vec3_projectOnAxisAlongAxis(movementDirection, projectAlongAxis, fixedMovement);\r\n        /* if (fixedMovement.vec3_angle(movementDirection) >= 0.00001 || fixedMovement.vec3_length() > movement.vec3_length() + 0.00001) {\r\n            console.error(\"ERROR, project function should return a smaller movement in the same direction\",\r\n                fixedMovement.vec3_angle(movementDirection), fixedMovement.vec3_length(), movement.vec3_length());\r\n            //maybe epsilon could be 0.0001? is higher but still 10 times less then a millimiter\r\n        } */\r\n\r\n        if (fixedMovement.vec3_isConcordant(movementDirection)) {\r\n            fixedMovement = movementDirection.vec3_scale(Math.min(fixedMovement.vec3_length(), movement.vec3_length()), fixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_zero();\r\n        }\r\n\r\n        if (collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive) {\r\n            PP.myDebugVisualManager.drawArrow(0, feetPosition, movementDirection, fixedMovement.vec3_length(), PP.vec4_create(1, 0, 1, 1));\r\n        }\r\n\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally = false;\r\n        this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n\r\n        newFixedFeetPosition = feetPosition.vec3_add(fixedMovement, newFixedFeetPosition);\r\n        newFeetPosition = feetPosition.vec3_add(fixedMovement, newFeetPosition);\r\n\r\n        let backupDebugActive = collisionCheckParams.myDebugActive;\r\n        collisionCheckParams.myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugSlidingActive;\r\n\r\n        if (collisionCheckParams.myHorizontalPositionCheckEnabled) {\r\n            this._horizontalPositionCheck(originalFeetPosition, originalHeight, newFixedFeetPosition, height, up, forward, collisionCheckParams, this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n\r\n        collisionCheckParams.myDebugActive = backupDebugActive;\r\n\r\n        if (this._myCheckBetterSlidingNormalCollisionRuntimeParams.myIsCollidingHorizontally &&\r\n            !this._myCheckBetterSlidingNormalCollisionRuntimeParams.myHorizontalCollisionHit.myIsInsideCollision) {\r\n            collisionRuntimeParams.copy(this._myCheckBetterSlidingNormalCollisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._isSlidingNormalValid = function () {\r\n    let flatNormal = PP.vec3_create();\r\n    return function _isSlidingNormalValid(movement, up, collisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        flatNormal = collisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatNormal);\r\n        flatNormal.vec3_normalize(flatNormal);\r\n\r\n        if (!flatNormal.vec3_isZero(0.000001)) {\r\n            isValid = true;\r\n        }\r\n\r\n        // I wanted to check if the normal angle was not concordant and thought that in that case it shouldn't slide but it turns out it makes sense\r\n        // even for back hits which either can't resolve or at least makes me slide out of collision\r\n        // at least a check for the normal to be not up is ok\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalSlide\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalSlideCheckOpposite\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalSlideFlickerCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_internalHorizontalSlide\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalCheckBetterSlideNormal\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_isSlidingNormalValid\", { enumerable: false });", "PP.CollisionCheck.prototype._horizontalMovementCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let movementDirection = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let heightStep = PP.vec3_create();\r\n    let currentHeightOffset = PP.vec3_create();\r\n    let leftRadialDirection = PP.vec3_create();\r\n    let rightRadialDirection = PP.vec3_create();\r\n    return function _horizontalMovementCheck(movement, originalFeetPosition, originalHeight, feetPosition, height, up, collisionCheckParams, collisionRuntimeParams) {\r\n        // #TODO add a flag in the params to specify if u want to allow movement inside collision (to hope that it will end up in a non collision position)\r\n        // also vertical check should check all hits like the position check\r\n        // for now is ok as it is, the movement check is not as important and could also be disabled it the movement per frame is very small\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalMovementActive;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 90);\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let steplength = collisionCheckParams.myRadius / collisionCheckParams.myHorizontalMovementRadialStepAmount;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        {\r\n            leftRadialDirection = movementDirection.vec3_rotateAxis(halfConeAngle, up, leftRadialDirection);\r\n            rightRadialDirection = movementDirection.vec3_rotateAxis(-halfConeAngle, up, rightRadialDirection);\r\n            for (let i = 1; i <= collisionCheckParams.myHorizontalMovementRadialStepAmount; i++) {\r\n                // left\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = leftRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n\r\n                // right\r\n                {\r\n                    let currentStep = i * steplength;\r\n                    let tempCheckPosition = _localGetCachedCheckPosition();\r\n                    let currentRadialPosition = rightRadialDirection.vec3_scale(currentStep, tempCheckPosition);\r\n                    let currentCheckPosition = currentRadialPosition.vec3_add(feetPosition, currentRadialPosition);\r\n                    checkPositions.push(currentCheckPosition);\r\n                }\r\n            }\r\n        }\r\n\r\n        // if result is inside a collision it's ignored, so that at least you can exit it before seeing if the new position works now\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundObjectsToIgnore, true, true, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, groundCeilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, null, ceilingObjectsToIgnore, false, true, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, groundObjectsToIgnore, null, true, true, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, movement, ceilingObjectsToIgnore, null, false, true, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountMovement > 0 && height > 0.000001) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountMovement;\r\n                heightStep = up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // we can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // the ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopMovement || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, currentHeightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalMovement) {\r\n                        this._horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, currentHeightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                    }\r\n\r\n                    if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalMovementVerticalCheck = function () {\r\n    let movementStep = PP.vec3_create();\r\n    let movementDirection = PP.vec3_create();\r\n    let firstPosition = PP.vec3_create();\r\n    let secondPosition = PP.vec3_create();\r\n    let firstMovementPosition = PP.vec3_create();\r\n    let secondMovementPosition = PP.vec3_create();\r\n    let firstHeightPosition = PP.vec3_create();\r\n    let secondHeightPosition = PP.vec3_create();\r\n    let firstHeightMovementPosition = PP.vec3_create();\r\n    let secondHeightMovementPosition = PP.vec3_create();\r\n    return function _horizontalMovementVerticalCheck(movement, feetPosition, checkPositions, heightOffset, heightStep, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward) {\r\n                        firstHeightMovementPosition = firstPosition.vec3_add(movementStep, firstHeightMovementPosition);\r\n                        firstHeightMovementPosition = firstHeightMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward) {\r\n                        secondHeightMovementPosition = secondPosition.vec3_add(movementStep, secondHeightMovementPosition);\r\n                        secondHeightMovementPosition = secondHeightMovementPosition.vec3_sub(heightStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondHeightMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (m == 0) {\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                            secondHeightPosition = secondPosition.vec3_sub(heightStep, secondHeightPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                            let firstHeightPosition = firstPosition.vec3_sub(heightStep);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, secondPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        secondHeightMovementPosition = secondPosition.vec3_sub(heightStep, secondHeightMovementPosition).vec3_add(movementStep, secondHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n                        firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled && j == 0)) {\r\n                    if (m == 0) {\r\n                        firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                        firstHeightMovementPosition = firstMovementPosition.vec3_sub(heightStep, firstHeightMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightMovementPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                    firstHeightPosition = firstPosition.vec3_sub(heightStep, firstHeightPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstHeightPosition, firstMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled && j == 0)) {\r\n                    firstHeightMovementPosition = firstPosition.vec3_sub(heightStep, firstHeightMovementPosition).vec3_add(movementStep, firstHeightMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstHeightMovementPosition, movementDirection, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                    collisionRuntimeParams.myHorizontalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalMovementHorizontalCheck = function () {\r\n    let movementStep = PP.vec3_create();\r\n    let movementDirection = PP.vec3_create();\r\n    let firstPosition = PP.vec3_create();\r\n    let secondPosition = PP.vec3_create();\r\n    let firstMovementPosition = PP.vec3_create();\r\n    let secondMovementPosition = PP.vec3_create();\r\n    return function _horizontalMovementHorizontalCheck(movement, feetPosition, checkPositions, heightOffset, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        let movementStepAmount = 1;\r\n        movementStep.vec3_copy(movement);\r\n\r\n        if (collisionCheckParams.myHorizontalMovementStepEnabled) {\r\n            movementStepAmount = Math.max(1, Math.ceil(movement.vec3_length() / collisionCheckParams.myHorizontalMovementStepMaxLength));\r\n            movement.vec3_scale(1 / movementStepAmount, movementStep);\r\n        }\r\n\r\n        movementDirection = movement.vec3_normalize(movementDirection);\r\n\r\n        for (let m = 0; m < movementStepAmount; m++) {\r\n            for (let j = 0; j < checkPositions.length; j++) {\r\n                firstPosition = checkPositions[j].vec3_add(movementStep.vec3_scale(m, firstPosition), firstPosition).vec3_add(heightOffset, firstPosition);\r\n\r\n                if (j > 0) {\r\n                    let secondIndex = Math.max(0, j - 2);\r\n                    secondPosition = checkPositions[secondIndex].vec3_add(movementStep.vec3_scale(m, secondPosition), secondPosition).vec3_add(heightOffset, secondPosition);\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalOutward) {\r\n                        firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                        //#TODO ignore hits if inside could be a paramter, so you can specify if u want to be able to exit from a collision\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckDiagonalInward) {\r\n                        secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, secondMovementPosition, movementDirection, up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n\r\n                    if (collisionCheckParams.myHorizontalMovementCheckHorizontalBorder) {\r\n                        if (m == 0) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondPosition, firstPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n\r\n                        {\r\n                            firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n                            secondMovementPosition = secondPosition.vec3_add(movementStep, secondMovementPosition);\r\n\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(secondMovementPosition, firstMovementPosition, movementDirection, up,\r\n                                true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (!isHorizontalCheckOk) break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myHorizontalMovementCheckStraight ||\r\n                    (collisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled && j == 0)) {\r\n                    firstMovementPosition = firstPosition.vec3_add(movementStep, firstMovementPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(firstPosition, firstMovementPosition, null, up,\r\n                        true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalMovementCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalMovementVerticalCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalMovementHorizontalCheck\", { enumerable: false });", "PP.CollisionCheck.prototype._horizontalPositionCheck = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let _localGroundObjectsToIgnore = [];\r\n    let _localCeilingObjectsToIgnore = [];\r\n    let _localGroundCeilingObjectsToIgnore = [];\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n\r\n    let heightOffset = PP.vec3_create();\r\n    let heightStep = PP.vec3_create();\r\n    let currentHeightOffset = PP.vec3_create();\r\n    let hitHeightOffset = PP.vec3_create();\r\n    let hitHeightOffsetEpsilon = PP.vec3_create();\r\n    let downwardHeightOffset = PP.vec3_create();\r\n    let downwardHeightStep = PP.vec3_create();\r\n\r\n    let verticalDirection = PP.vec3_create();\r\n\r\n    let vertilCheckHit = new PP.RaycastHit();\r\n\r\n    return function _horizontalPositionCheck(originalFeetPosition, originalHeight, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugHorizontalPositionActive;\r\n\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        let halfConeAngle = Math.min(collisionCheckParams.myHalfConeAngle, 180);\r\n        let sliceAngle = halfConeAngle / collisionCheckParams.myHalfConeSliceAmount;\r\n        let tempCheckPosition = _localGetCachedCheckPosition();\r\n        checkPositions.push(feetPosition.vec3_add(forward.vec3_scale(collisionCheckParams.myRadius, tempCheckPosition), tempCheckPosition));\r\n        for (let i = 1; i <= collisionCheckParams.myHalfConeSliceAmount; i++) {\r\n            let currentAngle = i * sliceAngle;\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            let radialDirection = forward.vec3_rotateAxis(-currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n\r\n            tempCheckPosition = _localGetCachedCheckPosition();\r\n            radialDirection = forward.vec3_rotateAxis(currentAngle, up, tempCheckPosition);\r\n            checkPositions.push(feetPosition.vec3_add(radialDirection.vec3_scale(collisionCheckParams.myRadius, radialDirection), radialDirection));\r\n        }\r\n\r\n        let groundObjectsToIgnore = null;\r\n        let ceilingObjectsToIgnore = null;\r\n        let groundCeilingObjectsToIgnore = null;\r\n\r\n        if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n            // gather ground objects to ignore\r\n            groundObjectsToIgnore = _localGroundObjectsToIgnore;\r\n            groundObjectsToIgnore.length = 0;\r\n            groundCeilingObjectsToIgnore = _localGroundCeilingObjectsToIgnore;\r\n            groundCeilingObjectsToIgnore.length = 0;\r\n\r\n            let ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundObjectsToIgnore, true, false, up, collisionCheckParams);\r\n\r\n            let ignoreCeilingAngleCallback = null;\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, groundCeilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            heightOffset.vec3_zero();\r\n            this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n            // gather ceiling objects to ignore\r\n            if (!collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeight) {\r\n                ceilingObjectsToIgnore = _localCeilingObjectsToIgnore;\r\n                ceilingObjectsToIgnore.length = 0;\r\n\r\n                let ignoreGroundAngleCallback = null;\r\n                if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                    ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n                }\r\n\r\n                let ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, null, ceilingObjectsToIgnore, false, false, up, collisionCheckParams);\r\n\r\n                heightOffset = up.vec3_scale(height, heightOffset);\r\n                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n            }\r\n        }\r\n\r\n        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n\r\n            let groundCeilingCheckIsFine = true;\r\n\r\n            if (groundCeilingObjectsToIgnore != null) {\r\n                // check that the ceiling objects ignored by the ground are the correct ones, that is the one ignored by the upper check\r\n                for (let object of groundCeilingObjectsToIgnore) {\r\n                    if (!ceilingObjectsToIgnore.pp_hasEqual(object, objectsEqualCallback)) {\r\n                        groundCeilingCheckIsFine = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let ignoreGroundAngleCallback = null;\r\n            let ignoreCeilingAngleCallback = null;\r\n\r\n            if (collisionCheckParams.myGroundAngleToIgnore > 0) {\r\n                ignoreGroundAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, groundObjectsToIgnore, null, true, false, up, collisionCheckParams);\r\n            }\r\n\r\n            if (collisionCheckParams.myCeilingAngleToIgnore > 0) {\r\n                ignoreCeilingAngleCallback = this._ignoreSurfaceAngle.bind(this, originalFeetPosition, originalHeight, forward, ceilingObjectsToIgnore, null, false, false, up, collisionCheckParams);\r\n            }\r\n\r\n            let heightStepAmount = 0;\r\n            if (collisionCheckParams.myCheckHeight && collisionCheckParams.myHeightCheckStepAmountPosition > 0 && height > 0) {\r\n                heightStepAmount = collisionCheckParams.myHeightCheckStepAmountPosition;\r\n                up.vec3_scale(height / heightStepAmount, heightStep);\r\n            }\r\n\r\n            for (let i = 0; i <= heightStepAmount; i++) {\r\n                currentHeightOffset = heightStep.vec3_scale(i, currentHeightOffset);\r\n\r\n                // we can skip the ground check since we have already done that, but if there was an error do it again with the proper set of objects to ignore\r\n                // the ceiling check can always be ignored, it used the proper ground objects already\r\n                if (collisionCheckParams.myCheckHeightTopPosition || i == 0) {\r\n                    if ((i != 0 && i != heightStepAmount) ||\r\n                        (i == 0 && !groundCeilingCheckIsFine) ||\r\n                        (i == 0 && collisionCheckParams.myGroundAngleToIgnore == 0) ||\r\n                        (i != 0 && i == heightStepAmount && collisionCheckParams.myCeilingAngleToIgnore == 0)) {\r\n                        this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, currentHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (i > 0) {\r\n                    if (collisionCheckParams.myCheckHeightVerticalPosition) {\r\n                        // this offset is a workaround for objects that in the editor are aligned but due to clamp get a bit tilted when in the game\r\n                        // and therefore trying an horizontal cast on the vertical hit position could result in hitting the bottom which in theory should be parallel and therefore not possible\r\n                        let hitHeightOffsetEpsilonValue = 0.0001;\r\n\r\n                        if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 0 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                            verticalDirection.vec3_copy(up);\r\n                            this._horizontalPositionVerticalCheck(feetPosition, checkPositions, currentHeightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            if (collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 1 || collisionCheckParams.myHorizontalPositionCheckVerticalDirectionType == 2) {\r\n                                verticalDirection = up.vec3_negate(verticalDirection);\r\n                                downwardHeightOffset = currentHeightOffset.vec3_sub(heightStep, downwardHeightOffset);\r\n                                downwardHeightStep = heightStep.vec3_negate(downwardHeightStep);\r\n                                this._horizontalPositionVerticalCheck(feetPosition, checkPositions, downwardHeightOffset, downwardHeightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n                            }\r\n\r\n                            if (collisionRuntimeParams.myIsCollidingHorizontally && collisionCheckParams.myCheckHeightConeOnCollision) {\r\n                                hitHeightOffset = collisionRuntimeParams.myHorizontalCollisionHit.myPosition.vec3_sub(feetPosition, hitHeightOffset).vec3_componentAlongAxis(up, hitHeightOffset);\r\n                                hitHeightOffset.vec3_add(verticalDirection.vec3_scale(hitHeightOffsetEpsilonValue, hitHeightOffsetEpsilon), hitHeightOffset);\r\n\r\n                                collisionRuntimeParams.myIsCollidingHorizontally = false;\r\n                                if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    vertilCheckHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n                                }\r\n                                collisionRuntimeParams.myHorizontalCollisionHit.reset();\r\n                                this._horizontalPositionHorizontalCheck(feetPosition, checkPositions, hitHeightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                                if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    break;\r\n                                } else if (collisionCheckParams.myCheckHeightConeOnCollisionKeepHit) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(vertilCheckHit);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalPositionHorizontalCheck = function () {\r\n    let basePosition = PP.vec3_create();\r\n    let forwardNegate = PP.vec3_create();\r\n    let currentRadialPosition = PP.vec3_create();\r\n    let previousRadialPosition = PP.vec3_create();\r\n    return function _horizontalPositionHorizontalCheck(feetPosition, checkPositions, heightOffset, up, forward, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n\r\n        let halfRadialPositions = Math.floor(checkPositions.length / 2) + 1;\r\n        for (let j = 0; j < halfRadialPositions; j++) {\r\n            if (j > 0) {\r\n                let leftIndex = Math.max(0, j * 2);\r\n                let rightIndex = Math.max(0, (j * 2 - 1));\r\n                let leftAndRightEqual = checkPositions[leftIndex].vec_equals(checkPositions[rightIndex], 0.000001);\r\n\r\n                if (collisionCheckParams.myCheckConeBorder) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        let previousIndex = Math.max(0, currentIndex - 2);\r\n                        previousRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, forward.vec3_negate(forwardNegate), up,\r\n                            true, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, true,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n\r\n                if (collisionCheckParams.myCheckConeRay && isHorizontalCheckOk) {\r\n                    for (let r = 0; r < 2; r++) {\r\n                        if (r == 1 && leftAndRightEqual) {\r\n                            break;\r\n                        }\r\n\r\n                        let currentIndex = r == 0 ? leftIndex : rightIndex;\r\n\r\n                        currentRadialPosition = checkPositions[currentIndex].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                        isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                            false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                            feetPosition, false,\r\n                            collisionCheckParams, collisionRuntimeParams);\r\n\r\n                        if (!isHorizontalCheckOk) break;\r\n                    }\r\n                }\r\n            } else {\r\n                if (collisionCheckParams.myCheckConeRay) {\r\n                    currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(basePosition, currentRadialPosition, null, up,\r\n                        false, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, false,\r\n                        collisionCheckParams, collisionRuntimeParams);\r\n\r\n                    if (!isHorizontalCheckOk) break;\r\n                }\r\n            }\r\n\r\n            if (!isHorizontalCheckOk) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!isHorizontalCheckOk) {\r\n            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n        }\r\n\r\n        return isHorizontalCheckOk;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._horizontalPositionVerticalCheck = function () {\r\n    let basePosition = PP.vec3_create();\r\n    let previousBasePosition = PP.vec3_create();\r\n    let currentRadialPosition = PP.vec3_create();\r\n    let previousRadialPosition = PP.vec3_create();\r\n    let previousCurrentRadialPosition = PP.vec3_create();\r\n    let previousPreviousRadialPosition = PP.vec3_create();\r\n    return function _horizontalPositionVerticalCheck(feetPosition, checkPositions, heightOffset, heightStep, verticalDirection, up, ignoreGroundAngleCallback, ignoreCeilingAngleCallback, collisionCheckParams, collisionRuntimeParams) {\r\n        let isHorizontalCheckOk = true;\r\n\r\n        basePosition = feetPosition.vec3_add(heightOffset, basePosition);\r\n        previousBasePosition = basePosition.vec3_sub(heightStep, previousBasePosition);\r\n\r\n        for (let j = 0; j <= checkPositions.length; j++) {\r\n            let previousCheckPositionIsEqual = false;\r\n\r\n            if (j == checkPositions.length) {\r\n                currentRadialPosition.vec3_copy(basePosition);\r\n                previousRadialPosition.vec3_copy(previousBasePosition);\r\n            } else {\r\n                currentRadialPosition = checkPositions[j].vec3_add(heightOffset, currentRadialPosition);\r\n                previousRadialPosition = currentRadialPosition.vec3_sub(heightStep, previousRadialPosition);\r\n\r\n                if (j > 0) {\r\n                    previousCheckPositionIsEqual = checkPositions[j].vec_equals(checkPositions[j - 1], 0.000001);\r\n                }\r\n            }\r\n\r\n            if (collisionCheckParams.myCheckVerticalStraight && !previousCheckPositionIsEqual) {\r\n                isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, currentRadialPosition, null, up,\r\n                    collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                    feetPosition, true,\r\n                    collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                if (!isHorizontalCheckOk) {\r\n                    if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                        collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                        collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                    }\r\n\r\n                    if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (j < checkPositions.length) {\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayOutward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayOutward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousBasePosition, currentRadialPosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if ((collisionCheckParams.myCheckVerticalDiagonalRayInward ||\r\n                    (collisionCheckParams.myCheckVerticalDiagonalBorderRayInward && (j == checkPositions.length - 2 || j == checkPositions.length - 1))) &&\r\n                    !previousCheckPositionIsEqual) {\r\n                    isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, basePosition, null, up,\r\n                        collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                        feetPosition, true,\r\n                        collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                    if (!isHorizontalCheckOk) {\r\n                        if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                            collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                        }\r\n\r\n                        if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (j > 0) {\r\n                    if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward || collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                        let previousIndex = Math.max(0, j - 2);\r\n                        previousCurrentRadialPosition = checkPositions[previousIndex].vec3_add(heightOffset, previousCurrentRadialPosition);\r\n                        previousPreviousRadialPosition = previousCurrentRadialPosition.vec3_sub(heightStep, previousPreviousRadialPosition);\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderOutward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousPreviousRadialPosition, currentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (collisionCheckParams.myCheckVerticalDiagonalBorderInward) {\r\n                            isHorizontalCheckOk = this._horizontalCheckRaycast(previousRadialPosition, previousCurrentRadialPosition, null, up,\r\n                                collisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision, ignoreGroundAngleCallback, ignoreCeilingAngleCallback,\r\n                                feetPosition, true,\r\n                                collisionCheckParams, collisionRuntimeParams, true, true);\r\n\r\n                            if (!isHorizontalCheckOk) {\r\n                                if (!collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                                    collisionRuntimeParams.myIsCollidingHorizontally = true;\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                } else if (this._myRaycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(collisionRuntimeParams.myHorizontalCollisionHit.myPosition, verticalDirection)) {\r\n                                    collisionRuntimeParams.myHorizontalCollisionHit.copy(this._myRaycastResult.myHits[0]);\r\n                                }\r\n\r\n                                if (!collisionCheckParams.myCheckVerticalSearchFartherVerticalHit) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return !collisionRuntimeParams.myIsCollidingHorizontally;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalPositionHorizontalCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_horizontalPositionVerticalCheck\", { enumerable: false });\r\n", "PP.CollisionCheck.prototype._verticalCheck = function () {\r\n    let newFeetPosition = PP.vec3_create();\r\n    let additionalFixedMovement = PP.vec3_create();\r\n    let zero = PP.vec3_create();\r\n    zero.vec3_zero();\r\n    return function _verticalCheck(verticalMovement, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        collisionRuntimeParams.myIsCollidingVertically = false;\r\n        collisionRuntimeParams.myVerticalCollisionHit.reset();\r\n\r\n        let movementSign = Math.pp_sign(verticalMovement.vec3_lengthSigned(up), -1);\r\n        let isMovementDownward = movementSign < 0;\r\n\r\n        outFixedMovement.vec3_copy(verticalMovement);\r\n        if (collisionCheckParams.myVerticalMovementCheckEnabled) {\r\n            outFixedMovement = this._verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement);\r\n\r\n            if (collisionCheckParams.myCheckVerticalBothDirection &&\r\n                (outFixedMovement.vec_equals(verticalMovement, 0.00001) || originalMovementSign == 0 || (movementSign != originalMovementSign))) {\r\n                newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n                let isOppositeMovementDownward = !isMovementDownward;\r\n                additionalFixedMovement = this._verticalMovementAdjustment(zero, isOppositeMovementDownward, originalMovementSign, newFeetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, additionalFixedMovement);\r\n\r\n                outFixedMovement.vec3_add(additionalFixedMovement, outFixedMovement);\r\n                isMovementDownward = !isMovementDownward;\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myVerticalPositionCheckEnabled) {\r\n            newFeetPosition = feetPosition.vec3_add(outFixedMovement, newFeetPosition);\r\n            let canStay = this._verticalPositionCheck(newFeetPosition, isMovementDownward, height, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n            if (!canStay) {\r\n                outFixedMovement.vec3_zero();\r\n\r\n                // #TODO probably this should not be reset, you should be required to check if the movement was ok to be sure this values have a meaning\r\n                collisionRuntimeParams.myHasSnappedOnGround = false;\r\n                collisionRuntimeParams.myHasSnappedOnCeiling = false;\r\n                collisionRuntimeParams.myHasPoppedOutGround = false;\r\n                collisionRuntimeParams.myHasPoppedOutCeiling = false;\r\n                collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n            }\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._verticalMovementAdjustment = function () {\r\n    let startOffset = PP.vec3_create();\r\n    let endOffset = PP.vec3_create();\r\n    let tempVector = PP.vec3_create();\r\n    let furtherDirection = PP.vec3_create();\r\n    let furtherDirectionPosition = PP.vec3_create();\r\n    let upNegate = PP.vec3_create();\r\n    let origin = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _verticalMovementAdjustment(verticalMovement, isMovementDownward, originalMovementSign, feetPosition, height, up, forward, collisionCheckParams, collisionRuntimeParams, outFixedMovement) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalMovementActive;\r\n\r\n        startOffset.vec3_zero();\r\n        endOffset.vec3_zero();\r\n\r\n        let popOutEnabled = false;\r\n        let snapEnabled = false;\r\n\r\n        if (isMovementDownward) {\r\n            startOffset.vec3_zero();\r\n            endOffset.vec3_copy(verticalMovement);\r\n\r\n            if (collisionCheckParams.myGroundPopOutExtraDistance > 0 && collisionCheckParams.myGroundPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(collisionCheckParams.myGroundPopOutExtraDistance + 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        } else {\r\n            startOffset = up.vec3_scale(height, startOffset);\r\n            endOffset = up.vec3_scale(height, endOffset).vec3_add(verticalMovement, endOffset);\r\n\r\n            if (collisionCheckParams.myCeilingPopOutExtraDistance > 0 && collisionCheckParams.myCeilingPopOutEnabled) {\r\n                startOffset.vec3_add(up.vec3_scale(-collisionCheckParams.myCeilingPopOutExtraDistance - 0.00001, tempVector), startOffset);\r\n                popOutEnabled = true;\r\n            }\r\n        }\r\n\r\n        if (isMovementDownward && originalMovementSign <= 0 && this._myPrevCollisionRuntimeParams.myIsOnGround && collisionCheckParams.mySnapOnGroundEnabled && collisionCheckParams.mySnapOnGroundExtraDistance > 0) {\r\n            endOffset.vec3_add(up.vec3_scale(-collisionCheckParams.mySnapOnGroundExtraDistance - 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        } else if (!isMovementDownward && this._myPrevCollisionRuntimeParams.myIsOnCeiling && collisionCheckParams.mySnapOnCeilingEnabled && collisionCheckParams.mySnapOnCeilingExtraDistance > 0 &&\r\n            (originalMovementSign > 0 || (originalMovementSign == 0 && (!this._myPrevCollisionRuntimeParams.myIsOnGround || !collisionCheckParams.mySnapOnGroundEnabled)))) {\r\n            endOffset.vec3_add(up.vec3_scale(collisionCheckParams.mySnapOnCeilingExtraDistance + 0.00001, tempVector), endOffset);\r\n            snapEnabled = true;\r\n        }\r\n\r\n        outFixedMovement.vec3_zero();\r\n        if (startOffset.vec3_distance(endOffset) > 0.00001) {\r\n            let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            furtherDirection.vec3_copy(up);\r\n            if (!isMovementDownward) {\r\n                furtherDirection.vec3_negate(furtherDirection);\r\n            }\r\n\r\n            let furtherDirectionPositionSet = false;\r\n\r\n            for (let i = 0; i < checkPositions.length; i++) {\r\n                let currentPosition = checkPositions[i];\r\n\r\n                origin = currentPosition.vec3_add(startOffset, origin);\r\n                direction = currentPosition.vec3_add(endOffset, direction).vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.myHits.length > 0) {\r\n                    if (furtherDirectionPositionSet) {\r\n                        if (raycastResult.myHits[0].myPosition.vec3_isFartherAlongAxis(furtherDirectionPosition, furtherDirection)) {\r\n                            furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                        }\r\n                    } else {\r\n                        furtherDirectionPositionSet = true;\r\n                        furtherDirectionPosition.vec3_copy(raycastResult.myHits[0].myPosition);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (furtherDirectionPositionSet) {\r\n                upNegate = up.vec3_negate(upNegate);\r\n                if (isMovementDownward) {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition, outFixedMovement).vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        collisionRuntimeParams.myHasSnappedOnGround = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutGround = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                } else {\r\n                    outFixedMovement = furtherDirectionPosition.vec3_sub(feetPosition.vec3_add(up.vec3_scale(height, outFixedMovement), outFixedMovement), outFixedMovement).\r\n                        vec3_componentAlongAxis(up, outFixedMovement);\r\n\r\n                    if (snapEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, up)) {\r\n                        collisionRuntimeParams.myHasSnappedOnCeiling = true;\r\n                    } else if (popOutEnabled && outFixedMovement.vec3_isFartherAlongAxis(verticalMovement, upNegate)) {\r\n                        if (!outFixedMovement.vec3_isZero(0.00001) &&\r\n                            (verticalMovement.vec3_isZero(0.00001) || !outFixedMovement.vec3_isConcordant(verticalMovement))) {\r\n                            collisionRuntimeParams.myHasPoppedOutCeiling = true;\r\n                        } else {\r\n                            collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                        }\r\n                    } else {\r\n                        collisionRuntimeParams.myHasReducedVerticalMovement = true;\r\n                    }\r\n                }\r\n\r\n                if (!popOutEnabled && !outFixedMovement.vec3_isConcordant(verticalMovement)) {\r\n                    outFixedMovement.vec3_zero();\r\n                }\r\n\r\n                if (!collisionCheckParams.myVerticalMovementReduceEnabled && collisionRuntimeParams.myHasReducedVerticalMovement) {\r\n                    outFixedMovement.vec3_copy(verticalMovement);\r\n                    collisionRuntimeParams.myHasReducedVerticalMovement = false;\r\n                }\r\n            } else {\r\n                outFixedMovement.vec3_copy(verticalMovement);\r\n            }\r\n        } else {\r\n            outFixedMovement.vec3_copy(verticalMovement);\r\n        }\r\n\r\n        if (outFixedMovement.vec3_length() < 0.00001) {\r\n            outFixedMovement.vec3_zero();\r\n        }\r\n\r\n        return outFixedMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._verticalPositionCheck = function () {\r\n    let smallHeightFixOffset = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let startPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _verticalPositionCheck(feetPosition, checkUpward, height, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        if (height < 0.00001) {\r\n            return true;\r\n        }\r\n\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && collisionCheckParams.myDebugVerticalPositionActive;\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        let isVerticalPositionOk = true;\r\n        let atLeastOneIsOk = false;\r\n\r\n        let adjustmentEpsilon = 0.00001;\r\n        smallHeightFixOffset = up.vec3_scale(adjustmentEpsilon, smallHeightFixOffset);\r\n        heightOffset = up.vec3_scale(height - adjustmentEpsilon, heightOffset);\r\n        if (height - adjustmentEpsilon < adjustmentEpsilon * 10) {\r\n            heightOffset = up.vec3_scale(adjustmentEpsilon * 10, heightOffset);\r\n        }\r\n\r\n        let insideHitSet = false;\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n\r\n            if (checkUpward) {\r\n                startPosition = currentPosition.vec3_add(smallHeightFixOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(heightOffset, endPosition);\r\n            } else {\r\n                startPosition = currentPosition.vec3_add(heightOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(smallHeightFixOffset, endPosition);\r\n            }\r\n\r\n            let origin = startPosition;\r\n            direction = endPosition.vec3_sub(origin, direction);\r\n            let distance = direction.vec3_length();\r\n            direction.vec3_normalize(direction);\r\n\r\n            let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let firstHitOutsideCollision = raycastResult.getFirstHitOutsideCollision();\r\n                if (firstHitOutsideCollision != null) {\r\n                    isVerticalPositionOk = false;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(firstHitOutsideCollision);\r\n                    break;\r\n                } else if (!insideHitSet) {\r\n                    insideHitSet = true;\r\n                    collisionRuntimeParams.myVerticalCollisionHit.copy(raycastResult.myHits[0]);\r\n                    if (!collisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk) {\r\n                        isVerticalPositionOk = false;\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                atLeastOneIsOk = true;\r\n            }\r\n        }\r\n\r\n        collisionRuntimeParams.myIsCollidingVertically = !isVerticalPositionOk || !atLeastOneIsOk;\r\n\r\n        return !collisionRuntimeParams.myIsCollidingVertically;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._getVerticalCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = PP.vec3_create();\r\n    return function _getVerticalCheckPositions(feetPosition, up, forward, collisionCheckParams, collisionRuntimeParams) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        if (collisionCheckParams.myGroundCircumferenceAddCenter) {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(feetPosition);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = collisionCheckParams.myFeetRadius / collisionCheckParams.myGroundCircumferenceStepAmount;\r\n        let sliceAngle = 360 / collisionCheckParams.myGroundCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < collisionCheckParams.myGroundCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = forward.vec3_rotateAxis(currentStepRotation, up, currentDirection);\r\n            for (let j = 0; j < collisionCheckParams.myGroundCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, up, tempCheckPosition);\r\n                checkPositions.push(feetPosition.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += collisionCheckParams.myGroundCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_verticalCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_verticalMovementAdjustment\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_verticalPositionCheck\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_getVerticalCheckPositions\", { enumerable: false });", "PP.CollisionCheck.prototype._updateSurfaceInfo = function () {\r\n    let transformUp = PP.vec3_create();\r\n    let transformForward = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n\r\n    let transformOffsetLocalQuat = PP.quat2_create();\r\n    let offsetTransformQuat = PP.quat2_create();\r\n\r\n    let forwardForPerceivedAngle = PP.vec3_create();\r\n    let forwardForVertical = PP.vec3_create();\r\n\r\n    let zAxis = PP.vec3_create(0, 0, 1);\r\n    let xAxis = PP.vec3_create(1, 0, 0);\r\n    return function _updateSurfaceInfo(transformQuat, collisionCheckParams, collisionRuntimeParams) {\r\n        transformOffsetLocalQuat.quat2_setPositionRotationQuat(collisionCheckParams.myPositionOffsetLocal, collisionCheckParams.myRotationOffsetLocalQuat);\r\n        offsetTransformQuat = transformOffsetLocalQuat.quat2_toWorld(transformQuat, offsetTransformQuat);\r\n        if (transformQuat.vec_equals(offsetTransformQuat, 0.00001)) {\r\n            offsetTransformQuat.quat2_copy(transformQuat);\r\n        }\r\n\r\n        transformUp = offsetTransformQuat.quat2_getUp(transformUp);\r\n        transformForward = offsetTransformQuat.quat2_getForward(transformForward);\r\n        feetPosition = offsetTransformQuat.quat2_getPosition(feetPosition);\r\n\r\n        let height = collisionCheckParams.myHeight;\r\n        height = height - 0.00001; // this makes it easier to setup things at the same exact height of a character so that it can go under it\r\n        if (height < 0.00001) {\r\n            height = 0;\r\n        }\r\n\r\n        forwardForPerceivedAngle.vec3_copy(transformForward);\r\n\r\n        forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n        if (!collisionCheckParams.myCheckVerticalFixedForwardEnabled) {\r\n            forwardForVertical.vec3_copy(transformForward);\r\n        } else {\r\n            if (collisionCheckParams.myCheckVerticalFixedForward.vec3_isOnAxis(transformUp)) {\r\n                if (zAxis.vec3_isOnAxis(transformUp)) {\r\n                    forwardForVertical.vec3_copy(xAxis);\r\n                } else {\r\n                    forwardForVertical.vec3_copy(zAxis);\r\n                }\r\n            }\r\n\r\n            forwardForVertical = forwardForVertical.vec3_removeComponentAlongAxis(transformUp, forwardForVertical);\r\n            forwardForVertical = forwardForVertical.vec3_normalize(forwardForVertical);\r\n\r\n            if (forwardForVertical.vec_equals(collisionCheckParams.myCheckVerticalFixedForward, 0.00001)) {\r\n                forwardForVertical.vec3_copy(collisionCheckParams.myCheckVerticalFixedForward);\r\n            }\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeGroundInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, true, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n\r\n        if (collisionCheckParams.myComputeCeilingInfoEnabled) {\r\n            this._gatherSurfaceInfo(feetPosition, height, transformUp, forwardForPerceivedAngle, forwardForVertical, false, collisionCheckParams, collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._postSurfaceCheck = function () {\r\n    let horizontalDirection = PP.vec3_create();\r\n    return function _postSurfaceCheck(fixedHorizontalMovement, originalVerticalMovement, transformUp, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams) {\r\n\r\n        let isVerticalMovementZero = originalVerticalMovement.vec3_isZero(0.00001);\r\n        let isVerticalMovemenDownward = Math.pp_sign(originalVerticalMovement.vec3_lengthSigned(transformUp), -1) < 0;\r\n\r\n        let horizontalMovementIsZero = fixedHorizontalMovement.vec3_isZero(0.00001);\r\n        horizontalDirection = fixedHorizontalMovement.vec3_normalize(horizontalDirection);\r\n\r\n        let groundPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myGroundNormal, horizontalDirection, transformUp, true);\r\n        let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(collisionRuntimeParams.myCeilingNormal, horizontalDirection, transformUp, false);\r\n\r\n        let mustRemainOnGroundOk = true;\r\n        if (collisionCheckParams.myMustStayOnGround) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !collisionRuntimeParams.myIsOnGround && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnGroundOk = false;\r\n            }\r\n        }\r\n\r\n        let mustRemainOnCeilingOk = true;\r\n        if (collisionCheckParams.myMustStayOnCeiling) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !collisionRuntimeParams.myIsOnCeiling && (isVerticalMovementZero || isVerticalMovemenDownward)) {\r\n                mustRemainOnCeilingOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowGroundAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowGroundAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowGroundAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowGroundAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myGroundAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowGroundAngleDownhill, collisionCheckParams.myGroundAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > minAngle + 0.0001) {\r\n                mustStayBelowGroundAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayBelowCeilingAngleOk = true;\r\n        if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill != null || collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n            let minAngle = null;\r\n            if (!collisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill) {\r\n                minAngle = collisionCheckParams.myMustStayBelowCeilingAngleDownhill;\r\n            } else if (collisionCheckParams.myMustStayBelowCeilingAngleDownhill == null) {\r\n                minAngle = collisionCheckParams.myCeilingAngleToIgnore;\r\n            } else {\r\n                minAngle = Math.min(collisionCheckParams.myMustStayBelowCeilingAngleDownhill, collisionCheckParams.myCeilingAngleToIgnore);\r\n            }\r\n\r\n            if (!horizontalMovementIsZero && groundPerceivedAngle < 0 && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingAngle <= minAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > minAngle + 0.0001) {\r\n                mustStayBelowCeilingAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnGroundHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnGroundHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnGround &&\r\n                previousCollisionRuntimeParams.myGroundHitMaxAngle <= collisionCheckParams.myMovementMustStayOnGroundHitAngle &&\r\n                collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundHitMaxAngle > collisionCheckParams.myMovementMustStayOnGroundHitAngle + 0.0001) {\r\n                mustStayOnGroundHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let mustStayOnCeilingHitAngleOk = true;\r\n        if (collisionCheckParams.myMovementMustStayOnCeilingHitAngle != null) {\r\n            if (!horizontalMovementIsZero && previousCollisionRuntimeParams.myIsOnCeiling &&\r\n                previousCollisionRuntimeParams.myCeilingHitMaxAngle <= collisionCheckParams.myMovementMustStayOnCeilingHitAngle &&\r\n                collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingHitMaxAngle > collisionCheckParams.myMovementMustStayOnCeilingHitAngle + 0.0001) {\r\n                mustStayOnCeilingHitAngleOk = false;\r\n            }\r\n        }\r\n\r\n        let isOnValidGroundAngleUphill = true;\r\n        let isOnValidGroundAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnGround && !horizontalMovementIsZero) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    isOnValidGroundAngleUphill = false;\r\n                    if (collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidGroundAngleUphill = Math.abs(groundPerceivedAngle) <= collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidGroundAngleDownhill) {\r\n                            isOnValidGroundAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnValidCeilingAngleUphill = true;\r\n        let isOnValidCeilingAngleDownhill = true;\r\n        if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n            if (previousCollisionRuntimeParams.myIsOnCeiling && !horizontalMovementIsZero) {\r\n                if (ceilingPerceivedAngle > 0) {\r\n                    isOnValidCeilingAngleUphill = false;\r\n                    if (collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                        collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                        isOnValidCeilingAngleUphill = Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                    }\r\n                } else if (ceilingPerceivedAngle < 0) {\r\n                    if (previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                        if (collisionCheckParams.myMustStayOnValidCeilingAngleDownhill) {\r\n                            isOnValidCeilingAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return mustRemainOnGroundOk && mustRemainOnCeilingOk && mustStayBelowGroundAngleOk && mustStayBelowCeilingAngleOk && mustStayOnGroundHitAngleOk && mustStayOnCeilingHitAngleOk && isOnValidGroundAngleUphill && isOnValidGroundAngleDownhill && isOnValidCeilingAngleUphill && isOnValidCeilingAngleDownhill;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._surfaceTooSteep = function () {\r\n    let surfaceSteepResults = [false, false];\r\n    return function _surfaceTooSteep(up, direction, collisionCheckParams, collisionRuntimeParams) {\r\n        let groundTooSteep = false;\r\n        let ceilingTooSteep = false;\r\n\r\n        if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle > collisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                collisionRuntimeParams.myGroundNormal,\r\n                direction, up, true);\r\n\r\n            groundTooSteep = groundPerceivedAngle > 0;\r\n            if (groundTooSteep &&\r\n                collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle != null &&\r\n                collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                groundTooSteep = Math.abs(groundPerceivedAngle) > collisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n            }\r\n        }\r\n\r\n        if (!groundTooSteep) {\r\n            if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle > collisionCheckParams.myCeilingAngleToIgnore + 0.0001) {\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                ceilingTooSteep = ceilingPerceivedAngle > 0;\r\n                if (ceilingTooSteep &&\r\n                    collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle != null &&\r\n                    collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle + 0.0001) {\r\n                    ceilingTooSteep = Math.abs(ceilingPerceivedAngle) > collisionCheckParams.myCeilingAngleToIgnore + 0.0001;\r\n                }\r\n            }\r\n        }\r\n\r\n        surfaceSteepResults[0] = groundTooSteep;\r\n        surfaceSteepResults[1] = ceilingTooSteep;\r\n        return surfaceSteepResults;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._adjustVerticalMovementWithSurface = function () {\r\n    let horizontalDirection = PP.vec3_create();\r\n    let extraVerticalMovement = PP.vec3_create();\r\n    return function _adjustVerticalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedVerticalMovement) {\r\n        outAdjustedVerticalMovement.vec3_copy(verticalMovement);\r\n\r\n        if (horizontalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedVerticalMovement;\r\n        }\r\n\r\n        let extraVerticalLength = 0;\r\n        horizontalDirection = horizontalMovement.vec3_normalize(horizontalDirection);\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myGroundNormal,\r\n                horizontalDirection, up, true);\r\n\r\n            let groundExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n            groundExtraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n            if (Math.abs(groundExtraVerticalLength) > 0.00001) {\r\n                if (groundPerceivedAngle > 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = true;\r\n                    }\r\n                } else if (groundPerceivedAngle < 0) {\r\n                    if (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle == null || Math.abs(groundPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle) &&\r\n                        (collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myGroundAngle <= collisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle)) {\r\n                        extraVerticalLength = groundExtraVerticalLength;\r\n                        collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                previousCollisionRuntimeParams.myCeilingNormal,\r\n                horizontalDirection, up, false);\r\n\r\n            let ceilingExtraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n            ceilingExtraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n\r\n            if (Math.abs(ceilingExtraVerticalLength) > 0.00001) {\r\n                let sameSignThanGround = Math.pp_sign(extraVerticalLength) == Math.pp_sign(ceilingExtraVerticalLength);\r\n                if (extraVerticalLength == 0 || (sameSignThanGround && Math.abs(ceilingExtraVerticalLength) > Math.abs(extraVerticalLength))) {\r\n                    if (ceilingPerceivedAngle > 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                        }\r\n                    } else if (ceilingPerceivedAngle < 0) {\r\n                        if (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle == null || Math.abs(ceilingPerceivedAngle) <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle) &&\r\n                            (collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle == null || previousCollisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle)) {\r\n                            extraVerticalLength = ceilingExtraVerticalLength;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = true;\r\n                            collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Math.abs(extraVerticalLength) > 0.00001) {\r\n            let verticalMovementLength = verticalMovement.vec3_lengthSigned(up);\r\n            let sameSignThanExtra = Math.pp_sign(extraVerticalLength) == Math.pp_sign(verticalMovementLength);\r\n            extraVerticalMovement = up.vec3_scale(extraVerticalLength, extraVerticalMovement);\r\n            if (verticalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedVerticalMovement.vec3_copy(extraVerticalMovement);\r\n            } else if (sameSignThanExtra) {\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else if (!sameSignThanExtra && (\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill ||\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill)) {\r\n                // do not add for downhill, since it means the vertical movement was about to go away from surface and u should not cancel that\r\n                outAdjustedVerticalMovement = verticalMovement.vec3_add(extraVerticalMovement, outAdjustedVerticalMovement);\r\n            } else {\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = false;\r\n                collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = false;\r\n            }\r\n        }\r\n\r\n        if (outAdjustedVerticalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedVerticalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedVerticalMovement;\r\n    }\r\n}();\r\n\r\nPP.CollisionCheck.prototype._adjustHorizontalMovementWithSurface = function () {\r\n    let extraHorizontalMovement = PP.vec3_create();\r\n    let groundHorizontalDirection = PP.vec3_create();\r\n    let ceilingHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = PP.vec3_create();\r\n    let scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = PP.vec3_create();\r\n    return function _adjustHorizontalMovementWithSurface(horizontalMovement, verticalMovement, up, collisionCheckParams, collisionRuntimeParams, previousCollisionRuntimeParams, outAdjustedHorizontalMovement) {\r\n        outAdjustedHorizontalMovement.vec3_copy(horizontalMovement);\r\n\r\n        if (verticalMovement.vec3_isZero(0.00001)) {\r\n            return outAdjustedHorizontalMovement;\r\n        }\r\n\r\n        let isMovementDownward = !verticalMovement.vec3_isConcordant(up);\r\n\r\n        extraHorizontalMovement.vec3_zero();\r\n        groundHorizontalDirection.vec3_zero();\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnGround) {\r\n            groundHorizontalDirection = previousCollisionRuntimeParams.myGroundNormal.vec3_removeComponentAlongAxis(up, groundHorizontalDirection);\r\n            if (!groundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                groundHorizontalDirection.vec3_normalize(groundHorizontalDirection);\r\n\r\n                let groundExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myGroundAngle));\r\n                groundExtraHorizontalLength *= (isMovementDownward) ? 1 : -1;\r\n\r\n                if (Math.abs(groundExtraHorizontalLength) > 0.00001) {\r\n                    if (isMovementDownward) {\r\n                        if (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill &&\r\n                            (collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myGroundAngle >= collisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle)) {\r\n                            extraHorizontalMovement = groundHorizontalDirection.vec3_scale(groundExtraHorizontalLength, extraHorizontalMovement);\r\n                            collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (previousCollisionRuntimeParams.myIsOnCeiling) {\r\n            ceilingHorizontalDirection = previousCollisionRuntimeParams.myCeilingNormal.vec3_removeComponentAlongAxis(up, ceilingHorizontalDirection);\r\n            if (!ceilingHorizontalDirection.vec3_isZero(0.00001)) {\r\n                ceilingHorizontalDirection.vec3_normalize(ceilingHorizontalDirection);\r\n\r\n                let ceilingExtraHorizontalLength = verticalMovement.vec3_length() / Math.tan(Math.pp_toRadians(previousCollisionRuntimeParams.myCeilingAngle));\r\n                ceilingExtraHorizontalLength *= (isMovementDownward) ? -1 : 1;\r\n\r\n                if (Math.abs(ceilingExtraHorizontalLength) > 0.00001) {\r\n                    let sameDirectionAsGround = ceilingHorizontalDirection.vec3_isConcordant(groundHorizontalDirection);\r\n                    if (extraHorizontalMovement.vec3_isZero() || sameDirectionAsGround) {\r\n                        if (!isMovementDownward) {\r\n                            if (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill &&\r\n                                (collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle == null || previousCollisionRuntimeParams.myCeilingAngle >= collisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle)) {\r\n                                scaledCeilingHorizontalDirection = ceilingHorizontalDirection.vec3_scale(ceilingExtraHorizontalLength, scaledCeilingHorizontalDirection);\r\n                                if (!groundHorizontalDirection.vec3_isZero()) {\r\n                                    scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_removeComponentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n                                    scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection = scaledCeilingHorizontalDirection.vec3_componentAlongAxis(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection);\r\n\r\n                                    if (scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection.vec3_isFartherAlongAxis(extraHorizontalMovement, groundHorizontalDirection)) {\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = false;\r\n                                        extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    } else if (!scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection.vec3_isZero(0.00001)) {\r\n                                        extraHorizontalMovement = extraHorizontalMovement.vec3_add(scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection, extraHorizontalMovement);\r\n                                        collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                    }\r\n                                } else {\r\n                                    extraHorizontalMovement.vec3_copy(scaledCeilingHorizontalDirection);\r\n                                    collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!extraHorizontalMovement.vec3_isZero()) {\r\n            if (horizontalMovement.vec3_isZero(0.00001)) {\r\n                outAdjustedHorizontalMovement.vec3_copy(extraHorizontalMovement);\r\n            } else if (extraHorizontalMovement.vec3_isConcordant(horizontalMovement)) {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            } else {\r\n                outAdjustedHorizontalMovement = horizontalMovement.vec3_add(extraHorizontalMovement, outAdjustedHorizontalMovement);\r\n            }\r\n        }\r\n\r\n        if (outAdjustedHorizontalMovement.vec3_isZero(0.000001)) {\r\n            outAdjustedHorizontalMovement.vec3_zero();\r\n        }\r\n\r\n        return outAdjustedHorizontalMovement;\r\n    }\r\n}();\r\n\r\n// useless now\r\nPP.CollisionCheck.prototype._computeExtraSurfaceVerticalMovement = function () {\r\n    let direction = PP.vec3_create();\r\n    let tempVector = PP.vec3_create();\r\n    return function _computeExtraSurfaceVerticalMovement(horizontalMovement, up, collisionCheckParams, collisionRuntimeParams, outExtraSurfaceVerticalMovement) {\r\n        outExtraSurfaceVerticalMovement.vec3_zero();\r\n\r\n        if (!horizontalMovement.vec3_isZero()) {\r\n            if (collisionRuntimeParams.myIsOnGround && collisionRuntimeParams.myGroundAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let groundPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myGroundNormal,\r\n                    direction, up, true);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(groundPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(groundPerceivedAngle);\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnGroundEnabled || extraVerticalLength > 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            } else if (collisionRuntimeParams.myIsOnCeiling && collisionRuntimeParams.myCeilingAngle != 0) {\r\n                direction = horizontalMovement.vec3_normalize(direction);\r\n                let ceilingPerceivedAngle = this.computeSurfacePerceivedAngle(\r\n                    collisionRuntimeParams.myCeilingNormal,\r\n                    direction, up, false);\r\n\r\n                let extraVerticalLength = horizontalMovement.vec3_length() * Math.tan(Math.pp_toRadians(Math.abs(ceilingPerceivedAngle)));\r\n                extraVerticalLength *= Math.pp_sign(ceilingPerceivedAngle);\r\n                extraVerticalLength *= -1;\r\n\r\n                if (Math.abs(extraVerticalLength) > 0.00001 && (collisionCheckParams.mySnapOnCeilingEnabled || extraVerticalLength < 0)) {\r\n                    outExtraSurfaceVerticalMovement.vec3_add(up.vec3_scale(extraVerticalLength, tempVector), outExtraSurfaceVerticalMovement);\r\n                }\r\n            }\r\n        }\r\n\r\n        return outExtraSurfaceVerticalMovement;\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype._gatherSurfaceInfo = function () {\r\n    let verticalDirection = PP.vec3_create();\r\n    let startOffset = PP.vec3_create();\r\n    let endOffset = PP.vec3_create();\r\n    let heightOffset = PP.vec3_create();\r\n    let smallOffset = PP.vec3_create();\r\n    let smallStartPosition = PP.vec3_create();\r\n    let smallEndPosition = PP.vec3_create();\r\n    let surfaceNormal = PP.vec3_create();\r\n    let surfaceHitMaxNormal = PP.vec3_create();\r\n    let hitFromCurrentPosition = PP.vec3_create();\r\n    let startPosition = PP.vec3_create();\r\n    let endPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    return function _gatherSurfaceInfo(feetPosition, height, up, forwardForPerceivedAngle, forwardForVertical, isGround, collisionCheckParams, collisionRuntimeParams) {\r\n        this._myDebugActive = collisionCheckParams.myDebugActive && ((isGround && collisionCheckParams.myDebugGroundInfoActive) || (!isGround && collisionCheckParams.myDebugCeilingInfoActive));\r\n\r\n        let checkPositions = this._getVerticalCheckPositions(feetPosition, up, forwardForVertical, collisionCheckParams, collisionRuntimeParams);\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        let distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnGround;\r\n        let distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeGroundInfo;\r\n        let distanceToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxOutsideDistance;\r\n        let verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnGround;\r\n        let verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeGroundInfo;\r\n        let verticalFixToFindSurfaceDistance = collisionCheckParams.myFindGroundDistanceMaxInsideDistance;\r\n        let isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnGroundIfInsideHit;\r\n        let isBaseInsideCollisionCheckEnabled = collisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled;\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n            distanceToBeOnSurface = collisionCheckParams.myDistanceToBeOnCeiling;\r\n            distanceToComputeSurfaceInfo = collisionCheckParams.myDistanceToComputeCeilingInfo;\r\n            distanceToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxOutsideDistance;\r\n            verticalFixToBeOnSurface = collisionCheckParams.myVerticalFixToBeOnCeiling;\r\n            verticalFixToComputeSurfaceInfo = collisionCheckParams.myVerticalFixToComputeCeilingInfo;\r\n            verticalFixToFindSurfaceDistance = collisionCheckParams.myFindCeilingDistanceMaxInsideDistance;\r\n            isOnSurfaceIfInsideHit = collisionCheckParams.myIsOnCeilingIfInsideHit;\r\n            isBaseInsideCollisionCheckEnabled = collisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled;\r\n        }\r\n\r\n        startOffset = verticalDirection.vec3_scale(Math.max(verticalFixToBeOnSurface, verticalFixToComputeSurfaceInfo, verticalFixToFindSurfaceDistance, 0.00001), startOffset);\r\n        endOffset = verticalDirection.vec3_negate(endOffset).vec3_scale(Math.max(distanceToBeOnSurface, distanceToComputeSurfaceInfo, distanceToFindSurfaceDistance, 0.00001), endOffset);\r\n\r\n        heightOffset.vec3_zero();\r\n        if (!isGround) {\r\n            heightOffset = up.vec3_scale(height, heightOffset);\r\n        }\r\n\r\n        smallOffset = verticalDirection.vec3_scale(0.0001, smallOffset);\r\n\r\n        let isOnSurface = false;\r\n        let surfaceAngle = 0;\r\n        let surfacePerceivedAngle = 0;\r\n        surfaceNormal.vec3_zero();\r\n\r\n        let surfaceHitMaxAngle = 0;\r\n        surfaceHitMaxNormal.vec3_zero();\r\n\r\n        let surfaceDistance = null;\r\n        let isBaseInsideCollision = checkPositions.length > 0;\r\n\r\n        for (let i = 0; i < checkPositions.length; i++) {\r\n            let currentPosition = checkPositions[i];\r\n            currentPosition.vec3_add(heightOffset, currentPosition);\r\n\r\n            let baseHitIsInsideCollision = false;\r\n            if (isBaseInsideCollisionCheckEnabled) {\r\n                smallStartPosition = currentPosition.vec3_add(smallOffset, smallStartPosition);\r\n                smallEndPosition = currentPosition.vec3_sub(smallOffset, smallEndPosition);\r\n\r\n                let origin = smallStartPosition;\r\n                direction = smallEndPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, false, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    baseHitIsInsideCollision = raycastResult.myHits[0].myIsInsideCollision;\r\n                }\r\n            }\r\n\r\n            isBaseInsideCollision &&= baseHitIsInsideCollision;\r\n\r\n            if (!baseHitIsInsideCollision) {\r\n                startPosition = currentPosition.vec3_add(startOffset, startPosition);\r\n                endPosition = currentPosition.vec3_add(endOffset, endPosition);\r\n\r\n                let origin = startPosition;\r\n                direction = endPosition.vec3_sub(origin, direction);\r\n                let distance = direction.vec3_length();\r\n                direction.vec3_normalize(direction);\r\n                let raycastResult = this._raycastAndDebug(origin, direction, distance, true, false, collisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    hitFromCurrentPosition = raycastResult.myHits[0].myPosition.vec3_sub(currentPosition, hitFromCurrentPosition);\r\n                    let hitFromCurrentPositionLength = hitFromCurrentPosition.vec3_lengthSigned(verticalDirection);\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToBeOnSurface + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToBeOnSurface + 0.00001)) {\r\n                        isOnSurface = true;\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToComputeSurfaceInfo + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToComputeSurfaceInfo + 0.00001)) {\r\n                        let currentSurfaceNormal = raycastResult.myHits[0].myNormal;\r\n                        surfaceNormal.vec3_add(currentSurfaceNormal, surfaceNormal);\r\n\r\n                        let surfaceHitAngle = currentSurfaceNormal.vec3_angle(verticalDirection);\r\n                        if (surfaceHitAngle > surfaceHitMaxAngle) {\r\n                            surfaceHitMaxAngle = surfaceHitAngle;\r\n                            surfaceHitMaxNormal.vec3_copy(currentSurfaceNormal);\r\n                        }\r\n                    }\r\n\r\n                    if ((hitFromCurrentPositionLength >= 0 && hitFromCurrentPositionLength <= verticalFixToFindSurfaceDistance + 0.00001) ||\r\n                        (hitFromCurrentPositionLength < 0 && Math.abs(hitFromCurrentPositionLength) <= distanceToFindSurfaceDistance + 0.00001)) {\r\n                        if (surfaceDistance == null) {\r\n                            surfaceDistance = -hitFromCurrentPositionLength;\r\n                        } else {\r\n                            if (Math.abs(hitFromCurrentPositionLength) < Math.abs(surfaceDistance)) {\r\n                                surfaceDistance = -hitFromCurrentPositionLength;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else if (isOnSurfaceIfInsideHit) {\r\n                isOnSurface = true;\r\n            }\r\n        }\r\n\r\n        if (!surfaceNormal.vec3_isZero()) {\r\n            surfaceNormal.vec3_normalize(surfaceNormal);\r\n            surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n\r\n            if (surfaceAngle <= 0.0001) {\r\n                surfaceAngle = 0;\r\n                surfaceNormal.vec3_copy(verticalDirection);\r\n            } else if (surfaceAngle >= 180 - 0.0001) {\r\n                surfaceAngle = 180;\r\n                surfaceNormal = verticalDirection.vec3_negate(surfaceNormal);\r\n            }\r\n\r\n            surfacePerceivedAngle = this.computeSurfacePerceivedAngle(surfaceNormal, forwardForPerceivedAngle, up, isGround);\r\n        }\r\n\r\n        if (isGround) {\r\n            collisionRuntimeParams.myRealIsOnGround = isOnSurface;\r\n\r\n            collisionRuntimeParams.myGroundAngle = surfaceAngle;\r\n            collisionRuntimeParams.myGroundPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myGroundNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myGroundHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myGroundDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myGroundIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnGroundMaxSurfaceAngle == null || collisionRuntimeParams.myGroundAngle <= collisionCheckParams.myIsOnGroundMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnGround = isOnSurface;\r\n            }\r\n        } else {\r\n            collisionRuntimeParams.myRealIsOnCeiling = isOnSurface;\r\n\r\n            collisionRuntimeParams.myCeilingAngle = surfaceAngle;\r\n            collisionRuntimeParams.myCeilingPerceivedAngle = surfacePerceivedAngle;\r\n            collisionRuntimeParams.myCeilingNormal.vec3_copy(surfaceNormal);\r\n\r\n            collisionRuntimeParams.myCeilingHitMaxAngle = surfaceHitMaxAngle;\r\n            collisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(surfaceHitMaxNormal);\r\n\r\n            collisionRuntimeParams.myCeilingDistance = surfaceDistance;\r\n\r\n            collisionRuntimeParams.myCeilingIsBaseInsideCollision = isBaseInsideCollision;\r\n\r\n            if (isOnSurface && (collisionCheckParams.myIsOnCeilingMaxSurfaceAngle == null || collisionRuntimeParams.myCeilingAngle <= collisionCheckParams.myIsOnCeilingMaxSurfaceAngle)) {\r\n                collisionRuntimeParams.myIsOnCeiling = isOnSurface;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CollisionCheck.prototype.computeSurfacePerceivedAngle = function () {\r\n    let forwardOnSurface = PP.vec3_create();\r\n    let verticalDirection = PP.vec3_create();\r\n    return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n        let surfacePerceivedAngle = 0;\r\n\r\n        verticalDirection.vec3_copy(up);\r\n        if (!isGround) {\r\n            verticalDirection.vec3_negate(verticalDirection);\r\n        }\r\n\r\n        let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n        if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 0;\r\n        } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n            surfaceAngle = 180;\r\n        }\r\n\r\n        forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n        surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n        let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n        if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n            surfacePerceivedAngle *= -1;\r\n        }\r\n\r\n        if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n            if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n            } else {\r\n                surfacePerceivedAngle = surfaceAngle;\r\n            }\r\n        }\r\n\r\n        return surfacePerceivedAngle;\r\n    };\r\n}();\r\n\r\n\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_surfaceTooSteep\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_computeExtraSurfaceVerticalMovement\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_gatherSurfaceInfo\", { enumerable: false });\r\nObject.defineProperty(PP.CollisionCheck.prototype, \"_updateSurfaceInfo\", { enumerable: false });", "PP.CollisionCheckBridge = {\r\n    _myCollisionCheck: new PP.CollisionCheck(),\r\n\r\n    checkMovement: function () {\r\n        let collisionCheckParams = new PP.CollisionCheckParams();\r\n        let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        return function checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            this._myCollisionCheck.move(movement, currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    checkTeleportToTransform: function () {\r\n        let teleportPosition = PP.vec3_create();\r\n        let collisionCheckParams = new PP.CollisionCheckParams();\r\n        let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        return function checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            teleportPosition = teleportTransformQuat.quat2_getPosition(teleportPosition);\r\n            this._myCollisionCheck.teleport(teleportPosition, teleportTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    checkTransform: function () {\r\n        let collisionCheckParams = new PP.CollisionCheckParams();\r\n        let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        return function checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            this._myCollisionCheck.positionCheck(true, checkTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, checkTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    updateGroundInfo: function () {\r\n        let collisionCheckParams = new PP.CollisionCheckParams();\r\n        let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        return function updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            collisionCheckParams.myComputeCeilingInfoEnabled = false;\r\n            this._myCollisionCheck.updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    updateCeilingInfo: function () {\r\n        let collisionCheckParams = new PP.CollisionCheckParams();\r\n        let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        return function updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n            this.convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, collisionCheckParams);\r\n            this.convertCharacterCollisionResultsToCollisionRuntimeParams(prevCharacterCollisionResults, collisionRuntimeParams);\r\n            collisionCheckParams.myComputeGroundInfoEnabled = false;\r\n            this._myCollisionCheck.updateSurfaceInfo(currentTransformQuat, collisionCheckParams, collisionRuntimeParams);\r\n            this.convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults);\r\n        }\r\n    }(),\r\n    convertCharacterCollisionResultsToCollisionRuntimeParams: function (characterCollisionResults, outCollisionRuntimeParams) {\r\n        outCollisionRuntimeParams.reset();\r\n\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPosition);\r\n        characterCollisionResults.myTransformResults.myEndTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myNewPosition);\r\n\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getForward(outCollisionRuntimeParams.myOriginalForward);\r\n        characterCollisionResults.myTransformResults.myStartTransformQuat.quat2_getUp(outCollisionRuntimeParams.myOriginalUp);\r\n\r\n        //ok: outCollisionRuntimeParams.myOriginalHeight = characterCollisionResults.myOriginalHeight;\r\n\r\n        outCollisionRuntimeParams.myOriginalMovement.vec3_copy(characterCollisionResults.myMovementResults.myStartMovement);\r\n        outCollisionRuntimeParams.myFixedMovement.vec3_copy(characterCollisionResults.myMovementResults.myEndMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidOriginalHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidOriginalVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidEndHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidEndVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement);\r\n        outCollisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement);\r\n\r\n        outCollisionRuntimeParams.myIsOnGround = characterCollisionResults.myGroundInfo.myIsOnSurface;\r\n        outCollisionRuntimeParams.myGroundAngle = characterCollisionResults.myGroundInfo.mySurfaceAngle;\r\n        outCollisionRuntimeParams.myGroundPerceivedAngle = characterCollisionResults.myGroundInfo.mySurfacePerceivedAngle;\r\n        outCollisionRuntimeParams.myGroundNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceNormal);\r\n        outCollisionRuntimeParams.myGroundHitMaxAngle = characterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle;\r\n        outCollisionRuntimeParams.myGroundHitMaxNormal.vec3_copy(characterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal);\r\n        outCollisionRuntimeParams.myGroundDistance = characterCollisionResults.myGroundInfo.mySurfaceDistance;\r\n        outCollisionRuntimeParams.myGroundIsBaseInsideCollision = characterCollisionResults.myGroundInfo.myIsBaseInsideCollision;\r\n\r\n        outCollisionRuntimeParams.myIsOnCeiling = characterCollisionResults.myCeilingInfo.myIsOnSurface;\r\n        outCollisionRuntimeParams.myCeilingAngle = characterCollisionResults.myCeilingInfo.mySurfaceAngle;\r\n        outCollisionRuntimeParams.myCeilingPerceivedAngle = characterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle;\r\n        outCollisionRuntimeParams.myCeilingNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceNormal);\r\n        outCollisionRuntimeParams.myCeilingHitMaxAngle = characterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle;\r\n        outCollisionRuntimeParams.myCeilingHitMaxNormal.vec3_copy(characterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal);\r\n        outCollisionRuntimeParams.myCeilingDistance = characterCollisionResults.myCeilingInfo.mySurfaceDistance;\r\n        outCollisionRuntimeParams.myCeilingIsBaseInsideCollision = characterCollisionResults.myCeilingInfo.myIsBaseInsideCollision;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementCanceled = characterCollisionResults.myHorizontalMovementResults.myMovementFailed;\r\n        outCollisionRuntimeParams.myIsCollidingHorizontally = characterCollisionResults.myHorizontalMovementResults.myIsColliding;\r\n        outCollisionRuntimeParams.myHorizontalCollisionHit.copy(characterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit);\r\n\r\n        outCollisionRuntimeParams.myVerticalMovementCanceled = characterCollisionResults.myVerticalMovementResults.myMovementFailed;\r\n        outCollisionRuntimeParams.myIsCollidingVertically = characterCollisionResults.myVerticalMovementResults.myIsColliding;\r\n        outCollisionRuntimeParams.myVerticalCollisionHit.copy(characterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit);\r\n\r\n        outCollisionRuntimeParams.myHasSnappedOnGround = characterCollisionResults.myGroundResults.myHasSnappedOnSurface;\r\n        outCollisionRuntimeParams.myHasSnappedOnCeiling = characterCollisionResults.myCeilingResults.myHasSnappedOnSurface;\r\n        outCollisionRuntimeParams.myHasPoppedOutGround = characterCollisionResults.myGroundResults.myHasPoppedOutSurface;\r\n        outCollisionRuntimeParams.myHasPoppedOutCeiling = characterCollisionResults.myCeilingResults.myHasPoppedOutSurface;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill = characterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill = characterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n        outCollisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill = characterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n        outCollisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill = characterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n\r\n        //ok: outCollisionRuntimeParams.myHasReducedVerticalMovement = characterCollisionResults.myVerticalMovementResults.myHasMovementBeenReduced;\r\n\r\n        outCollisionRuntimeParams.myIsSliding = characterCollisionResults.myWallSlideResults.myHasSlid;\r\n        outCollisionRuntimeParams.mySlidingMovementAngle = characterCollisionResults.myWallSlideResults.mySlideMovementAngle;\r\n        outCollisionRuntimeParams.mySlidingCollisionAngle = characterCollisionResults.myWallSlideResults.mySlideMovementWallAngle;\r\n        outCollisionRuntimeParams.mySlidingWallNormal.vec3_copy(characterCollisionResults.myWallSlideResults.myWallNormal);\r\n\r\n        outCollisionRuntimeParams.myIsSlidingIntoOppositeDirection = characterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection;\r\n        outCollisionRuntimeParams.myIsSlidingFlickerPrevented = characterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented;\r\n        outCollisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter = characterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter;\r\n        outCollisionRuntimeParams.mySliding90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign;\r\n        outCollisionRuntimeParams.mySlidingRecompute90DegreesSign = characterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign;\r\n        outCollisionRuntimeParams.myLastValidIsSliding = characterCollisionResults.myInternalResults.myLastRelevantHasWallSlid;\r\n        outCollisionRuntimeParams.mySlidingPreviousHorizontalMovement.vec3_copy(characterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement);\r\n\r\n        outCollisionRuntimeParams.myOriginalTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myStartTeleportTransformQuat);\r\n        outCollisionRuntimeParams.myFixedTeleportPosition.vec3_copy(characterCollisionResults.myTeleportResults.myEndTeleportTransformQuat);\r\n        outCollisionRuntimeParams.myTeleportCanceled = characterCollisionResults.myTeleportResults.myTeleportFailed;\r\n\r\n        outCollisionRuntimeParams.myIsPositionOk = characterCollisionResults.myCheckTransformResults.myCheckTransformFailed;\r\n        characterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myOriginalPositionCheckPosition);\r\n        characterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_getPosition(outCollisionRuntimeParams.myFixedPositionCheckPosition);\r\n\r\n        outCollisionRuntimeParams.myIsTeleport = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_TELEPORT;\r\n        outCollisionRuntimeParams.myIsMove = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n        outCollisionRuntimeParams.myIsPositionCheck = characterCollisionResults.myCheckType == PP.CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n\r\n        outCollisionRuntimeParams.mySplitMovementSteps = characterCollisionResults.mySplitMovementResults.myStepsToPerform;\r\n        outCollisionRuntimeParams.mySplitMovementStepsPerformed = characterCollisionResults.mySplitMovementResults.myStepsPerformed;\r\n        outCollisionRuntimeParams.mySplitMovementStop = characterCollisionResults.mySplitMovementResults.myMovementInterrupted;\r\n        outCollisionRuntimeParams.mySplitMovementMovementChecked.vec3_copy(characterCollisionResults.mySplitMovementResults.myMovementChecked);\r\n\r\n        return outCollisionRuntimeParams;\r\n    },\r\n    convertCollisionRuntimeParamsToCharacterCollisionResults: function () {\r\n        let rotationQuat = PP.quat_create();\r\n        return function convertCollisionRuntimeParamsToCharacterCollisionResults(collisionRuntimeParams, currentTransformQuat, outCharacterCollisionResults) {\r\n            outCharacterCollisionResults.reset();\r\n\r\n            if (collisionRuntimeParams.myIsMove) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_MOVEMENT;\r\n            } else if (collisionRuntimeParams.myIsTeleport) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_TELEPORT;\r\n            } else if (collisionRuntimeParams.myIsPositionCheck) {\r\n                outCharacterCollisionResults.myCheckType = PP.CharacterCollisionCheckType.CHECK_TRANSFORM;\r\n            }\r\n\r\n            rotationQuat.quat_setForward(collisionRuntimeParams.myOriginalForward, collisionRuntimeParams.myOriginalUp);\r\n            outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myOriginalPosition, rotationQuat);\r\n            outCharacterCollisionResults.myTransformResults.myEndTransformQuat.quat2_setPositionRotationQuat(collisionRuntimeParams.myNewPosition, rotationQuat);\r\n\r\n            outCharacterCollisionResults.myMovementResults.myStartMovement.vec3_copy(collisionRuntimeParams.myOriginalMovement);\r\n            outCharacterCollisionResults.myMovementResults.myEndMovement.vec3_copy(collisionRuntimeParams.myFixedMovement);\r\n            outCharacterCollisionResults.myMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled && collisionRuntimeParams.myVerticalMovementCanceled;\r\n            outCharacterCollisionResults.myMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally || collisionRuntimeParams.myIsCollidingVertically;\r\n            if (collisionRuntimeParams.myIsCollidingHorizontally) {\r\n                outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n            } else if (collisionRuntimeParams.myIsCollidingVertically) {\r\n                outCharacterCollisionResults.myMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n            }\r\n\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myMovementFailed = collisionRuntimeParams.myHorizontalMovementCanceled;\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingHorizontally;\r\n            outCharacterCollisionResults.myHorizontalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myHorizontalCollisionHit);\r\n\r\n            outCharacterCollisionResults.myVerticalMovementResults.myMovementFailed = collisionRuntimeParams.myVerticalMovementCanceled;\r\n            outCharacterCollisionResults.myVerticalMovementResults.myIsColliding = collisionRuntimeParams.myIsCollidingVertically;\r\n            outCharacterCollisionResults.myVerticalMovementResults.myReferenceCollisionHit.copy(collisionRuntimeParams.myVerticalCollisionHit);\r\n\r\n            outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n            outCharacterCollisionResults.myTeleportResults.myStartTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalTeleportPosition);\r\n            outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n            outCharacterCollisionResults.myTeleportResults.myEndTeleportTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedTeleportPosition);\r\n            outCharacterCollisionResults.myTeleportResults.myTeleportFailed = collisionRuntimeParams.myTeleportCanceled;\r\n\r\n            outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myStartTransformQuat);\r\n            outCharacterCollisionResults.myCheckTransformResults.myStartCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myOriginalPositionCheckPosition);\r\n            outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_copy(outCharacterCollisionResults.myTransformResults.myEndTransformQuat);\r\n            outCharacterCollisionResults.myCheckTransformResults.myEndCheckTransformQuat.quat2_setPosition(collisionRuntimeParams.myFixedPositionCheckPosition);\r\n            outCharacterCollisionResults.myCheckTransformResults.myCheckTransformFailed = !collisionRuntimeParams.myIsPositionOk;\r\n\r\n            outCharacterCollisionResults.myWallSlideResults.myHasSlid = collisionRuntimeParams.myIsSliding;\r\n            outCharacterCollisionResults.myWallSlideResults.mySlideMovementAngle = collisionRuntimeParams.mySlidingMovementAngle;\r\n            outCharacterCollisionResults.myWallSlideResults.mySlideMovementWallAngle = collisionRuntimeParams.mySlidingCollisionAngle;\r\n            outCharacterCollisionResults.myWallSlideResults.myWallNormal.vec3_copy(ollisionRuntimeParams.mySlidingWallNormal);\r\n\r\n            outCharacterCollisionResults.myGroundInfo.myIsOnSurface = collisionRuntimeParams.myIsOnGround;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceAngle = collisionRuntimeParams.myGroundAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myGroundPerceivedAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myGroundNormal);\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myGroundHitMaxAngle;\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myGroundHitMaxNormal);\r\n            outCharacterCollisionResults.myGroundInfo.mySurfaceDistance = collisionRuntimeParams.myGroundDistance;\r\n            outCharacterCollisionResults.myGroundInfo.myIsBaseInsideCollision = collisionRuntimeParams.myGroundIsBaseInsideCollision;\r\n\r\n            outCharacterCollisionResults.myCeilingInfo.myIsOnSurface = collisionRuntimeParams.myIsOnCeiling;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceAngle = collisionRuntimeParams.myCeilingAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfacePerceivedAngle = collisionRuntimeParams.myCeilingPerceivedAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceNormal.vec3_copy(collisionRuntimeParams.myCeilingNormal);\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxAngle = collisionRuntimeParams.myCeilingHitMaxAngle;\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceHitMaxNormal.vec3_copy(collisionRuntimeParams.myCeilingHitMaxNormal);\r\n            outCharacterCollisionResults.myCeilingInfo.mySurfaceDistance = collisionRuntimeParams.myCeilingDistance;\r\n            outCharacterCollisionResults.myCeilingInfo.myIsBaseInsideCollision = collisionRuntimeParams.myCeilingIsBaseInsideCollision;\r\n\r\n            outCharacterCollisionResults.myGroundResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnGround;\r\n            outCharacterCollisionResults.myGroundResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutGround;\r\n            outCharacterCollisionResults.myCeilingResults.myHasSnappedOnSurface = collisionRuntimeParams.myHasSnappedOnCeiling;\r\n            outCharacterCollisionResults.myCeilingResults.myHasPoppedOutSurface = collisionRuntimeParams.myHasPoppedOutCeiling;\r\n\r\n            outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleDownhill;\r\n            outCharacterCollisionResults.myGroundResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnGroundPerceivedAngleUphill;\r\n            outCharacterCollisionResults.myGroundResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnGroundAngleDownhill;\r\n\r\n            outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleDownhill;\r\n            outCharacterCollisionResults.myCeilingResults.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = collisionRuntimeParams.myHorizontalMovementHasAdjustedVerticalMovementBasedOnCeilingPerceivedAngleUphill;\r\n            outCharacterCollisionResults.myCeilingResults.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = collisionRuntimeParams.myVerticalMovementHasAdjustedHorizontalMovementBasedOnCeilingAngleDownhill;\r\n\r\n            outCharacterCollisionResults.mySplitMovementResults.myStepsToPerform = collisionRuntimeParams.mySplitMovementSteps;\r\n            outCharacterCollisionResults.mySplitMovementResults.myStepsPerformed = collisionRuntimeParams.mySplitMovementStepsPerformed;\r\n            outCharacterCollisionResults.mySplitMovementResults.myMovementInterrupted = collisionRuntimeParams.mySplitMovementStop;\r\n            outCharacterCollisionResults.mySplitMovementResults.myMovementChecked.vec3_copy(collisionRuntimeParams.mySplitMovementMovementChecked);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantEndHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidOriginalVerticalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantEndVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidEndVerticalMovement);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedHorizontalMovement);\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(collisionRuntimeParams.myLastValidSurfaceAdjustedVerticalMovement);\r\n\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantHasWallSlid = collisionRuntimeParams.myLastValidIsSliding;\r\n            outCharacterCollisionResults.myInternalResults.myHasWallSlidTowardOppositeDirection = collisionRuntimeParams.myIsSlidingIntoOppositeDirection;\r\n            outCharacterCollisionResults.myInternalResults.myLastRelevantWallSlideFlickerPrevented = collisionRuntimeParams.myIsSlidingFlickerPrevented;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlideFlickerPreventionForceCheckCounter = collisionRuntimeParams.mySlidingFlickerPreventionCheckAnywayCounter;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesDirectionSign = collisionRuntimeParams.mySliding90DegreesSign;\r\n            outCharacterCollisionResults.myInternalResults.myWallSlide90DegreesRecomputeDirectionSign = collisionRuntimeParams.mySlidingRecompute90DegreesSign;\r\n\r\n            outCharacterCollisionResults.myTransformResults.myStartTransformQuat.quat2_copy(currentTransformQuat);\r\n\r\n            return outCharacterCollisionResults;\r\n        }\r\n    }(),\r\n\r\n    convertCharacterColliderSetupToCollisionCheckParams: function () {\r\n        return function convertCharacterColliderSetupToCollisionCheckParams(characterColliderSetup, outCollisionCheckParams) {\r\n            outCollisionCheckParams.myHeight = characterColliderSetup.myHeight;\r\n\r\n            outCollisionCheckParams.myRadius = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius;\r\n            outCollisionCheckParams.myDistanceFromFeetToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n            outCollisionCheckParams.myDistanceFromHeadToIgnore = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementStepEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementStepMaxLength = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementRadialStepAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementCheckDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckHorizontalBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalUpwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalDiagonalDownwardInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalUpward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalStraightDiagonalDownward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementHorizontalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHorizontalPositionCheckEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled;\r\n\r\n            outCollisionCheckParams.myHalfConeAngle = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle;\r\n            outCollisionCheckParams.myHalfConeSliceAmount = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices;\r\n            outCollisionCheckParams.myCheckConeBorder = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n            outCollisionCheckParams.myCheckConeRay = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n            outCollisionCheckParams.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n            outCollisionCheckParams.myHorizontalPositionCheckVerticalDirectionType = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckDirection;\r\n\r\n            outCollisionCheckParams.myCheckHeight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled;\r\n\r\n            outCollisionCheckParams.myCheckHeightVerticalMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightVerticalPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightTopMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightTopPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n            outCollisionCheckParams.myCheckHeightConeOnCollision = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n            outCollisionCheckParams.myCheckHeightConeOnCollisionKeepHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n            outCollisionCheckParams.myHeightCheckStepAmountMovement = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps;\r\n            outCollisionCheckParams.myHeightCheckStepAmountPosition = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps;\r\n            outCollisionCheckParams.myCheckVerticalStraight = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderRayOutward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalDiagonalBorderRayInward = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n            outCollisionCheckParams.myCheckVerticalSearchFartherVerticalHit = characterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n            outCollisionCheckParams.myCheckHorizontalFixedForwardEnabled = characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled;\r\n            outCollisionCheckParams.myCheckHorizontalFixedForward.vec3_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward);\r\n\r\n            outCollisionCheckParams.myVerticalMovementCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled;\r\n            outCollisionCheckParams.myVerticalPositionCheckEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled;\r\n            outCollisionCheckParams.myFeetRadius = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius;\r\n\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphill = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleDownhillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithGroundAngleUphillMaxPerceivedAngle = characterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhill = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = characterColliderSetup.myGroundSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphill = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleDownhillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustVerticalMovementWithCeilingAngleUphillMaxPerceivedAngle = characterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myAdjustHorizontalMovementWithCeilingAngleDownhillMinAngle = characterColliderSetup.myCeilingSetup.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myCheckVerticalFixedForwardEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled;\r\n            outCollisionCheckParams.myCheckVerticalFixedForward.vec3_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward);\r\n            outCollisionCheckParams.myCheckVerticalBothDirection = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n            outCollisionCheckParams.myVerticalMovementReduceEnabled = characterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled;\r\n\r\n            outCollisionCheckParams.myGroundCircumferenceAddCenter = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n            outCollisionCheckParams.myGroundCircumferenceSliceAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n            outCollisionCheckParams.myGroundCircumferenceStepAmount = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps;\r\n            outCollisionCheckParams.myGroundCircumferenceRotationPerStep = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n            outCollisionCheckParams.myVerticalAllowHitInsideCollisionIfOneOk = characterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n            outCollisionCheckParams.myHorizontalBlockLayerFlags.copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags);\r\n            outCollisionCheckParams.myVerticalBlockLayerFlags.copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags);\r\n            outCollisionCheckParams.myHorizontalObjectsToIgnore.pp_copy(characterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore);\r\n            outCollisionCheckParams.myVerticalObjectsToIgnore.pp_copy(characterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore);\r\n\r\n            outCollisionCheckParams.mySnapOnGroundEnabled = characterColliderSetup.myGroundSetup.mySurfaceSnapEnabled;\r\n            outCollisionCheckParams.mySnapOnGroundExtraDistance = characterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n            outCollisionCheckParams.mySnapOnCeilingEnabled = characterColliderSetup.myCeilingSetup.mySurfaceSnapEnabled;\r\n            outCollisionCheckParams.mySnapOnCeilingExtraDistance = characterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance;\r\n\r\n            outCollisionCheckParams.myGroundPopOutEnabled = characterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n            outCollisionCheckParams.myGroundPopOutExtraDistance = characterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n            outCollisionCheckParams.myCeilingPopOutEnabled = characterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled;\r\n            outCollisionCheckParams.myCeilingPopOutExtraDistance = characterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance;\r\n\r\n            outCollisionCheckParams.myGroundAngleToIgnore = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n            outCollisionCheckParams.myGroundAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myGroundSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myCeilingAngleToIgnore = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore;\r\n            outCollisionCheckParams.myCeilingAngleToIgnoreWithPerceivedAngle = characterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalPositionGroundAngleIgnoreHeight = characterColliderSetup.myGroundSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n            outCollisionCheckParams.myHorizontalPositionCeilingAngleIgnoreHeight = characterColliderSetup.myCeilingSetup.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n            outCollisionCheckParams.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = characterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n            outCollisionCheckParams.myHorizontalMovementCeilingAngleIgnoreMaxMovementLeft = characterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n            outCollisionCheckParams.myComputeGroundInfoEnabled = characterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n            outCollisionCheckParams.myComputeCeilingInfoEnabled = characterColliderSetup.myCeilingSetup.myCollectSurfaceInfo;\r\n            outCollisionCheckParams.myDistanceToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance;\r\n            outCollisionCheckParams.myDistanceToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToBeOnGround = characterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToComputeGroundInfo = characterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToBeOnCeiling = characterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance;\r\n            outCollisionCheckParams.myVerticalFixToComputeCeilingInfo = characterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n            outCollisionCheckParams.myGroundIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled;\r\n            outCollisionCheckParams.myCeilingIsBaseInsideCollisionCheckEnabled = characterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled;\r\n            outCollisionCheckParams.myIsOnGroundIfInsideHit = characterColliderSetup.myGroundSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n            outCollisionCheckParams.myIsOnCeilingIfInsideHit = characterColliderSetup.myCeilingSetup.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n            outCollisionCheckParams.myFindGroundDistanceMaxOutsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n            outCollisionCheckParams.myFindGroundDistanceMaxInsideDistance = characterColliderSetup.myGroundSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n            outCollisionCheckParams.myFindCeilingDistanceMaxOutsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxOutsideDistance;\r\n            outCollisionCheckParams.myFindCeilingDistanceMaxInsideDistance = characterColliderSetup.myCeilingSetup.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n            outCollisionCheckParams.myAllowGroundSteepFix = characterColliderSetup.myGroundSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n            outCollisionCheckParams.myAllowCeilingSteepFix = characterColliderSetup.myCeilingSetup.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n\r\n            outCollisionCheckParams.myMustStayOnGround = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurface;\r\n            outCollisionCheckParams.myMustStayOnCeiling = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurface;\r\n            outCollisionCheckParams.myRegatherGroundInfoOnSurfaceCheckFail = characterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n            outCollisionCheckParams.myRegatherCeilingInfoOnSurfaceCheckFail = characterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n            outCollisionCheckParams.myMustStayBelowIgnorableGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowIgnorableCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowGroundAngleDownhill = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMustStayBelowCeilingAngleDownhill = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceAngleDownhill;\r\n            outCollisionCheckParams.myMovementMustStayOnGroundHitAngle = characterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n            outCollisionCheckParams.myMovementMustStayOnCeilingHitAngle = characterColliderSetup.myCeilingSetup.myMovementMustStayOnSurfaceHitMaxAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnIgnorableGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myTeleportMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnIgnorableCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnGroundAngle = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myTeleportMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurfaceAngle;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnCeilingAngle = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n            outCollisionCheckParams.myTeleportMustBeOnGround = characterColliderSetup.myGroundSetup.myTeleportMustBeOnSurface;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnGround = characterColliderSetup.myGroundSetup.myCheckTransformMustBeOnSurface;\r\n            outCollisionCheckParams.myTeleportMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myTeleportMustBeOnSurface;\r\n            outCollisionCheckParams.myCheckTransformMustBeOnCeiling = characterColliderSetup.myCeilingSetup.myCheckTransformMustBeOnSurface;\r\n\r\n            outCollisionCheckParams.mySlidingEnabled = characterColliderSetup.myWallSlideSetup.myWallSlideEnabled;\r\n            outCollisionCheckParams.mySlidingHorizontalMovementCheckBetterNormal = characterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit;\r\n            outCollisionCheckParams.mySlidingMaxAttempts = characterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts;\r\n            outCollisionCheckParams.mySlidingCheckBothDirections = characterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections;\r\n            outCollisionCheckParams.mySlidingFlickeringPreventionType = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode;\r\n            outCollisionCheckParams.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n            outCollisionCheckParams.mySlidingFlickerPreventionCheckAnywayCounter = characterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter;\r\n            outCollisionCheckParams.mySlidingAdjustSign90Degrees = characterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign;\r\n\r\n            outCollisionCheckParams.mySplitMovementEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled;\r\n            outCollisionCheckParams.mySplitMovementMaxLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength;\r\n            outCollisionCheckParams.mySplitMovementMaxStepsEnabled = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps != null;\r\n            outCollisionCheckParams.mySplitMovementMaxSteps = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps;\r\n            outCollisionCheckParams.mySplitMovementStepEqualLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMaxStepLength == null;\r\n            outCollisionCheckParams.mySplitMovementStepEqualLengthMinLength = characterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength;\r\n            outCollisionCheckParams.mySplitMovementStopWhenHorizontalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnHorizontalMovementFailed;\r\n            outCollisionCheckParams.mySplitMovementStopWhenVerticalMovementCanceled = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnVerticalMovementFailed;\r\n            outCollisionCheckParams.mySplitMovementStopCallback = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopOnCallback;\r\n            outCollisionCheckParams.mySplitMovementStopReturnPrevious = characterColliderSetup.mySplitMovementSetup.mySplitMovementStopReturnPreviousResults;\r\n\r\n            outCollisionCheckParams.myPositionOffsetLocal.vec3_copy(characterColliderSetup.myAdditionalSetup.myPositionOffsetLocal);\r\n            outCollisionCheckParams.myRotationOffsetLocalQuat.quat_copy(characterColliderSetup.myAdditionalSetup.myRotationOffsetLocalQuat);\r\n\r\n            outCollisionCheckParams.myDebugActive = characterColliderSetup.myDebugSetup.myVisualDebugActive;\r\n\r\n            outCollisionCheckParams.myDebugHorizontalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive;\r\n            outCollisionCheckParams.myDebugHorizontalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive;\r\n            outCollisionCheckParams.myDebugVerticalMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive;\r\n            outCollisionCheckParams.myDebugVerticalPositionActive = characterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive;\r\n            outCollisionCheckParams.myDebugSlidingActive = characterColliderSetup.myDebugSetup.myVisualDebugSlideActive;\r\n\r\n            outCollisionCheckParams.myDebugGroundInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n            outCollisionCheckParams.myDebugCeilingInfoActive = characterColliderSetup.myDebugSetup.myVisualDebugGroundInfoActive;\r\n            outCollisionCheckParams.myDebugRuntimeParamsActive = characterColliderSetup.myDebugSetup.myVisualDebugResultsActive;\r\n            outCollisionCheckParams.myDebugMovementActive = characterColliderSetup.myDebugSetup.myVisualDebugMovementActive;\r\n\r\n            return outCollisionCheckParams;\r\n        }\r\n    }()\r\n};", "PP.CharacterColliderSetup = class CharacterColliderSetup {\r\n    constructor() {\r\n        this.myHeight = 0;\r\n\r\n        this.myHorizontalCheckSetup = new PP.CharacterColliderHorizontalCheckSetup();\r\n        this.myVerticalCheckSetup = new PP.CharacterColliderVerticalCheckSetup();\r\n\r\n        this.myWallSlideSetup = new PP.CharacterColliderWallSlideSetup();\r\n\r\n        this.myGroundSetup = new PP.CharacterColliderSurfaceSetup();\r\n        this.myCeilingSetup = new PP.CharacterColliderSurfaceSetup();\r\n\r\n        this.mySplitMovementSetup = new PP.CharacterColliderSplitMovementSetup();\r\n\r\n        this.myAdditionalSetup = new PP.CharacterColliderAdditionalSetup();\r\n\r\n        this.myDebugSetup = new PP.CharacterColliderDebugSetup();\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderHorizontalPositionVerticalCheckDirection = {\r\n    UPWARD: 0,      // gives less issues with a ground based movement, but may also collide a bit more, resulting in less sliding\r\n    DOWNWARD: 1,    // gives less issues with a ceiling based movement (unusual), but may also collide a bit more, resulting in less sliding and more stuck in front of a wall\r\n    BOTH: 2         // check both directions, more expensive (2x checks) and better prevent collisions, sliding more, but is more expensive and gives more issues           \r\n\r\n    //                                                                                                                                                  _\r\n    // the issues means that a small step at the end of a slope, maybe due to 2 rectangles, one for the floor and the other for the slope like this -> /   \r\n    // can create a small step if the floor rectangle is a bit above the end of the slope, this will make the character get stuck thinking it's a wall\r\n    // BOTH do a more \"aggressive\" vertical check that makes the character get less stuck in other situations, but can get stuck in this one\r\n    // the better solution is to properly create the level, and if possible combine the 2 rectangles by having the floor a little below the end of the slope (like this -> /-)\r\n    // the step that is created \"on the other side\" in fact can easily be ignored thanks to the myHorizontalCheckFeetDistanceToIgnore param\r\n    // if the level is properly created the best solution should be UPWARD\r\n    // and also myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false\r\n}\r\n\r\nPP.CharacterColliderHorizontalCheckSetup = class CharacterColliderHorizontalCheckSetup {\r\n    constructor() {\r\n        this.myHorizontalCheckConeRadius = 0;\r\n        this.myHorizontalCheckConeHalfAngle = 0;\r\n\r\n        this.myHorizontalHeightCheckEnabled = false;\r\n\r\n        this.myHorizontalCheckFeetDistanceToIgnore = 0;\r\n        this.myHorizontalCheckHeadDistanceToIgnore = 0;\r\n        // these distances can be used to make the character ignore small steps (like a stair step) so they can move on it\r\n        // it also needs the surface pop out to be enabeld to then snap on the step\r\n\r\n        this.myHorizontalCheckFixedForwardEnabled = false; // this is basically only useful if the cone angle is 180 degrees\r\n        this.myHorizontalCheckFixedForward = PP.vec3_create();\r\n\r\n        this.myHorizontalMovementCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementCheckRadialSteps = 0;\r\n\r\n        this.myHorizontalMovementCheckSplitMovementEnabled = false;\r\n        this.myHorizontalMovementCheckSplitMovementMaxSteps = null;\r\n        this.myHorizontalMovementCheckSplitMovementMaxStepLength = null;\r\n        this.myHorizontalMovementCheckSplitMovementMinStepLength = null;\r\n\r\n        this.myHorizontalMovementCheckGetBetterReferenceHit = false;\r\n        // if the horizontal movement finds a hit it stops looking, but could end up having a bad reference collision hit\r\n        // this makes it so it will check a better hit to use later for the slide\r\n\r\n        this.myHorizontalMovementHorizontalRadialCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementHeightCheckSteps = 0;\r\n        this.myHorizontalMovementHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalMovementHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = false;\r\n\r\n        this.myHorizontalMovementVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = false;\r\n        this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionCheckEnabled = false;\r\n        this.myHorizontalPositionCheckConeHalfSlices = 0;\r\n        this.myHorizontalPositionHorizontalBorderCheckEnabled = false;\r\n        this.myHorizontalPositionHorizontalRadialCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionHeightCheckSteps = 0;\r\n        this.myHorizontalPositionHeightHorizontalCheckEnabled = false;\r\n        this.myHorizontalPositionHeightVerticalCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalStraightCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalStraightCentralCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = false;\r\n        this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = false;\r\n\r\n        this.myHorizontalPositionVerticalCheckGetFarthestHit = false; // not very useful but already implemented so\r\n\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = false;\r\n        this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = false;\r\n        // if the horizontal check does not hit the vertical hit will be restored\r\n        // the fact that the horizontal does not hit could be due to the fact that it thinks that the collision can be ignored\r\n        // so restoring the vertical hit can be a bit safer (since u are actually colliding) but also can lead to false positive\r\n\r\n        this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = false; // true gives less issues, but may also collide a bit more, resulting in less sliding\r\n        this.myHorizontalPositionVerticalCheckDirection = PP.CharacterColliderHorizontalPositionVerticalCheckDirection.UPWARD;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderVerticalCheckSetup = class CharacterColliderVerticalCheckSetup {\r\n    constructor() {\r\n        this.myVerticalCheckCircumferenceRadius = 0;\r\n\r\n        this.myVerticalCheckCircumferenceSlices = 0;\r\n        this.myVerticalCheckCircumferenceCentralCheckEnabled = false;\r\n        this.myVerticalCheckCircumferenceRadialSteps = 0;\r\n        this.myVerticalCheckCircumferenceRotationPerRadialStep = 0;\r\n\r\n        this.myVerticalCheckFixedForwardEnabled = false;\r\n        this.myVerticalCheckFixedForward = PP.vec3_create();\r\n\r\n        this.myVerticalMovementCheckEnabled = false;\r\n        this.myVerticalMovementCheckReductionEnabled = false;\r\n        this.myVerticalMovementCheckPerformCheckOnBothSides = false;\r\n\r\n        this.myVerticalPositionCheckEnabled = false;\r\n\r\n        this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = false;\r\n        // if at least one vertical raycast is valid (no hit, outside collision) is it ok if the other checks are completely inside a collision\r\n        // let you keep moving vertically if only partially inside a wall\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSlideFlickerPreventionMode = {\r\n    NONE: 0,\r\n    USE_PREVIOUS_RESULTS: 1,                // allow some flicker before stabilizing but avoid stopping for a 1 frame flicker only (false positive), is also less expensive\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES: 2,    // prevents most flicker apart those on almost flat surface, can have some false positive, always check when sliding into opposite direction\r\n    COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES: 3, // less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES but more false positive, always check when sliding into opposite direction\r\n    ALWAYS: 4,                              // less flicker than COLLISION_ANGLE_ABOVE_90_DEGREES_OR_MOVEMENT_ANGLE_ABOVE_85_DEGREES but more false positive\r\n};\r\n\r\nPP.CharacterColliderWallSlideSetup = class CharacterColliderWallSlideSetup {\r\n    constructor() {\r\n        this.myWallSlideEnabled = false;\r\n\r\n        this.myWallSlideMaxAttempts = 0;\r\n\r\n        this.myCheckBothWallSlideDirections = false;\r\n        // expensive, 2 times the checks since it basically check again on the other slide direction\r\n        // this can fix some edge cases in which u can get stuck instead of sliding\r\n        // it basically require that u also add flicker prevention\r\n\r\n        this.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.NONE;\r\n\r\n        this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        // this flag make it so the prevention is done only if it was already sliding\r\n        // this can lead to a few frames of flicker if u go toward a corner directly, but allow the movement to be more fluid, avoiding getting stuck and false positive\r\n\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        // if the collision think it needs to check for flicker, it will keep checking for the next X frames based on this value even if the condition are not met anymore\r\n        // this help in catching the flicker when the direction is not changing every frame but every 2-3 for example\r\n        // it's especially useful if combo-ed with CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS, making it a bit less fluid but also less flickering\r\n\r\n        this.my90DegreesWallSlideAdjustDirectionSign = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSurfaceSetup = class CharacterColliderSurfaceSetup {\r\n    constructor() {\r\n        this.mySurfaceSnapEnabled = false;\r\n        this.mySurfaceSnapMaxDistance = 0;\r\n\r\n        this.mySurfacePopOutEnabled = false;\r\n        this.mySurfacePopOutMaxDistance = 0;\r\n\r\n        this.mySurfaceAngleToIgnore = 0;\r\n\r\n        this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = null;\r\n        // between this value and mySurfaceAngleToIgnore, use the perceived angle to see if u can actually ignore the surface\r\n        // this basically means that on steep surface u could still go up by moving diagonally\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = null;\r\n        // if the collision with the surface is above this max value, even if the surface angle is ignorable do not ignore it\r\n\r\n        this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = null;\r\n        // if the collision with the surface happens during the horizontal movement check, if the horizontal movement left (total movement to perform minus hit distance)\r\n        // is above this value do not ignore it otherwise you would ignore a surface but are actually going too much inside it\r\n\r\n        this.myCollectSurfaceInfo = false;\r\n\r\n        this.myIsOnSurfaceMaxOutsideDistance = 0;\r\n        this.myIsOnSurfaceMaxInsideDistance = 0;\r\n\r\n        this.myIsBaseInsideCollisionCheckEnabled = false;\r\n        this.myIsOnSurfaceIfBaseInsideCollision = false;\r\n\r\n        this.myCollectSurfaceNormalMaxOutsideDistance = 0;\r\n        this.myCollectSurfaceNormalMaxInsideDistance = 0;\r\n\r\n        this.myFindSurfaceDistanceMaxOutsideDistance = 0;\r\n        this.myFindSurfaceDistanceMaxInsideDistance = 0;\r\n\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        // this make it so when a character moves horizontally on a slope it also add a vertical movement so that the movement is actually on the slope plane\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = null;\r\n        this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = null;\r\n        // this can be used to limit the adjustment so that on steep slopes u can bounce off, or anyway don't add a huge vertical movement due to a very steep slope\r\n\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n        // this make it so when a character moves vertically on a slope (sort of sliding down the slope) it also add a horizontal movement so that the movement is actually on the slope plane\r\n        this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = null;\r\n        // this can be used to make it so the movement (and therefore the slide) only happens above a certain angle, like u want to slide down only on steep surfaces\r\n\r\n        this.myMovementMustStayOnSurface = false;\r\n        this.myMovementMustStayOnSurfaceHitMaxAngle = null;\r\n        this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = false;\r\n        this.myMovementMustStayOnSurfaceAngleDownhill = null;\r\n\r\n        this.myTeleportMustBeOnSurface = false;\r\n        this.myTeleportMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myTeleportMustBeOnSurfaceAngle = null;\r\n\r\n        this.myCheckTransformMustBeOnSurface = false;\r\n        this.myCheckTransformMustBeOnIgnorableSurfaceAngle = false;\r\n        this.myCheckTransformMustBeOnSurfaceAngle = null;\r\n\r\n        this.myRecollectSurfaceInfoOnSurfaceCheckFailed = false;\r\n        // instead of copying the previous surface info on fail, regather them\r\n\r\n        this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = false;\r\n        // if u start on a not ignorable perceived angle (above angle to ignore) u normally can't even try to move uphill, this will let you try and see if with that movement\r\n        // you could end up in a ignorable perceived angle position\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderSplitMovementSetup = class CharacterColliderSplitMovementSetup {\r\n    constructor() {\r\n        this.mySplitMovementEnabled = false;\r\n\r\n        this.mySplitMovementMaxSteps = null;\r\n        this.mySplitMovementMaxStepLength = null;\r\n        this.mySplitMovementMinStepLength = null;\r\n\r\n        this.mySplitMovementStopOnHorizontalMovementFailed = false;\r\n        this.mySplitMovementStopOnVerticalMovementFailed = false;\r\n\r\n        /*\r\n        this will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.mySplitMovementStopOnCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        */\r\n\r\n        this.mySplitMovementStopReturnPreviousResults = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderAdditionalSetup = class CharacterColliderAdditionalSetup {\r\n    constructor() {\r\n        this.myPositionOffsetLocal = PP.vec3_create();\r\n        this.myRotationOffsetLocalQuat = PP.quat_create();\r\n\r\n        /*\r\n        these will not be available until the bridge is removed with a new implementation that directly use the collider and results\r\n        this.myExtraMovementCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraTeleportCheckCallback = null;              // Signature: callback(paramsToBeDefined)\r\n        this.myExtraCheckTransformCheckCallback = null;        // Signature: callback(paramsToBeDefined)\r\n        */\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterColliderDebugSetup = class CharacterColliderDebugSetup {\r\n    constructor() {\r\n        this.myVisualDebugActive = false;\r\n\r\n        this.myVisualDebugMovementActive = false;\r\n\r\n        this.myVisualDebugHorizontalMovementCheckActive = false;\r\n        this.myVisualDebugHorizontalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugVerticalMovementCheckActive = false;\r\n        this.myVisualDebugVerticalPositionCheckActive = false;\r\n\r\n        this.myVisualDebugSlideActive = false;\r\n\r\n        this.myVisualDebugGroundInfoActive = false;\r\n        this.myVisualDebugCeilingInfoActive = false;\r\n\r\n        this.myVisualDebugResultsActive = false;\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterColliderSetup.prototype.copy = function copy(other) {\r\n    this.myHeight = other.myHeight;\r\n\r\n    this.myHorizontalCheckSetup.copy(other.myHorizontalCheckSetup);\r\n    this.myVerticalCheckSetup.copy(other.myVerticalCheckSetup);\r\n\r\n    this.myWallSlideSetup.copy(other.myWallSlideSetup);\r\n\r\n    this.myGroundSetup.copy(other.myGroundSetup);\r\n    this.myCeilingSetup.copy(other.myCeilingSetup);\r\n\r\n    this.mySplitMovementSetup.copy(other.mySplitMovementSetup);\r\n\r\n    this.myAdditionalSetup.copy(other.myAdditionalSetup);\r\n\r\n    this.myDebugSetup.copy(other.myDebugSetup);\r\n};\r\n\r\nPP.CharacterColliderHorizontalCheckSetup.prototype.copy = function copy(other) {\r\n    this.myHorizontalCheckConeRadius = other.myHorizontalCheckConeRadius;\r\n    this.myHorizontalCheckConeHalfAngle = other.myHorizontalCheckConeHalfAngle;\r\n\r\n    this.myHorizontalHeightCheckEnabled = other.myHorizontalHeightCheckEnabled;\r\n\r\n    this.myHorizontalCheckFeetDistanceToIgnore = other.myHorizontalCheckFeetDistanceToIgnore;\r\n    this.myHorizontalCheckHeadDistanceToIgnore = other.myHorizontalCheckHeadDistanceToIgnore;\r\n\r\n    this.myHorizontalCheckFixedForwardEnabled = other.myHorizontalCheckFixedForwardEnabled;\r\n    this.myHorizontalCheckFixedForward.vec3_copy(other.myHorizontalCheckFixedForward);\r\n\r\n    this.myHorizontalMovementCheckEnabled = other.myHorizontalMovementCheckEnabled;\r\n\r\n    this.myHorizontalMovementCheckRadialSteps = other.myHorizontalMovementCheckRadialSteps;\r\n\r\n    this.myHorizontalMovementCheckSplitMovementEnabled = other.myHorizontalMovementCheckSplitMovementEnabled;\r\n    this.myHorizontalMovementCheckSplitMovementMaxSteps = other.myHorizontalMovementCheckSplitMovementMaxSteps;\r\n    this.myHorizontalMovementCheckSplitMovementMaxStepLength = other.myHorizontalMovementCheckSplitMovementMaxStepLength;\r\n    this.myHorizontalMovementCheckSplitMovementMinStepLength = other.myHorizontalMovementCheckSplitMovementMinStepLength;\r\n\r\n    this.myHorizontalMovementCheckGetBetterReferenceHit = other.myHorizontalMovementCheckGetBetterReferenceHit;\r\n\r\n    this.myHorizontalMovementHorizontalRadialCheckEnabled = other.myHorizontalMovementHorizontalRadialCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = other.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCheckEnabled = other.myHorizontalMovementHorizontalStraightCheckEnabled;\r\n    this.myHorizontalMovementHorizontalStraightCentralCheckEnabled = other.myHorizontalMovementHorizontalStraightCentralCheckEnabled;\r\n\r\n    this.myHorizontalMovementHeightCheckSteps = other.myHorizontalMovementHeightCheckSteps;\r\n    this.myHorizontalMovementHeightVerticalCheckEnabled = other.myHorizontalMovementHeightVerticalCheckEnabled;\r\n    this.myHorizontalMovementHeightHorizontalCheckEnabled = other.myHorizontalMovementHeightHorizontalCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalMovementVerticalRadialDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = other.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled;\r\n\r\n    this.myHorizontalMovementVerticalStraightCheckEnabled = other.myHorizontalMovementVerticalStraightCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightCentralCheckEnabled = other.myHorizontalMovementVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled;\r\n    this.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = other.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled;\r\n\r\n    this.myHorizontalPositionCheckEnabled = other.myHorizontalPositionCheckEnabled;\r\n    this.myHorizontalPositionCheckConeHalfSlices = other.myHorizontalPositionCheckConeHalfSlices;\r\n    this.myHorizontalPositionHorizontalBorderCheckEnabled = other.myHorizontalPositionHorizontalBorderCheckEnabled;\r\n    this.myHorizontalPositionHorizontalRadialCheckEnabled = other.myHorizontalPositionHorizontalRadialCheckEnabled;\r\n\r\n    this.myHorizontalPositionHeightCheckSteps = other.myHorizontalPositionHeightCheckSteps;\r\n    this.myHorizontalPositionHeightHorizontalCheckEnabled = other.myHorizontalPositionHeightHorizontalCheckEnabled;\r\n    this.myHorizontalPositionHeightVerticalCheckEnabled = other.myHorizontalPositionHeightVerticalCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalStraightCheckEnabled = other.myHorizontalPositionVerticalStraightCheckEnabled;\r\n    this.myHorizontalPositionVerticalStraightCentralCheckEnabled = other.myHorizontalPositionVerticalStraightCentralCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalBorderDiagonalInwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalOutwardCheckEnabled;\r\n    this.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled = other.myHorizontalPositionVerticalRadialBorderDiagonalInwardCheckEnabled;\r\n\r\n    this.myHorizontalPositionVerticalCheckGetFarthestHit = other.myHorizontalPositionVerticalCheckGetFarthestHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit;\r\n    this.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = other.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit;\r\n\r\n    this.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision = other.myHorizontalPositionVerticalCheckIgnoreHitsInsideCollision;\r\n    this.myHorizontalPositionVerticalCheckDirection = other.myHorizontalPositionVerticalCheckDirection;\r\n\r\n    this.myHorizontalCheckBlockLayerFlags.setMask(other.myHorizontalCheckBlockLayerFlags.getMask());\r\n    this.myHorizontalCheckObjectsToIgnore.pp_copy(other.myHorizontalCheckObjectsToIgnore);\r\n};\r\n\r\nPP.CharacterColliderVerticalCheckSetup.prototype.copy = function copy(other) {\r\n    this.myVerticalCheckCircumferenceRadius = other.myVerticalCheckCircumferenceRadius;\r\n\r\n    this.myVerticalCheckCircumferenceSlices = other.myVerticalCheckCircumferenceSlices;\r\n    this.myVerticalCheckCircumferenceCentralCheckEnabled = other.myVerticalCheckCircumferenceCentralCheckEnabled;\r\n    this.myVerticalCheckCircumferenceRadialSteps = other.myVerticalCheckCircumferenceRadialSteps;\r\n    this.myVerticalCheckCircumferenceRotationPerRadialStep = other.myVerticalCheckCircumferenceRotationPerRadialStep;\r\n\r\n    this.myVerticalCheckFixedForwardEnabled = other.myVerticalCheckFixedForwardEnabled;\r\n    this.myVerticalCheckFixedForward.vec3_copy(other.myVerticalCheckFixedForward);\r\n\r\n    this.myVerticalMovementCheckEnabled = other.myVerticalMovementCheckEnabled;\r\n    this.myVerticalMovementCheckReductionEnabled = other.myVerticalMovementCheckReductionEnabled;\r\n    this.myVerticalMovementCheckPerformCheckOnBothSides = other.myVerticalMovementCheckPerformCheckOnBothSides;\r\n\r\n    this.myVerticalPositionCheckEnabled = other.myVerticalPositionCheckEnabled;\r\n\r\n    this.myVerticalCheckAllowHitsInsideCollisionIfOneValid = other.myVerticalCheckAllowHitsInsideCollisionIfOneValid;\r\n\r\n    this.myVerticalCheckBlockLayerFlags.setMask(other.myVerticalCheckBlockLayerFlags.getMask());\r\n    this.myVerticalCheckObjectsToIgnore.pp_copy(other.myVerticalCheckObjectsToIgnore);\r\n};\r\n\r\nPP.CharacterColliderWallSlideSetup.prototype.copy = function copy(other) {\r\n    this.myWallSlideEnabled = other.myWallSlideEnabled;\r\n\r\n    this.myWallSlideMaxAttempts = other.myWallSlideMaxAttempts;\r\n\r\n    this.myCheckBothWallSlideDirections = other.myCheckBothWallSlideDirections;\r\n\r\n    this.myWallSlideFlickerPreventionMode = other.myWallSlideFlickerPreventionMode;\r\n\r\n    this.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = other.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding;\r\n\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n\r\n    this.my90DegreesWallSlideAdjustDirectionSign = other.my90DegreesWallSlideAdjustDirectionSign;\r\n};\r\n\r\nPP.CharacterColliderSurfaceSetup.prototype.copy = function copy(other) {\r\n    this.mySurfaceSnapEnabled = other.mySurfaceSnapEnabled;\r\n    this.mySurfaceSnapMaxDistance = other.mySurfaceSnapMaxDistance;\r\n\r\n    this.mySurfacePopOutEnabled = other.mySurfacePopOutEnabled;\r\n    this.mySurfacePopOutMaxDistance = other.mySurfacePopOutMaxDistance;\r\n\r\n    this.mySurfaceAngleToIgnore = other.mySurfaceAngleToIgnore;\r\n    this.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle = other.mySurfaceAngleToIgnoreWithSurfacePerceivedAngle;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalMovementSurfaceAngleToIgnoreMaxVerticalDistance;\r\n    this.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance = other.myHorizontalPositionSurfaceAngleToIgnoreMaxVerticalDistance;\r\n\r\n    this.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = other.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n\r\n    this.myCollectSurfaceInfo = other.myCollectSurfaceInfo;\r\n\r\n    this.myIsOnSurfaceMaxOutsideDistance = other.myIsOnSurfaceMaxOutsideDistance;\r\n    this.myIsOnSurfaceMaxInsideDistance = other.myIsOnSurfaceMaxInsideDistance;\r\n\r\n    this.myIsBaseInsideCollisionCheckEnabled = other.myIsBaseInsideCollisionCheckEnabled;\r\n    this.myIsOnSurfaceIfBaseInsideCollision = other.myIsOnSurfaceIfBaseInsideCollision;\r\n\r\n    this.myCollectSurfaceNormalMaxOutsideDistance = other.myCollectSurfaceNormalMaxOutsideDistance;\r\n    this.myCollectSurfaceNormalMaxInsideDistance = other.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    this.myFindSurfaceDistanceMaxOutsideDistance = other.myFindSurfaceDistanceMaxOutsideDistance;\r\n    this.myFindSurfaceDistanceMaxInsideDistance = other.myFindSurfaceDistanceMaxInsideDistance;\r\n\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfaceAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleDownhillMaxSurfacePerceivedAngle;\r\n    this.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle = other.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngleUphillMaxSurfacePerceivedAngle;\r\n\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n    this.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle = other.myVerticalMovementAdjustHorizontalMovementBasedOnSurfaceAngleDownhillMinSurfaceAngle;\r\n\r\n    this.myMovementMustStayOnSurface = other.myMovementMustStayOnSurface;\r\n    this.myMovementMustStayOnSurfaceHitMaxAngle = other.myMovementMustStayOnSurfaceHitMaxAngle;\r\n    this.myMovementMustStayOnIgnorableSurfaceAngleDownhill = other.myMovementMustStayOnIgnorableSurfaceAngleDownhill;\r\n    this.myMovementMustStayOnSurfaceAngleDownhill = other.myMovementMustStayOnSurfaceAngleDownhill;\r\n\r\n    this.myTeleportMustBeOnSurface = other.myTeleportMustBeOnSurface;\r\n    this.myTeleportMustBeOnIgnorableSurfaceAngle = other.myTeleportMustBeOnIgnorableSurfaceAngle;\r\n    this.myTeleportMustBeOnSurfaceAngle = other.myTeleportMustBeOnSurfaceAngle;\r\n\r\n    this.myCheckTransformMustBeOnSurface = other.myCheckTransformMustBeOnSurface;\r\n    this.myCheckTransformMustBeOnIgnorableSurfaceAngle = other.myCheckTransformMustBeOnIgnorableSurfaceAngle;\r\n    this.myCheckTransformMustBeOnSurfaceAngle = other.myCheckTransformMustBeOnSurfaceAngle;\r\n\r\n    this.myRecollectSurfaceInfoOnSurfaceCheckFailed = other.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n\r\n    this.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle = other.myHorizontalMovementAllowExitAttemptWhenOnNotIgnorableSurfacePerceivedAngle;\r\n};\r\n\r\nPP.CharacterColliderSplitMovementSetup.prototype.copy = function copy(other) {\r\n    this.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n    this.mySplitMovementMaxSteps = other.mySplitMovementMaxSteps;\r\n    this.mySplitMovementMaxStepLength = other.mySplitMovementMaxStepLength;\r\n    this.mySplitMovementMinStepLength = other.mySplitMovementMinStepLength;\r\n\r\n    this.mySplitMovementStopOnHorizontalMovementFailed = other.mySplitMovementStopOnHorizontalMovementFailed;\r\n    this.mySplitMovementStopOnVerticalMovementFailed = other.mySplitMovementStopOnVerticalMovementFailed;\r\n\r\n    /*\r\n    this.mySplitMovementStopOnCallback = other.mySplitMovementStopOnCallback;\r\n    */\r\n\r\n    this.mySplitMovementStopReturnPreviousResults = other.mySplitMovementStopReturnPreviousResults;\r\n};\r\n\r\nPP.CharacterColliderAdditionalSetup.prototype.copy = function copy(other) {\r\n    this.myPositionOffsetLocal.vec3_copy(other.myPositionOffsetLocal);\r\n    this.myRotationOffsetLocalQuat.quat_copy(other.myRotationOffsetLocalQuat);\r\n\r\n    /*\r\n    this.myExtraMovementCheckCallback = other.myExtraMovementCheckCallback;\r\n    this.myExtraTeleportCheckCallback = other.myExtraTeleportCheckCallback;\r\n    this.myExtraCheckTransformCheckCallback = other.myExtraCheckTransformCheckCallback;\r\n    */\r\n};\r\n\r\nPP.CharacterColliderDebugSetup.prototype.copy = function copy(other) {\r\n    this.myVisualDebugActive = other.myVisualDebugActive;\r\n\r\n    this.myVisualDebugMovementActive = other.myVisualDebugMovementActive;\r\n\r\n    this.myVisualDebugHorizontalMovementCheckActive = other.myVisualDebugHorizontalMovementCheckActive;\r\n    this.myVisualDebugHorizontalPositionCheckActive = other.myVisualDebugHorizontalPositionCheckActive;\r\n\r\n    this.myVisualDebugVerticalMovementCheckActive = other.myVisualDebugVerticalMovementCheckActive;\r\n    this.myVisualDebugVerticalPositionCheckActive = other.myVisualDebugVerticalPositionCheckActive;\r\n\r\n    this.myVisualDebugSlideActive = other.myVisualDebugSlideActive;\r\n\r\n    this.myVisualDebugGroundInfoActive = other.myVisualDebugGroundInfoActive;\r\n    this.myVisualDebugCeilingInfoActive = other.myVisualDebugCeilingInfoActive;\r\n\r\n    this.myVisualDebugResultsActive = other.myVisualDebugResultsActive;\r\n};\r\n\r\n\r\nObject.defineProperty(PP.CharacterColliderSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderHorizontalCheckSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderVerticalCheckSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderWallSlideSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderSurfaceSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderSplitMovementSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderAdditionalSetup.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterColliderDebugSetup.prototype, \"copy\", { enumerable: false });", "PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel = {\r\n    VERY_LOW: 0,\r\n    LOW: 1,\r\n    MEDIUM: 2,\r\n    HIGH: 3,\r\n    VERY_HIGH: 4,\r\n};\r\n\r\nPP.CharacterColliderSetupSimplifiedCreationParams = class CharacterColliderSetupSimplifiedCreationParams {\r\n    constructor() {\r\n        this.myHeight = 0;\r\n        this.myRadius = 0;\r\n\r\n        this.myAccuracyLevel = PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW;\r\n\r\n        this.myIsPlayer = false;\r\n\r\n        this.myCheckOnlyFeet = false;\r\n\r\n        this.myAverageSpeed = 0;\r\n\r\n        this.myCanFly = false;\r\n\r\n        this.myShouldSlideAgainstWall = false;\r\n\r\n        this.myCollectGroundInfo = false;\r\n        this.myShouldSnapOnGround = false;\r\n        this.myMaxDistanceToSnapOnGround = 0;\r\n        this.myMaxWalkableGroundAngle = 0;\r\n        this.myMaxWalkableGroundStepHeight = 0;\r\n        this.myShouldNotFallFromEdges = false;\r\n\r\n        this.myHorizontalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHorizontalCheckObjectsToIgnore = [];\r\n\r\n        this.myVerticalCheckBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myVerticalCheckObjectsToIgnore = [];\r\n\r\n        this.myHorizontalCheckDebugActive = false;\r\n        this.myVerticalCheckDebugActive = false;\r\n    }\r\n};\r\n\r\nPP.CharacterColliderUtils = {\r\n    createCharacterColliderSetupSimplified: function (simplifiedCreationParams, outCharacterColliderSetup = new PP.CharacterColliderSetup()) {\r\n        // implemented outside class definition\r\n    },\r\n    createTeleportColliderFromMovementCollider: function (movementColliderSetup, outTeleportColliderSetup = new PP.CharacterColliderSetup()) {\r\n        outTeleportColliderSetup.copy(movementColliderSetup);\r\n\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 180;\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices =\r\n            Math.round((outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle / movementColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle)\r\n                * movementColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices);\r\n\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForwardEnabled = true;\r\n        outTeleportColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n        return outTeleportColliderSetup;\r\n    },\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterColliderUtils.createCharacterColliderSetupSimplified = function createCharacterColliderSetupSimplified(simplifiedCreationParams, outCharacterColliderSetup = new PP.CharacterColliderSetup()) {\r\n    outCharacterColliderSetup.myHeight = simplifiedCreationParams.myHeight;\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeRadius = simplifiedCreationParams.myRadius;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadius = simplifiedCreationParams.myRadius / 2;\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForwardEnabled = true;\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckFixedForward.vec3_set(0, 0, 1);\r\n\r\n    if (!simplifiedCreationParams.myCheckOnlyFeet || simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalHeightCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n    }\r\n\r\n    outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled = simplifiedCreationParams.myShouldSlideAgainstWall;\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore = simplifiedCreationParams.myMaxWalkableGroundStepHeight;\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance = simplifiedCreationParams.myMaxDistanceToSnapOnGround > 0 ?\r\n        simplifiedCreationParams.myMaxDistanceToSnapOnGround : (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = simplifiedCreationParams.myRadius;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo = simplifiedCreationParams.myCollectGroundInfo || simplifiedCreationParams.myMaxWalkableGroundAngle > 0;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceSnapEnabled = simplifiedCreationParams.myShouldSnapOnGround;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled = true;\r\n    outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore = simplifiedCreationParams.myMaxWalkableGroundAngle;\r\n    outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = true;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance = 0.001;\r\n    outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance = 0.001;\r\n\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance = (simplifiedCreationParams.myRadius > 0.1) ? 0.1 : 0.01;\r\n    outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myCanFly) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckHeadDistanceToIgnore = outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckFeetDistanceToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceInfo = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceInfo;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutEnabled = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutEnabled;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceAngleToIgnore = outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfaceSnapMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfaceSnapMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.mySurfacePopOutMaxDistance = outCharacterColliderSetup.myGroundSetup.mySurfacePopOutMaxDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementSurfaceAngleToIgnoreMaxHorizontalMovementLeft;\r\n        outCharacterColliderSetup.myCeilingSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle = outCharacterColliderSetup.myGroundSetup.myHorizontalMovementAdjustVerticalMovementBasedOnSurfacePerceivedAngle;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsOnSurfaceMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myIsOnSurfaceMaxInsideDistance;\r\n\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxOutsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxOutsideDistance;\r\n        outCharacterColliderSetup.myCeilingSetup.myCollectSurfaceNormalMaxInsideDistance = outCharacterColliderSetup.myGroundSetup.myCollectSurfaceNormalMaxInsideDistance;\r\n\r\n    }\r\n\r\n    if (simplifiedCreationParams.myShouldNotFallFromEdges) {\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurface = true;\r\n        outCharacterColliderSetup.myGroundSetup.myMovementMustStayOnSurfaceAngleDownhill = Math.max(60, outCharacterColliderSetup.myGroundSetup.mySurfaceAngleToIgnore);\r\n    }\r\n\r\n\r\n\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckBlockLayerFlags.copy(simplifiedCreationParams.myHorizontalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckBlockLayerFlags.copy(simplifiedCreationParams.myVerticalCheckBlockLayerFlags);\r\n    outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedCreationParams.myVerticalCheckObjectsToIgnore);\r\n\r\n\r\n\r\n    if (simplifiedCreationParams.myHorizontalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugHorizontalPositionCheckActive = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myVerticalCheckDebugActive) {\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalMovementCheckActive = true;\r\n        outCharacterColliderSetup.myDebugSetup.myVisualDebugVerticalPositionCheckActive = true;\r\n    }\r\n\r\n\r\n\r\n    // ACCURACY\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalCheckConeHalfAngle = 60;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightVerticalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightVerticalCheckEnabled = true;\r\n\r\n        // activate based on speed?\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalStraightCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 4;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 1;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckReductionEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalPositionCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckAllowHitsInsideCollisionIfOneValid = true;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.LOW) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckRadialSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 1;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 1;\r\n        outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.NONE;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = false;\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 2;\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.MEDIUM) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardUpwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionCheckConeHalfSlices = 2;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightHorizontalCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHorizontalBorderCheckEnabled = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalMovementCheckPerformCheckOnBothSides = true;\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 6;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 3;\r\n        outCharacterColliderSetup.myWallSlideSetup.my90DegreesWallSlideAdjustDirectionSign = true;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionMode = PP.CharacterColliderSlideFlickerPreventionMode.USE_PREVIOUS_RESULTS;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionCheckOnlyIfAlreadySliding = true;\r\n            outCharacterColliderSetup.myWallSlideSetup.myWallSlideFlickerPreventionForceCheckCounter = 4;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH) {\r\n        if (outCharacterColliderSetup.myWallSlideSetup.myWallSlideEnabled) {\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementCheckGetBetterReferenceHit = true;\r\n\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n            outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n        }\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalDiagonalInwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalStraightCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = false;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices = 8;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRadialSteps = 2;\r\n        outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceRotationPerRadialStep = 180 / outCharacterColliderSetup.myVerticalCheckSetup.myVerticalCheckCircumferenceSlices;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myWallSlideSetup.myWallSlideMaxAttempts = 4;\r\n\r\n        if (simplifiedCreationParams.myIsPlayer) {\r\n            outCharacterColliderSetup.myWallSlideSetup.myCheckBothWallSlideDirections = true;\r\n        }\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myIsBaseInsideCollisionCheckEnabled = true;\r\n\r\n\r\n\r\n        let fps = 90;\r\n        if (simplifiedCreationParams.myAverageSpeed / fps > simplifiedCreationParams.myRadius) {\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementEnabled = other.mySplitMovementEnabled;\r\n\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMaxSteps = Math.ceil((simplifiedCreationParams.myAverageSpeed / fps) / simplifiedCreationParams.myRadius);\r\n            outCharacterColliderSetup.mySplitMovementSetup.mySplitMovementMinStepLength = simplifiedCreationParams.myRadius;\r\n        }\r\n    }\r\n\r\n    if (simplifiedCreationParams.myAccuracyLevel >= PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.VERY_HIGH) {\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementHorizontalRadialCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalOutwardDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalDiagonalInwardDownwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightCentralCheckEnabled = false;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalMovementVerticalStraightDiagonalDownwardCentralCheckEnabled = false;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionHeightCheckSteps = 2;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalRadialDiagonalOutwardCheckEnabled = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalBorderDiagonalOutwardCheckEnabled = true;\r\n\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHit = true;\r\n        outCharacterColliderSetup.myHorizontalCheckSetup.myHorizontalPositionVerticalCheckPerformHorizontalCheckOnHitKeepVerticalHitIfNoHorizontalHit = true;\r\n\r\n\r\n\r\n        outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = true;\r\n        outCharacterColliderSetup.myCeilingSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed = outCharacterColliderSetup.myGroundSetup.myRecollectSurfaceInfoOnSurfaceCheckFailed;\r\n    }\r\n\r\n    return outCharacterColliderSetup;\r\n};\r\n", "PP.CharacterCollisionResults = class CharacterCollisionResults {\r\n    constructor() {\r\n        this.myCheckType = PP.CharacterCollisionCheckType.NONE;\r\n\r\n        this.myTransformResults = new PP.CharacterCollisionTransformResults();\r\n\r\n        this.myMovementResults = new PP.CharacterCollisionMovementResults();\r\n        this.myHorizontalMovementResults = new PP.CharacterCollisionMovementResults();\r\n        this.myVerticalMovementResults = new PP.CharacterCollisionMovementResults();\r\n\r\n        this.myTeleportResults = new PP.CharacterCollisionTeleportResults();\r\n\r\n        this.myCheckTransformResults = new PP.CharacterCollisionCheckTransformResults();\r\n\r\n        this.myWallSlideResults = new PP.CharacterCollisionWallSlideResults();\r\n\r\n        this.myGroundInfo = new PP.CharacterCollisionSurfaceInfo();\r\n        this.myCeilingInfo = new PP.CharacterCollisionSurfaceInfo();\r\n\r\n        this.myGroundResults = new PP.CharacterCollisionSurfaceResults();\r\n        this.myCeilingResults = new PP.CharacterCollisionSurfaceResults();\r\n\r\n        this.mySplitMovementResults = new PP.CharacterCollisionSplitMovementResults();\r\n\r\n        this.myDebugResults = new PP.CharacterCollisionDebugResults();\r\n\r\n        this.myInternalResults = new PP.CharacterCollisionInternalResults();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionCheckType = {\r\n    NONE: 0,\r\n    CHECK_MOVEMENT: 1,\r\n    CHECK_TELEPORT: 2,\r\n    CHECK_TRANSFORM: 3,\r\n    UPDATE_SURFACE_INFO: 4,\r\n    UPDATE_GROUND_INFO: 5,\r\n    UPDATE_CEILING_INFO: 6\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo = class CharacterCollisionSurfaceInfo {\r\n    constructor() {\r\n        this.myIsOnSurface = false;\r\n\r\n        this.mySurfaceAngle = 0;\r\n        this.mySurfacePerceivedAngle = 0;\r\n        this.mySurfaceNormal = PP.vec3_create();\r\n\r\n        this.mySurfaceHitMaxAngle = 0;\r\n        this.mySurfaceHitMaxNormal = PP.vec3_create();\r\n\r\n        this.mySurfaceDistance = null;\r\n\r\n        this.myIsBaseInsideCollision = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults = class CharacterCollisionWallSlideResults {\r\n    constructor() {\r\n        this.myHasSlid = false;\r\n        this.mySlideMovementAngle = 0;          // signed angle between the start movement and the wall slide movement, basically telling you how much u had to change direction to slide\r\n        this.mySlideMovementWallAngle = 0;      // signed angle between the inverted surface normal and the wall slide movement\r\n        this.myWallNormal = PP.vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionTransformResults = class CharacterCollisionMovementResults {\r\n    constructor() {\r\n        this.myStartTransformQuat = PP.quat2_create();\r\n        this.myEndTransformQuat = PP.quat2_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionMovementResults = class CharacterCollisionMovementResults {\r\n    constructor() {\r\n        this.myStartMovement = PP.vec3_create();\r\n        this.myEndMovement = PP.vec3_create();\r\n        this.myMovementFailed = false;\r\n        this.myIsColliding = false;\r\n        this.myReferenceCollisionHit = new PP.RaycastHit();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults = class CharacterCollisionTeleportResults {\r\n    constructor() {\r\n        this.myStartTeleportTransformQuat = PP.quat2_create();\r\n        this.myEndTeleportTransformQuat = PP.quat2_create();\r\n        this.myTeleportFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults = class CharacterCollisionCheckTransformResults {\r\n    constructor() {\r\n        this.myStartCheckTransformQuat = PP.quat2_create();\r\n        this.myEndCheckTransformQuat = PP.quat2_create();\r\n        this.myCheckTransformFailed = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults = class CharacterCollisionCheckTransformResults {\r\n    constructor() {\r\n        this.myHasSnappedOnSurface = false;\r\n        this.myHasPoppedOutSurface = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n        this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n        this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults = class CharacterCollisionSplitMovementResults {\r\n    constructor() {\r\n        this.myStepsToPerform = 0;\r\n        this.myStepsPerformed = 0;\r\n        this.myMovementInterrupted = false;\r\n        this.myMovementChecked = PP.vec3_create();\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionDebugResults = class CharacterCollisionDebugResults {\r\n    constructor() {\r\n        this._myRaycastsPerformed = 0;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CharacterCollisionInternalResults = class CharacterCollisionSplitMovementResults {\r\n    constructor() {\r\n        this.myLastRelevantStartHorizontalMovement = PP.vec3_create();\r\n        this.myLastRelevantAdjustedStartHorizontalMovement = PP.vec3_create();\r\n        this.myLastRelevantEndHorizontalMovement = PP.vec3_create();\r\n\r\n        this.myLastRelevantStartVerticalMovement = PP.vec3_create();\r\n        this.myLastRelevantAdjustedStartVerticalMovement = PP.vec3_create();\r\n        this.myLastRelevantEndVerticalMovement = PP.vec3_create();\r\n\r\n        this.myLastRelevantHasWallSlid = false;\r\n        this.myHasWallSlidTowardOppositeDirection = false;\r\n        this.myLastRelevantWallSlideFlickerPrevented = false;\r\n        this.myWallSlideFlickerPreventionForceCheckCounter = 0;\r\n        this.myWallSlide90DegreesDirectionSign = 0;\r\n        this.myWallSlide90DegreesRecomputeDirectionSign = true;\r\n    }\r\n\r\n    reset() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    copy(other) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterCollisionResults.prototype.reset = function reset() {\r\n    this.myCheckType = PP.CharacterCollisionCheckType.NONE;\r\n\r\n    this.myTransformResults.reset();\r\n\r\n    this.myMovementResults.reset();\r\n    this.myHorizontalMovementResults.reset();\r\n    this.myVerticalMovementResults.reset();\r\n\r\n    this.myTeleportResults.reset();\r\n\r\n    this.myCheckTransformResults.reset();\r\n\r\n    this.myWallSlideResults.reset();\r\n\r\n    this.myGroundInfo.reset();\r\n    this.myCeilingInfo.reset();\r\n\r\n    this.myGroundResults.reset();\r\n    this.myCeilingResults.reset();\r\n\r\n    this.mySplitMovementResults.reset();\r\n\r\n    this.myInternalResults.reset();\r\n};\r\n\r\nPP.CharacterCollisionResults.prototype.copy = function copy(other) {\r\n    this.myCheckType = other.myCheckType;\r\n\r\n    this.myTransformResults.copy(other.myTransformResults);\r\n\r\n    this.myMovementResults.copy(other.myMovementResults);\r\n    this.myHorizontalMovementResults.copy(other.myHorizontalMovementResults);\r\n    this.myVerticalMovementResults.copy(other.myVerticalMovementResults);\r\n\r\n    this.myTeleportResults.copy(other.myTeleportResults);\r\n\r\n    this.myCheckTransformResults.copy(other.myCheckTransformResults);\r\n\r\n    this.myWallSlideResults.copy(other.myWallSlideResults);\r\n\r\n    this.myGroundInfo.copy(other.myGroundInfo);\r\n    this.myCeilingInfo.copy(other.myCeilingInfo);\r\n\r\n    this.myGroundResults.copy(other.myGroundResults);\r\n    this.myCeilingResults.copy(other.myCeilingResults);\r\n\r\n    this.mySplitMovementResults.copy(other.mySplitMovementResults);\r\n\r\n    this.myInternalResults.copy(other.myInternalResults);\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo.prototype.reset = function reset() {\r\n    this.myIsOnSurface = false;\r\n\r\n    this.mySurfaceAngle = 0;\r\n    this.mySurfacePerceivedAngle = 0;\r\n    this.mySurfaceNormal.vec3_zero();\r\n\r\n    this.mySurfaceHitMaxAngle = 0;\r\n    this.mySurfaceHitMaxNormal.vec3_zero();\r\n\r\n    this.mySurfaceDistance = null;\r\n\r\n    this.myIsBaseInsideCollision = false;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceInfo.prototype.copy = function copy(other) {\r\n    this.myIsOnSurface = other.myIsOnSurface;\r\n\r\n    this.mySurfaceAngle = other.mySurfaceAngle;\r\n    this.mySurfacePerceivedAngle = other.mySurfacePerceivedAngle;\r\n    this.mySurfaceNormal.vec3_copy(other.mySurfaceNormal);\r\n\r\n    this.mySurfaceHitMaxAngle = other.mySurfaceHitMaxAngle;\r\n    this.mySurfaceHitMaxNormal.vec3_copy(other.mySurfaceHitMaxNormal);\r\n\r\n    this.mySurfaceDistance = other.mySurfaceDistance;\r\n\r\n    this.myIsBaseInsideCollision = other.myIsBaseInsideCollision;\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults.prototype.reset = function reset() {\r\n    this.myHasSlid = false;\r\n    this.mySlideMovementAngle = 0;\r\n    this.mySlideMovementWallAngle = 0;\r\n    this.myWallNormal.vec3_zero();\r\n};\r\n\r\nPP.CharacterCollisionWallSlideResults.prototype.copy = function copy(other) {\r\n    this.myHasSlid = other.myHasSlid;\r\n    this.mySlideMovementAngle = other.mySlideMovementAngle;\r\n    this.mySlideMovementWallAngle = other.mySlideMovementWallAngle;\r\n    this.myWallNormal.vec3_copy(other.myWallNormal);\r\n};\r\n\r\nPP.CharacterCollisionTransformResults.prototype.reset = function reset() {\r\n    this.myStartTransformQuat.quat2_identity();\r\n    this.myEndTransformQuat.quat2_identity();\r\n};\r\n\r\nPP.CharacterCollisionTransformResults.prototype.copy = function copy(other) {\r\n    this.myStartTransformQuat.quat2_copy(other.myStartTransformQuat);\r\n    this.myEndTransformQuat.quat2_copy(other.myEndTransformQuat);\r\n};\r\n\r\nPP.CharacterCollisionMovementResults.prototype.reset = function reset() {\r\n    this.myStartMovement.vec3_zero();\r\n    this.myEndMovement.vec3_zero();\r\n    this.myMovementFailed = false;\r\n    this.myIsColliding = false;\r\n    this.myReferenceCollisionHit.reset();\r\n};\r\n\r\nPP.CharacterCollisionMovementResults.prototype.copy = function copy(other) {\r\n    this.myStartMovement.vec3_copy(other.myStartMovement);\r\n    this.myEndMovement.vec3_copy(other.myEndMovement);\r\n    this.myMovementFailed = other.myMovementFailed;\r\n    this.myIsColliding = other.myIsColliding;\r\n    this.myReferenceCollisionHit.copy(other.myReferenceCollisionHit);\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults.prototype.reset = function reset() {\r\n    this.myStartTeleportTransformQuat.quat2_identity();\r\n    this.myEndTeleportTransformQuat.quat2_identity();\r\n    this.myTeleportFailed = false;\r\n};\r\n\r\nPP.CharacterCollisionTeleportResults.prototype.copy = function copy(other) {\r\n    this.myStartTeleportTransformQuat.quat2_copy(other.myStartTeleportTransformQuat);\r\n    this.myEndTeleportTransformQuat.quat2_copy(other.myEndTeleportTransformQuat);\r\n    this.myTeleportFailed = other.myTeleportFailed;\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults.prototype.reset = function reset() {\r\n    this.myStartCheckTransformQuat.quat2_identity();\r\n    this.myEndCheckTransformQuat.quat2_identity();\r\n    this.myCheckTransformFailed = false;\r\n};\r\n\r\nPP.CharacterCollisionCheckTransformResults.prototype.copy = function copy(other) {\r\n    this.myStartCheckTransformQuat.quat2_copy(other.myStartCheckTransformQuat);\r\n    this.myEndCheckTransformQuat.quat2_copy(other.myEndCheckTransformQuat);\r\n    this.myCheckTransformFailed = other.myCheckTransformFailed;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults.prototype.reset = function reset() {\r\n    this.myHasSnappedOnSurface = false;\r\n    this.myHasPoppedOutSurface = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = false;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = false;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = false;\r\n};\r\n\r\nPP.CharacterCollisionSurfaceResults.prototype.copy = function copy(other) {\r\n    this.myHasSnappedOnSurface = other.myHasSnappedOnSurface;\r\n    this.myHasPoppedOutSurface = other.myHasPoppedOutSurface;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleDownhill;\r\n    this.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill = other.myHasHorizontalMovementAdjustedVerticalMovementBasedOnSurfacePerceivedAngleUphill;\r\n    this.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill = other.myHasVerticalMovementAdjustedHorizontalMovementBasedOnSurfaceAngleDownhill;\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults.prototype.reset = function reset() {\r\n    this.myStepsToPerform = 0;\r\n    this.myStepsPerformed = 0;\r\n    this.myMovementInterrupted = false;\r\n    this.myMovementChecked.vec3_zero();\r\n};\r\n\r\nPP.CharacterCollisionSplitMovementResults.prototype.copy = function copy(other) {\r\n    this.myStepsToPerform = other.myStepsToPerform;\r\n    this.myStepsPerformed = other.myStepsPerformed;\r\n    this.myMovementInterrupted = other.myMovementInterrupted;\r\n    this.myMovementChecked.vec3_copy(other.myMovementChecked);\r\n};\r\n\r\nPP.CharacterCollisionDebugResults.prototype.reset = function reset() {\r\n    this._myRaycastsPerformed = 0;\r\n};\r\n\r\nPP.CharacterCollisionDebugResults.prototype.copy = function copy(other) {\r\n    this._myRaycastsPerformed = other._myRaycastsPerformed;\r\n};\r\n\r\nPP.CharacterCollisionInternalResults.prototype.reset = function reset() {\r\n};\r\n\r\nPP.CharacterCollisionInternalResults.prototype.copy = function copy(other) {\r\n    this.myLastRelevantStartHorizontalMovement.vec3_copy(other.myLastRelevantStartHorizontalMovement);\r\n    this.myLastRelevantAdjustedStartHorizontalMovement.vec3_copy(other.myLastRelevantAdjustedStartHorizontalMovement);\r\n    this.myLastRelevantEndHorizontalMovement.vec3_copy(other.myLastRelevantEndHorizontalMovement);\r\n\r\n    this.myLastRelevantStartVerticalMovement.vec3_copy(other.myLastRelevantStartVerticalMovement);\r\n    this.myLastRelevantAdjustedStartVerticalMovement.vec3_copy(other.myLastRelevantAdjustedStartVerticalMovement);\r\n    this.myLastRelevantEndVerticalMovement.vec3_copy(other.myLastRelevantEndVerticalMovement);\r\n\r\n    this.myLastRelevantHasWallSlid = other.myLastRelevantHasWallSlid;\r\n    this.myHasWallSlidTowardOppositeDirection = other.myHasWallSlidTowardOppositeDirection;\r\n    this.myLastRelevantWallSlideFlickerPrevented = other.myLastRelevantWallSlideFlickerPrevented;\r\n    this.myWallSlideFlickerPreventionForceCheckCounter = other.myWallSlideFlickerPreventionForceCheckCounter;\r\n    this.myWallSlide90DegreesDirectionSign = other.myWallSlide90DegreesDirectionSign;\r\n    this.myWallSlide90DegreesRecomputeDirectionSign = other.myWallSlide90DegreesRecomputeDirectionSign;\r\n};\r\n\r\n\r\n\r\nObject.defineProperty(PP.CharacterCollisionResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTransformResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionMovementResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTeleportResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionCheckTransformResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionWallSlideResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceInfo.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSplitMovementResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionInternalResults.prototype, \"reset\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTransformResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionMovementResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionTeleportResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionCheckTransformResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionWallSlideResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceInfo.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSurfaceResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionSplitMovementResults.prototype, \"copy\", { enumerable: false });\r\nObject.defineProperty(PP.CharacterCollisionInternalResults.prototype, \"copy\", { enumerable: false });", "PP.CharacterCollisionSystem = class CharacterCollisionSystem {\r\n    constructor() {\r\n        this._myLastCheckRaycastsPerformed = 0;\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        this._myMaxFrameRaycastsPerformed = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        this._myCurrentFrameRaycastsPerformed = 0;\r\n        PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts = 0;\r\n    }\r\n\r\n    checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkMovement(movement, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.checkTransform(checkTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateSurfaceInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        let currentFramePerformedRaycasts = this._myCurrentFrameRaycastsPerformed;\r\n\r\n        this.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n        this.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - currentFramePerformedRaycasts;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.updateGroundInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n\r\n    updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults = new PP.CharacterCollisionResults()) {\r\n        PP.CollisionCheckBridge.updateCeilingInfo(currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n\r\n        this._myLastCheckRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts - this._myCurrentFrameRaycastsPerformed;\r\n        this._myCurrentFrameRaycastsPerformed = PP.CollisionCheckBridge._myCollisionCheck._myTotalRaycasts;\r\n        this._myMaxFrameRaycastsPerformed = Math.max(this._myCurrentFrameRaycastsPerformed, this._myMaxFrameRaycastsPerformed);\r\n        outCharacterCollisionResults.myDebugResults._myRaycastsPerformed = this._myLastCheckRaycastsPerformed;\r\n    }\r\n};\r\n\r\n\r\n\r\n// IMPLEMENTATION\r\n\r\nPP.CharacterCollisionSystem.prototype.checkTeleportToPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function checkTeleportToPosition(teleportPosition, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults) {\r\n        teleportTransformQuat.quat2_copy(currentTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.checkTeleportToTransform(teleportTransformQuat, currentTransformQuat, characterColliderSetup, prevCharacterCollisionResults, outCharacterCollisionResults);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CharacterCollisionSystem.prototype, \"checkTeleportToPosition\", { enumerable: false });", "PP.CharacterController = class CharacterController {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.SyncedCharacterController = class SyncedCharacterController extends PP.CharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.CharacterControllerUtils = {\r\n    computeGroundPerceivedAngle: function (surfaceNormal, direction, up) {\r\n        return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, true);\r\n    },\r\n    computeCeilingPerceivedAngle: function (surfaceNormal, direction, up) {\r\n        return this.computeSurfacePerceivedAngle(surfaceNormal, direction, up, false);\r\n    },\r\n    computeSurfacePerceivedAngle: function () {\r\n        let directionOnSurface = PP.vec3_create();\r\n        let verticalDirection = PP.vec3_create();\r\n        return function computeSurfacePerceivedAngle(surfaceNormal, direction, up, isGround) {\r\n            let surfacePerceivedAngle = 0;\r\n\r\n            verticalDirection.vec3_copy(up);\r\n            if (!isGround) {\r\n                verticalDirection.vec3_negate(verticalDirection);\r\n            }\r\n\r\n            let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n            if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 0;\r\n            } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 180;\r\n            }\r\n\r\n            directionOnSurface = direction.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, directionOnSurface);\r\n            surfacePerceivedAngle = directionOnSurface.vec3_angle(direction);\r\n\r\n            let isFartherOnUp = directionOnSurface.vec3_isFartherAlongAxis(direction, up);\r\n            if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n                surfacePerceivedAngle *= -1;\r\n            }\r\n\r\n            if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n                if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                    surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n                } else {\r\n                    surfacePerceivedAngle = surfaceAngle;\r\n                }\r\n            }\r\n\r\n            return surfacePerceivedAngle;\r\n        };\r\n    }()\r\n};", "PP.PlayerCharacterController = class PlayerCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.PlayerHeadCharacterController = class PlayerHeadCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "PP.PlayerHandCharacterController = class PlayerHandCharacterController extends PP.SyncedCharacterController {\r\n    constructor() {\r\n        super();\r\n    }\r\n};", "import { Component, Type } from '@wonderlandengine/api';\r\n\r\nPP.GlobalGravityComponent = class GlobalGravityComponent extends Component {\r\n    static TypeName = 'pp-global-gravity';\r\n    static Properties = {};\r\n\r\n    init() {\r\n    }\r\n};\r\n\r\nWL.registerComponent(PP.GlobalGravityComponent);\r\n\r\nPP.myGravityAcceleration = 0;\r\nPP.myGravityDirection = PP.vec3_create();", "PP.PlayerLocomotionSmooth = class PlayerLocomotionSmooth {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionRotate = class PlayerLocomotionRotate {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionGravity = class PlayerLocomotionGravity {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.PlayerLocomotionTeleport = class PlayerLocomotionTeleport {\r\n    constructor() {\r\n    }\r\n};\r\n", "PP.LocomotionUtils = {\r\n    EPSILON_NUMBER: Math.PP_EPSILON_NUMBER,\r\n    EPSILON_DEGREES: Math.PP_EPSILON_DEGREES,\r\n\r\n    computeSurfacePerceivedAngle: function () {\r\n        let forwardOnSurface = PP.vec3_create();\r\n        let verticalDirection = PP.vec3_create();\r\n        return function computeSurfacePerceivedAngle(surfaceNormal, forward, up, isGround = true) {\r\n            let surfacePerceivedAngle = 0;\r\n\r\n            verticalDirection.vec3_copy(up);\r\n            if (!isGround) {\r\n                verticalDirection.vec3_negate(verticalDirection);\r\n            }\r\n\r\n            let surfaceAngle = surfaceNormal.vec3_angle(verticalDirection);\r\n            if (surfaceAngle <= Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 0;\r\n            } else if (surfaceAngle >= 180 - Math.PP_EPSILON_DEGREES) {\r\n                surfaceAngle = 180;\r\n            }\r\n\r\n            forwardOnSurface = forward.vec3_projectOnPlaneAlongAxis(surfaceNormal, up, forwardOnSurface);\r\n            surfacePerceivedAngle = forwardOnSurface.vec3_angle(forward);\r\n\r\n            let isFartherOnUp = forwardOnSurface.vec3_isFartherAlongAxis(forward, up);\r\n            if ((!isFartherOnUp && isGround) || (isFartherOnUp && !isGround)) {\r\n                surfacePerceivedAngle *= -1;\r\n            }\r\n\r\n            if (Math.abs(surfacePerceivedAngle) >= surfaceAngle) {\r\n                if (surfaceAngle != 0 && surfaceAngle != 180) {\r\n                    surfacePerceivedAngle = surfaceAngle * Math.pp_sign(surfacePerceivedAngle);\r\n                } else {\r\n                    surfacePerceivedAngle = surfaceAngle;\r\n                }\r\n            }\r\n\r\n            return surfacePerceivedAngle;\r\n        };\r\n    }()\r\n};", "PP.PlayerHeadManagerParams = class PlayerHeadManagerParams {\r\n    constructor() {\r\n        this.mySessionChangeResyncEnabled = false;\r\n\r\n        this.myBlurEndResyncEnabled = false;\r\n        this.myBlurEndResyncRotation = false;\r\n\r\n        this.myResetTransformOnViewResetEnabled = true;\r\n\r\n        this.myNextEnterSessionResyncHeight = false;\r\n        this.myEnterSessionResyncHeight = false;\r\n\r\n        this.myExitSessionResyncHeight = false;\r\n        this.myExitSessionResyncVerticalAngle = false;\r\n        this.myExitSessionRemoveRightTilt = false; // for now right tilt is removed even if this setting is false, if the vertical angle has to be adjusted\r\n        this.myExitSessionAdjustMaxVerticalAngle = false;\r\n        this.myExitSessionMaxVerticalAngle = 0;\r\n\r\n        this.myHeightOffsetVRWithFloor = null;\r\n        this.myHeightOffsetVRWithoutFloor = null;\r\n        this.myHeightOffsetNonVR = null;\r\n\r\n        this.myNextEnterSessionFloorHeight = null;\r\n        this.myEnterSessionFloorHeight = null;\r\n\r\n        this.myRotateFeetKeepUp = false;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n        // can be used to always add a bit of height, for example to compensate the fact \r\n        // that the default height is actually the eye height and you may want to also add a forehead offset\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n};\r\n\r\n// could be intended as the generic player body manager (maybe with hands and stuff also)\r\nPP.PlayerHeadManager = class PlayerHeadManager {\r\n    constructor(params = new PP.PlayerHeadManagerParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myNonVRHead;\r\n\r\n        this._mySessionChangeResyncHeadTransform = null;\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myCurrentHeadTransformQuat = PP.quat2_create();\r\n        this._myPreviousHeadTransformQuat = PP.quat2_create();\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0; // needed because VR head takes some frames to get the tracked position\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer = new PP.Timer(5, false);\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        this._myIsSyncedDelayCounter = 0;\r\n\r\n        this._myActive = true;\r\n\r\n        // Setup\r\n\r\n        this._myResyncCounterFrames = 3;\r\n        this._myIsSyncedDelayCounterFrames = 1;\r\n    }\r\n\r\n    start() {\r\n        this._updateHeightOffset();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    paramsUpdated() {\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    getPlayer() {\r\n        return PP.myPlayerObjects.myPlayer;\r\n    }\r\n\r\n    getHead() {\r\n        return this._myCurrentHead;\r\n    }\r\n\r\n    getHeightHead() {\r\n        return this.getHeightEyes() + this._myParams.myForeheadExtraHeight;\r\n    }\r\n\r\n    getHeightEyes() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformFeetQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        return this.getHead().pp_getTransformQuat(outTransformFeetQuat);\r\n    }\r\n\r\n    getPositionFeet(outPositionFeet = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionHead(outPositionHead = PP.vec3_create()) {\r\n        return this._myCurrentHead.pp_getPosition(outPositionHead);\r\n    }\r\n\r\n    getRotationFeetQuat(outRotationFeetQuat = PP.quat_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getRotationHeadQuat(outRotationHeadQuat = PP.quat_create()) {\r\n        return this.getHead().pp_getRotationQuat(outRotationHeadQuat);\r\n    }\r\n\r\n    isSynced() {\r\n        return this._myIsSyncedDelayCounter == 0 && this._myDelaySessionChangeResyncCounter == 0 && this._myDelayBlurEndResyncCounter == 0 && !this._myDelayBlurEndResyncTimer.isRunning() && !this._mySessionBlurred;\r\n    }\r\n\r\n    setHeight(height, setOnlyForActiveOne = false) {\r\n        if (!setOnlyForActiveOne || !this._mySessionActive) {\r\n            this._myParams.myHeightOffsetNonVR = height;\r\n        }\r\n\r\n        if (!setOnlyForActiveOne || this._mySessionActive) {\r\n            this._myParams.myHeightOffsetVRWithoutFloor = height;\r\n\r\n            if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                this._myParams.myHeightOffsetVRWithFloor = 0;\r\n            }\r\n            let isFloor = PP.XRUtils.isReferenceSpaceLocalFloor() || PP.XRUtils.isDeviceEmulated();\r\n            if (this._mySessionActive && isFloor) {\r\n                this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (height - this.getHeight());\r\n            } else if (!this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = height;\r\n            }\r\n        }\r\n\r\n        this._updateHeightOffset();\r\n    }\r\n\r\n    moveFeet(movement) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    moveHead(movement) {\r\n        this.moveFeet(movement);\r\n    }\r\n\r\n    teleportPositionHead(teleportPosition) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPositionFeet(teleportPosition) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    rotateHeadQuat(rotationQuat) {\r\n        // #TODO rotate feet with this and then rotate head freely if possible\r\n        // implemented outside class definition \r\n    }\r\n\r\n    canRotateFeet() {\r\n        return true;\r\n    }\r\n\r\n    canRotateHead() {\r\n        return !this._mySessionActive;\r\n    }\r\n\r\n    setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    setRotationHeadQuat() {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        // implemented outside class definition \r\n    }\r\n\r\n    lookAtHead(position, up = null) {\r\n    }\r\n\r\n    lookToHead(direction, up = null) {\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myIsSyncedDelayCounter != 0) {\r\n            this._myIsSyncedDelayCounter--;\r\n            this._myIsSyncedDelayCounter = Math.max(0, this._myIsSyncedDelayCounter);\r\n        }\r\n\r\n        if (this._myDelaySessionChangeResyncCounter > 0) {\r\n            this._myDelaySessionChangeResyncCounter--;\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                this._sessionChangeResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        if (this._myDelayBlurEndResyncCounter > 0 && !this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            this._myDelayBlurEndResyncCounter--;\r\n            if (this._myDelayBlurEndResyncCounter == 0) {\r\n                this._blurEndResync();\r\n                this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n            }\r\n        }\r\n\r\n        // not really used since visibility hidden end is not considered a special case anymore\r\n        if (this._myDelayBlurEndResyncTimer.isRunning()) {\r\n            if (this._myDelayBlurEndResyncCounter > 0) {\r\n                this._myDelayBlurEndResyncCounter--;\r\n            } else {\r\n                this._myDelayBlurEndResyncTimer.update(dt);\r\n                if (this._myDelayBlurEndResyncTimer.isDone()) {\r\n                    this._blurEndResync();\r\n                    this._myIsSyncedDelayCounter = this._myIsSyncedDelayCounterFrames;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isSynced()) {\r\n            this._myPreviousHeadTransformQuat.quat2_copy(this._myCurrentHeadTransformQuat);\r\n            this._myCurrentHead.pp_getTransformQuat(this._myCurrentHeadTransformQuat);\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawLineEnd(0, this.getPositionFeet(), this.getPositionHead(), PP.vec4_create(1, 0, 0, 1), 0.01);\r\n\r\n        console.error(this.getHeightEyes());\r\n    }\r\n};\r\n\r\nPP.PlayerHeadManager.prototype.getHeightEyes = function () {\r\n    let headPosition = PP.vec3_create();\r\n    return function getHeightEyes() {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let eyesHeight = this._getPositionHeight(headPosition);\r\n\r\n        return eyesHeight;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.getTransformFeetQuat = function () {\r\n    let feetPosition = PP.vec3_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n    return function getTransformFeetQuat(outTransformFeetQuat = PP.quat2_create()) {\r\n        outTransformFeetQuat.quat2_setPositionRotationQuat(this.getPositionFeet(feetPosition), this.getRotationFeetQuat(feetRotationQuat));\r\n        return outTransformFeetQuat;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.getRotationFeetQuat = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headForward = PP.vec3_create();\r\n    return function getRotationFeetQuat(outRotationFeetQuat = PP.quat_create()) {\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        headForward = this._myCurrentHead.pp_getForward(headForward);\r\n\r\n        // feet are considered to always be flat on the player up\r\n        let angleWithUp = headForward.vec3_angle(playerUp);\r\n        let mingAngle = 10;\r\n        if (angleWithUp < mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getDown(headForward);\r\n        } else if (angleWithUp > 180 - mingAngle) {\r\n            headForward = this._myCurrentHead.pp_getUp(headForward);\r\n        }\r\n\r\n        headForward = headForward.vec3_removeComponentAlongAxis(playerUp, headForward);\r\n        headForward.vec3_normalize(headForward);\r\n\r\n        outRotationFeetQuat.quat_setUp(playerUp, headForward);\r\n        return outRotationFeetQuat;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.getPositionFeet = function () {\r\n    let headPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    return function getPositionFeet(outPositionFeet = PP.vec3_create()) {\r\n        headPosition = this._myCurrentHead.pp_getPosition(headPosition);\r\n        let headHeight = this._getPositionHeight(headPosition);\r\n\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        outPositionFeet = headPosition.vec3_sub(playerUp.vec3_scale(headHeight, outPositionFeet), outPositionFeet);\r\n\r\n        return outPositionFeet;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.moveFeet = function moveFeet(movement) {\r\n    PP.myPlayerObjects.myPlayer.pp_translate(movement);\r\n};\r\n\r\nPP.PlayerHeadManager.prototype.rotateFeetQuat = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let rotationAxis = PP.vec3_create();\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let currentFeetRotation = PP.quat_create();\r\n    let newFeetRotation = PP.quat_create();\r\n    let fixedNewFeetRotation = PP.quat_create();\r\n    let newFeetForward = PP.vec3_create();\r\n    let fixedRotation = PP.quat_create();\r\n    let newHeadPosition = PP.vec3_create();\r\n    let headAdjustmentMovement = PP.vec3_create();\r\n    return function rotateFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        let angle = rotationQuat.quat_getAngleRadians();\r\n        if (angle <= 0.00001) {\r\n            return;\r\n        }\r\n\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        rotationAxis = rotationQuat.quat_getAxis(rotationAxis);\r\n\r\n        if (!rotationAxis.vec3_isOnAxis(playerUp) &&\r\n            ((keepUpOverride == null && this._myParams.myFeetRotationKeepUp) || (keepUpOverride))) {\r\n            currentFeetRotation = this.getRotationFeetQuat(currentFeetRotation);\r\n\r\n            newFeetRotation = currentFeetRotation.quat_rotateQuat(rotationQuat, newFeetRotation);\r\n            newFeetForward = newFeetRotation.quat_getForward(newFeetForward);\r\n\r\n            fixedNewFeetRotation.quat_copy(newFeetRotation);\r\n            fixedNewFeetRotation.quat_setUp(playerUp, newFeetForward);\r\n\r\n            fixedRotation = currentFeetRotation.quat_rotationToQuat(fixedNewFeetRotation, fixedRotation);\r\n        } else {\r\n            fixedRotation.quat_copy(rotationQuat);\r\n        }\r\n\r\n        PP.myPlayerObjects.myPlayer.pp_rotateAroundQuat(fixedRotation, currentHeadPosition);\r\n\r\n        newHeadPosition = this._myCurrentHead.pp_getPosition(newHeadPosition);\r\n\r\n        headAdjustmentMovement = currentHeadPosition.vec3_sub(newHeadPosition, headAdjustmentMovement);\r\n        if (headAdjustmentMovement.vec3_length() > 0.00001) {\r\n            this.moveFeet(headAdjustmentMovement);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.rotateHeadQuat = function () {\r\n    let newHeadRotation = PP.quat_create();\r\n    let newHeadUp = PP.vec3_create();\r\n    return function rotateHeadQuat(rotationQuat) {\r\n        if (this.canRotateHead()) {\r\n            this._myCurrentHead.pp_rotateQuat(rotationQuat);\r\n            newHeadRotation = this._myCurrentHead.pp_getRotationQuat(newHeadRotation);\r\n\r\n            PP.myPlayerObjects.myHead.pp_setRotationQuat(newHeadRotation);\r\n\r\n            newHeadRotation = newHeadRotation.quat_rotateAxisRadians(Math.PI, newHeadRotation.quat_getUp(newHeadUp), newHeadRotation);\r\n            PP.myPlayerObjects.myNonVRCamera.pp_setRotationQuat(newHeadRotation);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.setRotationFeetQuat = function () {\r\n    let currentRotationQuat = PP.quat_create();\r\n    let rotationQuatToRotate = PP.quat_create();\r\n    return function setRotationFeetQuat(rotationQuat, keepUpOverride = null) {\r\n        currentRotationQuat = this.getRotationFeetQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateFeetQuat(rotationQuatToRotate, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.setRotationHeadQuat = function () {\r\n    let currentRotationQuat = PP.quat_create();\r\n    let rotationQuatToRotate = PP.quat_create();\r\n    return function setRotationHeadQuat(rotationQuat) {\r\n        currentRotationQuat = this.getRotationHeadQuat(currentRotationQuat);\r\n        rotationQuatToRotate = currentRotationQuat.quat_rotationToQuat(rotationQuat, rotationQuatToRotate);\r\n        this.rotateHeadQuat(rotationQuatToRotate);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.teleportPositionHead = function () {\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let teleportMovementToPerform = PP.vec3_create();\r\n    return function teleportPositionHead(teleportPosition) {\r\n        currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentHeadPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.teleportPositionFeet = function () {\r\n    let currentFeetPosition = PP.vec3_create();\r\n    let teleportMovementToPerform = PP.vec3_create();\r\n    return function teleportPositionFeet(teleportPosition) {\r\n        currentFeetPosition = this.getPositionFeet(currentFeetPosition);\r\n        teleportMovementToPerform = teleportPosition.vec3_sub(currentFeetPosition, teleportMovementToPerform);\r\n        this.moveFeet(teleportMovementToPerform);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.teleportPlayerToHeadTransformQuat = function () {\r\n    let headPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    let flatCurrentPlayerPosition = PP.vec3_create();\r\n    let flatNewPlayerPosition = PP.vec3_create();\r\n    let teleportMovement = PP.vec3_create();\r\n    let playerForward = PP.vec3_create();\r\n    let headForward = PP.vec3_create();\r\n    let headForwardNegated = PP.vec3_create();\r\n    let rotationToPerform = PP.quat_create();\r\n    return function teleportPlayerToHeadTransformQuat(headTransformQuat) {\r\n        headPosition = headTransformQuat.quat2_getPosition(headPosition);\r\n\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        flatCurrentPlayerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(flatCurrentPlayerPosition).vec3_removeComponentAlongAxis(playerUp, flatCurrentPlayerPosition);\r\n        flatNewPlayerPosition = headPosition.vec3_removeComponentAlongAxis(playerUp, flatNewPlayerPosition);\r\n\r\n        teleportMovement = flatNewPlayerPosition.vec3_sub(flatCurrentPlayerPosition, teleportMovement);\r\n        PP.myPlayerObjects.myPlayer.pp_translate(teleportMovement);\r\n\r\n        playerForward = PP.myPlayerObjects.myPlayer.pp_getForward(playerForward);\r\n        headForward = headTransformQuat.quat2_getForward(headForward);\r\n        headForwardNegated = headForward.vec3_negate(headForwardNegated); // the head is rotated 180 degrees from the player for rendering reasons\r\n\r\n        rotationToPerform = playerForward.vec3_rotationToPivotedQuat(headForwardNegated, playerUp, rotationToPerform);\r\n\r\n        PP.myPlayerObjects.myPlayer.pp_rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.lookAtFeet = function () {\r\n    let direction = PP.vec3_create();\r\n    let feetPosition = PP.vec3_create();\r\n    return function lookAtFeet(position, up = null, keepUpOverride = null) {\r\n        feetPosition = this.getPositionFeet(feetPosition);\r\n        direction = position.vec3_sub(feetPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToFeet(direction, up, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.lookToFeet = function () {\r\n    let feetRotation = PP.quat_create();\r\n    return function lookToFeet(direction, up = null, keepUpOverride = null) {\r\n        feetRotation = this.getRotationFeetQuat(feetRotation);\r\n        feetRotation.quat_setForward(direction, up);\r\n        this.setRotationFeetQuat(feetRotation, keepUpOverride);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.lookAtHead = function () {\r\n    let direction = PP.vec3_create();\r\n    let headPosition = PP.vec3_create();\r\n    return function lookAtHead(position, up = null) {\r\n        headPosition = this.getPositionHead(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        this.lookToHead(direction, up);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype.lookToHead = function () {\r\n    let headRotation = PP.quat_create();\r\n    return function lookToHead(direction, up = null) {\r\n        headRotation = this.getRotationHeadQuat(headRotation);\r\n        headRotation.quat_setForward(direction, up);\r\n        this.setRotationHeadQuat(headRotation);\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._getPositionHeight = function () {\r\n    let playerPosition = PP.vec3_create();\r\n    let playerUp = PP.vec3_create();\r\n    let heightVector = PP.vec3_create();\r\n    return function _getPositionHeight(position) {\r\n        playerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(playerPosition);\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n        heightVector = position.vec3_sub(playerPosition, heightVector).vec3_componentAlongAxis(playerUp, heightVector);\r\n        let height = heightVector.vec3_length();\r\n        if (!playerUp.vec3_isConcordant(heightVector)) {\r\n            height = -height;\r\n        }\r\n\r\n        return height;\r\n    };\r\n}();\r\n\r\n// #TODO what happens if the player go in the blurred state before wle has loaded?\r\nPP.PlayerHeadManager.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(manualStart, session) {\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelaySessionChangeResyncCounter = 0;\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) {\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        session.addEventListener('visibilitychange', function (event) {\r\n            if (event.session.visibilityState != \"visible\") {\r\n                if (!this._mySessionBlurred) {\r\n                    this._onXRSessionBlurStart(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = session.visibilityState == \"hidden\";\r\n            } else {\r\n                if (this._mySessionBlurred) {\r\n                    this._onXRSessionBlurEnd(event.session);\r\n                }\r\n\r\n                this._myVisibilityHidden = false;\r\n            }\r\n        }.bind(this));\r\n\r\n        if (this._myParams.mySessionChangeResyncEnabled && !manualStart && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadObject = this._myCurrentHead;\r\n                this._mySessionChangeResyncHeadTransform = previousHeadObject.pp_getTransformQuat();\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myVRHead;\r\n\r\n        this._mySessionActive = true;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._onXRSessionEnd = function () {\r\n    return function _onXRSessionEnd(session) {\r\n        if (this._myParams.mySessionChangeResyncEnabled && this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                let previousHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n\r\n                if (this._myBlurRecoverHeadTransform != null) {\r\n                    previousHeadTransform = this._myBlurRecoverHeadTransform;\r\n                }\r\n\r\n                this._mySessionChangeResyncHeadTransform = previousHeadTransform;\r\n            }\r\n\r\n            this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n        } else {\r\n            this._myDelaySessionChangeResyncCounter = 0;\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n\r\n        this._myBlurRecoverHeadTransform = null;\r\n        this._myVisibilityHidden = false;\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n        this._myDelayBlurEndResyncTimer.reset();\r\n\r\n        this._myCurrentHead = PP.myPlayerObjects.myNonVRHead;\r\n\r\n        this._mySessionActive = false;\r\n        this._mySessionBlurred = false;\r\n\r\n        if (this._myActive) {\r\n            this._updateHeightOffset();\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._onXRSessionBlurStart = function () {\r\n    return function _onXRSessionBlurStart(session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform == null && this._mySessionActive) {\r\n                if (this._myDelaySessionChangeResyncCounter > 0) {\r\n                    this._myBlurRecoverHeadTransform = this._mySessionChangeResyncHeadTransform;\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = this._myCurrentHead.pp_getTransformQuat();\r\n                }\r\n            } else if (!this._mySessionActive || !this._myParams.myBlurEndResyncEnabled) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._myDelayBlurEndResyncCounter = 0;\r\n\r\n        this._mySessionBlurred = true;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._onXRSessionBlurEnd = function () {\r\n    return function _onXRSessionBlurEnd(session) {\r\n        if (this._myActive) {\r\n            if (this._myDelaySessionChangeResyncCounter == 0) {\r\n                if (this._myParams.myBlurEndResyncEnabled && this._myBlurRecoverHeadTransform != null && this._mySessionActive) {\r\n                    this._myDelayBlurEndResyncCounter = this._myResyncCounterFrames;\r\n                    if (this._myVisibilityHidden) {\r\n                        // this._myDelayBlurEndResyncTimer.start();\r\n\r\n                        // this was added because on the end of hidden u can have the resync delay cause of the guardian resync\r\n                        // but I just decided to skip this since it's not reliable and the guardian resync can happen in other cases\r\n                        // with no notification anyway\r\n                    }\r\n                } else {\r\n                    this._myBlurRecoverHeadTransform = null;\r\n                    this._myDelayBlurEndResyncCounter = 0;\r\n                }\r\n            } else {\r\n                this._myDelaySessionChangeResyncCounter = this._myResyncCounterFrames;\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n\r\n        this._mySessionBlurred = false;\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._onViewReset = function () {\r\n    return function _onViewReset() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetTransformOnViewResetEnabled && this._mySessionActive && this.isSynced()) {\r\n                this.teleportPlayerToHeadTransformQuat(this._myPreviousHeadTransformQuat);\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._blurEndResync = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let recoverHeadPosition = PP.vec3_create();\r\n    let flatCurrentHeadPosition = PP.vec3_create();\r\n    let flatRecoverHeadPosition = PP.vec3_create();\r\n    let recoverMovement = PP.vec3_create();\r\n    let recoverHeadForward = PP.vec3_create();\r\n    let currentHeadForward = PP.vec3_create();\r\n    let rotationToPerform = PP.quat_create();\r\n    return function _blurEndResync() {\r\n        if (this._myBlurRecoverHeadTransform != null) {\r\n            if (this._mySessionChangeResyncHeadTransform != null) {\r\n                this._myBlurRecoverHeadTransform = null;\r\n                this._sessionChangeResync();\r\n            } else {\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                recoverHeadPosition = this._myBlurRecoverHeadTransform.quat2_getPosition(recoverHeadPosition);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatRecoverHeadPosition = recoverHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatRecoverHeadPosition);\r\n\r\n                recoverMovement = flatRecoverHeadPosition.vec3_sub(flatCurrentHeadPosition, recoverMovement);\r\n                this.moveFeet(recoverMovement);\r\n\r\n                recoverHeadForward = this._myBlurRecoverHeadTransform.quat2_getForward(recoverHeadForward);\r\n                currentHeadForward = this._myCurrentHead.pp_getForward(currentHeadForward);\r\n                rotationToPerform = currentHeadForward.vec3_rotationToPivotedQuat(recoverHeadForward, playerUp, rotationToPerform);\r\n\r\n                if (this._myParams.myBlurEndResyncRotation) {\r\n                    this.rotateFeetQuat(rotationToPerform);\r\n                }\r\n\r\n                this._myBlurRecoverHeadTransform = null;\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._sessionChangeResync = function () {\r\n    let currentHeadPosition = PP.vec3_create();\r\n    let resyncHeadPosition = PP.vec3_create();\r\n    let resyncHeadRotation = PP.quat_create();\r\n    let playerUp = PP.vec3_create();\r\n    let flatCurrentHeadPosition = PP.vec3_create();\r\n    let flatResyncHeadPosition = PP.vec3_create();\r\n    let resyncMovement = PP.vec3_create();\r\n    let resyncHeadForward = PP.vec3_create();\r\n    let resyncHeadUp = PP.vec3_create();\r\n    let resyncHeadRight = PP.vec3_create();\r\n    let playerPosition = PP.vec3_create();\r\n    let newPlayerPosition = PP.vec3_create();\r\n    let fixedHeadRight = PP.vec3_create();\r\n    let fixedHeadRightNegate = PP.vec3_create();\r\n    let fixedHeadUp = PP.vec3_create();\r\n    let fixedHeadForward = PP.vec3_create();\r\n    let fixedHeadRotation = PP.quat_create();\r\n    return function _sessionChangeResync() {\r\n        if (this._myBlurRecoverHeadTransform == null && this._mySessionChangeResyncHeadTransform != null) {\r\n            if (this._mySessionActive) {\r\n                currentHeadPosition = this._myCurrentHead.pp_getPosition(currentHeadPosition);\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                flatCurrentHeadPosition = currentHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatCurrentHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                resyncMovement = flatResyncHeadPosition.vec3_sub(flatCurrentHeadPosition, resyncMovement);\r\n                this.moveFeet(resyncMovement);\r\n\r\n                let isFloor = PP.XRUtils.isReferenceSpaceLocalFloor() || PP.XRUtils.isDeviceEmulated();\r\n                if (this._myParams.myEnterSessionResyncHeight || this._myParams.myNextEnterSessionResyncHeight) {\r\n                    this._myParams.myNextEnterSessionResyncHeight = false;\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    this._myParams.myHeightOffsetVRWithoutFloor = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (resyncHeadHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                } else if (isFloor && (this._myParams.myNextEnterSessionFloorHeight != null || this._myParams.myEnterSessionFloorHeight != null)) {\r\n                    let floorHeight = (this._myParams.myNextEnterSessionFloorHeight != null) ? this._myParams.myNextEnterSessionFloorHeight : this._myParams.myEnterSessionFloorHeight;\r\n                    floorHeight -= this._myParams.myForeheadExtraHeight;\r\n                    let currentHeadHeight = this._getPositionHeight(currentHeadPosition);\r\n\r\n                    if (this._myParams.myHeightOffsetVRWithFloor == null) {\r\n                        this._myParams.myHeightOffsetVRWithFloor = 0;\r\n                    }\r\n                    this._myParams.myHeightOffsetVRWithFloor = this._myParams.myHeightOffsetVRWithFloor + (floorHeight - currentHeadHeight);\r\n\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                this._resyncHeadRotationForward(resyncHeadRotation);\r\n            } else {\r\n                playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n\r\n                resyncHeadPosition = this._mySessionChangeResyncHeadTransform.quat2_getPosition(resyncHeadPosition);\r\n                flatResyncHeadPosition = resyncHeadPosition.vec3_removeComponentAlongAxis(playerUp, flatResyncHeadPosition);\r\n\r\n                playerPosition = PP.myPlayerObjects.myPlayer.pp_getPosition(playerPosition);\r\n                newPlayerPosition = flatResyncHeadPosition.vec3_add(playerPosition.vec3_componentAlongAxis(playerUp, newPlayerPosition), newPlayerPosition);\r\n\r\n                PP.myPlayerObjects.myPlayer.pp_setPosition(newPlayerPosition);\r\n                PP.myPlayerObjects.myNonVRCamera.pp_resetPositionLocal();\r\n\r\n                if (this._myParams.myExitSessionResyncHeight) {\r\n                    let resyncHeadHeight = this._getPositionHeight(resyncHeadPosition);\r\n                    this._myParams.myHeightOffsetNonVR = resyncHeadHeight + this._myParams.myForeheadExtraHeight;\r\n                    this._updateHeightOffset();\r\n                }\r\n\r\n                resyncHeadRotation = this._mySessionChangeResyncHeadTransform.quat2_getRotationQuat(resyncHeadRotation);\r\n\r\n                if (this._myParams.myExitSessionRemoveRightTilt ||\r\n                    this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n\r\n                    fixedHeadRight = resyncHeadForward.vec3_cross(playerUp, fixedHeadRight);\r\n                    fixedHeadRight.vec3_normalize(fixedHeadRight);\r\n\r\n                    if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n                        let angleForwardUp = resyncHeadForward.vec3_angle(playerUp);\r\n                        let negateAngle = 45;\r\n                        if (angleForwardUp > (180 - negateAngle) || angleForwardUp < negateAngle) {\r\n                            // this way I get a good fixed result for both head upside down and head rotated on forward\r\n                            // when the head is looking down and a bit backward (more than 135 degrees), I want the forward to actually\r\n                            // be the opposite because it's like u rotate back the head up and look forward again\r\n                            fixedHeadRight.vec3_negate(fixedHeadRight);\r\n                        }\r\n                    }\r\n\r\n                    if (fixedHeadRight.vec3_isZero(0.000001)) {\r\n                        fixedHeadRight = resyncHeadRotation.quat_getRight(fixedHeadRight);\r\n                    }\r\n\r\n                    fixedHeadUp = fixedHeadRight.vec3_cross(resyncHeadForward, fixedHeadUp);\r\n                    fixedHeadUp.vec3_normalize(fixedHeadUp);\r\n                    fixedHeadForward = fixedHeadUp.vec3_cross(fixedHeadRight, fixedHeadForward);\r\n                    fixedHeadForward.vec3_normalize(fixedHeadForward);\r\n\r\n                    fixedHeadRotation.quat_fromAxes(fixedHeadRight.vec3_negate(fixedHeadRightNegate), fixedHeadUp, fixedHeadForward);\r\n                    resyncHeadRotation.quat_copy(fixedHeadRotation);\r\n                }\r\n\r\n                if (this._myParams.myExitSessionAdjustMaxVerticalAngle || !this._myParams.myExitSessionResyncVerticalAngle) {\r\n                    resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n                    resyncHeadRight = resyncHeadRotation.quat_getRight(resyncHeadRight);\r\n\r\n                    let maxVerticalAngle = Math.max(0, this._myParams.myExitSessionMaxVerticalAngle - 0.0001);\r\n                    if (!this._myParams.myExitSessionResyncVerticalAngle) {\r\n                        maxVerticalAngle = 0;\r\n                    }\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(resyncHeadUp.vec3_angleSigned(playerUp, resyncHeadRight));\r\n                    if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                        let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                        resyncHeadRotation = resyncHeadRotation.quat_rotateAxis(fixAngle, resyncHeadRight, resyncHeadRotation);\r\n                    }\r\n                }\r\n\r\n                this.setRotationHeadQuat(resyncHeadRotation);\r\n            }\r\n\r\n            if (this._mySessionActive) {\r\n                this._myParams.myNextEnterSessionFloorHeight = null;\r\n                this._myFirstEnterSessionResyncDone = true;\r\n            }\r\n\r\n            this._mySessionChangeResyncHeadTransform = null;\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._resyncHeadRotationForward = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let resyncHeadForward = PP.vec3_create();\r\n    let resyncHeadUp = PP.vec3_create();\r\n    let fixedResyncHeadRotation = PP.quat_create();\r\n    return function _resyncHeadRotationForward(resyncHeadRotation) {\r\n        playerUp = PP.myPlayerObjects.myPlayer.pp_getUp(playerUp);\r\n        resyncHeadForward = resyncHeadRotation.quat_getForward(resyncHeadForward);\r\n        resyncHeadUp = resyncHeadRotation.quat_getUp(resyncHeadUp);\r\n        fixedResyncHeadRotation.quat_copy(resyncHeadRotation);\r\n        fixedResyncHeadRotation.quat_setUp(playerUp, resyncHeadForward);\r\n\r\n        if (!resyncHeadUp.vec3_isConcordant(playerUp)) {\r\n            //if it was upside down, it's like it has to rotate the neck back up,so the forward is actually on the opposite side\r\n            fixedResyncHeadRotation.quat_rotateAxis(180, playerUp, fixedResyncHeadRotation);\r\n        }\r\n\r\n        this.setRotationFeetQuat(fixedResyncHeadRotation);\r\n        return;\r\n    }\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._updateHeightOffset = function () {\r\n    return function _updateHeightOffset() {\r\n        if (this._mySessionActive) {\r\n            if (PP.XRUtils.isDeviceEmulated()) {\r\n                this._setPlayerPivotHeightOffset(0, 0);\r\n            } else if (PP.XRUtils.isReferenceSpaceLocalFloor()) {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithFloor, 0);\r\n            } else {\r\n                this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetVRWithoutFloor, this._myParams.myForeheadExtraHeight);\r\n            }\r\n        } else {\r\n            this._setPlayerPivotHeightOffset(this._myParams.myHeightOffsetNonVR, this._myParams.myForeheadExtraHeight);\r\n        }\r\n    }\r\n}();\r\n\r\nPP.PlayerHeadManager.prototype._setPlayerPivotHeightOffset = function () {\r\n    let playerPivotPosition = PP.vec3_create();\r\n    return function _setPlayerPivotHeightOffset(offset, amountToRemove) {\r\n        if (offset != null) {\r\n            playerPivotPosition = PP.myPlayerObjects.myPlayerPivot.pp_getPositionLocal(playerPivotPosition);\r\n            PP.myPlayerObjects.myPlayerPivot.pp_setPositionLocal([playerPivotPosition[0], offset - amountToRemove, playerPivotPosition[2]]);\r\n        }\r\n    }\r\n}();\r\n\r\n\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"getHeightEyes\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"getTransformFeetQuat\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"getPositionFeet\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"moveFeet\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"rotateFeetQuat\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"rotateHeadQuat\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"teleportPositionHead\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"teleportPositionFeet\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"teleportPlayerToHeadTransformQuat\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_getPositionHeight\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_onXRSessionEnd\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_onXRSessionBlurStart\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_onXRSessionBlurEnd\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_onViewReset\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_blurEndResync\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_sessionChangeResync\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerHeadManager.prototype, \"_setPlayerPivotHeightOffset\", { enumerable: false });", "PP.PlayerTransformManagerSyncFlag = {\r\n    BODY_COLLIDING: 0,\r\n    HEAD_COLLIDING: 1,\r\n    FAR: 2,\r\n    FLOATING: 3\r\n};\r\n\r\nPP.PlayerTransformManagerParams = class PlayerTransformManagerParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMovementCollisionCheckParams = null;\r\n        this.myTeleportCollisionCheckParams = null; // can be left null and will be generated from the movement one\r\n        this.myTeleportCollisionCheckParamsCopyFromMovement = false;\r\n        this.myTeleportCollisionCheckParamsCheck360 = false;\r\n\r\n        // sync for vr and non vr\r\n        this.mySyncEnabledFlagMap = new Map();\r\n        this.mySyncEnabledFlagMap.set(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncEnabledFlagMap.set(PP.PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncEnabledFlagMap.set(PP.PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionFlagMap = new Map();\r\n        this.mySyncPositionFlagMap.set(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING, true);\r\n        this.mySyncPositionFlagMap.set(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncPositionFlagMap.set(PP.PlayerTransformManagerSyncFlag.FAR, true);\r\n        this.mySyncPositionFlagMap.set(PP.PlayerTransformManagerSyncFlag.FLOATING, true);\r\n\r\n        this.mySyncPositionHeadFlagMap = new Map();\r\n        this.mySyncPositionHeadFlagMap.set(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncPositionHeadFlagMap.set(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING, true);\r\n        this.mySyncPositionHeadFlagMap.set(PP.PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncPositionHeadFlagMap.set(PP.PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncRotationFlagMap = new Map();\r\n        this.mySyncRotationFlagMap.set(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncRotationFlagMap.set(PP.PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncRotationFlagMap.set(PP.PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.mySyncHeightFlagMap = new Map();\r\n        this.mySyncHeightFlagMap.set(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING, false);\r\n        this.mySyncHeightFlagMap.set(PP.PlayerTransformManagerSyncFlag.FAR, false);\r\n        this.mySyncHeightFlagMap.set(PP.PlayerTransformManagerSyncFlag.FLOATING, false);\r\n\r\n        this.myIsLeaningValidAboveDistance = false;\r\n        this.myLeaningValidDistance = 0;\r\n\r\n        // settings for both hop and lean\r\n        this.myIsFloatingValidIfVerticalMovement = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndRealOnGround = false; //#TODO this is more an override\r\n        this.myIsFloatingValidIfRealOnGround = false;\r\n        this.myIsFloatingValidIfSteepGround = false;\r\n        this.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n\r\n        this.myFloatingSplitCheckEnabled = false;\r\n        this.myFloatingSplitCheckMaxLength = 0;\r\n        this.myFloatingSplitCheckMaxSteps = null;\r\n        this.myFloatingSplitCheckStepEqualLength = false;\r\n        this.myFloatingSplitCheckStepEqualLengthMinLength = 0;\r\n\r\n        this.myIsMaxDistanceFromRealToSyncEnabled = false;\r\n        this.myMaxDistanceFromRealToSync = 0;\r\n        // max distance to resync valid with head, if you head is further do not resync\r\n\r\n        this.myHeadRadius = 0;\r\n        this.myHeadCollisionBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myHeadCollisionObjectsToIgnore = [];\r\n\r\n        this.myRotateOnlyIfSynced = false;\r\n        this.myResetRealResetRotationIfUpChanged = true;\r\n\r\n        // this.myDistanceToStartApplyGravityWhenFloating = 0; // this should be moved outisde, that is, if it is floating stop gravity\r\n\r\n        // set valid if head synced (head manager)\r\n\r\n        this.myRealMovementAllowVerticalAdjustments = false;\r\n        // this true means that the real movement should also snap on ground or fix the vertical to pop from it\r\n        // you may want this if u want that while real moving u can also climb stairs\r\n\r\n        // real movement apply vertical snap or not (other option to apply gravity) \r\n        // (gravity inside this class?) only when movement is applied not for head only)\r\n\r\n        this.myUpdateRealPositionValid = false;\r\n        this.myUpdatePositionValid = false;\r\n\r\n        this.myMinHeight = null;\r\n        this.myMaxHeight = null;\r\n\r\n        // these and the callbacks does not makes much sense\r\n        // the colliding things are made to not sync the real position, but if the height is below and the body is not colliding\r\n        // there is not reason not to resync, even if u put the real back on the valid the height will stay the same\r\n        // if someone puts the head in the ground, there is no way for me to resync and make the head pop out sadly\r\n        // in this case u either accept that u can move without seeing, or stop moving until the obscure is on\r\n        this.myIsBodyCollidingWhenHeightBelowValue = null; // could be removed and added with the custom check callback if u want it\r\n        this.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n        this.myIsBodyCollidingExtraCheckCallback = null;      // Signature: callback(transformManager) -> bool\r\n        this.myIsLeaningExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsHoppingExtraCheckCallback = null;            // Signature: callback(transformManager) -> bool\r\n        this.myIsFarExtraCheckCallback = null;                // Signature: callback(transformManager) -> bool\r\n\r\n        this.myResetToValidOnEnterSession = false;\r\n        this.myResetToValidOnExitSession = false;\r\n\r\n        this.myAlwaysResetRealPositionNonVR = false;\r\n        this.myAlwaysResetRealRotationNonVR = false;\r\n        this.myAlwaysResetRealHeightNonVR = false;\r\n\r\n        this.myAlwaysResetRealPositionVR = false;\r\n        this.myAlwaysResetRealRotationVR = false;\r\n        this.myAlwaysResetRealHeightVR = false;\r\n\r\n        this.myNeverResetRealPositionNonVR = false;\r\n        this.myNeverResetRealRotationNonVR = false;\r\n        this.myNeverResetRealHeightNonVR = false;\r\n\r\n        this.myNeverResetRealPositionVR = false;\r\n        this.myNeverResetRealRotationVR = false;\r\n        this.myNeverResetRealHeightVR = false;\r\n\r\n        this.myResetRealOnMove = false;\r\n        this.myResetRealOnTeleport = false;\r\n\r\n        this.mySyncPositionDisabled = false;\r\n\r\n        this.myDebugActive = false;\r\n    }\r\n};\r\n\r\nPP.PlayerTransformManager = class PlayerTransformManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = PP.vec3_create();\r\n        this._myValidRotationQuat = new PP.quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = PP.vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = PP.vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // for sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // in generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // collision check and move\r\n\r\n        // move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n        // use current valid rotation\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(this._myValidPosition), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getPosition(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = PP.quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(this._myValidPositionHead), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = PP.quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new PP.CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // on purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new PP.CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = PP.CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new PP.CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        if (this._myParams.myResetToValidOnEnterSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myParams.myResetToValidOnExitSession) {\r\n            this._myResetRealOnSynced = true;\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPosition, PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLineEnd(0, this._myValidPosition, this.getPositionReal(), PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, PP.vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPositionHead, PP.vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n};\r\n\r\nPP.PlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = PP.vec3_create();\r\n    let validUp = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n    let transformUp = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function update(dt) {\r\n        //#TODO this should update ground and ceiling info but not sliding info        \r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let positionReal = PP.vec3_create();\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n    let newPosition = PP.vec3_create();\r\n    let newPositionHead = PP.vec3_create();\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let transformUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let floatingTransformQuat = PP.quat2_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // check if new head is ok and update the data\r\n        // if head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection); //TEMP direction\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; //#TODO temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                PP.myCollisionCheck.move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                PP.myCollisionCheck.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                //#TODO utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            PP.myCollisionCheck.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                PP.myCollisionCheck.move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                //reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (resetRealEnabled) { //no\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionVR) && !this._myParams.myNeverResetRealPositionVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationVR) && !this._myParams.myNeverResetRealRotationVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightVR) && !this._myParams.myNeverResetRealHeightVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                } else {\r\n                    let resetPosition = (this.isSynced(this._myParams.mySyncPositionFlagMap) || this._myParams.myAlwaysResetRealPositionNonVR) && !this._myParams.myNeverResetRealPositionNonVR;\r\n                    let resetRotation = (this.isSynced(this._myParams.mySyncRotationFlagMap) || this._myParams.myAlwaysResetRealRotationNonVR) && !this._myParams.myNeverResetRealRotationNonVR;\r\n                    let resetHeight = (this.isSynced(this._myParams.mySyncHeightFlagMap) || this._myParams.myAlwaysResetRealHeightNonVR) && !this._myParams.myNeverResetRealHeightNonVR;\r\n                    this.resetReal(resetPosition, resetRotation, resetHeight, false);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        PP.myCollisionCheck.move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // this make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add move callback\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let teleportPositionVec = PP.vec3_create();\r\n    let teleportRotation = PP.quat_create();\r\n    let rotatedTransformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        PP.myCollisionCheck.teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add teleport callback\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = PP.quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPP.PlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n//sliding info, surface info, update", "PP.PlayerLocomotionRotateParams = class PlayerLocomotionRotateParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myMaxRotationSpeed = 0;\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n\r\n        this.mySmoothSnapActive = true;\r\n        this.mySmoothSnapSpeedDegrees = 240;\r\n\r\n        this.myRotationMinStickIntensityThreshold = 0;\r\n        this.mySnapTurnActivateThreshold = 0;\r\n        this.mySnapTurnResetThreshold = 0;\r\n\r\n        this.myClampVerticalAngle = true;\r\n        this.myMaxVerticalAngle = 0;\r\n\r\n        this.myHandedness = PP.Handedness.RIGHT;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionRotate = class PlayerLocomotionRotate {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._mySnapCharge = false;\r\n\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Smooth Speed\", this._myParams.mySmoothSnapSpeedDegrees, 10, 3, 0));\r\n    }\r\n\r\n    start() {\r\n    }\r\n\r\n    stop() {\r\n        this._mySmoothSnapHorizontalRunning = false;\r\n        this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n\r\n        this._mySmoothSnapVerticalRunning = false;\r\n        this._mySmoothSnapVerticalAngleToPerform = 0;\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myParams.mySmoothSnapSpeedDegrees = PP.myEasyTuneVariables.get(\"Teleport Smooth Speed\");\r\n\r\n        this._rotateHeadHorizontally(dt);\r\n\r\n        if (this._myParams.myPlayerHeadManager.canRotateHead()) {\r\n            this._rotateHeadVertically(dt);\r\n        }\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionRotate.prototype._rotateHeadHorizontally = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headRotation = PP.quat_create();\r\n    return function _rotateHeadHorizontally(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headRotation.quat_identity();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !PP.XRUtils.isSessionActive())) {\r\n            if (Math.abs(axes[0]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = -axes[0];\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity);\r\n\r\n                headRotation.quat_fromAxis(speed * dt, playerUp);\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapHorizontalRunning) {\r\n                if (Math.abs(axes[0]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    let angleToRotate = -Math.pp_sign(axes[0]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    if (!this._myParams.mySmoothSnapActive) {\r\n                        headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n                    } else {\r\n                        this._mySmoothSnapHorizontalRunning = true;\r\n                        this._mySmoothSnapHorizontalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapHorizontalRunning) {\r\n            let angleToRotate = Math.pp_sign(this._mySmoothSnapHorizontalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapHorizontalAngleToPerform) - PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                angleToRotate = this._mySmoothSnapHorizontalAngleToPerform;\r\n            }\r\n\r\n            headRotation.quat_fromAxis(angleToRotate, playerUp);\r\n            this._mySmoothSnapHorizontalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapHorizontalAngleToPerform) < PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                this._mySmoothSnapHorizontalRunning = false;\r\n                this._mySmoothSnapHorizontalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (headRotation.quat_getAngle() > PP.LocomotionUtils.EPSILON_DEGREES) {\r\n            if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                this._myParams.myPlayerHeadManager.rotateFeetQuat(headRotation);\r\n            } else {\r\n                this._myParams.myPlayerTransformManager.rotateQuat(headRotation);\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionRotate.prototype._rotateHeadVertically = function () {\r\n    let headForward = PP.vec3_create();\r\n    let headUp = PP.vec3_create();\r\n    let referenceUp = PP.vec3_create();\r\n    let referenceUpNegate = PP.vec3_create();\r\n    let referenceRight = PP.vec3_create();\r\n    let newUp = PP.vec3_create();\r\n    let headRotation = PP.quat_create();\r\n    return function _rotateHeadVertically(dt) {\r\n        let head = this._myParams.myPlayerHeadManager.getHead();\r\n\r\n        headForward = head.pp_getForward(headForward);\r\n        headUp = head.pp_getUp(headUp);\r\n\r\n        referenceUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(referenceUp);\r\n        referenceUpNegate = referenceUp.vec3_negate(referenceUpNegate);\r\n        referenceRight = headForward.vec3_cross(referenceUp, referenceRight);\r\n\r\n        let minAngle = 1;\r\n        if (headForward.vec3_angle(referenceUp) < minAngle) {\r\n            referenceRight = headUp.vec3_negate(referenceRight).vec3_cross(referenceUp, referenceRight);\r\n        } else if (headForward.vec3_angle(referenceUpNegate) < minAngle) {\r\n            referenceRight = headUp.vec3_cross(referenceUp, referenceRight);\r\n        } else if (!headUp.vec3_isConcordant(referenceUp)) {\r\n            referenceRight.vec3_negate(referenceRight);\r\n        }\r\n\r\n        referenceRight.vec3_normalize(referenceRight);\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n        let angleToRotate = 0;\r\n\r\n        if (!this._myParams.myIsSnapTurn || (this._myParams.mySnapTurnOnlyVR && !PP.XRUtils.isSessionActive())) {\r\n            if (Math.abs(axes[1]) > this._myParams.myRotationMinStickIntensityThreshold) {\r\n                let rotationIntensity = axes[1];\r\n                angleToRotate = Math.pp_lerp(0, this._myParams.myMaxRotationSpeed, Math.abs(rotationIntensity)) * Math.pp_sign(rotationIntensity) * dt;\r\n            }\r\n        } else {\r\n            if (!this._mySnapCharge) {\r\n                if (Math.abs(axes.vec2_length()) < this._myParams.mySnapTurnResetThreshold) {\r\n                    this._mySnapCharge = true;\r\n                }\r\n            } else if (!this._mySmoothSnapVerticalRunning) {\r\n                if (Math.abs(axes[1]) > this._myParams.mySnapTurnActivateThreshold) {\r\n                    angleToRotate = Math.pp_sign(axes[1]) * this._myParams.mySnapTurnAngle;\r\n\r\n                    // adjust rotation to closest snap step\r\n\r\n                    let angleWithUp = Math.pp_angleClamp(headUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                    let snapStep = Math.round(angleWithUp / this._myParams.mySnapTurnAngle);\r\n\r\n                    let snapAngle = Math.pp_angleClamp(snapStep * this._myParams.mySnapTurnAngle);\r\n                    let angleToAlign = -Math.pp_angleDistanceSigned(angleWithUp, snapAngle);\r\n\r\n                    if (Math.abs(angleToAlign) > 1) {\r\n                        if (Math.pp_sign(angleToRotate) == Math.pp_sign(angleToAlign)) {\r\n                            angleToRotate = angleToAlign;\r\n                        } else {\r\n                            angleToRotate = (-Math.pp_sign(angleToAlign) * this._myParams.mySnapTurnAngle) + angleToAlign;\r\n                        }\r\n                    } else if (Math.abs(angleToAlign) > PP.LocomotionUtils.EPSILON_DEGREES) {\r\n                        angleToRotate += angleToAlign;\r\n                    }\r\n\r\n                    if (this._myParams.mySmoothSnapActive) {\r\n                        this._mySmoothSnapVerticalRunning = true;\r\n                        this._mySmoothSnapVerticalAngleToPerform = angleToRotate;\r\n                    }\r\n\r\n                    this._mySnapCharge = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._mySmoothSnapVerticalRunning) {\r\n            angleToRotate = Math.pp_sign(this._mySmoothSnapVerticalAngleToPerform) * (this._myParams.mySmoothSnapSpeedDegrees * dt);\r\n            if (Math.abs(angleToRotate) > Math.abs(this._mySmoothSnapVerticalAngleToPerform) - PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                angleToRotate = this._mySmoothSnapVerticalAngleToPerform;\r\n            }\r\n\r\n            this._mySmoothSnapVerticalAngleToPerform -= angleToRotate;\r\n\r\n            if (Math.abs(this._mySmoothSnapVerticalAngleToPerform) < PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                this._mySmoothSnapVerticalRunning = false;\r\n                this._mySmoothSnapVerticalAngleToPerform = 0;\r\n            }\r\n        }\r\n\r\n        if (angleToRotate != 0) {\r\n            headRotation.quat_fromAxis(angleToRotate, referenceRight);\r\n            this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n\r\n            if (this._myParams.myClampVerticalAngle) {\r\n                let maxVerticalAngle = this._myParams.myMaxVerticalAngle - 0.0001;\r\n                newUp = head.pp_getUp(newUp);\r\n                let angleWithUp = Math.pp_angleClamp(newUp.vec3_angleSigned(referenceUp, referenceRight));\r\n                if (Math.abs(angleWithUp) > maxVerticalAngle) {\r\n                    let fixAngle = (Math.abs(angleWithUp) - maxVerticalAngle) * Math.pp_sign(angleWithUp);\r\n                    headRotation.quat_fromAxis(fixAngle, referenceRight);\r\n                    this._myParams.myPlayerHeadManager.rotateHeadQuat(headRotation);\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.PlayerLocomotionRotate.prototype, \"_rotateHeadHorizontally\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerLocomotionRotate.prototype, \"_rotateHeadVertically\", { enumerable: false });", "\r\n\r\nPP.PlayerLocomotionMovementRuntimeParams = class PlayerLocomotionMovementRuntimeParams {\r\n    constructor() {\r\n        this.myIsFlying = false;\r\n        this.myCollisionRuntimeParams = null;\r\n\r\n        this.myIsTeleportDetecting = false;\r\n        this.myIsTeleporting = false;\r\n        this.myTeleportJustPerformed = false;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionMovement = class PlayerLocomotionMovement {\r\n    constructor(locomotionRuntimeParams) {\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    stop() {\r\n\r\n    }\r\n\r\n    canStop() {\r\n        return true;\r\n    }\r\n};", "PP.PlayerLocomotionSmoothParams = class PlayerLocomotionSmoothParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myMaxSpeed = 0;\r\n\r\n        this.myMovementMinStickIntensityThreshold = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myVRDirectionReferenceType = PP.PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myHandedness = PP.Handedness.LEFT;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false;\r\n        this.myMoveHeadShortcutEnabled = false;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionSmooth = class PlayerLocomotionSmooth extends PP.PlayerLocomotionMovement {\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n\r\n        this._myStickIdleTimer = new PP.Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new PP.Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new PP.Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myLocomotionRuntimeParams.myIsFlying = false;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headMovement = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let directionOnUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n\r\n    let directionReferenceTransformQuat = PP.quat2_create();\r\n    return function update(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SELECT).isPressed()) {\r\n                    movementIntensity = 0.1;\r\n                }\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n\r\n                if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsSliding) {\r\n\r\n                    //speed = Math.pp_lerp(speed * 0.05, speed, 1 - Math.abs(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.mySlidingMovementAngle) / 90);\r\n                    //speed = speed * 0.1;\r\n                    speed = speed / 2;\r\n                }\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n        }\r\n\r\n        if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n\r\n        if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying && false) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n\r\n                PP.myCollisionCheck.move(headMovement, feetTransformQuat, this._myParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n                headMovement.vec3_copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myFixedMovement);\r\n            }\r\n\r\n            if (!headMovement.vec3_isZero(0.000001)) {\r\n                this._myParams.myPlayerHeadManager.moveFeet(headMovement);\r\n            }\r\n        } else {\r\n            if (!PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    let gravity = -2;\r\n                    verticalMovement = playerUp.vec3_scale(gravity * dt, verticalMovement);\r\n                    headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                }\r\n\r\n                if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                    headMovement.vec3_zero();\r\n                }\r\n\r\n                feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            } else {\r\n                this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = PP.myPlayerHeadManager.myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = PP.vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.PlayerLocomotionSmooth.prototype, \"update\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PP.PlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "// even if this can be sued to generally fade, it should be called collision obscure to hint that is meant for collision obscuring\r\n\r\n// occlude\r\nPP.PlayerObscureManagerParams = class PlayerObscureManagerParams {\r\n    constructor() {\r\n        this.myPlayerTransformManager = null;\r\n\r\n        this.myObscureObject = null;\r\n        this.myObscureMaterial = null;\r\n        this.myObscureRadius = 0;\r\n\r\n        this.myObscureFadeOutSeconds = 0.1;\r\n        this.myObscureFadeInSeconds = 0.1;\r\n\r\n        this.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n\r\n        this.myDistanceToStartObscureWhenHeadColliding = 0;\r\n        this.myDistanceToStartObscureWhenBodyColliding = 0;\r\n        this.myDistanceToStartObscureWhenFloating = 0;\r\n        this.myDistanceToStartObscureWhenFar = 0;\r\n\r\n        this.myRelativeDistanceToMaxObscureWhenHeadColliding = 0; // relative to the start distance, 1 means that in 1 meters after it started it will be completely obscured\r\n        this.myRelativeDistanceToMaxObscureWhenBodyColliding = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFloating = 0;\r\n        this.myRelativeDistanceToMaxObscureWhenFar = 0;\r\n\r\n        this.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n    }\r\n};\r\n\r\nPP.PlayerObscureManager = class PlayerObscureManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myObscureMaterial = null;\r\n        this._myObscureParentObject = null;\r\n\r\n        this._myCurrentObscureLevel = 0;\r\n        this._myTargetObscureLevel = 0;\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n\r\n        this._myFadeTimer = new PP.Timer(0, false);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \" Obscure\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n\r\n        this._myFSM.addState(\"inactive\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"fading\", this._fadingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"inactive\", \"end\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fading\", \"fade\", this._startFading.bind(this));\r\n        this._myFSM.addTransition(\"fading\", \"idle\", \"done\", this._fadingDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"inactive\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"idle\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n        this._myFSM.addTransition(\"fading\", \"inactive\", \"stop\", this._setObscureLevel.bind(this, 0));\r\n\r\n        this._myFSM.init(\"init\");\r\n\r\n        this._setupVisuals();\r\n\r\n        this._myFSM.perform(\"end\");\r\n    }\r\n\r\n    start() {\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myObscureParentObject.pp_resetTransformLocal();\r\n\r\n        this._updateObscured();\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    isStarted() {\r\n        return !this._myFSM.isInState(\"inactive\");\r\n    }\r\n\r\n    isObscured() {\r\n        return this._myCurrentObscureLevel > 0;\r\n    }\r\n\r\n    isFading() {\r\n        return this._myFSM.isInState(\"fading\");\r\n    }\r\n\r\n    isFadingIn() {\r\n        return this.isFading() && this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n    }\r\n\r\n    isFadingOut() {\r\n        return this.isFading() && this._myCurrentObscureLevel <= this._myTargetObscureLevel;\r\n    }\r\n\r\n    getObscureLevel() {\r\n        return this._myCurrentObscureLevel;\r\n    }\r\n\r\n    getTargetObscureLevel() {\r\n        return this._myTargetObscureLevel;\r\n    }\r\n\r\n    getCurrentObscureLevel() {\r\n        this._myCurrentObscureLevel;\r\n    }\r\n\r\n    obscureLevelOverride(obscureLevel, instantFade = false) {\r\n        this._myObscurelevelOverride = obscureLevel;\r\n\r\n        if (instantFade && this.isStarted()) {\r\n            this._setObscureLevel(obscureLevel);\r\n        }\r\n    }\r\n\r\n    resetObscureLevelOverride() {\r\n        this._myObscurelevelOverride = null;\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) > Math.PP_EPSILON_NUMBER) {\r\n            this._myFSM.perform(\"fade\");\r\n        }\r\n    }\r\n\r\n    _fadingUpdate(dt) {\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON_NUMBER) {\r\n            this._myFSM.perform(\"done\");\r\n            return;\r\n        }\r\n\r\n        if (this._myLastTargetObscureLevel != this._myTargetObscureLevel) {\r\n            this._refreshFadeTimer();\r\n            this._myLastTargetObscureLevel = this._myTargetObscureLevel;\r\n        }\r\n\r\n        this._myFadeTimer.update(dt);\r\n\r\n        let newObscureLevel = this._myParams.myObscureFadeEasingFunction(this._myFadeTimer.getPercentage());\r\n\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n        if (!isFadingIn) {\r\n            newObscureLevel = Math.min(newObscureLevel, this._myTargetObscureLevel);\r\n        } else {\r\n            newObscureLevel = Math.pp_clamp(1 - newObscureLevel, 0, 1);\r\n            newObscureLevel = Math.max(newObscureLevel, this._myTargetObscureLevel);\r\n        }\r\n\r\n        this._setObscureAlpha(newObscureLevel);\r\n        this._myCurrentObscureLevel = newObscureLevel;\r\n\r\n        if (Math.abs(this._myTargetObscureLevel - this._myCurrentObscureLevel) <= Math.PP_EPSILON_NUMBER || this._myFadeTimer.isDone()) {\r\n            this._myFSM.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _startFading() {\r\n        this._myLastTargetObscureLevel = null;\r\n        this._myLastIsFadingIn = null;\r\n    }\r\n\r\n    _fadingDone() {\r\n        this._setObscureLevel(this._myTargetObscureLevel);\r\n    }\r\n\r\n    _refreshFadeTimer() {\r\n        let isFadingIn = this._myCurrentObscureLevel > this._myTargetObscureLevel;\r\n\r\n        if (this._myLastIsFadingIn != isFadingIn) {\r\n            this._setFadeTimerToObscureLevel(isFadingIn);\r\n        }\r\n\r\n        this._myLastIsFadingIn = isFadingIn;\r\n    }\r\n\r\n    _setFadeTimerToObscureLevel(isFadingIn) {\r\n        let percentage = 0;\r\n        let closestPercentage = 0;\r\n        let steps = 1000;\r\n        let increment = 1 / steps;\r\n\r\n        while (percentage < 1) {\r\n            if (Math.abs(this._myParams.myObscureFadeEasingFunction(percentage) - this._myCurrentObscureLevel) <\r\n                Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n                closestPercentage = percentage;\r\n            }\r\n\r\n            percentage += increment;\r\n        }\r\n\r\n        if (Math.abs(this._myParams.myObscureFadeEasingFunction(1) - this._myCurrentObscureLevel) <\r\n            Math.abs(this._myParams.myObscureFadeEasingFunction(closestPercentage) - this._myCurrentObscureLevel)) {\r\n            closestPercentage = 1;\r\n        }\r\n\r\n        if (isFadingIn) {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeInSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(1 - closestPercentage, 0, 1));\r\n        } else {\r\n            this._myFadeTimer.start(this._myParams.myObscureFadeOutSeconds);\r\n            this._myFadeTimer.setPercentage(Math.pp_clamp(closestPercentage, 0, 1));\r\n        }\r\n    }\r\n\r\n    _setObscureLevel(obscureLevel) {\r\n        this._myTargetObscureLevel = obscureLevel;\r\n        this._myCurrentObscureLevel = obscureLevel;\r\n        this._setObscureAlpha(obscureLevel);\r\n        this._setObscureVisible(this.isObscured());\r\n    }\r\n\r\n    _setObscureAlpha(alpha) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            PP.MaterialUtils.setAlpha(this._myObscureMaterial, alpha);\r\n        } else {\r\n            PP.MaterialUtils.setObjectAlpha(this._myParams.myObscureObject, alpha);\r\n        }\r\n    }\r\n\r\n    _updateObscured() {\r\n        this._myTargetObscureLevel = 0;\r\n\r\n        if (this._myObscurelevelOverride != null) {\r\n            this._myTargetObscureLevel = this._myObscurelevelOverride;\r\n        } else {\r\n            // #TODO check if VALID head is colliding, in that case use max obscure level\r\n            // this prevent being able to see when resetting head to real even though real is colliding\r\n            // for example if u stand up and go with the head in the ceiling and reset by moving\r\n            if (this._myParams.myPlayerTransformManager.isHeadColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToRealHead();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenHeadColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenHeadColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isBodyColliding()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenBodyColliding;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenBodyColliding, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFloating()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFloating;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFloating, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n\r\n            if (this._myParams.myPlayerTransformManager.isFar()) {\r\n                let distance = this._myParams.myPlayerTransformManager.getDistanceToReal();\r\n                let relativeDistance = distance - this._myParams.myDistanceToStartObscureWhenFar;\r\n                if (relativeDistance >= 0) {\r\n                    let relativeDistancePercentage = Math.pp_clamp(relativeDistance / this._myParams.myRelativeDistanceToMaxObscureWhenFar, 0, 1);\r\n                    let targetObscureLevel = this._myParams.myObscureLevelRelativeDistanceEasingFunction(relativeDistancePercentage);\r\n                    this._myTargetObscureLevel = Math.max(this._myTargetObscureLevel, targetObscureLevel);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _setupVisuals() {\r\n        this._myObscureMaterial = null;\r\n        if (this._myParams.myObscureMaterial != null) {\r\n            this._myObscureMaterial = this._myParams.myObscureMaterial;\r\n        } else {\r\n            this._myObscureMaterial = PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth.clone();\r\n            this._myObscureMaterial.color = PP.vec4_create(0, 0, 0, 1);\r\n        }\r\n\r\n        this._myObscureParentObject = PP.myVisualData.myRootObject.pp_addObject();\r\n\r\n        let obscureVisualParams = new PP.VisualMeshParams();\r\n        obscureVisualParams.myMesh = PP.myDefaultResources.myMeshes.myInvertedSphere;\r\n        obscureVisualParams.myMaterial = (this._myParams.myObscureMaterial != null) ? this._myParams.myObscureMaterial : this._myObscureMaterial;\r\n        obscureVisualParams.myParent = this._myObscureParentObject;\r\n        obscureVisualParams.myIsLocal = true;\r\n        obscureVisualParams.myTransform.mat4_setScale(PP.vec3_create(this._myParams.myObscureRadius, this._myParams.myObscureRadius, this._myParams.myObscureRadius));\r\n        this._myObscureVisual = new PP.VisualMesh(obscureVisualParams);\r\n\r\n        if (this._myParams.myObscureObject != null) {\r\n            this._myParams.myObscureObject.pp_setParent(this._myObscureParentObject, false);\r\n            this._myParams.myObscureObject.pp_resetTransformLocal();\r\n        }\r\n\r\n        this._setObscureVisible(false);\r\n    }\r\n\r\n    _setObscureVisible(visible) {\r\n        if (this._myParams.myObscureObject == null) {\r\n            this._myObscureVisual.setVisible(visible);\r\n        } else {\r\n            this._myObscureVisual.setVisible(false);\r\n            this._myParams.myObscureObject.pp_setActive(visible);\r\n        }\r\n\r\n        if (visible) {\r\n            this._myObscureParentObject.pp_setParent(this._myParams.myPlayerTransformManager.getHead(), false);\r\n        } else {\r\n            this._myObscureParentObject.pp_setParent(null, false);\r\n        }\r\n    }\r\n};", "PP.PlayerLocomotionDirectionReferenceType = {\r\n    HEAD: 0,\r\n    HAND: 1,\r\n    CUSTOM_OBJECT: 2,\r\n};\r\n\r\nPP.PlayerLocomotionParams = class PlayerLocomotionParams {\r\n    constructor() {\r\n        this.myMaxSpeed = 0;\r\n        this.myMaxRotationSpeed = 0;\r\n\r\n        this.myCharacterRadius = 0;\r\n\r\n        this.myIsSnapTurn = false;\r\n        this.mySnapTurnOnlyVR = false;\r\n        this.mySnapTurnAngle = 0;\r\n        this.mySnapTurnSpeedDegrees = 0;\r\n\r\n        this.myFlyEnabled = false;\r\n        this.myMinAngleToFlyUpNonVR = 0;\r\n        this.myMinAngleToFlyDownNonVR = 0;\r\n        this.myMinAngleToFlyUpVR = 0;\r\n        this.myMinAngleToFlyDownVR = 0;\r\n        this.myMinAngleToFlyRight = 0;\r\n\r\n        this.myMainHand = PP.Handedness.LEFT;\r\n\r\n        this.myVRDirectionReferenceType = PP.PlayerLocomotionDirectionReferenceType.HEAD;\r\n        this.myVRDirectionReferenceObject = null;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        this.myForeheadExtraHeight = 0;\r\n\r\n        this.myTeleportPositionObject = null;\r\n\r\n        this.myMoveThroughCollisionShortcutEnabled = false;\r\n        this.myMoveHeadShortcutEnabled = false;\r\n\r\n        this.myPhysicsBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n    }\r\n};\r\n\r\n// #TODO add lerped snap on vertical over like half a second to avoid the \"snap effect\"\r\n// this could be done by detatching the actual vertical position of the player from the collision real one when a snap is detected above a certain threshold\r\n// with a timer, after which the vertical position is just copied, while during the detatching is lerped toward the collision vertical one\r\nPP.PlayerLocomotion = class PlayerLocomotion {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new PP.CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n\r\n        this._myCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PP.PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PP.PlayerHeadManagerParams();\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PP.PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerTransformManagerParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = true;\r\n\r\n            params.myDebugActive = true;\r\n\r\n            this._myPlayerTransformManager = new PP.PlayerTransformManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerObscureManagerParams();\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.2;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 1;\r\n            params.myDistanceToStartObscureWhenFar = 1;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 5;\r\n\r\n            this._myPlayerObscureManager = new PP.PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerLocomotionRotateParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PP.PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = PP.InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PP.PlayerLocomotionSmoothParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                params.myMoveThroughCollisionShortcutEnabled = this._myParams.myMoveThroughCollisionShortcutEnabled;\r\n                params.myMoveHeadShortcutEnabled = this._myParams.myMoveHeadShortcutEnabled;\r\n\r\n                this._myPlayerLocomotionSmooth = new PP.PlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PP.PlayerLocomotionTeleportParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 4;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PP.PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        //this._myPlayerObscureManager.update(dt);\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.SELECT).isPressEnd(2)) {\r\n            if (this._myPlayerObscureManager.isFading()) {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isFadingOut() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            } else {\r\n                this._myPlayerObscureManager.obscureLevelOverride(this._myPlayerObscureManager.isObscured() ? Math.pp_random(0, 0) : Math.pp_random(1, 1));\r\n            }\r\n        }\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        this._myCollisionCheckParamsMovement.mySplitMovementEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySplitMovementMaxLength = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myRadius = this._myParams.myCharacterRadius;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromFeetToIgnore = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceFromHeadToIgnore = 0.1;\r\n\r\n        //this._myCollisionCheckParamsMovement.myPositionOffsetLocal.vec3_set(0, 1, 0)\r\n        //this._myCollisionCheckParamsMovement.myRotationOffsetLocalQuat.quat_fromAxis(45, PP.vec3_create(1, 1, 0).vec3_normalize());\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepEnabled = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementStepMaxLength = 0;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementRadialStepAmount = 1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckDiagonalInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckHorizontalBorder = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraight = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalDiagonalDownwardInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalUpward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalStraightDiagonalDownward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalOutward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementCheckVerticalHorizontalBorderDiagonalInward = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementHorizontalStraightCentralCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementVerticalStraightDiagonalUpwardCentralCheckEnabled = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myHalfConeAngle = 60;\r\n        this._myCollisionCheckParamsMovement.myHalfConeSliceAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckConeBorder = true;\r\n        this._myCollisionCheckParamsMovement.myCheckConeRay = true;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        this._myCollisionCheckParamsMovement.myHorizontalPositionCheckVerticalDirectionType = 2; // somewhat expensive, 2 times the check for the vertical check of the horizontal movement!\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalPositionCheckEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myVerticalMovementReduceEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myFeetRadius = 0.1;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleDownhill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithGroundAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustVerticalMovementWithCeilingAngleUphill = true;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n        this._myCollisionCheckParamsMovement.myAdjustHorizontalMovementWithGroundAngleDownhillMinAngle = 30;\r\n\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySnapOnGroundExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingEnabled = false;\r\n        this._myCollisionCheckParamsMovement.mySnapOnCeilingExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myGroundPopOutExtraDistance = 0.1;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCeilingPopOutExtraDistance = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceAddCenter = true;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceSliceAmount = 8;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceStepAmount = 2;\r\n        this._myCollisionCheckParamsMovement.myGroundCircumferenceRotationPerStep = 22.5;\r\n        this._myCollisionCheckParamsMovement.myVerticalAllowHitInsideCollisionIfOneOk = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckHeight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightVerticalPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopMovement = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightTopPosition = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollision = true;\r\n        this._myCollisionCheckParamsMovement.myCheckHeightConeOnCollisionKeepHit = false;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountMovement = 2;\r\n        this._myCollisionCheckParamsMovement.myHeightCheckStepAmountPosition = 2;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForwardEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalBothDirection = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalStraight = true;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayOutward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalDiagonalBorderRayInward = false;\r\n        this._myCollisionCheckParamsMovement.myCheckVerticalSearchFartherVerticalHit = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myGroundAngleToIgnore = 30;\r\n        this._myCollisionCheckParamsMovement.myCeilingAngleToIgnore = 30;\r\n\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionGroundAngleIgnoreHeight = 0.1;\r\n        //this._myCollisionCheckParamsMovement.myHorizontalPositionCeilingAngleIgnoreHeight = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n        this._myCollisionCheckParamsMovement.myHorizontalMovementGroundAngleIgnoreMaxMovementLeft = 0.1;\r\n\r\n        this._myCollisionCheckParamsMovement.myHeight = 1;\r\n\r\n        this._myCollisionCheckParamsMovement.myComputeGroundInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myComputeCeilingInfoEnabled = true;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnGround = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeGroundInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myDistanceToBeOnCeiling = 0.001;\r\n        this._myCollisionCheckParamsMovement.myDistanceToComputeCeilingInfo = 0.1;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnGround = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeGroundInfo = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToBeOnCeiling = 0;\r\n        this._myCollisionCheckParamsMovement.myVerticalFixToComputeCeilingInfo = 0;\r\n\r\n        this._myCollisionCheckParamsMovement.myMustStayOnGround = false;\r\n        this._myCollisionCheckParamsMovement.myMustStayOnCeiling = false;\r\n        this._myCollisionCheckParamsMovement.myRegatherGroundInfoOnSurfaceCheckFail = true;\r\n        this._myCollisionCheckParamsMovement.myRegatherCeilingInfoOnSurfaceCheckFail = true;\r\n        //this._myCollisionCheckParamsMovement.myExtraMovementCheckCallback = function () { return [0, 0, 0.01]; }\r\n\r\n        this._myCollisionCheckParamsMovement.mySlidingEnabled = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingHorizontalMovementCheckBetterNormal = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingMaxAttempts = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingCheckBothDirections = true;        // expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionType = 1;      // expensive, 2 times the check for the whole horizontal movement!\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickeringPreventionCheckOnlyIfAlreadySliding = true;\r\n        this._myCollisionCheckParamsMovement.mySlidingFlickerPreventionCheckAnywayCounter = 4;\r\n        this._myCollisionCheckParamsMovement.mySlidingAdjustSign90Degrees = true;\r\n\r\n        this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n        let physXComponents = PP.myPlayerObjects.myPlayer.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physXComponent of physXComponents) {\r\n            this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n\r\n        this._myCollisionCheckParamsMovement.myVerticalBlockLayerFlags.copy(this._myCollisionCheckParamsMovement.myHorizontalBlockLayerFlags);\r\n        this._myCollisionCheckParamsMovement.myVerticalObjectsToIgnore.pp_copy(this._myCollisionCheckParamsMovement.myHorizontalObjectsToIgnore);\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugActive = false;\r\n\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugHorizontalPositionActive = true;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalMovementActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugVerticalPositionActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugSlidingActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugGroundInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugCeilingInfoActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugRuntimeParamsActive = false;\r\n        this._myCollisionCheckParamsMovement.myDebugMovementActive = false;\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = PP.CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 60;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // this is needed for when u want to perform the teleport as a movement\r\n        // maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // when you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // if nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // you could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = PP.vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = PP.myPlayerObjects.myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = PP.myPlayerObjects.myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = PP.vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            PP.myPlayerObjects.myPlayer.pp_resetRotation();\r\n            PP.myPlayerObjects.myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new PP.FSM();\r\n        this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n};", "WL.registerComponent('pp-player-locomotion', {\r\n    _myPhysicsBlockLayerFlags: { type: WL.Type.String, default: \"1, 0, 0, 0, 0, 0, 0, 0\" },\r\n    _myMaxSpeed: { type: WL.Type.Float, default: 2 },\r\n    _myMaxRotationSpeed: { type: WL.Type.Float, default: 100 },\r\n    _myCharacterRadius: { type: WL.Type.Float, default: 0.3 },\r\n    _myIsSnapTurn: { type: WL.Type.Bool, default: true },\r\n    _mySnapTurnOnlyVR: { type: WL.Type.Bool, default: true },\r\n    _mySnapTurnAngle: { type: WL.Type.Float, default: 30 },\r\n    _mySnapTurnSpeedDegrees: { type: WL.Type.Float, default: 0 },\r\n    _myFlyEnabled: { type: WL.Type.Bool, default: false },\r\n    _myMinAngleToFlyUpNonVR: { type: WL.Type.Float, default: 30 },\r\n    _myMinAngleToFlyDownNonVR: { type: WL.Type.Float, default: 50 },\r\n    _myMinAngleToFlyUpVR: { type: WL.Type.Float, default: 60 },\r\n    _myMinAngleToFlyDownVR: { type: WL.Type.Float, default: 1 },\r\n    _myMinAngleToFlyRight: { type: WL.Type.Float, default: 30 },\r\n    _myMainHand: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myVRDirectionReferenceType: { type: WL.Type.Enum, values: ['head', 'hand', 'custom object'], default: 'hand' },\r\n    _myVRDirectionReferenceObject: { type: WL.Type.Object },\r\n    _myTeleportParableStartReferenceObject: { type: WL.Type.Object },\r\n    _myTeleportPositionObject: { type: WL.Type.Object },\r\n    _myUseCleanedVersion: { type: WL.Type.Bool, default: true },\r\n    _myMoveThroughCollisionShortcutEnabled: { type: WL.Type.Bool, default: false },\r\n    _myMoveHeadShortcutEnabled: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init() {\r\n    },\r\n    start() {\r\n        PP.myCollisionCheck = new PP.CollisionCheck();\r\n        let params = new PP.PlayerLocomotionParams();\r\n        params.myMaxSpeed = this._myMaxSpeed;\r\n        params.myMaxRotationSpeed = this._myMaxRotationSpeed;\r\n\r\n        params.myCharacterRadius = this._myCharacterRadius;\r\n\r\n        params.myIsSnapTurn = this._myIsSnapTurn;\r\n        params.mySnapTurnOnlyVR = this._mySnapTurnOnlyVR;\r\n        params.mySnapTurnAngle = this._mySnapTurnAngle;\r\n        params.mySnapTurnSpeedDegrees = this._mySnapTurnSpeedDegrees;\r\n\r\n        params.myFlyEnabled = this._myFlyEnabled;\r\n        params.myMinAngleToFlyUpNonVR = this._myMinAngleToFlyUpNonVR;\r\n        params.myMinAngleToFlyDownNonVR = this._myMinAngleToFlyDownNonVR;\r\n        params.myMinAngleToFlyUpVR = this._myMinAngleToFlyUpVR;\r\n        params.myMinAngleToFlyDownVR = this._myMinAngleToFlyDownVR;\r\n        params.myMinAngleToFlyRight = this._myMinAngleToFlyRight;\r\n\r\n        params.myMainHand = PP.InputUtils.getHandednessByIndex(this._myMainHand);\r\n\r\n        params.myVRDirectionReferenceType = this._myVRDirectionReferenceType;\r\n        params.myVRDirectionReferenceObject = this._myVRDirectionReferenceObject;\r\n\r\n        params.myTeleportParableStartReferenceObject = this._myTeleportParableStartReferenceObject;\r\n\r\n        params.myForeheadExtraHeight = 0.1;\r\n\r\n        params.myTeleportPositionObject = this._myTeleportPositionObject;\r\n\r\n        params.myMoveThroughCollisionShortcutEnabled = this._myMoveThroughCollisionShortcutEnabled;\r\n        params.myMoveHeadShortcutEnabled = this._myMoveHeadShortcutEnabled;\r\n\r\n        params.myPhysicsBlockLayerFlags.copy(this._getPhysicsBlockLayersFlags());\r\n\r\n        if (this._myUseCleanedVersion) {\r\n            this._myPlayerLocomotion = new PP.CleanedPlayerLocomotion(params);\r\n        } else {\r\n            this._myPlayerLocomotion = new PP.PlayerLocomotion(params);\r\n        }\r\n\r\n        this._myStartCounter = 1;\r\n    },\r\n    update(dt) {\r\n        if (this._myStartCounter > 0) {\r\n            this._myStartCounter--;\r\n            if (this._myStartCounter == 0) {\r\n                this._myPlayerLocomotion.start();\r\n\r\n                this._myPlayerLocomotion._myPlayerTransformManager.resetReal(true, false, false, true);\r\n                this._myPlayerLocomotion._myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n\r\n            this._myPlayerLocomotion._myPlayerHeadManager.update(dt);\r\n        } else {\r\n            PP.myCollisionCheck._myTotalRaycasts = 0; // #TODO debug stuff, remove later\r\n\r\n            this._myPlayerLocomotion.update(dt);\r\n        }\r\n\r\n        //PP.myCollisionCheck._myTotalRaycastsMax = Math.max(PP.myCollisionCheck._myTotalRaycasts, PP.myCollisionCheck._myTotalRaycastsMax);\r\n        //console.error(PP.myCollisionCheck._myTotalRaycastsMax);\r\n        //console.error(PP.myCollisionCheck._myTotalRaycasts);\r\n    },\r\n    onActivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(true);\r\n            }\r\n        }\r\n    },\r\n    onDeactivate() {\r\n        if (this._myStartCounter == 0) {\r\n            if (this._myPlayerLocomotion != null) {\r\n                this._myPlayerLocomotion.setActive(false);\r\n            }\r\n        }\r\n    },\r\n    _getPhysicsBlockLayersFlags() {\r\n        let physicsFlags = new PP.PhysicsLayerFlags();\r\n\r\n        let flags = [...this._myPhysicsBlockLayerFlags.split(\",\")];\r\n        for (let i = 0; i < flags.length; i++) {\r\n            physicsFlags.setFlagActive(i, flags[i].trim() == \"1\");\r\n        }\r\n\r\n        return physicsFlags;\r\n    }\r\n});\r\n\r\nPP.myCollisionCheck = null;", "PP.PlayerLocomotionTeleportParable = class PlayerLocomotionTeleportParable {\r\n    constructor() {\r\n        this._myStartPosition = PP.vec3_create();\r\n\r\n        this._myForward = PP.vec3_create();\r\n        this._myUp = PP.vec3_create();\r\n\r\n        this._mySpeed = 0;\r\n        this._myGravity = 0;\r\n        this._myStepLength = 0;\r\n    }\r\n\r\n    setStartPosition(startPosition) {\r\n        this._myStartPosition.vec3_copy(startPosition);\r\n    }\r\n\r\n    setForward(forward) {\r\n        this._myForward.vec3_copy(forward);\r\n    }\r\n\r\n    setUp(up) {\r\n        this._myUp.vec3_copy(up);\r\n    }\r\n\r\n    setSpeed(speed) {\r\n        this._mySpeed = speed;\r\n    }\r\n\r\n    setGravity(gravity) {\r\n        this._myGravity = gravity;\r\n    }\r\n\r\n    setStepLength(stepLength) {\r\n        this._myStepLength = stepLength;\r\n    }\r\n\r\n    getPosition(positionIndex, outPosition = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistance(positionIndex) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionIndexByDistance(distance) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPositionByDistance(distance, outPosition = PP.vec3_create()) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getFlatDistanceOverDistance(distance) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getPosition = function () {\r\n    let forwardPosition = PP.vec3_create();\r\n    let upPosition = PP.vec3_create();\r\n    return function getPosition(positionIndex, outPosition = PP.vec3_create()) {\r\n        let deltaTimePerStep = this._myStepLength / this._mySpeed;\r\n\r\n        let elapsedTime = deltaTimePerStep * positionIndex;\r\n\r\n        forwardPosition = this._myForward.vec3_scale(this._mySpeed * elapsedTime, forwardPosition);\r\n        forwardPosition = forwardPosition.vec3_add(this._myStartPosition, forwardPosition);\r\n\r\n        upPosition = this._myUp.vec3_scale(this._myGravity * elapsedTime * elapsedTime / 2, upPosition);\r\n\r\n        outPosition = forwardPosition.vec3_add(upPosition, outPosition);\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    return function getDistance(positionIndex) {\r\n        let distance = 0;\r\n        prevPosition.vec3_copy(this._myStartPosition);\r\n\r\n        for (let i = 1; i <= positionIndex; i++) {\r\n            currentPosition = this.getPosition(i, currentPosition);\r\n            distance += currentPosition.vec3_distance(prevPosition);\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return distance;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getPositionIndexByDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    return function getPositionIndexByDistance(distance) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        while (currentDistance < distance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.max(0, currentIndex - 1);\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getPositionByDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    let prevToCurrent = PP.vec3_create();\r\n    return function getPositionByDistance(distance, outPosition = PP.vec3_create()) {\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        let found = false;\r\n\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n        while (!found) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            if (currentDistance > distance) {\r\n                let lengthToRemove = currentDistance - distance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let lengthToAdd = prevToCurrent.vec3_length() - lengthToRemove;\r\n                prevToCurrent.vec3_normalize(prevToCurrent);\r\n\r\n                outPosition = prevPosition.vec3_add(prevToCurrent.vec3_scale(lengthToAdd, outPosition), outPosition);\r\n                found = true;\r\n            }\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return outPosition;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getDistanceOverFlatDistance = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let flatCurrentPosition = PP.vec3_create();\r\n    let flatStartPosition = PP.vec3_create();\r\n    let prevPosition = PP.vec3_create();\r\n    let prevToCurrent = PP.vec3_create();\r\n    let startToCurrentFlat = PP.vec3_create();\r\n    return function getDistanceOverFlatDistance(flatDistance, maxParableDistance) {\r\n        if (flatDistance < 0.00001) {\r\n            return 0;\r\n        }\r\n\r\n        let currentDistance = 0;\r\n        let currentIndex = 0;\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n        prevPosition = this.getPosition(currentIndex, prevPosition);\r\n\r\n        let distanceOverFlatDistance = 0;\r\n\r\n        while (currentDistance <= maxParableDistance) {\r\n            currentPosition = this.getPosition(currentIndex + 1, currentPosition);\r\n            currentDistance += currentPosition.vec3_distance(prevPosition);\r\n            currentIndex++;\r\n\r\n            flatCurrentPosition = currentPosition.vec3_removeComponentAlongAxis(this._myUp, flatCurrentPosition);\r\n            startToCurrentFlat = flatCurrentPosition.vec3_sub(flatStartPosition, startToCurrentFlat);\r\n            let currentFlatDistance = startToCurrentFlat.vec3_length();\r\n            if (currentFlatDistance >= flatDistance) {\r\n                let flatDifference = currentFlatDistance - flatDistance;\r\n                prevToCurrent = currentPosition.vec3_sub(prevPosition, prevToCurrent);\r\n                let angleWithFlat = prevToCurrent.vec3_angleRadians(startToCurrentFlat);\r\n                let cos = Math.cos(angleWithFlat);\r\n                let lengthToRemove = prevToCurrent.vec3_length();\r\n                if (cos != 0) {\r\n                    lengthToRemove = flatDifference / Math.cos(angleWithFlat);\r\n                }\r\n\r\n                distanceOverFlatDistance = currentDistance - lengthToRemove;\r\n                break;\r\n\r\n            } else {\r\n                distanceOverFlatDistance = currentDistance;\r\n            }\r\n\r\n            prevPosition.vec3_copy(currentPosition);\r\n        }\r\n\r\n        return Math.min(maxParableDistance, distanceOverFlatDistance);\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportParable.prototype.getFlatDistanceOverDistance = function () {\r\n    let positionByDistance = PP.vec3_create();\r\n    let flatPositionByDistance = PP.vec3_create();\r\n    let flatStartPosition = PP.vec3_create();\r\n    return function getFlatDistanceOverDistance(distance) {\r\n        positionByDistance = this.getPositionByDistance(distance, positionByDistance);\r\n\r\n        flatPositionByDistance = positionByDistance.vec3_removeComponentAlongAxis(this._myUp, flatPositionByDistance);\r\n        flatStartPosition = this._myStartPosition.vec3_removeComponentAlongAxis(this._myUp, flatStartPosition);\r\n\r\n        return flatStartPosition.vec3_distance(flatPositionByDistance);\r\n    };\r\n}();", "PP.PlayerLocomotionTeleportState = class PlayerLocomotionTeleportState extends PP.State {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super();\r\n\r\n        this._myLocomotionRuntimeParams = locomotionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportState.prototype._checkTeleport = function () {\r\n    return function _checkTeleport(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams = null) {\r\n        PP.myCollisionCheck.teleport(teleportPosition, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n        if (checkTeleportCollisionRuntimeParams != null) {\r\n            checkTeleportCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportState.prototype._checkTeleportAsMovement = function () {\r\n    let checkTeleportMovementCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n    let feetRotationQuat = PP.quat_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let feetUp = PP.vec3_create();\r\n    let teleportFeetForward = PP.vec3_create();\r\n    let teleportFeetRotationQuat = PP.quat_create();\r\n    let teleportFeetTransformQuat = PP.quat2_create();\r\n\r\n    let currentFeetPosition = PP.vec3_create();\r\n    let fixedTeleportPosition = PP.vec3_create();\r\n\r\n    let teleportMovement = PP.vec3_create();\r\n    let extraVerticalMovement = PP.vec3_create();\r\n    let movementToTeleportPosition = PP.vec3_create();\r\n    let movementFeetTransformQuat = PP.quat2_create();\r\n    return function _checkTeleportAsMovement(teleportPosition, feetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams) {\r\n        feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n\r\n        // first try a normal teleport\r\n        feetUp = feetRotationQuat.quat_getUp(feetUp);\r\n        teleportFeetForward = teleportPosition.vec3_sub(feetPosition, teleportFeetForward).vec3_removeComponentAlongAxis(feetUp, teleportFeetForward);\r\n        teleportFeetForward.vec3_normalize(teleportFeetForward);\r\n        if (teleportFeetForward.vec3_isZero(0.00001)) {\r\n            teleportFeetForward = feetRotationQuat.quat_getForward(teleportFeetForward);\r\n        }\r\n\r\n        teleportFeetRotationQuat.quat_setUp(feetUp, teleportFeetForward);\r\n        teleportFeetTransformQuat.quat2_setPositionRotationQuat(feetPosition, teleportFeetRotationQuat);\r\n\r\n        this._checkTeleport(teleportPosition, teleportFeetTransformQuat, collisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n\r\n        // if teleport is ok then we can check movement knowing we have to move toward the teleported position (which has also snapped/fixed the position)\r\n        if (!collisionRuntimeParams.myTeleportCanceled) {\r\n            let teleportMovementValid = false;\r\n\r\n            checkTeleportMovementCollisionRuntimeParams.copy(collisionRuntimeParams);\r\n            fixedTeleportPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n            currentFeetPosition.vec3_copy(feetPosition);\r\n            for (let i = 0; i < this._myTeleportParams.myTeleportAsMovementMaxSteps; i++) {\r\n                teleportMovement = fixedTeleportPosition.vec3_sub(currentFeetPosition, teleportMovement);\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementRemoveVerticalMovement) {\r\n                    teleportMovement = teleportMovement.vec3_removeComponentAlongAxis(feetUp, teleportMovement);\r\n                }\r\n\r\n                if (this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter != 0) {\r\n                    let meters = teleportMovement.vec3_length();\r\n                    let extraVerticalMovementValue = meters * this._myTeleportParams.myTeleportAsMovementExtraVerticalMovementPerMeter;\r\n                    extraVerticalMovement = feetUp.vec3_scale(extraVerticalMovementValue, extraVerticalMovement);\r\n                    teleportMovement = teleportMovement.vec3_add(extraVerticalMovement, teleportMovement);\r\n                }\r\n\r\n                movementFeetTransformQuat.quat2_setPositionRotationQuat(currentFeetPosition, feetRotationQuat);\r\n                PP.myCollisionCheck.move(teleportMovement, movementFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, checkTeleportMovementCollisionRuntimeParams);\r\n\r\n                if (!checkTeleportMovementCollisionRuntimeParams.myHorizontalMovementCanceled && !checkTeleportMovementCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    movementToTeleportPosition = fixedTeleportPosition.vec3_sub(checkTeleportMovementCollisionRuntimeParams.myNewPosition, movementToTeleportPosition);\r\n                    //console.error(movementToTeleportPosition.vec3_length());\r\n                    if (movementToTeleportPosition.vec3_length() < this._myTeleportParams.myTeleportAsMovementMaxDistanceFromTeleportPosition + 0.00001) {\r\n                        teleportMovementValid = true;\r\n                        break;\r\n                    } else {\r\n                        teleportMovement.vec3_copy(movementToTeleportPosition);\r\n                        currentFeetPosition.vec3_copy(checkTeleportMovementCollisionRuntimeParams.myNewPosition);\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!teleportMovementValid) {\r\n                collisionRuntimeParams.myTeleportCanceled = true;\r\n            }\r\n\r\n            this._myTeleportAsMovementFailed = !teleportMovementValid;\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportState.prototype._teleportToPosition = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let newFeetTransformQuat = PP.quat2_create();\r\n    let newFeetRotationQuat = PP.quat_create();\r\n    let teleportRotation = PP.quat_create();\r\n    return function _teleportToPosition(teleportPosition, rotationOnUp, collisionRuntimeParams, forceTeleport = false) {\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        newFeetRotationQuat = feetTransformQuat.quat2_getRotationQuat(newFeetRotationQuat);\r\n        if (rotationOnUp != 0) {\r\n            newFeetRotationQuat = newFeetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, newFeetRotationQuat);\r\n        }\r\n\r\n        newFeetTransformQuat.quat2_setPositionRotationQuat(teleportPosition, newFeetRotationQuat);\r\n\r\n        if (PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myTeleportParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n            PP.myCollisionCheck.positionCheck(true, newFeetTransformQuat, this._myTeleportParams.myCollisionCheckParams, collisionRuntimeParams);\r\n\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(teleportPosition);\r\n            if (rotationOnUp != 0) {\r\n                teleportRotation.quat_fromAxis(rotationOnUp, playerUp);\r\n                this._myTeleportParams.myPlayerHeadManager.rotateFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            //should teleport then rotate\r\n            this._myTeleportParams.myPlayerTransformManager.teleportTransformQuat(newFeetTransformQuat, collisionRuntimeParams, forceTeleport);\r\n        }\r\n    };\r\n}();", "PP.PlayerLocomotionTeleportDetectionVisualizerParams = class PlayerLocomotionTeleportDetectionVisualizerParams {\r\n    constructor() {\r\n        this.myTeleportParableValidMaterial = null;\r\n        this.myTeleportParableInvalidMaterial = null;\r\n\r\n        this.myTeleportPositionObject = null;\r\n\r\n        this.myTeleportParableLineEndOffset = 0.05;\r\n        this.myTeleportParableMinVerticalDistanceToShowVerticalLine = 0.25;\r\n\r\n        this.myTeleportParablePositionUpOffset = 0.05;\r\n\r\n        this.myTeleportParablePositionVisualAlignOnSurface = true;\r\n\r\n        this.myVisualTeleportPositionLerpActive = true;\r\n        this.myVisualTeleportPositionLerpFactor = 10;\r\n        this.myVisualTeleportPositionMinDistanceToResetLerp = 0.005;\r\n        this.myVisualTeleportPositionMinDistanceToLerp = 0.15;\r\n        this.myVisualTeleportPositionMaxDistanceToLerp = 5;\r\n\r\n        this.myVisualTeleportPositionMinDistanceToCloseLerpFactor = 0.02;\r\n        this.myVisualTeleportPositionCloseLerpFactor = 30;\r\n\r\n        this.myVisualTeleportPositionMinAngleDistanceToResetLerp = 0.1;\r\n        this.myVisualTeleportPositionMinAngleDistanceToLerp = 1;\r\n        this.myVisualTeleportPositionMaxAngleDistanceToLerp = 180;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportDetectionVisualizer = class PlayerLocomotionTeleportDetectionVisualizer {\r\n    constructor(teleportParams, teleportRuntimeParams, detectionRuntimeParams) {\r\n        this._myDetectionRuntimeParams = detectionRuntimeParams;\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = teleportRuntimeParams;\r\n\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformQuat = PP.quat2_create();\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Min Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp, 1, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp, 1, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Min Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp, 10, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Angle Distance Lerp\", this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp, 10, 3, 0));\r\n\r\n        this._setupVisuals();\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    end() {\r\n        this._myVisualTeleportTransformQuatReset = true;\r\n        this._myVisualTeleportTransformPositionLerping = false;\r\n        this._myVisualTeleportTransformRotationLerping = false;\r\n\r\n        this._hideTeleportPosition();\r\n    }\r\n\r\n    update(dt) {\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Min Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Max Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Min Angle Distance Lerp\");\r\n        //this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp = PP.myEasyTuneVariables.get(\"Teleport Max Angle Distance Lerp\");\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._showTeleportPosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n            this._hideTeleportPosition();\r\n        }\r\n    }\r\n\r\n    _showTeleportPosition(dt) {\r\n        this._hideTeleportPosition();\r\n\r\n        this._showTeleportParable(dt);\r\n    }\r\n\r\n    _hideTeleportPosition() {\r\n        for (let visualLine of this._myValidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        for (let visualLine of this._myInvalidVisualLines) {\r\n            visualLine.setVisible(false);\r\n        }\r\n\r\n        this._myValidVisualPoint.setVisible(false);\r\n        this._myInvalidVisualPoint.setVisible(false);\r\n\r\n        this._myValidVisualVerticalLine.setVisible(false);\r\n\r\n        this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n        this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n    }\r\n\r\n    _addVisualLines(amount) {\r\n        for (let i = 0; i < amount; i++) {\r\n            {\r\n                let visualParams = new PP.VisualLineParams();\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n                }\r\n\r\n                this._myValidVisualLines.push(new PP.VisualLine(visualParams));\r\n            }\r\n\r\n            {\r\n                let visualParams = new PP.VisualLineParams();\r\n\r\n                if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                    visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n                } else {\r\n                    visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n                }\r\n\r\n                this._myInvalidVisualLines.push(new PP.VisualLine(visualParams));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportDetectionVisualizer.prototype._setupVisuals = function () {\r\n    let innerTorusPosition = PP.vec3_create();\r\n    return function _setupVisuals() {\r\n        this._myTeleportParableValidMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableValidMaterial.color = PP.vec4_create(0, 0.5, 1, 1);\r\n        this._myTeleportParableInvalidMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        this._myTeleportParableInvalidMaterial.color = PP.vec4_create(0.75, 0.05, 0, 1);\r\n\r\n        this._myValidVisualLines = [];\r\n        this._myInvalidVisualLines = [];\r\n        this._addVisualLines(30);\r\n\r\n        {\r\n            let visualParams = new PP.VisualPointParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualPoint = new PP.VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualPointParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableInvalidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableInvalidMaterial;\r\n            }\r\n\r\n            this._myInvalidVisualPoint = new PP.VisualPoint(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualLineParams();\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            this._myValidVisualVerticalLine = new PP.VisualLine(visualParams);\r\n        }\r\n\r\n        this._myVisualTeleportPositionObject = PP.myVisualData.myRootObject.pp_addObject();\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Radius\", 0.175, 0.1, 3));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Teleport Torus Segments\", 24, 1));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Thickness\", 0.02, 0.1, 3));\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Torus Inner Radius\", 0.04, 0.1, 3));\r\n\r\n        {\r\n            let visualParams = new PP.VisualTorusParams();\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            this._myValidVisualTeleportPositionTorus = new PP.VisualTorus(visualParams);\r\n        }\r\n\r\n        {\r\n            let visualParams = new PP.VisualTorusParams();\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            if (this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial != null) {\r\n                visualParams.myMaterial = this._myTeleportParams.myVisualizerParams.myTeleportParableValidMaterial;\r\n            } else {\r\n                visualParams.myMaterial = this._myTeleportParableValidMaterial;\r\n            }\r\n\r\n            visualParams.myParent = this._myVisualTeleportPositionObject;\r\n            visualParams.myIsLocal = true;\r\n\r\n            let visualTorusParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n\r\n            let innerTorusCenter = (visualTorusParams.myRadius - (visualTorusParams.mySegmentThickness / 2)) / 2;\r\n            innerTorusPosition.vec3_set(0, 0, innerTorusCenter);\r\n\r\n            visualParams.myTransform.mat4_setPosition(innerTorusPosition);\r\n\r\n            this._myValidVisualTeleportPositionTorusInner = new PP.VisualTorus(visualParams);\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject != null) {\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setParent(this._myVisualTeleportPositionObject);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_resetTransformLocal();\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(false);\r\n        }\r\n\r\n        this._hideTeleportPosition();\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParable = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let nextPosition = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    let upDifference = PP.vec3_create();\r\n    return function _showTeleportParable(dt) {\r\n        let showParableDistance = Math.max(this._myDetectionRuntimeParams.myParableDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableLineEndOffset);\r\n        let lastParableIndex = this._myDetectionRuntimeParams.myParable.getPositionIndexByDistance(showParableDistance);\r\n        let lastParableIndexDistance = this._myDetectionRuntimeParams.myParable.getDistance(lastParableIndex);\r\n\r\n        if (lastParableIndex + 1 > this._myValidVisualLines.length) {\r\n            this._addVisualLines(lastParableIndex + 1, this._myValidVisualLines.length);\r\n        }\r\n\r\n        for (let i = 0; i <= lastParableIndex; i++) {\r\n            currentPosition = this._myDetectionRuntimeParams.myParable.getPosition(i, currentPosition);\r\n            nextPosition = this._myDetectionRuntimeParams.myParable.getPosition(i + 1, nextPosition);\r\n\r\n            let visuaLine = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualLines[i] : this._myInvalidVisualLines[i];\r\n\r\n            let currentVisualLineParams = visuaLine.getParams();\r\n\r\n            if (i == lastParableIndex) {\r\n                let stepLength = Math.max(0, showParableDistance - lastParableIndexDistance);\r\n                nextPosition = nextPosition.vec3_sub(currentPosition, nextPosition).vec3_normalize(nextPosition);\r\n                nextPosition = currentPosition.vec3_add(nextPosition.vec3_scale(stepLength, nextPosition), nextPosition);\r\n            }\r\n\r\n            currentVisualLineParams.setStartEnd(currentPosition, nextPosition);\r\n            currentVisualLineParams.myThickness = 0.005;\r\n\r\n            visuaLine.paramsUpdated();\r\n            visuaLine.setVisible(true);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n                PP.myDebugVisualManager.drawPoint(0, currentPosition, PP.vec4_create(1, 0, 0, 1), 0.01);\r\n            }\r\n        }\r\n\r\n        let visualPoint = (this._myDetectionRuntimeParams.myTeleportPositionValid) ? this._myValidVisualPoint : this._myInvalidVisualPoint;\r\n        let visualPointParams = visualPoint.getParams();\r\n        visualPointParams.myPosition.vec3_copy(nextPosition);\r\n        visualPointParams.myRadius = 0.01;\r\n        visualPoint.paramsUpdated();\r\n        visualPoint.setVisible(true);\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            upDifference = nextPosition.vec3_sub(this._myTeleportRuntimeParams.myTeleportPosition, upDifference).vec3_componentAlongAxis(playerUp, upDifference);\r\n            let upDistance = upDifference.vec3_length();\r\n            if (upDistance >= this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine) {\r\n                let lineLength = Math.min(upDistance - this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine, this._myTeleportParams.myVisualizerParams.myTeleportParableMinVerticalDistanceToShowVerticalLine);\r\n\r\n                let visualLineParams = this._myValidVisualVerticalLine.getParams();\r\n\r\n                visualLineParams.myStart.vec3_copy(nextPosition);\r\n                visualLineParams.myDirection = playerUp.vec3_negate(visualLineParams.myDirection);\r\n                visualLineParams.myLength = lineLength;\r\n                visualLineParams.myThickness = 0.005;\r\n\r\n                this._myValidVisualVerticalLine.paramsUpdated();\r\n                this._myValidVisualVerticalLine.setVisible(true);\r\n\r\n            }\r\n\r\n            this._showTeleportParablePosition(dt);\r\n        } else {\r\n            this._myVisualTeleportTransformQuatReset = true;\r\n            this._myVisualTeleportTransformPositionLerping = false;\r\n            this._myVisualTeleportTransformRotationLerping = false;\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionVisualizer.prototype._showTeleportParablePosition = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n\r\n    let visualPosition = PP.vec3_create();\r\n    let visualForward = PP.vec3_create();\r\n    let visualRotationQuat = PP.quat_create();\r\n\r\n    let currentVisualTeleportTransformQuat = PP.quat2_create();\r\n    let currentVisualTeleportPosition = PP.vec3_create();\r\n    let currentVisualTeleportRotationQuat = PP.quat_create();\r\n    let differenceRotationQuat = PP.quat_create();\r\n\r\n    return function _showTeleportParablePosition(dt) {\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n        feetRotationQuat = feetRotationQuat.quat_rotateAxis(this._myTeleportRuntimeParams.myTeleportRotationOnUp, playerUp, feetRotationQuat);\r\n        visualForward = feetRotationQuat.quat_getForward(visualForward);\r\n\r\n        visualPosition = this._myTeleportRuntimeParams.myTeleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myVisualizerParams.myTeleportParablePositionUpOffset, visualPosition), visualPosition);\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportParablePositionVisualAlignOnSurface) {\r\n            visualRotationQuat.quat_setUp(this._myDetectionRuntimeParams.myTeleportSurfaceNormal, visualForward);\r\n        } else {\r\n            visualRotationQuat.quat_setUp(playerUp, visualForward);\r\n        }\r\n\r\n        this._myVisualTeleportTransformQuat.quat2_setPositionRotationQuat(visualPosition, visualRotationQuat);\r\n\r\n        if (this._myVisualTeleportTransformQuatReset || !this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpActive) {\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(this._myVisualTeleportTransformQuat);\r\n            this._myVisualTeleportTransformQuatReset = false;\r\n        } else {\r\n            currentVisualTeleportTransformQuat = this._myVisualTeleportPositionObject.pp_getTransformQuat(currentVisualTeleportTransformQuat);\r\n            currentVisualTeleportPosition = currentVisualTeleportTransformQuat.quat2_getPosition(currentVisualTeleportPosition);\r\n            currentVisualTeleportRotationQuat = currentVisualTeleportTransformQuat.quat2_getRotationQuat(currentVisualTeleportRotationQuat);\r\n            currentVisualTeleportRotationQuat.quat_rotationToQuat(visualRotationQuat, differenceRotationQuat);\r\n\r\n            let positionDistance = currentVisualTeleportPosition.vec3_distance(visualPosition);\r\n            let rotationAngleDistance = differenceRotationQuat.quat_getAngle();\r\n\r\n            if ((!this._myVisualTeleportTransformPositionLerping || positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToResetLerp) &&\r\n                (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxDistanceToLerp)) {\r\n                this._myVisualTeleportTransformPositionLerping = false;\r\n                currentVisualTeleportPosition.vec3_copy(visualPosition);\r\n            } else {\r\n                this._myVisualTeleportTransformPositionLerping = true;\r\n\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n                if (positionDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinDistanceToCloseLerpFactor) {\r\n                    interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionCloseLerpFactor * dt;\r\n                }\r\n                currentVisualTeleportPosition.vec3_lerp(visualPosition, interpolationValue, currentVisualTeleportPosition);\r\n            }\r\n\r\n            if ((!this._myVisualTeleportTransformRotationLerping || rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToResetLerp) &&\r\n                (rotationAngleDistance < this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMinAngleDistanceToLerp ||\r\n                    positionDistance > this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionMaxAngleDistanceToLerp)) {\r\n                this._myVisualTeleportTransformRotationLerping = false;\r\n                currentVisualTeleportRotationQuat.quat_copy(visualRotationQuat);\r\n            } else {\r\n                let interpolationValue = this._myTeleportParams.myVisualizerParams.myVisualTeleportPositionLerpFactor * dt;\r\n\r\n                this._myVisualTeleportTransformRotationLerping = true;\r\n                currentVisualTeleportRotationQuat.quat_slerp(visualRotationQuat, interpolationValue, currentVisualTeleportRotationQuat);\r\n            }\r\n\r\n            currentVisualTeleportTransformQuat.quat2_setPositionRotationQuat(currentVisualTeleportPosition, currentVisualTeleportRotationQuat);\r\n            this._myVisualTeleportPositionObject.pp_setTransformQuat(currentVisualTeleportTransformQuat);\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorus.getParams();\r\n            visualParams.myRadius = 0.175;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Radius\");\r\n            //visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorus.paramsUpdated();\r\n        }\r\n\r\n        {\r\n            let visualParams = this._myValidVisualTeleportPositionTorusInner.getParams();\r\n            visualParams.myRadius = 0.04;\r\n            visualParams.mySegmentsAmount = 24;\r\n            visualParams.mySegmentThickness = 0.02;\r\n\r\n            //visualParams.myRadius = PP.myEasyTuneVariables.get(\"Teleport Torus Inner Radius\");\r\n            //visualParams.mySegmentsAmount = PP.myEasyTuneVariables.get(\"Teleport Torus Segments\");\r\n            //visualParams.mySegmentThickness = PP.myEasyTuneVariables.get(\"Teleport Torus Thickness\");\r\n\r\n            this._myValidVisualTeleportPositionTorusInner.paramsUpdated();\r\n        }\r\n\r\n        if (this._myTeleportParams.myVisualizerParams.myTeleportPositionObject == null) {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(true);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(true);\r\n        } else {\r\n            this._myValidVisualTeleportPositionTorus.setVisible(false);\r\n            this._myValidVisualTeleportPositionTorusInner.setVisible(false);\r\n            this._myTeleportParams.myVisualizerParams.myTeleportPositionObject.pp_setActive(true);\r\n        }\r\n\r\n        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugShowActive) {\r\n            PP.myDebugVisualManager.drawPoint(0, this._myTeleportRuntimeParams.myTeleportPosition, PP.vec4_create(0, 0, 1, 1), 0.02);\r\n        }\r\n    };\r\n}();", "PP.PlayerLocomotionTeleportDetectionParams = class PlayerLocomotionTeleportDetectionParams {\r\n    constructor() {\r\n        this.myMaxDistance = 0;\r\n        this.myMaxHeightDifference = 0;\r\n        this.myGroundAngleToIgnoreUpward = 0;\r\n        // this can be used to make it so the teleport position is valid on a steeper angle when going downward by setting the higher value on the collision params\r\n        // and then use this to specify that when going upward u want it to be less, basically to be able to teleprot down a cliff even on a steep ground\r\n        // that would not let you go up\r\n        this.myMustBeOnGround = false;\r\n\r\n        this.myTeleportBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n        this.myTeleportFloorLayerFlags = new PP.PhysicsLayerFlags();\r\n\r\n        this.myParableForwardMinAngleToBeValidUp = 30;\r\n        this.myParableForwardMinAngleToBeValidDown = 0;\r\n\r\n        this.myTeleportParableStartReferenceObject = null;\r\n\r\n        // used if reference is null\r\n        this.myTeleportParableStartPositionOffset = PP.vec3_create(0, -0.04, 0.08);\r\n        this.myTeleportParableStartRotationOffset = PP.vec3_create(30, 0, 0);\r\n\r\n        this.myTeleportParableSpeed = 15;\r\n        this.myTeleportParableGravity = -30;\r\n        this.myTeleportParableStepLength = 0.25;\r\n\r\n        this.myRotationOnUpMinStickIntensity = 0.5;\r\n        this.myRotationOnUpActive = false;\r\n\r\n        this.myTeleportFeetPositionMustBeVisible = false;\r\n        this.myTeleportHeadPositionMustBeVisible = false;\r\n        this.myTeleportHeadOrFeetPositionMustBeVisible = false; // wins over previous parameters\r\n\r\n        this.myVisibilityCheckRadius = 0.05;\r\n        this.myVisibilityCheckFeetPositionVerticalOffset = 0.1;\r\n        this.myVisibilityCheckDistanceFromHitThreshold = 0.1;\r\n        this.myVisibilityCheckCircumferenceSliceAmount = 6;\r\n        this.myVisibilityCheckCircumferenceStepAmount = 1;\r\n        this.myVisibilityCheckCircumferenceRotationPerStep = 30;\r\n        this.myVisibilityBlockLayerFlags = new PP.PhysicsLayerFlags();\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportDetectionRuntimeParams = class PlayerLocomotionTeleportDetectionRuntimeParams {\r\n    constructor() {\r\n        this.myTeleportDetectionValid = false;\r\n        this.myTeleportPositionValid = false;\r\n        this.myTeleportSurfaceNormal = PP.vec3_create();\r\n\r\n        this.myParable = new PP.PlayerLocomotionTeleportParable();\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportDetectionState = class PlayerLocomotionTeleportDetectionState extends PP.PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myDetectionRuntimeParams = new PP.PlayerLocomotionTeleportDetectionRuntimeParams();\r\n\r\n        this._myVisualizer = new PP.PlayerLocomotionTeleportDetectionVisualizer(this._myTeleportParams, this._myTeleportRuntimeParams, this._myDetectionRuntimeParams);\r\n\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Steps\", this._myTeleportParams.myDetectionParams.myTeleportParableStepLength, 1, 3, 0.01));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Gravity\", this._myTeleportParams.myDetectionParams.myTeleportParableGravity, 10, 3));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Parable Speed\", this._myTeleportParams.myDetectionParams.myTeleportParableSpeed, 10, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Teleport Max Distance\", this._myTeleportParams.myDetectionParams.myMaxDistance, 10, 3, 0));\r\n    }\r\n\r\n    start() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = true;\r\n        this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n        this._myTeleportRotationOnUpNext = 0;\r\n\r\n        this._myDetectionRuntimeParams.myParable.setSpeed(this._myTeleportParams.myDetectionParams.myTeleportParableSpeed);\r\n        this._myDetectionRuntimeParams.myParable.setGravity(this._myTeleportParams.myDetectionParams.myTeleportParableGravity);\r\n        this._myDetectionRuntimeParams.myParable.setStepLength(this._myTeleportParams.myDetectionParams.myTeleportParableStepLength);\r\n\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myVisualizer.start();\r\n    }\r\n\r\n    end() {\r\n        this._myLocomotionRuntimeParams.myIsTeleportDetecting = false;\r\n        this._myVisualizer.end();\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._detectTeleportPosition();\r\n\r\n        this._myVisualizer.update(dt);\r\n\r\n        if (this._confirmTeleport()) {\r\n            if (this._myDetectionRuntimeParams.myTeleportPositionValid) {\r\n                fsm.perform(\"teleport\");\r\n            } else {\r\n                fsm.perform(\"cancel\");\r\n            }\r\n        } else if (this._cancelTeleport()) {\r\n            fsm.perform(\"cancel\");\r\n        }\r\n    }\r\n\r\n    _confirmTeleport() {\r\n        let confirmTeleport = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            if (PP.myMouse.isInsideView()) {\r\n                confirmTeleport = PP.myMouse.isButtonPressEnd(PP.MouseButtonID.MIDDLE);\r\n            }\r\n        } else {\r\n            let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                confirmTeleport = true;\r\n            }\r\n        }\r\n\r\n        return confirmTeleport;\r\n    }\r\n\r\n    _cancelTeleport() {\r\n        let cancelTeleport = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            cancelTeleport = PP.myMouse.isButtonPressEnd(PP.MouseButtonID.RIGHT) || !PP.myMouse.isInsideView();\r\n        } else {\r\n            cancelTeleport = PP.myGamepads[this._myTeleportParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed();\r\n        }\r\n\r\n        return cancelTeleport;\r\n    }\r\n\r\n    _detectTeleportPosition() {\r\n        //this._myDetectionRuntimeParams.myParable.setSpeed(PP.myEasyTuneVariables.get(\"Parable Speed\"));\r\n        //this._myDetectionRuntimeParams.myParable.setGravity(PP.myEasyTuneVariables.get(\"Parable Gravity\"));\r\n        //this._myDetectionRuntimeParams.myParable.setStepLength(PP.myEasyTuneVariables.get(\"Parable Steps\"));\r\n        //this._myTeleportParams.myDetectionParams.myMaxDistance = PP.myEasyTuneVariables.get(\"Teleport Max Distance\");\r\n\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            this._detectTeleportRotationVR();\r\n            this._detectTeleportPositionVR();\r\n        } else {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n            this._detectTeleportPositionNonVR();\r\n        }\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionNonVR = function () {\r\n    let mousePosition = PP.vec3_create();\r\n    let mouseDirection = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    return function _detectTeleportPositionNonVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        PP.myMouse.getOriginWorld(mousePosition);\r\n        PP.myMouse.getDirectionWorld(mouseDirection);\r\n\r\n        this._detectTeleportPositionParable(mousePosition, mouseDirection, playerUp);\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionVR = function () {\r\n    let teleportStartTransformLocal = PP.quat2_create();\r\n    let teleportStartTransformWorld = PP.quat2_create();\r\n\r\n    let teleportStartPosition = PP.vec3_create();\r\n    let teleportDirection = PP.vec3_create();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    let playerUpNegate = PP.vec3_create();\r\n    return function _detectTeleportPositionVR(dt) {\r\n        this._myDetectionRuntimeParams.myTeleportPositionValid = false;\r\n        this._myDetectionRuntimeParams.myTeleportDetectionValid = false;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject == null) {\r\n            let referenceObject = PP.myPlayerObjects.myHands[this._myTeleportParams.myHandedness];\r\n\r\n            teleportStartTransformLocal.quat2_setPositionRotationDegrees(this._myTeleportParams.myDetectionParams.myTeleportParableStartPositionOffset, this._myTeleportParams.myDetectionParams.myTeleportParableStartRotationOffset);\r\n            teleportStartTransformWorld = referenceObject.pp_convertTransformObjectToWorldQuat(teleportStartTransformLocal, teleportStartTransformWorld);\r\n        } else {\r\n            let referenceObject = this._myTeleportParams.myDetectionParams.myTeleportParableStartReferenceObject;\r\n\r\n            referenceObject.pp_getTransformQuat(teleportStartTransformWorld);\r\n        }\r\n\r\n        teleportStartPosition = teleportStartTransformWorld.quat2_getPosition(teleportStartPosition);\r\n        teleportDirection = teleportStartTransformWorld.quat2_getForward(teleportDirection);\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n        playerUpNegate = playerUp.vec3_negate(playerUpNegate);\r\n\r\n        if (teleportDirection.vec3_angle(playerUp) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidUp &&\r\n            teleportDirection.vec3_angle(playerUpNegate) >= this._myTeleportParams.myDetectionParams.myParableForwardMinAngleToBeValidDown\r\n        ) {\r\n            this._myDetectionRuntimeParams.myTeleportDetectionValid = true;\r\n        }\r\n\r\n        if (this._myDetectionRuntimeParams.myTeleportDetectionValid) {\r\n            this._detectTeleportPositionParable(teleportStartPosition, teleportDirection, playerUp);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._detectTeleportPositionParable = function () {\r\n    let parablePosition = PP.vec3_create();\r\n    let prevParablePosition = PP.vec3_create();\r\n    let parableFinalPosition = PP.vec3_create();\r\n\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let parableHitPosition = PP.vec3_create();\r\n    let parableHitNormal = PP.vec3_create();\r\n\r\n    let verticalHitOrigin = PP.vec3_create();\r\n    let verticalHitDirection = PP.vec3_create();\r\n\r\n    let flatTeleportHorizontalHitNormal = PP.vec3_create();\r\n    let flatParableHitNormal = PP.vec3_create();\r\n    let flatParableDirectionNegate = PP.vec3_create();\r\n\r\n    let teleportCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _detectTeleportPositionParable(startPosition, direction, up) {\r\n        this._myDetectionRuntimeParams.myParable.setStartPosition(startPosition);\r\n        this._myDetectionRuntimeParams.myParable.setForward(direction);\r\n        this._myDetectionRuntimeParams.myParable.setUp(up);\r\n\r\n        let currentPositionIndex = 1;\r\n        let positionFlatDistance = 0;\r\n        let positionParableDistance = 0;\r\n        prevParablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex - 1, prevParablePosition);\r\n\r\n        raycastSetup.myIgnoreHitsInsideCollision = true;\r\n        raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportBlockLayerFlags.getMask());\r\n\r\n        raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n        for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n            raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n        }\r\n\r\n        let maxParableDistance = this._myTeleportParams.myDetectionParams.myMaxDistance * 2;\r\n\r\n        do {\r\n            parablePosition = this._myDetectionRuntimeParams.myParable.getPosition(currentPositionIndex, parablePosition);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(prevParablePosition);\r\n            raycastSetup.myDirection = parablePosition.vec3_sub(prevParablePosition, raycastSetup.myDirection);\r\n            raycastSetup.myDistance = raycastSetup.myDirection.vec3_length();\r\n            raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            prevParablePosition.vec3_copy(parablePosition);\r\n            positionFlatDistance = parablePosition.vec3_sub(startPosition, parablePosition).vec3_removeComponentAlongAxis(up, parablePosition).vec3_length();\r\n            positionParableDistance = this._myDetectionRuntimeParams.myParable.getDistance(currentPositionIndex);\r\n\r\n            currentPositionIndex++;\r\n        } while (\r\n            positionFlatDistance <= this._myTeleportParams.myDetectionParams.myMaxDistance &&\r\n            positionParableDistance <= maxParableDistance &&\r\n            !raycastResult.isColliding());\r\n\r\n        let maxParableDistanceOverFlatDistance = this._myDetectionRuntimeParams.myParable.getDistanceOverFlatDistance(this._myTeleportParams.myDetectionParams.myMaxDistance, maxParableDistance);\r\n\r\n        let fixedPositionParableDistance = positionParableDistance;\r\n        if (positionParableDistance > maxParableDistanceOverFlatDistance || positionParableDistance > maxParableDistance) {\r\n            fixedPositionParableDistance = Math.min(maxParableDistanceOverFlatDistance, maxParableDistance);\r\n        }\r\n\r\n        this._myDetectionRuntimeParams.myParableDistance = fixedPositionParableDistance;\r\n\r\n        let hitCollisionValid = false;\r\n\r\n        let bottomCheckMaxLength = 100;\r\n\r\n        if (raycastResult.isColliding()) {\r\n            let hit = raycastResult.myHits.pp_first();\r\n\r\n            let hitParableDistance = positionParableDistance - (raycastSetup.myDistance - hit.myDistance);\r\n\r\n            if (hitParableDistance <= fixedPositionParableDistance) {\r\n                hitCollisionValid = true;\r\n\r\n                this._myDetectionRuntimeParams.myParableDistance = hitParableDistance;\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                parableHitPosition.vec3_copy(hit.myPosition);\r\n                parableHitNormal.vec3_copy(hit.myNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    verticalHitOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(0.01, verticalHitOrigin), verticalHitOrigin);\r\n                    verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n                    raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n                    raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                    raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                    raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                    if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                        PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                    }\r\n\r\n                    if (raycastResult.isColliding()) {\r\n                        let hit = raycastResult.myHits.pp_first();\r\n\r\n                        teleportCollisionRuntimeParams.reset();\r\n                        this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                        this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                        this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                            !this._myTeleportAsMovementFailed &&\r\n                            teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                            teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                            flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                            if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                                flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"2\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableHitNormal = parableHitNormal.vec3_removeComponentAlongAxis(up, flatParableHitNormal);\r\n                            if (!flatParableHitNormal.vec3_isZero(0.00001)) {\r\n                                flatParableHitNormal.vec3_normalize(flatParableHitNormal);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"3\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n\r\n                        if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                            flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                            if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                                flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                                let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                                raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                                raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                                raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                                if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                                    PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                                    PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                                }\r\n\r\n                                if (raycastResult.isColliding()) {\r\n                                    let hit = raycastResult.myHits.pp_first();\r\n\r\n                                    teleportCollisionRuntimeParams.reset();\r\n                                    this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                                    this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                                    this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            //console.error(\"4\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                        }\r\n                    }\r\n                } else {\r\n                    //console.error(\"1\", this._myDetectionRuntimeParams.myTeleportPositionValid, this._myTeleportAsMovementFailed);\r\n                }\r\n            }\r\n        }\r\n\r\n        //console.error(\"-\");\r\n\r\n        if (!hitCollisionValid) {\r\n            parableFinalPosition = this._myDetectionRuntimeParams.myParable.getPositionByDistance(this._myDetectionRuntimeParams.myParableDistance, parableFinalPosition);\r\n\r\n            verticalHitOrigin.vec3_copy(parableFinalPosition);\r\n            verticalHitDirection = up.vec3_negate(verticalHitDirection);\r\n\r\n            raycastSetup.myOrigin.vec3_copy(verticalHitOrigin);\r\n            raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n            raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                teleportCollisionRuntimeParams.reset();\r\n                this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid &&\r\n                    !this._myTeleportAsMovementFailed &&\r\n                    teleportCollisionRuntimeParams.myTeleportCanceled &&\r\n                    teleportCollisionRuntimeParams.myIsCollidingHorizontally) {\r\n                    flatTeleportHorizontalHitNormal = teleportCollisionRuntimeParams.myHorizontalCollisionHit.myNormal.vec3_removeComponentAlongAxis(up, flatTeleportHorizontalHitNormal);\r\n\r\n                    if (!flatTeleportHorizontalHitNormal.vec3_isZero(0.00001)) {\r\n                        flatTeleportHorizontalHitNormal.vec3_normalize(flatTeleportHorizontalHitNormal);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatTeleportHorizontalHitNormal.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (!this._myDetectionRuntimeParams.myTeleportPositionValid && !this._myTeleportAsMovementFailed) {\r\n                    flatParableDirectionNegate = direction.vec3_negate(flatParableDirectionNegate).vec3_removeComponentAlongAxis(up, flatParableDirectionNegate).vec3_normalize(flatParableDirectionNegate);\r\n\r\n                    if (!flatParableDirectionNegate.vec3_isZero(0.00001)) {\r\n                        flatParableDirectionNegate.vec3_normalize(flatParableDirectionNegate);\r\n\r\n                        let backwardStep = this._myTeleportParams.myCollisionCheckParams.myRadius * 1.1;\r\n                        raycastSetup.myOrigin = verticalHitOrigin.vec3_add(flatParableDirectionNegate.vec3_scale(backwardStep, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                        raycastSetup.myDirection.vec3_copy(verticalHitDirection);\r\n                        raycastSetup.myDistance = bottomCheckMaxLength;\r\n\r\n                        raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                        if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugDetectActive) {\r\n                            PP.myDebugVisualManager.drawPoint(0, raycastSetup.myOrigin, PP.vec4_create(0, 0, 0, 1), 0.03);\r\n                            PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n                        }\r\n\r\n                        if (raycastResult.isColliding()) {\r\n                            let hit = raycastResult.myHits.pp_first();\r\n\r\n                            teleportCollisionRuntimeParams.reset();\r\n                            this._myDetectionRuntimeParams.myTeleportPositionValid = this._isTeleportHitValid(hit, this._myTeleportRuntimeParams.myTeleportRotationOnUp, teleportCollisionRuntimeParams);\r\n\r\n                            this._myTeleportRuntimeParams.myTeleportPosition.vec3_copy(teleportCollisionRuntimeParams.myNewPosition);\r\n                            this._myDetectionRuntimeParams.myTeleportSurfaceNormal.vec3_copy(teleportCollisionRuntimeParams.myGroundNormal);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._detectTeleportRotationVR = function () {\r\n    let axesVec3 = PP.vec3_create();\r\n    let axesForward = PP.vec3_create(0, 0, 1);\r\n    let axesUp = PP.vec3_create(0, 1, 0);\r\n    return function _detectTeleportRotationVR(dt) {\r\n        let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n        if (axes.vec2_length() > this._myTeleportParams.myDetectionParams.myRotationOnUpMinStickIntensity) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = this._myTeleportRotationOnUpNext;\r\n\r\n            axesVec3.vec3_set(axes[0], 0, axes[1]);\r\n            this._myTeleportRotationOnUpNext = axesVec3.vec3_angleSigned(axesForward, axesUp);\r\n        }\r\n\r\n        if (!this._myTeleportParams.myDetectionParams.myRotationOnUpActive) {\r\n            this._myTeleportRuntimeParams.myTeleportRotationOnUp = 0;\r\n            this._myTeleportRotationOnUpNext = 0;\r\n        }\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._isTeleportHitValid = function () {\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let playerUp = PP.vec3_create();\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isTeleportHitValid(hit, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        this._myTeleportAsMovementFailed = false;\r\n\r\n        if (hit.isValid() && !hit.myIsInsideCollision) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            if (true || hit.myNormal.vec3_isConcordant(playerUp)) {\r\n                // #TODO when the flags on the physx will be available just check that the hit object physx has the floor flag\r\n\r\n                raycastSetup.myIgnoreHitsInsideCollision = true;\r\n                raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myTeleportFloorLayerFlags.getMask());\r\n\r\n                raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n                for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                    raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n                }\r\n\r\n                let distanceToCheck = 0.01;\r\n                raycastSetup.myOrigin = hit.myPosition.vec3_add(hit.myNormal.vec3_scale(distanceToCheck, raycastSetup.myOrigin), raycastSetup.myOrigin);\r\n                raycastSetup.myDirection = hit.myNormal.vec3_negate(raycastSetup.myDirection);\r\n                raycastSetup.myDistance = distanceToCheck * 1.25;\r\n                raycastSetup.myDirection.vec3_normalize(raycastSetup.myDirection);\r\n\r\n                raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n                if (raycastResult.isColliding()) {\r\n                    let floorHit = raycastResult.myHits.pp_first();\r\n                    if (floorHit.myObject.pp_equals(hit.myObject)) {\r\n                        isValid = this._isTeleportPositionValid(hit.myPosition, rotationOnUp, checkTeleportCollisionRuntimeParams);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionValid = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    let feetRotationQuat = PP.quat_create();\r\n    let feetPosition = PP.vec3_create();\r\n    let differenceOnUpVector = PP.vec3_create();\r\n    let teleportCheckCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n    return function _isTeleportPositionValid(teleportPosition, rotationOnUp, checkTeleportCollisionRuntimeParams) {\r\n        let isValid = false;\r\n\r\n        let positionVisible = this._isTeleportPositionVisible(teleportPosition);\r\n\r\n        if (positionVisible) {\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n            feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n            feetPosition = feetTransformQuat.quat2_getPosition(feetPosition);\r\n            if (rotationOnUp != 0) {\r\n                feetRotationQuat = feetTransformQuat.quat2_getRotationQuat(feetRotationQuat);\r\n                feetRotationQuat = feetRotationQuat.quat_rotateAxis(rotationOnUp, playerUp, feetRotationQuat);\r\n                feetTransformQuat.quat2_setPositionRotationQuat(feetPosition, feetRotationQuat);\r\n            }\r\n\r\n            let differenceOnUp = teleportPosition.vec3_sub(feetPosition, differenceOnUpVector).vec3_componentAlongAxis(playerUp, differenceOnUpVector).vec3_length();\r\n\r\n            if (differenceOnUp < this._myTeleportParams.myDetectionParams.myMaxHeightDifference + 0.00001) {\r\n                let teleportCheckValid = false;\r\n                teleportCheckCollisionRuntimeParams.copy(this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n\r\n                if (!this._myTeleportParams.myPerformTeleportAsMovement) {\r\n                    this._checkTeleport(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                } else {\r\n                    this._checkTeleportAsMovement(teleportPosition, feetTransformQuat, teleportCheckCollisionRuntimeParams, checkTeleportCollisionRuntimeParams);\r\n                }\r\n\r\n                if (!teleportCheckCollisionRuntimeParams.myTeleportCanceled) {\r\n                    teleportCheckValid = true;\r\n                }\r\n\r\n                if (teleportCheckValid && (!this._myTeleportParams.myDetectionParams.myMustBeOnGround || teleportCheckCollisionRuntimeParams.myIsOnGround)) {\r\n\r\n                    let groundAngleValid = true;\r\n                    let isTeleportingUpward = teleportCheckCollisionRuntimeParams.myNewPosition.vec3_isFartherAlongAxis(feetPosition, playerUp);\r\n                    if (isTeleportingUpward) {\r\n                        groundAngleValid = teleportCheckCollisionRuntimeParams.myGroundAngle < this._myTeleportParams.myDetectionParams.myGroundAngleToIgnoreUpward + 0.0001;\r\n                    }\r\n\r\n                    if (groundAngleValid) {\r\n                        isValid = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    };\r\n}();", "PP.PlayerLocomotionTeleportDetectionState.prototype._isTeleportPositionVisible = function () {\r\n    let playerUp = PP.vec3_create();\r\n\r\n    let offsetFeetTeleportPosition = PP.vec3_create();\r\n    let headTeleportPosition = PP.vec3_create();\r\n    return function _isTeleportPositionVisible(teleportPosition) {\r\n        let isVisible = true;\r\n\r\n        if (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible ||\r\n            this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible) {\r\n\r\n            playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n            let isHeadVisible = false;\r\n            let isFeetVisible = false;\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                this._myTeleportParams.myDetectionParams.myTeleportHeadPositionMustBeVisible) {\r\n                let headheight = this._myTeleportParams.myPlayerHeadManager.getHeightHead();\r\n                headTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(headheight, headTeleportPosition), headTeleportPosition);\r\n                isHeadVisible = this._isPositionVisible(headTeleportPosition);\r\n            } else {\r\n                isHeadVisible = true;\r\n            }\r\n\r\n            if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible && isHeadVisible) {\r\n                isFeetVisible = true;\r\n            } else {\r\n                if (this._myTeleportParams.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible ||\r\n                    (this._myTeleportParams.myDetectionParams.myTeleportFeetPositionMustBeVisible && isHeadVisible)) {\r\n                    offsetFeetTeleportPosition = teleportPosition.vec3_add(playerUp.vec3_scale(this._myTeleportParams.myDetectionParams.myVisibilityCheckFeetPositionVerticalOffset, offsetFeetTeleportPosition), offsetFeetTeleportPosition);\r\n                    isFeetVisible = this._isPositionVisible(offsetFeetTeleportPosition);\r\n                } else {\r\n                    isFeetVisible = true;\r\n                }\r\n            }\r\n\r\n            isVisible = isHeadVisible && isFeetVisible;\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._isPositionVisible = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let standardUp = PP.vec3_create(0, 1, 0);\r\n    let standardForward = PP.vec3_create(0, 0, 1);\r\n    let referenceUp = PP.vec3_create();\r\n    let headPosition = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let fixedRight = PP.vec3_create();\r\n    let fixedForward = PP.vec3_create();\r\n    let fixedUp = PP.vec3_create();\r\n    let raycastEndPosition = PP.vec3_create();\r\n\r\n    let raycastSetup = new PP.RaycastSetup();\r\n    let raycastResult = new PP.RaycastResults();\r\n\r\n    let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n    return function _isPositionVisible(position) {\r\n        let isVisible = true;\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        let currentHead = this._myTeleportParams.myPlayerHeadManager.getHead();\r\n        headPosition = currentHead.pp_getPosition(headPosition);\r\n        direction = position.vec3_sub(headPosition, direction).vec3_normalize(direction);\r\n\r\n        referenceUp.vec3_copy(standardUp);\r\n        if (direction.vec3_angle(standardUp) < 0.0001) {\r\n            referenceUp.vec3_copy(standardForward);\r\n        }\r\n\r\n        fixedRight = direction.vec3_cross(referenceUp, fixedRight);\r\n        fixedUp = fixedRight.vec3_cross(direction, fixedUp);\r\n        fixedForward.vec3_copy(direction);\r\n\r\n        fixedUp.vec3_normalize(fixedUp);\r\n        fixedForward.vec3_normalize(fixedForward);\r\n\r\n        let checkPositions = this._getVisibilityCheckPositions(headPosition, fixedUp, fixedForward);\r\n\r\n        let distance = headPosition.vec3_distance(position);\r\n\r\n        for (let checkPosition of checkPositions) {\r\n            raycastSetup.myOrigin.vec3_copy(checkPosition);\r\n            raycastSetup.myDirection.vec3_copy(fixedForward);\r\n            raycastSetup.myDistance = distance;\r\n\r\n            raycastSetup.myBlockLayerFlags.setMask(this._myTeleportParams.myDetectionParams.myVisibilityBlockLayerFlags.getMask());\r\n\r\n            raycastSetup.myObjectsToIgnore.pp_copy(this._myTeleportParams.myCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            for (let objectToIgnore of this._myTeleportParams.myCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                raycastSetup.myObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            raycastSetup.myIgnoreHitsInsideCollision = true;\r\n\r\n            raycastResult = PP.PhysicsUtils.raycast(raycastSetup, raycastResult);\r\n\r\n            if (this._myTeleportParams.myDebugActive && this._myTeleportParams.myDebugVisibilityActive) {\r\n                PP.myDebugVisualManager.drawRaycast(0, raycastResult);\r\n            }\r\n\r\n            if (raycastResult.isColliding()) {\r\n                raycastEndPosition = checkPosition.vec3_add(fixedForward.vec3_scale(distance, raycastEndPosition), raycastEndPosition);\r\n                let hit = raycastResult.myHits.pp_first();\r\n\r\n                if (this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold == 0 || hit.myPosition.vec3_distance(raycastEndPosition) > this._myTeleportParams.myDetectionParams.myVisibilityCheckDistanceFromHitThreshold + 0.00001) {\r\n                    isVisible = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isVisible;\r\n    };\r\n}();\r\n\r\nPP.PlayerLocomotionTeleportDetectionState.prototype._getVisibilityCheckPositions = function () {\r\n    let checkPositions = [];\r\n    let cachedCheckPositions = [];\r\n    let currentCachedCheckPositionIndex = 0;\r\n    let _localGetCachedCheckPosition = function () {\r\n        let item = null;\r\n        while (cachedCheckPositions.length <= currentCachedCheckPositionIndex) {\r\n            cachedCheckPositions.push(PP.vec3_create());\r\n        }\r\n\r\n        item = cachedCheckPositions[currentCachedCheckPositionIndex];\r\n        currentCachedCheckPositionIndex++;\r\n        return item;\r\n    };\r\n\r\n    let currentDirection = PP.vec3_create();\r\n    return function _getVisibilityCheckPositions(position, up, forward) {\r\n        checkPositions.length = 0;\r\n        currentCachedCheckPositionIndex = 0;\r\n\r\n        {\r\n            let tempCheckPosition = _localGetCachedCheckPosition();\r\n            tempCheckPosition.vec3_copy(position);\r\n            checkPositions.push(tempCheckPosition);\r\n        }\r\n\r\n        let radiusStep = this._myTeleportParams.myDetectionParams.myVisibilityCheckRadius / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount;\r\n        let sliceAngle = 360 / this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount;\r\n        let currentStepRotation = 0;\r\n        for (let i = 0; i < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceStepAmount; i++) {\r\n            let currentRadius = radiusStep * (i + 1);\r\n\r\n            currentDirection = up.vec3_rotateAxis(currentStepRotation, forward, currentDirection);\r\n            for (let j = 0; j < this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceSliceAmount; j++) {\r\n                let tempCheckPosition = _localGetCachedCheckPosition();\r\n                let sliceDirection = currentDirection.vec3_rotateAxis(sliceAngle * j, forward, tempCheckPosition);\r\n                checkPositions.push(position.vec3_add(sliceDirection.vec3_scale(currentRadius, sliceDirection), sliceDirection));\r\n            }\r\n\r\n            currentStepRotation += this._myTeleportParams.myDetectionParams.myVisibilityCheckCircumferenceRotationPerStep;\r\n        }\r\n\r\n        return checkPositions;\r\n    };\r\n}();", "PP.PlayerLocomotionTeleportTeleportType = {\r\n    INSTANT: 0,\r\n    BLINK: 1,\r\n    SHIFT: 2,\r\n};\r\n\r\nPP.PlayerLocomotionTeleportTeleportParams = class PlayerLocomotionTeleportTeleportParams {\r\n    constructor() {\r\n        this.myTeleportType = PP.PlayerLocomotionTeleportTeleportType.SHIFT;\r\n\r\n        this.myBlinkFadeOutSeconds = 0.1;\r\n        this.myBlinkFadeInSeconds = 0.1;\r\n        this.myBlinkWaitSeconds = 0.1;\r\n        this.myBlinkSphereColor = PP.vec3_create();\r\n        this.myBlinkSphereScale = 0.1;\r\n\r\n        this.myShiftMovementSeconds = 0.15;\r\n        this.myShiftMovementSecondsMultiplierOverDistanceFunction = null;\r\n        this.myShiftMovementEasingFunction = PP.EasingFunction.easeInOut;\r\n\r\n        this.myShiftRotateSeconds = 1;\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = null;\r\n        this.myShiftRotateEasingFunction = PP.EasingFunction.easeOut;\r\n        this.myShiftRotateStartAfterMovementPercentage = 0.7;\r\n\r\n        this.myShiftRotateSecondsMultiplierOverAngleFunction = function (angle) {\r\n            return PP.EasingFunction.easeOut(angle / 180);\r\n        };\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportTeleportState = class PlayerLocomotionTeleportTeleportState extends PP.PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myBlinkState = new PP.PlayerLocomotionTeleportTeleportBlinkState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n        this._myShiftState = new PP.PlayerLocomotionTeleportTeleportShiftState(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM.addState(\"instant_teleport\", this._instantUpdate.bind(this));\r\n        this._myFSM.addState(\"blink_teleport\", this._myBlinkState);\r\n        this._myFSM.addState(\"shift_teleport\", this._myShiftState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"instant_teleport\", \"start_instant\");\r\n        this._myFSM.addTransition(\"idle\", \"blink_teleport\", \"start_blink\");\r\n        this._myFSM.addTransition(\"idle\", \"shift_teleport\", \"start_shift\");\r\n\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"instant_teleport\", \"idle\", \"stop\", this._instantStop.bind(this));\r\n        this._myFSM.addTransition(\"blink_teleport\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shift_teleport\", \"idle\", \"stop\");\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        switch (this._myTeleportParams.myTeleportParams.myTeleportType) {\r\n            case PP.PlayerLocomotionTeleportTeleportType.INSTANT:\r\n                this._myFSM.perform(\"start_instant\");\r\n                break;\r\n            case PP.PlayerLocomotionTeleportTeleportType.BLINK:\r\n                this._myFSM.perform(\"start_blink\");\r\n                break;\r\n            case PP.PlayerLocomotionTeleportTeleportType.SHIFT:\r\n                this._myFSM.perform(\"start_shift\");\r\n                break;\r\n            default:\r\n                this._myFSM.perform(\"start_instant\");\r\n        }\r\n    }\r\n\r\n    end() {\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    completeTeleport() {\r\n        this._myFSM.perform(\"stop\");\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n\r\n    _instantUpdate(dt, fsm) {\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        fsm.perform(\"done\");\r\n    }\r\n\r\n    _instantStop(fsm) {\r\n        this._instantUpdate(0, fsm);\r\n    }\r\n\r\n    _completeTeleport() {\r\n        fsm.perform(\"stop\");\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myTeleportParams.myPlayerTransformManager.resetReal(true, false, false);\r\n        this._myTeleportParams.myPlayerTransformManager.resetHeadToReal();\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n};", "PP.PlayerLocomotionTeleportTeleportBlinkState = class PlayerLocomotionTeleportTeleportBlinkState extends PP.PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myBlinkSphere = WL.scene.addObject(null);\r\n        this._myBlinkSphereMeshComponent = this._myBlinkSphere.pp_addComponent(\"mesh\");\r\n        this._myBlinkSphereMeshComponent.mesh = PP.myDefaultResources.myMeshes.myInvertedSphere;\r\n        this._myBlinkSphereMeshComponent.material = PP.myDefaultResources.myMaterials.myFlatTransparentNoDepth.clone();\r\n        this._myBlinkSphereMaterialColor = [\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[0] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[1] / 255,\r\n            this._myTeleportParams.myTeleportParams.myBlinkSphereColor[2] / 255,\r\n            0];\r\n\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n        this._myBlinkSphere.pp_setScaleLocal(this._myTeleportParams.myTeleportParams.myBlinkSphereScale);\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Blink\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"fade_out\", this._fadeOutUpdate.bind(this));\r\n        this._myFSM.addState(\"wait\", new PP.TimerState(this._myTeleportParams.myTeleportParams.myBlinkWaitSeconds, \"done\"));\r\n        this._myFSM.addState(\"fade_in\", this._fadeInUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"fade_out\", \"teleport\", this._startFadeOut.bind(this));\r\n        this._myFSM.addTransition(\"fade_out\", \"wait\", \"done\", this._teleport.bind(this));\r\n        this._myFSM.addTransition(\"wait\", \"fade_in\", \"done\", this._startFadeIn.bind(this));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"fade_out\", \"idle\", \"stop\", this._stop.bind(this, true));\r\n        this._myFSM.addTransition(\"wait\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n        this._myFSM.addTransition(\"fade_in\", \"idle\", \"stop\", this._stop.bind(this, false));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myFadeInTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeInSeconds);\r\n        this._myFadeOutTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myBlinkFadeOutSeconds);\r\n        this._myFadeOutAlphaOverTime = new PP.NumberOverValue(0, 1, 0, 1);\r\n        this._myFadeInAlphaOverTime = new PP.NumberOverValue(1, 0, 0, 1);\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n        this._myBlinkSphere.pp_setParent(null, false);\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        this._myBlinkSphere.pp_setParent(this._myTeleportParams.myPlayerHeadManager.getHead(), false);\r\n        this._myBlinkSphere.pp_resetTransformLocal();\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startFadeOut() {\r\n        this._myFadeOutTimer.start();\r\n        this._myBlinkSphereMaterialColor[3] = 0;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n        this._myBlinkSphere.pp_setActive(true);\r\n\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n    }\r\n\r\n    _startFadeIn() {\r\n        this._myFadeInTimer.start();\r\n    }\r\n\r\n    _fadeOutUpdate(dt, fsm) {\r\n        this._myFadeOutTimer.update(dt);\r\n\r\n        let alpha = this._myFadeOutAlphaOverTime.get(this._myFadeOutTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeOutTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _fadeInUpdate(dt, fsm) {\r\n        this._myFadeInTimer.update(dt);\r\n\r\n        let alpha = this._myFadeInAlphaOverTime.get(this._myFadeInTimer.getPercentage());\r\n        this._myBlinkSphereMaterialColor[3] = alpha;\r\n        this._myBlinkSphereMeshComponent.material.color = this._myBlinkSphereMaterialColor;\r\n\r\n        if (this._myFadeInTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        }\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _stop(teleport) {\r\n        this._myBlinkSphere.pp_setActive(false);\r\n\r\n        if (teleport) {\r\n            this._teleport();\r\n        }\r\n    }\r\n\r\n    _teleport() {\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myTeleportRuntimeParams.myTeleportRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n};", "PP.PlayerLocomotionTeleportTeleportShiftState = class PlayerLocomotionTeleportTeleportShiftState extends PP.PlayerLocomotionTeleportState {\r\n    constructor(teleportParams, teleportRuntimeParams, locomotionRuntimeParams) {\r\n        super(teleportParams, teleportRuntimeParams, locomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport Teleport Shift\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\");\r\n\r\n        this._myFSM.addState(\"shifting\", this._shiftingUpdate.bind(this));\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"shifting\", \"teleport\", this._startShifting.bind(this));\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"done\", this._teleportDone.bind(this));\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"shifting\", \"idle\", \"stop\", this._stop.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n\r\n        this._myShiftMovementTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n        this._myShiftRotateTimer = new PP.Timer(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, false);\r\n\r\n        this._myFeetStartPosition = new PP.vec3_create();\r\n\r\n        this._myCurrentRotationOnUp = 0;\r\n        this._myStartRotationOnUp = 0;\r\n\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Movement Seconds\", this._myTeleportParams.myTeleportParams.myShiftMovementSeconds, 0.5, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Rotate Seconds\", this._myTeleportParams.myTeleportParams.myShiftRotateSeconds, 0.5, 3, 0));\r\n        //PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Shift Rotate Start Percentage\", this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage, 0.5, 3, 0, 1));\r\n    }\r\n\r\n    start(fsm) {\r\n        this._myParentFSM = fsm;\r\n\r\n        this._myFSM.perform(\"teleport\");\r\n    }\r\n\r\n    end() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    update(dt, fsm) {\r\n        //this._myTeleportParams.myTeleportParams.myShiftMovementSeconds = PP.myEasyTuneVariables.get(\"Shift Movement Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateSeconds = PP.myEasyTuneVariables.get(\"Shift Rotate Seconds\");\r\n        //this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage = PP.myEasyTuneVariables.get(\"Shift Rotate Start Percentage\");\r\n\r\n        this._myFSM.update(dt);\r\n    }\r\n\r\n    _startShifting() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = true;\r\n\r\n        this._myLocomotionRuntimeParams.myIsTeleporting = true;\r\n        this._myFeetStartPosition = this._myTeleportParams.myPlayerHeadManager.getPositionFeet(this._myFeetStartPosition);\r\n\r\n        this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds);\r\n\r\n        if (this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction) {\r\n            let distance = this._myTeleportRuntimeParams.myTeleportPosition.vec3_distance(this._myFeetStartPosition);\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftMovementSecondsMultiplierOverDistanceFunction(distance);\r\n            this._myShiftMovementTimer.start(this._myTeleportParams.myTeleportParams.myShiftMovementSeconds * multiplier);\r\n        }\r\n\r\n        this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds);\r\n        if (this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction) {\r\n            let multiplier = this._myTeleportParams.myTeleportParams.myShiftRotateSecondsMultiplierOverAngleFunction(Math.abs(this._myTeleportRuntimeParams.myTeleportRotationOnUp));\r\n            this._myShiftRotateTimer.reset(this._myTeleportParams.myTeleportParams.myShiftRotateSeconds * multiplier);\r\n        }\r\n\r\n        this._myStartRotationOnUp = this._myTeleportRuntimeParams.myTeleportRotationOnUp;\r\n        this._myCurrentRotationOnUp = 0;\r\n    }\r\n\r\n    _stop() {\r\n        this._teleport();\r\n    }\r\n\r\n    _teleportDone() {\r\n        this._teleport();\r\n        this._myParentFSM.performDelayed(\"done\");\r\n    }\r\n\r\n    _teleport() {\r\n        this._myTeleportParams.myPlayerTransformManager.getParams().mySyncPositionDisabled = false;\r\n        //this._myLocomotionRuntimeParams.myIsTeleporting = false;\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = true;\r\n        this._teleportToPosition(this._myTeleportRuntimeParams.myTeleportPosition, this._myStartRotationOnUp - this._myCurrentRotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportTeleportShiftState.prototype._shiftingUpdate = function () {\r\n    let movementToTeleportFeet = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    return function _shiftingUpdate(dt, fsm) {\r\n        this._myShiftMovementTimer.update(dt);\r\n        this._myShiftRotateTimer.update(dt);\r\n\r\n        if (this._myShiftRotateTimer.isDone() && this._myShiftMovementTimer.isDone()) {\r\n            fsm.perform(\"done\");\r\n        } else {\r\n            newFeetPosition.vec3_copy(this._myTeleportRuntimeParams.myTeleportPosition);\r\n\r\n            if (this._myShiftMovementTimer.isStarted() || this._myShiftMovementTimer.isJustDone()) {\r\n\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftMovementEasingFunction(this._myShiftMovementTimer.getPercentage());\r\n\r\n                if (interpolationValue >= this._myTeleportParams.myTeleportParams.myShiftRotateStartAfterMovementPercentage && !this._myShiftRotateTimer.isStarted()) {\r\n                    this._myShiftRotateTimer.start();\r\n                    this._myShiftRotateTimer.update(dt);\r\n                }\r\n\r\n                movementToTeleportFeet = this._myTeleportRuntimeParams.myTeleportPosition.vec3_sub(this._myFeetStartPosition, movementToTeleportFeet);\r\n                movementToTeleportFeet.vec3_scale(interpolationValue, movementToTeleportFeet);\r\n                newFeetPosition = this._myFeetStartPosition.vec3_add(movementToTeleportFeet, newFeetPosition);\r\n            }\r\n\r\n            let rotationOnUp = 0;\r\n            if (this._myShiftRotateTimer.isRunning() || this._myShiftRotateTimer.isJustDone()) {\r\n                let interpolationValue = this._myTeleportParams.myTeleportParams.myShiftRotateEasingFunction(this._myShiftRotateTimer.getPercentage());\r\n\r\n                let newCurrentRotationOnUp = this._myStartRotationOnUp * interpolationValue;\r\n                rotationOnUp = newCurrentRotationOnUp - this._myCurrentRotationOnUp;\r\n\r\n                this._myCurrentRotationOnUp = newCurrentRotationOnUp;\r\n            }\r\n\r\n            this._teleportToPosition(newFeetPosition, rotationOnUp, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.PlayerLocomotionTeleportTeleportShiftState.prototype, \"_shiftingUpdate\", { enumerable: false });", "PP.PlayerLocomotionTeleportParams = class PlayerLocomotionTeleportParams {\r\n    constructor() {\r\n        this.myPlayerHeadManager = null;\r\n\r\n        this.myCollisionCheckParams = null;\r\n\r\n        this.myDetectionParams = new PP.PlayerLocomotionTeleportDetectionParams();\r\n        this.myVisualizerParams = new PP.PlayerLocomotionTeleportDetectionVisualizerParams();\r\n        this.myTeleportParams = new PP.PlayerLocomotionTeleportTeleportParams();\r\n\r\n        this.myHandedness = PP.Handedness.LEFT;\r\n\r\n        this.myPerformTeleportAsMovement = false;\r\n        this.myTeleportAsMovementMaxDistanceFromTeleportPosition = 0.001;\r\n        this.myTeleportAsMovementMaxSteps = 2;\r\n        // when checking teleport as movement u may need to move more times to get to the position due to snap and gravity\r\n        // this specifies how many movement u can try to get to the teleport position\r\n\r\n        this.myTeleportAsMovementRemoveVerticalMovement = true;\r\n        // this can be used to remove the vertical movement from the difference from the current and teleport position so that u can apply just\r\n        // the gravity as vertical movement\r\n        this.myTeleportAsMovementExtraVerticalMovementPerMeter = 1; // this simulate the gravity for the teleport movement\r\n\r\n        this.myStickIdleThreshold = 0.1;\r\n\r\n        this.myAdjustPositionEveryFrame = false;\r\n        this.myGravityAcceleration = 0;\r\n\r\n        this.myDebugActive = false;\r\n        this.myDebugDetectActive = false;\r\n        this.myDebugShowActive = false;\r\n        this.myDebugVisibilityActive = false;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleportRuntimeParams = class PlayerLocomotionTeleportRuntimeParams {\r\n    constructor() {\r\n        this.myTeleportPosition = PP.vec3_create();\r\n        this.myTeleportRotationOnUp = 0;\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleport = class PlayerLocomotionTeleport extends PP.PlayerLocomotionMovement {\r\n    constructor(teleportParams, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myTeleportParams = teleportParams;\r\n        this._myTeleportRuntimeParams = new PP.PlayerLocomotionTeleportRuntimeParams();\r\n\r\n        this._myStickIdleCharge = true;\r\n        this._myGravitySpeed = 0;\r\n\r\n        this._myDetectionState = new PP.PlayerLocomotionTeleportDetectionState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n        this._myTeleportState = new PP.PlayerLocomotionTeleportTeleportState(this._myTeleportParams, this._myTeleportRuntimeParams, this._myLocomotionRuntimeParams);\r\n\r\n        this._myFSM = new PP.FSM();\r\n        //this._myFSM.setDebugLogActive(true, \"Locomotion Teleport\");\r\n\r\n        this._myFSM.addState(\"init\");\r\n        this._myFSM.addState(\"idle\", this._idleUpdate.bind(this));\r\n        this._myFSM.addState(\"detect\", this._myDetectionState);\r\n        this._myFSM.addState(\"teleport\", this._myTeleportState);\r\n\r\n        this._myFSM.addTransition(\"init\", \"idle\", \"start\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"detect\", \"detect\");\r\n        this._myFSM.addTransition(\"detect\", \"teleport\", \"teleport\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"cancel\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"done\");\r\n\r\n        this._myFSM.addTransition(\"idle\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"detect\", \"idle\", \"stop\");\r\n        this._myFSM.addTransition(\"teleport\", \"idle\", \"stop\", this._completeTeleport.bind(this));\r\n\r\n        this._myFSM.init(\"init\");\r\n        this._myFSM.perform(\"start\");\r\n    }\r\n\r\n    start() {\r\n        this._myGravitySpeed = 0;\r\n    }\r\n\r\n    stop() {\r\n        this._myFSM.perform(\"stop\");\r\n    }\r\n\r\n    canStop() {\r\n        return this._myFSM.isInState(\"idle\");\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLocomotionRuntimeParams.myTeleportJustPerformed = false;\r\n\r\n        this._myFSM.update(dt);\r\n\r\n        // no gravity if teleporting\r\n        if (this._myTeleportParams.myAdjustPositionEveryFrame || this._myTeleportParams.myGravityAcceleration != 0) {\r\n            this._applyGravity(dt);\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n        }\r\n    }\r\n\r\n    _idleUpdate(dt) {\r\n        if (this._startDetecting()) {\r\n            this._myFSM.perform(\"detect\");\r\n        }\r\n    }\r\n\r\n    _startDetecting() {\r\n        let startDetecting = false;\r\n\r\n        if (!PP.XRUtils.isSessionActive()) {\r\n            startDetecting = PP.myMouse.isButtonPressStart(PP.MouseButtonID.MIDDLE) && PP.myMouse.isTargetingRenderCanvas();\r\n        } else {\r\n            let axes = PP.myGamepads[this._myTeleportParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n\r\n            if (axes.vec2_length() <= this._myTeleportParams.myStickIdleThreshold) {\r\n                this._myStickIdleCharge = true;\r\n            }\r\n\r\n            if (this._myStickIdleCharge && axes[1] >= 0.75) {\r\n                this._myStickIdleCharge = false;\r\n                startDetecting = true;\r\n            }\r\n        }\r\n\r\n        return startDetecting;\r\n    }\r\n\r\n    _completeTeleport() {\r\n        this._myTeleportState.completeTeleport();\r\n    }\r\n};\r\n\r\nPP.PlayerLocomotionTeleport.prototype._applyGravity = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let gravityMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n    return function _applyGravity(dt) {\r\n        // if gravity is zero it's still important to move to remain snapped and gather proper surface data even when not teleporting\r\n\r\n        playerUp = this._myTeleportParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        this._myGravitySpeed += this._myTeleportParams.myGravityAcceleration * dt;\r\n        gravityMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, gravityMovement);\r\n\r\n        if (this._myLocomotionRuntimeParams.myIsFlying) {\r\n            gravityMovement.vec3_zero();\r\n        }\r\n\r\n        feetTransformQuat = this._myTeleportParams.myPlayerHeadManager.getTransformFeetQuat(feetTransformQuat);\r\n        PP.myCollisionCheck.move(gravityMovement, feetTransformQuat, this._myTeleportParams.myCollisionCheckParams, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n        if (!this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myVerticalMovementCanceled) {\r\n            this._myTeleportParams.myPlayerHeadManager.teleportPositionFeet(this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myNewPosition);\r\n        }\r\n\r\n        if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n            this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myGravitySpeed = 0;\r\n        }\r\n    };\r\n}();", "PP.CleanedPlayerLocomotion = class CleanedPlayerLocomotion {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myCollisionCheckParamsMovement = new PP.CollisionCheckParams();\r\n        this._setupCollisionCheckParamsMovement();\r\n        this._myCollisionCheckParamsTeleport = null;\r\n        this._setupCollisionCheckParamsTeleport();\r\n\r\n        this._myCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myMovementRuntimeParams = new PP.PlayerLocomotionMovementRuntimeParams();\r\n        this._myMovementRuntimeParams.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n        {\r\n            let params = new PP.PlayerHeadManagerParams();\r\n\r\n            params.mySessionChangeResyncEnabled = true;\r\n\r\n            params.myBlurEndResyncEnabled = true;\r\n            params.myBlurEndResyncRotation = true;\r\n\r\n            //params.myNextEnterSessionFloorHeight = 3;\r\n            params.myEnterSessionResyncHeight = false;\r\n            params.myExitSessionResyncHeight = false;\r\n            params.myExitSessionResyncVerticalAngle = true;\r\n            params.myExitSessionRemoveRightTilt = true;\r\n            params.myExitSessionAdjustMaxVerticalAngle = true;\r\n            params.myExitSessionMaxVerticalAngle = 90;\r\n\r\n            params.myHeightOffsetVRWithFloor = 0;\r\n            params.myHeightOffsetVRWithoutFloor = 1.75;\r\n            params.myHeightOffsetNonVR = 1.75;\r\n\r\n            params.myForeheadExtraHeight = this._myParams.myForeheadExtraHeight;\r\n\r\n            params.myFeetRotationKeepUp = true;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerHeadManager = new PP.PlayerHeadManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerTransformManagerParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n\r\n            params.myMovementCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n            params.myTeleportCollisionCheckParams = null;\r\n            params.myTeleportCollisionCheckParamsCopyFromMovement = true;\r\n            params.myTeleportCollisionCheckParamsCheck360 = true;\r\n\r\n            params.myHeadCollisionBlockLayerFlags.copy(params.myMovementCollisionCheckParams.myHorizontalBlockLayerFlags);\r\n            params.myHeadCollisionBlockLayerFlags.add(params.myMovementCollisionCheckParams.myVerticalBlockLayerFlags);\r\n            params.myHeadCollisionObjectsToIgnore.pp_copy(params.myMovementCollisionCheckParams.myHorizontalObjectsToIgnore);\r\n            let objectsEqualCallback = (first, second) => first.pp_equals(second);\r\n            for (let objectToIgnore of params.myMovementCollisionCheckParams.myVerticalObjectsToIgnore) {\r\n                params.myHeadCollisionObjectsToIgnore.pp_pushUnique(objectToIgnore, objectsEqualCallback);\r\n            }\r\n\r\n            params.myCollisionRuntimeParams = this._myCollisionRuntimeParams;\r\n\r\n            params.myHeadRadius = 0.15;\r\n\r\n            params.myIsMaxDistanceFromRealToSyncEnabled = true;\r\n            params.myMaxDistanceFromRealToSync = 100;\r\n\r\n            params.myIsFloatingValidIfVerticalMovement = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndRealOnGround = false;\r\n            params.myIsFloatingValidIfSteepGround = false;\r\n            params.myIsFloatingValidIfVerticalMovementAndSteepGround = false;\r\n            params.myIsFloatingValidIfRealOnGround = false;\r\n            params.myIsLeaningValidAboveDistance = true;\r\n            params.myLeaningValidDistance = 2;\r\n            params.myFloatingSplitCheckEnabled = true;\r\n            params.myFloatingSplitCheckMaxLength = 0.2;\r\n            params.myFloatingSplitCheckMaxSteps = 5;\r\n            params.myRealMovementAllowVerticalAdjustments = false;\r\n\r\n            params.myUpdateRealPositionValid = true;\r\n            params.myUpdatePositionValid = true;\r\n\r\n            params.myIsBodyCollidingWhenHeightBelowValue = null;\r\n            params.myIsBodyCollidingWhenHeightAboveValue = null;\r\n\r\n            params.myResetToValidOnEnterSession = true;\r\n            params.myResetToValidOnExitSession = true;\r\n\r\n            params.myAlwaysResetRealPositionNonVR = true;\r\n            params.myAlwaysResetRealRotationNonVR = true;\r\n            params.myAlwaysResetRealHeightNonVR = true;\r\n\r\n            params.myAlwaysResetRealPositionVR = false;\r\n            params.myAlwaysResetRealRotationVR = false;\r\n            params.myAlwaysResetRealHeightVR = false;\r\n\r\n            params.myNeverResetRealPositionNonVR = false;\r\n            params.myNeverResetRealRotationNonVR = true;\r\n            params.myNeverResetRealHeightNonVR = false;\r\n\r\n            params.myNeverResetRealPositionVR = false;\r\n            params.myNeverResetRealRotationVR = false;\r\n            params.myNeverResetRealHeightVR = true;\r\n\r\n            params.myResetRealOnMove = false;\r\n\r\n            params.myDebugActive = false;\r\n\r\n            this._myPlayerTransformManager = new PP.CleanedPlayerTransformManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerObscureManagerParams();\r\n\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myObscureObject = null;\r\n            params.myObscureMaterial = null;\r\n            params.myObscureRadius = 0.1;\r\n\r\n            params.myObscureFadeOutSeconds = 0.25;\r\n            params.myObscureFadeInSeconds = 0.25;\r\n\r\n            params.myObscureFadeEasingFunction = PP.EasingFunction.linear;\r\n            params.myObscureLevelRelativeDistanceEasingFunction = PP.EasingFunction.linear;\r\n\r\n            params.myDistanceToStartObscureWhenBodyColliding = 0.35;\r\n            params.myDistanceToStartObscureWhenHeadColliding = 0;\r\n            params.myDistanceToStartObscureWhenFloating = 0.35;\r\n            params.myDistanceToStartObscureWhenFar = 0.5;\r\n\r\n            params.myRelativeDistanceToMaxObscureWhenBodyColliding = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenHeadColliding = 0.1;\r\n            params.myRelativeDistanceToMaxObscureWhenFloating = 0.5;\r\n            params.myRelativeDistanceToMaxObscureWhenFar = 0.5;\r\n\r\n            this._myPlayerObscureManager = new PP.PlayerObscureManager(params);\r\n        }\r\n\r\n        {\r\n            let params = new PP.PlayerLocomotionRotateParams();\r\n\r\n            params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n            params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n            params.myMaxRotationSpeed = this._myParams.myMaxRotationSpeed;\r\n            params.myIsSnapTurn = this._myParams.myIsSnapTurn;\r\n            params.mySnapTurnOnlyVR = this._myParams.mySnapTurnOnlyVR;\r\n            params.mySnapTurnAngle = this._myParams.mySnapTurnAngle;\r\n\r\n            if (this._myParams.mySnapTurnSpeedDegrees > PP.LocomotionUtils.EPSILON_NUMBER) {\r\n                params.mySmoothSnapActive = true;\r\n                params.mySmoothSnapSpeedDegrees = this._myParams.mySnapTurnSpeedDegrees;\r\n            } else {\r\n                params.mySmoothSnapActive = false;\r\n            }\r\n\r\n            params.myRotationMinStickIntensityThreshold = 0.1;\r\n            params.mySnapTurnActivateThreshold = 0.5;\r\n            params.mySnapTurnResetThreshold = 0.4;\r\n\r\n            params.myClampVerticalAngle = true;\r\n            params.myMaxVerticalAngle = 90;\r\n\r\n            this._myPlayerLocomotionRotate = new PP.PlayerLocomotionRotate(params);\r\n\r\n            params.myHandedness = PP.InputUtils.getOppositeHandedness(this._myParams.myMainHand);\r\n        }\r\n\r\n        {\r\n            {\r\n                let params = new PP.PlayerLocomotionSmoothParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsMovement;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myMaxSpeed = this._myParams.myMaxSpeed;\r\n\r\n                params.myMovementMinStickIntensityThreshold = 0.1;\r\n\r\n                params.myFlyEnabled = this._myParams.myFlyEnabled;\r\n                params.myMinAngleToFlyUpNonVR = this._myParams.myMinAngleToFlyUpNonVR;\r\n                params.myMinAngleToFlyDownNonVR = this._myParams.myMinAngleToFlyDownNonVR;\r\n                params.myMinAngleToFlyUpVR = this._myParams.myMinAngleToFlyUpVR;\r\n                params.myMinAngleToFlyDownVR = this._myParams.myMinAngleToFlyDownVR;\r\n                params.myMinAngleToFlyRight = this._myParams.myMinAngleToFlyRight;\r\n\r\n                params.myGravityAcceleration = -20;\r\n\r\n                params.myVRDirectionReferenceType = this._myParams.myVRDirectionReferenceType;\r\n                params.myVRDirectionReferenceObject = this._myParams.myVRDirectionReferenceObject;\r\n\r\n                params.myMoveThroughCollisionShortcutEnabled = this._myParams.myMoveThroughCollisionShortcutEnabled;\r\n                params.myMoveHeadShortcutEnabled = this._myParams.myMoveHeadShortcutEnabled;\r\n\r\n                this._myPlayerLocomotionSmooth = new PP.CleanedPlayerLocomotionSmooth(params, this._myMovementRuntimeParams);\r\n            }\r\n\r\n            {\r\n                let params = new PP.PlayerLocomotionTeleportParams();\r\n\r\n                params.myPlayerHeadManager = this._myPlayerHeadManager;\r\n                params.myPlayerTransformManager = this._myPlayerTransformManager;\r\n\r\n                params.myCollisionCheckParams = this._myCollisionCheckParamsTeleport;\r\n\r\n                params.myHandedness = this._myParams.myMainHand;\r\n\r\n                params.myDetectionParams.myMaxDistance = 3;\r\n                params.myDetectionParams.myMaxHeightDifference = 4;\r\n                params.myDetectionParams.myGroundAngleToIgnoreUpward = this._myCollisionCheckParamsMovement.myGroundAngleToIgnore;\r\n                params.myDetectionParams.myMustBeOnGround = true;\r\n\r\n                params.myDetectionParams.myTeleportBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n                params.myDetectionParams.myTeleportFloorLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n\r\n                params.myDetectionParams.myTeleportFeetPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadPositionMustBeVisible = false;\r\n                params.myDetectionParams.myTeleportHeadOrFeetPositionMustBeVisible = true;\r\n\r\n                params.myDetectionParams.myTeleportParableStartReferenceObject = this._myParams.myTeleportParableStartReferenceObject;\r\n\r\n                params.myDetectionParams.myVisibilityBlockLayerFlags.copy(params.myDetectionParams.myTeleportBlockLayerFlags);\r\n\r\n                params.myVisualizerParams.myTeleportPositionObject = this._myParams.myTeleportPositionObject;\r\n\r\n                params.myPerformTeleportAsMovement = false;\r\n                params.myTeleportAsMovementRemoveVerticalMovement = true;\r\n                params.myTeleportAsMovementExtraVerticalMovementPerMeter = -2;\r\n\r\n                params.myGravityAcceleration = 0;\r\n\r\n                params.myDebugActive = false;\r\n                params.myDebugDetectActive = true;\r\n                params.myDebugShowActive = true;\r\n                params.myDebugVisibilityActive = false;\r\n\r\n                this._myPlayerLocomotionTeleport = new PP.PlayerLocomotionTeleport(params, this._myMovementRuntimeParams);\r\n            }\r\n        }\r\n\r\n        this._setupLocomotionMovementFSM();\r\n\r\n        this._myIdle = false;\r\n\r\n        this._myStarted = false;\r\n        this._myActive = true;\r\n    }\r\n\r\n    start() {\r\n        this._fixAlmostUp();\r\n\r\n        this._myPlayerHeadManager.start();\r\n        this._myPlayerTransformManager.start();\r\n\r\n        this._myPlayerObscureManager.start();\r\n\r\n        this._myPlayerLocomotionRotate.start();\r\n\r\n        this._myLocomotionMovementFSM.perform(\"start\");\r\n\r\n        this._myStarted = true;\r\n\r\n        let currentActive = this._myActive\r\n        this._myActive = !this._myActive;\r\n        this.setActive(currentActive);\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myActive != active) {\r\n            this._myActive = active;\r\n\r\n            if (this._myStarted) {\r\n                if (this._myActive) {\r\n                    this._myPlayerObscureManager.start();\r\n                    if (!this._myIdle) {\r\n                        this._myLocomotionMovementFSM.perform(\"start\");\r\n                    }\r\n                } else {\r\n                    this._myLocomotionMovementFSM.perform(\"idle\");\r\n                    this._myPlayerObscureManager.stop();\r\n                }\r\n            }\r\n\r\n            this._myPlayerHeadManager.setActive(this._myActive);\r\n            this._myPlayerTransformManager.setActive(this._myActive);\r\n        }\r\n    }\r\n\r\n    isStarted() {\r\n        return this._myStarted;\r\n    }\r\n\r\n    canStop() {\r\n        let canStop = false;\r\n\r\n        if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n            canStop = true;\r\n        } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n            canStop = true;\r\n        }\r\n\r\n        return canStop;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myPlayerHeadManager.update(dt);\r\n        this._myPlayerTransformManager.update(dt);\r\n\r\n        if (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressEnd(2)) {\r\n            if (this._myLocomotionMovementFSM.isInState(\"smooth\") && this._myPlayerLocomotionSmooth.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            } else if (this._myLocomotionMovementFSM.isInState(\"teleport\") && this._myPlayerLocomotionTeleport.canStop()) {\r\n                this._myLocomotionMovementFSM.perform(\"next\");\r\n            }\r\n        }\r\n\r\n        if (this._myPlayerHeadManager.isSynced()) {\r\n\r\n            this._updateCollisionHeight();\r\n\r\n            if (!this._myIdle) {\r\n                this._myPlayerLocomotionRotate.update(dt);\r\n                this._myLocomotionMovementFSM.update(dt);\r\n            }\r\n        }\r\n\r\n        this._myPlayerObscureManager.update(dt);\r\n    }\r\n\r\n    setIdle(idle) {\r\n        this._myIdle = idle;\r\n\r\n        if (idle) {\r\n            this._myLocomotionMovementFSM.perform(\"idle\");\r\n        } else {\r\n            this._myLocomotionMovementFSM.perform(\"start\");\r\n        }\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        this._myCollisionCheckParamsMovement.myHeight = this._myPlayerHeadManager.getHeightHead();\r\n        if (this._myCollisionCheckParamsMovement.myHeight <= 0.000001) {\r\n            this._myCollisionCheckParamsMovement.myHeight = 0;\r\n        }\r\n        this._myCollisionCheckParamsTeleport.myHeight = this._myCollisionCheckParamsMovement.myHeight;\r\n    }\r\n\r\n    _setupCollisionCheckParamsMovement() {\r\n        let simplifiedParams = new PP.CharacterColliderSetupSimplifiedCreationParams();\r\n\r\n        simplifiedParams.myHeight = 1.75;\r\n        simplifiedParams.myRadius = this._myParams.myCharacterRadius;\r\n\r\n        simplifiedParams.myAccuracyLevel = PP.CharacterColliderSetupSimplifiedCreationAccuracyLevel.HIGH;\r\n\r\n        simplifiedParams.myIsPlayer = true;\r\n\r\n        simplifiedParams.myCheckOnlyFeet = false;\r\n\r\n        simplifiedParams.myAverageSpeed = this._myParams.myMaxSpeed;\r\n\r\n        simplifiedParams.myCanFly = this._myParams.myFlyEnabled;\r\n\r\n        simplifiedParams.myShouldSlideAgainstWall = true;\r\n\r\n        simplifiedParams.myCollectGroundInfo = true;\r\n        simplifiedParams.myShouldSnapOnGround = true;\r\n        simplifiedParams.myMaxDistanceToSnapOnGround = 0.1;\r\n        simplifiedParams.myMaxWalkableGroundAngle = 30;\r\n        simplifiedParams.myMaxWalkableGroundStepHeight = 0.1;\r\n        simplifiedParams.myShouldNotFallFromEdges = false;\r\n\r\n        simplifiedParams.myHorizontalCheckBlockLayerFlags.copy(this._myParams.myPhysicsBlockLayerFlags);\r\n        let physXComponents = PP.myPlayerObjects.myPlayer.pp_getComponentsHierarchy(\"physx\");\r\n        for (let physXComponent of physXComponents) {\r\n            simplifiedParams.myHorizontalCheckObjectsToIgnore.pp_pushUnique(physXComponent.object, (first, second) => first.pp_equals(second));\r\n        }\r\n        simplifiedParams.myVerticalCheckBlockLayerFlags.copy(simplifiedParams.myHorizontalCheckBlockLayerFlags);\r\n        simplifiedParams.myVerticalCheckObjectsToIgnore.pp_copy(simplifiedParams.myHorizontalCheckObjectsToIgnore);\r\n\r\n        simplifiedParams.myHorizontalCheckDebugActive = false;\r\n        simplifiedParams.myVerticalCheckDebugActive = false;\r\n\r\n        let colliderSetup = PP.CharacterColliderUtils.createCharacterColliderSetupSimplified(simplifiedParams);\r\n\r\n        this._myCollisionCheckParamsMovement = PP.CollisionCheckBridge.convertCharacterColliderSetupToCollisionCheckParams(colliderSetup, this._myCollisionCheckParamsMovement);\r\n    }\r\n\r\n    _setupCollisionCheckParamsTeleport() {\r\n        this._myCollisionCheckParamsTeleport = PP.CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myCollisionCheckParamsMovement);\r\n\r\n        // increased so to let teleport on steep slopes from above (from below is fixed through detection myGroundAngleToIgnoreUpward)\r\n        this._myCollisionCheckParamsTeleport.myGroundAngleToIgnore = 61;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnIgnorableGroundAngle = true;\r\n        this._myCollisionCheckParamsTeleport.myTeleportMustBeOnGround = true;\r\n\r\n        /*\r\n        this._myCollisionCheckParamsTeleport.myExtraTeleportCheckCallback = function (\r\n            offsetTeleportPosition, endPosition, feetPosition, transformUp, transformForward, height,\r\n            collisionCheckParams, prevCollisionRuntimeParams, collisionRuntimeParams, newFeetPosition\r\n\r\n        ) {\r\n            let isTeleportingUpward = endPosition.vec3_isFartherAlongAxis(feetPosition, transformUp);\r\n            if (isTeleportingUpward) {\r\n                collisionRuntimeParams.myTeleportCanceled = collisionRuntimeParams.myGroundAngle > 30 + 0.0001;\r\n                console.error(collisionRuntimeParams.myTeleportCanceled);\r\n            }\r\n\r\n            return newFeetPosition;\r\n        }*/\r\n\r\n        // this is needed for when u want to perform the teleport as a movement\r\n        // maybe this should be another set of collsion check params copied from the smooth ones?\r\n        // when you teleport as move, u check with the teleport for the position, and this other params for the move, so that u can use a smaller\r\n        // cone, and sliding if desired\r\n        // if nothing is specified it's copied from the teleport and if greater than 90 cone is tuned down, and also the below settings are applied\r\n\r\n        // you could also do this if u want to perform the teleport as movement, instead of using the smooth\r\n        // but this will make even the final teleport check be halved\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeAngle = 90;\r\n        //this._myCollisionCheckParamsTeleport.myHalfConeSliceAmount = 3;\r\n        //this._myCollisionCheckParamsTeleport.myCheckHorizontalFixedForwardEnabled = false;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementEnabled = true;\r\n        //this._myCollisionCheckParamsTeleport.mySplitMovementMaxLength = 0.2;\r\n\r\n        //this._myCollisionCheckParamsTeleport.myDebugActive = true;\r\n    }\r\n\r\n    _fixAlmostUp() {\r\n        // get rotation on y and adjust if it's slightly tilted when it's almsot 0,1,0\r\n\r\n        let defaultUp = PP.vec3_create(0, 1, 0);\r\n        let angleWithDefaultUp = PP.myPlayerObjects.myPlayer.pp_getUp().vec3_angle(defaultUp);\r\n        if (angleWithDefaultUp < 1) {\r\n            let forward = PP.myPlayerObjects.myPlayer.pp_getForward();\r\n            let flatForward = forward.vec3_clone();\r\n            flatForward[1] = 0;\r\n\r\n            let defaultForward = PP.vec3_create(0, 0, 1);\r\n            let angleWithDefaultForward = defaultForward.vec3_angleSigned(flatForward, defaultUp);\r\n\r\n            PP.myPlayerObjects.myPlayer.pp_resetRotation();\r\n            PP.myPlayerObjects.myPlayer.pp_rotateAxis(angleWithDefaultForward, defaultUp);\r\n        }\r\n    }\r\n\r\n    _setupLocomotionMovementFSM() {\r\n        this._myLocomotionMovementFSM = new PP.FSM();\r\n        this._myLocomotionMovementFSM.setDebugLogActive(true, \"Locomotion Movement\");\r\n\r\n        this._myLocomotionMovementFSM.addState(\"init\");\r\n        this._myLocomotionMovementFSM.addState(\"smooth\", (dt) => this._myPlayerLocomotionSmooth.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"teleport\", (dt) => this._myPlayerLocomotionTeleport.update(dt));\r\n        this._myLocomotionMovementFSM.addState(\"idleSmooth\");\r\n        this._myLocomotionMovementFSM.addState(\"idleTeleport\");\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"init\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"teleport\", \"next\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"smooth\", \"next\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"smooth\", \"idleSmooth\", \"idle\", function () {\r\n            this._myPlayerLocomotionSmooth.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"teleport\", \"idleTeleport\", \"idle\", function () {\r\n            this._myPlayerLocomotionTeleport.stop();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleSmooth\", \"smooth\", \"start\", function () {\r\n            this._myPlayerLocomotionSmooth.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.addTransition(\"idleTeleport\", \"teleport\", \"start\", function () {\r\n            this._myPlayerLocomotionTeleport.start();\r\n        }.bind(this));\r\n\r\n        this._myLocomotionMovementFSM.init(\"init\");\r\n    }\r\n};", "PP.CleanedPlayerLocomotionSmooth = class CleanedPlayerLocomotionSmooth extends PP.PlayerLocomotionMovement {\r\n\r\n    constructor(params, locomotionRuntimeParams) {\r\n        super(locomotionRuntimeParams);\r\n\r\n        this._myParams = params;\r\n\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n\r\n        this._myStickIdleTimer = new PP.Timer(0.25, false);\r\n\r\n        let directionConverterNonVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterNonVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownNonVR;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterNonVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        let directionConverterVRParams = new PP.Direction2DTo3DConverterParams();\r\n        directionConverterVRParams.myAutoUpdateFlyForward = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myAutoUpdateFlyRight = this._myParams.myFlyEnabled;\r\n        directionConverterVRParams.myMinAngleToFlyForwardUp = this._myParams.myMinAngleToFlyUpVR;\r\n        directionConverterVRParams.myMinAngleToFlyForwardDown = this._myParams.myMinAngleToFlyDownVR;\r\n        directionConverterVRParams.myMinAngleToFlyRightUp = this._myParams.myMinAngleToFlyRight;\r\n        directionConverterVRParams.myMinAngleToFlyRightDown = this._myParams.myMinAngleToFlyRight;\r\n\r\n        this._myDirectionConverterNonVR = new PP.Direction2DTo3DConverter(directionConverterNonVRParams);\r\n        this._myDirectionConverterVR = new PP.Direction2DTo3DConverter(directionConverterVRParams);\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myLocomotionRuntimeParams.myIsFlying = false;\r\n\r\n        this._myGravitySpeed = 0;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n};\r\n\r\nPP.CleanedPlayerLocomotionSmooth.prototype.update = function () {\r\n    let playerUp = PP.vec3_create();\r\n    let headMovement = PP.vec3_create();\r\n    let direction = PP.vec3_create();\r\n    let directionOnUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let feetTransformQuat = PP.quat2_create();\r\n\r\n    let directionReferenceTransformQuat = PP.quat2_create();\r\n    return function update(dt) {\r\n        playerUp = this._myParams.myPlayerHeadManager.getPlayer().pp_getUp(playerUp);\r\n\r\n        headMovement.vec3_zero();\r\n\r\n        let axes = PP.myGamepads[this._myParams.myHandedness].getAxesInfo(PP.GamepadAxesID.THUMBSTICK).getAxes();\r\n        axes[0] = Math.abs(axes[0]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[0] : 0;\r\n        axes[1] = Math.abs(axes[1]) > this._myParams.myMovementMinStickIntensityThreshold ? axes[1] : 0;\r\n\r\n        let horizontalMovement = false;\r\n        if (!axes.vec2_isZero()) {\r\n            this._myStickIdleTimer.start();\r\n\r\n            direction = this._myCurrentDirectionConverter.convertTransformQuat(axes, this._myDirectionReference.pp_getTransformQuat(directionReferenceTransformQuat), playerUp, direction);\r\n\r\n            if (!direction.vec3_isZero()) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = this._myLocomotionRuntimeParams.myIsFlying || direction.vec3_componentAlongAxis(playerUp, directionOnUp).vec3_length() > 0.000001;\r\n                if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                    direction = direction.vec3_removeComponentAlongAxis(playerUp, direction);\r\n                }\r\n\r\n                let movementIntensity = axes.vec2_length();\r\n                let speed = Math.pp_lerp(0, this._myParams.myMaxSpeed, movementIntensity);\r\n\r\n                headMovement = direction.vec3_scale(speed * dt, headMovement);\r\n\r\n                horizontalMovement = true;\r\n            }\r\n        } else {\r\n            if (this._myStickIdleTimer.isRunning()) {\r\n                this._myStickIdleTimer.update(dt);\r\n                if (this._myStickIdleTimer.isDone()) {\r\n                    this._myCurrentDirectionConverter.resetFly();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myFlyEnabled) {\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            } else if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressed()) {\r\n                verticalMovement = playerUp.vec3_scale(-this._myParams.myMaxSpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n                this._myLocomotionRuntimeParams.myIsFlying = true;\r\n            }\r\n\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressEnd(2)) {\r\n                this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myMoveHeadShortcutEnabled && PP.myGamepads[PP.InputUtils.getOppositeHandedness(this._myParams.myHandedness)].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.getPlayerHeadManager().moveFeet(headMovement);\r\n        } else if (this._myParams.myMoveThroughCollisionShortcutEnabled && PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressed()) {\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams, true);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n        } else {\r\n            if (!this._myLocomotionRuntimeParams.myIsFlying) {\r\n                this._myGravitySpeed += this._myParams.myGravityAcceleration * dt;\r\n                verticalMovement = playerUp.vec3_scale(this._myGravitySpeed * dt, verticalMovement);\r\n                headMovement = headMovement.vec3_add(verticalMovement, headMovement);\r\n            }\r\n\r\n            if (PP.myGamepads[this._myParams.myHandedness].getButtonInfo(PP.GamepadButtonID.SQUEEZE).isPressed()) {\r\n                // headMovement.vec3_zero();\r\n            }\r\n\r\n            feetTransformQuat = this._myParams.myPlayerTransformManager.getTransformQuat(feetTransformQuat);\r\n\r\n            this._myParams.myPlayerTransformManager.move(headMovement, this._myLocomotionRuntimeParams.myCollisionRuntimeParams);\r\n            if (horizontalMovement) {\r\n                this._myParams.myPlayerTransformManager.resetReal(true, false, false);\r\n                this._myParams.myPlayerTransformManager.resetHeadToReal();\r\n            }\r\n\r\n            if (this._myGravitySpeed > 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnCeiling ||\r\n                this._myGravitySpeed < 0 && this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n                this._myGravitySpeed = 0;\r\n            }\r\n        }\r\n\r\n        if (this._myLocomotionRuntimeParams.myCollisionRuntimeParams.myIsOnGround) {\r\n            this._myLocomotionRuntimeParams.myIsFlying = false;\r\n            this._myCurrentDirectionConverter.resetFly();\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerLocomotionSmooth.prototype._onXRSessionStart = function () {\r\n    return function _onXRSessionStart(session) {\r\n        switch (this._myParams.myVRDirectionReferenceType) {\r\n            case 0:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n                break;\r\n            case 1:\r\n                this._myDirectionReference = PP.myPlayerObjects.myHands[this._myParams.myHandedness];\r\n                break;\r\n            case 2:\r\n                this._myDirectionReference = this._myParams.myVRDirectionReferenceObject;\r\n                break;\r\n        }\r\n\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterVR;\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerLocomotionSmooth.prototype._onXRSessionEnd = function () {\r\n    let playerUp = PP.vec3_create();\r\n    return function _onXRSessionEnd(session) {\r\n        this._myDirectionReference = PP.myPlayerObjects.myHead;\r\n        this._myCurrentDirectionConverter = this._myDirectionConverterNonVR;\r\n\r\n        this._myCurrentDirectionConverter.resetFly();\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.CleanedPlayerLocomotionSmooth.prototype, \"update\", { enumerable: false });\r\nObject.defineProperty(PP.CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionStart\", { enumerable: false });\r\nObject.defineProperty(PP.CleanedPlayerLocomotionSmooth.prototype, \"_onXRSessionEnd\", { enumerable: false });", "PP.CleanedPlayerTransformManager = class CleanedPlayerTransformManager {\r\n    constructor(params) {\r\n        this._myParams = params;\r\n\r\n        this._myRealMovementCollisionCheckParams = null;\r\n        this._generateRealMovementParamsFromMovementParams();\r\n\r\n        this._myCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n        this._myRealCollisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._myHeadCollisionCheckParams = null;\r\n        this._setupHeadCollisionCheckParams();\r\n\r\n        this._myValidPosition = PP.vec3_create();\r\n        this._myValidRotationQuat = new PP.quat_create();\r\n        this._myValidHeight = 0;\r\n        this._myValidPositionHead = PP.vec3_create();\r\n\r\n        this._myIsBodyColliding = false;\r\n        this._myIsHeadColliding = false;\r\n        this._myIsLeaning = false;\r\n        this._myIsHopping = false;\r\n        this._myIsFar = false;\r\n\r\n        this._myLastValidMovementDirection = PP.vec3_create();\r\n        this._myIsRealPositionValid = false;\r\n        this._myIsPositionValid = false;\r\n\r\n        this._myResetRealOnSynced = false;\r\n\r\n        this._myActive = true;\r\n    }\r\n\r\n    start() {\r\n        this.resetToReal(true);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setActive(active) {\r\n        this._myActive = active;\r\n    }\r\n\r\n    // update should be before to check the new valid transform and if the head new transform is fine\r\n    // then update movements, so that they will use the proper transform\r\n    // pre/post update?\r\n    // for sliding if previous frame no horizontal movement then reset sliding on pre update\r\n    // in generale capire come fare per risolvere i problemi quando c'\u00E8 un move solo verticale che sputtana i dati dello sliding precedente\r\n    // che servono per far slidare bene anche dopo, magari un flag per dire non aggiornare le cose relative al movimento orizzontale\r\n    // o un move check solo verticale\r\n    update(dt) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        // collision runtime will copy the result, so that u can use that for later reference like if it was sliding\r\n        // maybe there should be a way to sum all the things happened for proper movement in a summary runtime\r\n        // or maybe the move should be done once per frame, or at least in theory\r\n\r\n        // collision check and move\r\n\r\n        // move should move the valid transform, but also move the player object so that they head, even is colliding is dragged with it\r\n        // also teleport, should get the difference from previous and move the player object, this will keep the relative position head-to-valid\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportPosition(position, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n        // use current valid rotation\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    teleportTransformQuat(transformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        // collision check and teleport, if force teleport teleport in any case\r\n\r\n        // implemented outside class definition\r\n    }\r\n\r\n    rotateQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setRotationQuat(rotationQuat) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    setHeight(height, forceSet = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayer() {\r\n        return this._myParams.myPlayerHeadManager.getPlayer();\r\n    }\r\n\r\n    getHead() {\r\n        return this._myParams.myPlayerHeadManager.getHead();\r\n    }\r\n\r\n    getTransformQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPosition(this._myValidPosition), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getPosition(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPosition);\r\n    }\r\n\r\n    getRotationQuat(outRotation = PP.quat_create()) {\r\n        return outRotation.quat_copy(this._myValidRotationQuat);\r\n    }\r\n\r\n    getPositionHead(outPosition = PP.vec3_create()) {\r\n        return outPosition.vec3_copy(this._myValidPositionHead);\r\n    }\r\n\r\n    getTransformHeadQuat(outTransformQuat = PP.quat2_create()) {\r\n        return outTransformQuat.quat2_setPositionRotationQuat(this.getPositionHead(this._myValidPositionHead), this.getRotationQuat(this._myValidRotationQuat));\r\n    }\r\n\r\n    getHeight() {\r\n        return this._myValidHeight;\r\n    }\r\n\r\n    getTransformRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformFeetQuat(outTransformQuat);\r\n    }\r\n\r\n    getTransformHeadRealQuat(outTransformQuat = PP.quat2_create()) {\r\n        return this.getPlayerHeadManager().getTransformHeadQuat(outTransformQuat);\r\n    }\r\n\r\n    getPositionReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionFeet(outPosition);\r\n    }\r\n\r\n    getPositionHeadReal(outPosition = PP.vec3_create()) {\r\n        return this.getPlayerHeadManager().getPositionHead(outPosition);\r\n    }\r\n\r\n    getRotationRealQuat(outRotation = PP.quat_create()) {\r\n        return this.getPlayerHeadManager().getRotationFeetQuat(outRotation);\r\n    }\r\n\r\n    getHeightReal() {\r\n        return this._myParams.myPlayerHeadManager.getHeightHead();\r\n    }\r\n\r\n    isSynced(syncFlagMap = null) {\r\n        let isBodyColliding = this.isBodyColliding() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING));\r\n        let isHeadColliding = this.isHeadColliding() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING));\r\n        let isFar = this.isFar() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.FAR));\r\n        let isFloating = this.isFloating() && (syncFlagMap == null || syncFlagMap.get(PP.PlayerTransformManagerSyncFlag.FLOATING));\r\n        return !isBodyColliding && !isHeadColliding && !isFar && !isFloating;\r\n    }\r\n\r\n    resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    updateReal() {\r\n        this._updateReal(0, false);\r\n    }\r\n\r\n    resetToReal(updateRealFlags = false) {\r\n        this._myValidPosition = this.getPositionReal(this._myValidPosition);\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n        this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n        this._myValidHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    }\r\n\r\n    resetHeadToReal() {\r\n        this._myValidPositionHead = this.getPositionHeadReal(this._myValidPositionHead);\r\n    }\r\n\r\n    isBodyColliding() {\r\n        return this._myIsBodyColliding;\r\n    }\r\n\r\n    isHeadColliding() {\r\n        return this._myIsHeadColliding;\r\n    }\r\n\r\n    isFloating() {\r\n        return this.isLeaning() || this.isHopping();\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isLeaning() {\r\n        return this._myIsLeaning;\r\n    }\r\n\r\n    isHopping() {\r\n        return this._myIsHopping;\r\n    }\r\n\r\n    isFar() {\r\n        return this._myIsFar;\r\n    }\r\n\r\n    getDistanceToReal() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getDistanceToRealHead() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getPlayerHeadManager() {\r\n        return this._myParams.myPlayerHeadManager;\r\n    }\r\n\r\n    getParams() {\r\n        return this._myParams;\r\n    }\r\n\r\n    getMovementCollisionCheckParams() {\r\n        return this._myParams.myMovementCollisionCheckParams;\r\n    }\r\n\r\n    getTeleportCollisionCheckParams() {\r\n        return this._myParams.myTeleportCollisionCheckParams;\r\n    }\r\n\r\n    collisionCheckParamsUpdated() {\r\n        if (this._myParams.myTeleportCollisionCheckParamsCopyFromMovement) {\r\n            this._generateTeleportParamsFromMovementParams();\r\n        }\r\n\r\n        this._generateRealMovementParamsFromMovementParams();\r\n    }\r\n\r\n    isPositionValid() {\r\n        return this._myIsPositionValid;\r\n    }\r\n\r\n    isRealPositionValid() {\r\n        return this._myIsRealPositionValid;\r\n    }\r\n\r\n    getCollisionRuntimeParams() {\r\n        return this._myCollisionRuntimeParams;\r\n    }\r\n\r\n    getRealCollisionRuntimeParams() {\r\n        return this._myRealCollisionRuntimeParams;\r\n    }\r\n\r\n    _updateCollisionHeight() {\r\n        let validHeight = this.getHeight();\r\n        let realHeight = Math.pp_clamp(this.getHeightReal(), this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n\r\n        this._myParams.myMovementCollisionCheckParams.myHeight = validHeight;\r\n        this._myParams.myTeleportCollisionCheckParams.myHeight = validHeight;\r\n\r\n        this._myRealMovementCollisionCheckParams.myHeight = realHeight;\r\n    }\r\n\r\n    _setupHeadCollisionCheckParams() {\r\n        this._myHeadCollisionCheckParams = new PP.CollisionCheckParams();\r\n        let params = this._myHeadCollisionCheckParams;\r\n\r\n        params.myRadius = this._myParams.myHeadRadius;\r\n        params.myDistanceFromFeetToIgnore = 0;\r\n        params.myDistanceFromHeadToIgnore = 0;\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.myHorizontalMovementCheckEnabled = true;\r\n        params.myHorizontalMovementRadialStepAmount = 1;\r\n        params.myHorizontalMovementCheckDiagonalOutward = true;\r\n        params.myHorizontalMovementCheckDiagonalInward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardOutward = true;\r\n        params.myHorizontalMovementCheckVerticalDiagonalUpwardInward = true;\r\n\r\n        params.myHorizontalPositionCheckEnabled = true;\r\n        params.myHalfConeAngle = 180;\r\n        params.myHalfConeSliceAmount = 3;\r\n        params.myCheckConeBorder = true;\r\n        params.myCheckConeRay = true;\r\n        params.myHorizontalPositionCheckVerticalIgnoreHitsInsideCollision = false;\r\n        params.myHorizontalPositionCheckVerticalDirectionType = 0;\r\n\r\n        params.myHeight = params.myRadius; // on purpose the height \"radius\" is half, to avoid hitting before with head than body collision (through height)\r\n        params.myPositionOffsetLocal.vec3_set(0, -params.myRadius / 2, 0)\r\n\r\n        params.myCheckHeight = true;\r\n        params.myCheckHeightVerticalMovement = true;\r\n        params.myCheckHeightVerticalPosition = true;\r\n        params.myHeightCheckStepAmountMovement = 2;\r\n        params.myHeightCheckStepAmountPosition = 2;\r\n        params.myCheckHeightTopMovement = true;\r\n        params.myCheckHeightTopPosition = true;\r\n        params.myCheckVerticalStraight = true;\r\n\r\n        params.myCheckVerticalFixedForwardEnabled = true;\r\n        params.myCheckVerticalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myCheckHorizontalFixedForwardEnabled = true;\r\n        params.myCheckHorizontalFixedForward = PP.vec3_create(0, 0, 1);\r\n\r\n        params.myVerticalMovementCheckEnabled = true;\r\n        params.myVerticalPositionCheckEnabled = true;\r\n\r\n        params.myGroundCircumferenceAddCenter = true;\r\n        params.myGroundCircumferenceSliceAmount = 6;\r\n        params.myGroundCircumferenceStepAmount = 2;\r\n        params.myGroundCircumferenceRotationPerStep = 30;\r\n        params.myFeetRadius = params.myRadius;\r\n\r\n        params.myHorizontalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myHorizontalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n        params.myVerticalBlockLayerFlags.copy(this._myParams.myHeadCollisionBlockLayerFlags);\r\n        params.myVerticalObjectsToIgnore.pp_copy(this._myParams.myHeadCollisionObjectsToIgnore);\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = true;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = false;\r\n        params.myDebugCeilingInfoActive = false;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _generateTeleportParamsFromMovementParams() {\r\n        if (this._myParams.myTeleportCollisionCheckParams == null) {\r\n            this._myParams.myTeleportCollisionCheckParams = new PP.CollisionCheckParams();\r\n        }\r\n\r\n        if (this._myParams.myTeleportCollisionCheckParamsCheck360) {\r\n            this._myParams.myTeleportCollisionCheckParams = PP.CollisionCheckUtils.generate360TeleportParamsFromMovementParams(this._myParams.myMovementCollisionCheckParams, this._myParams.myTeleportCollisionCheckParams);\r\n        } else {\r\n            this._myParams.myTeleportCollisionCheckParams.copy(this._myParams.myMovementCollisionCheckParams);\r\n        }\r\n    }\r\n\r\n    _generateRealMovementParamsFromMovementParams() {\r\n        if (this._myRealMovementCollisionCheckParams == null) {\r\n            this._myRealMovementCollisionCheckParams = new PP.CollisionCheckParams();\r\n        }\r\n\r\n        let params = this._myRealMovementCollisionCheckParams;\r\n        params.copy(this._myParams.myMovementCollisionCheckParams);\r\n\r\n        params.mySplitMovementEnabled = true;\r\n        params.mySplitMovementMaxLength = 0.5;\r\n        params.mySplitMovementMaxStepsEnabled = true;\r\n        params.mySplitMovementMaxSteps = 2;\r\n        params.mySplitMovementStopWhenHorizontalMovementCanceled = true;\r\n        params.mySplitMovementStopWhenVerticalMovementCanceled = true;\r\n\r\n        params.mySlidingEnabled = false;\r\n\r\n        if (!this._myParams.myRealMovementAllowVerticalAdjustments) {\r\n            params.mySnapOnGroundEnabled = false;\r\n            params.mySnapOnCeilingEnabled = false;\r\n            params.myGroundPopOutEnabled = false;\r\n            params.myCeilingPopOutEnabled = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithGroundAngleUphill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleDownhill = false;\r\n            params.myAdjustVerticalMovementWithCeilingAngleUphill = false;\r\n            params.myAdjustHorizontalMovementWithGroundAngleDownhill = false;\r\n            params.myAdjustHorizontalMovementWithCeilingAngleDownhill = false;\r\n            params.myVerticalMovementReduceEnabled = false;\r\n        }\r\n\r\n        //params.myHorizontalMovementGroundAngleIgnoreHeight = 0.1 * 3;\r\n        //params.myHorizontalMovementCeilingAngleIgnoreHeight = 0.1 * 3;\r\n\r\n        params.myIsOnGroundIfInsideHit = true;\r\n\r\n        params.myDebugActive = false;\r\n\r\n        params.myDebugHorizontalMovementActive = false;\r\n        params.myDebugHorizontalPositionActive = false;\r\n        params.myDebugVerticalMovementActive = false;\r\n        params.myDebugVerticalPositionActive = false;\r\n        params.myDebugSlidingActive = false;\r\n        params.myDebugGroundInfoActive = true;\r\n        params.myDebugCeilingInfoActive = true;\r\n        params.myDebugRuntimeParamsActive = false;\r\n        params.myDebugMovementActive = false;\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnEnterSession && !manualStart) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        if (this._myActive) {\r\n            if (this._myParams.myResetToValidOnExitSession) {\r\n                this._myResetRealOnSynced = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _debugUpdate(dt) {\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPosition, PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLineEnd(0, this._myValidPosition, this.getPositionReal(), PP.vec4_create(1, 0, 0, 1), 0.05);\r\n        PP.myDebugVisualManager.drawLine(0, this._myValidPosition, this._myValidRotationQuat.quat_getForward(), 0.15, PP.vec4_create(0, 1, 0, 1), 0.025);\r\n\r\n        PP.myDebugVisualManager.drawPoint(0, this._myValidPositionHead, PP.vec4_create(1, 1, 0, 1), 0.05);\r\n    }\r\n};\r\n\r\nPP.CleanedPlayerTransformManager.prototype.getDistanceToReal = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToReal() {\r\n        realPosition = this.getPositionReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPosition());\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.getDistanceToRealHead = function () {\r\n    let realPosition = PP.vec3_create();\r\n    return function getDistanceToRealHead() {\r\n        realPosition = this.getPositionHeadReal(realPosition);\r\n        return realPosition.vec3_distance(this.getPositionHead());\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.resetReal = function () {\r\n    let realUp = PP.vec3_create();\r\n    let validUp = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function resetReal(resetPosition = true, resetRotation = true, resetHeight = true, updateRealFlags = false) {\r\n        let playerHeadManager = this.getPlayerHeadManager();\r\n\r\n        if (resetPosition) {\r\n            playerHeadManager.teleportPositionFeet(this.getPosition(position));\r\n        }\r\n\r\n        realUp = this.getPlayerHeadManager().getRotationFeetQuat(rotationQuat).quat_getUp(realUp);\r\n        validUp = this.getRotationQuat(rotationQuat).quat_getUp(validUp);\r\n\r\n        if (resetRotation || (realUp.vec3_angle(validUp) > Math.PP_EPSILON_DEGREES && this._myParams.myResetRealResetRotationIfUpChanged)) {\r\n            playerHeadManager.setRotationFeetQuat(this.getRotationQuat(rotationQuat), false);\r\n        }\r\n\r\n        if (resetHeight) {\r\n            playerHeadManager.setHeight(this.getHeight(), true);\r\n        }\r\n\r\n        if (updateRealFlags) {\r\n            this._updateReal(0, false);\r\n        }\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.update = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n    let transformUp = PP.vec3_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function update(dt) {\r\n        //#TODO this should update ground and ceiling info but not sliding info        \r\n\r\n        this._updateReal(dt);\r\n\r\n        if (this._myResetRealOnSynced) {\r\n            if (this.getPlayerHeadManager().isSynced()) {\r\n                this._myResetRealOnSynced = false;\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myUpdatePositionValid) {\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            transformUp = transformQuat.quat2_getUp(transformUp);\r\n            rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n            horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n            if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                horizontalDirection.vec3_normalize(horizontalDirection);\r\n                rotationQuat.quat_setForward(horizontalDirection);\r\n                transformQuat.quat2_setRotationQuat(rotationQuat);\r\n            }\r\n            let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n            PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, collisionRuntimeParams);\r\n            this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            this._myIsPositionValid = collisionRuntimeParams.myIsPositionOk;\r\n        }\r\n\r\n        if (this._myParams.myDebugActive) {\r\n            this._debugUpdate(dt);\r\n        }\r\n    }\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype._updateReal = function () {\r\n    let movementToCheck = PP.vec3_create();\r\n    let position = PP.vec3_create();\r\n    let positionReal = PP.vec3_create();\r\n    let transformQuat = PP.quat2_create();\r\n    let collisionRuntimeParams = new PP.CollisionRuntimeParams();\r\n\r\n    let newPosition = PP.vec3_create();\r\n    let newPositionHead = PP.vec3_create();\r\n    let movementStep = PP.vec3_create();\r\n    let currentMovementStep = PP.vec3_create();\r\n    let transformUp = PP.vec3_create();\r\n    let verticalMovement = PP.vec3_create();\r\n    let movementChecked = PP.vec3_create();\r\n    let newFeetPosition = PP.vec3_create();\r\n    let floatingTransformQuat = PP.quat2_create();\r\n    let horizontalDirection = PP.vec3_create();\r\n    let rotationQuat = PP.quat_create();\r\n    return function _updateReal(dt, resetRealEnabled = true) {\r\n        // check if new head is ok and update the data\r\n        // if head is not synced (blurred or session changing) avoid this and keep last valid\r\n        if (this.getPlayerHeadManager().isSynced()) {\r\n            this._updateCollisionHeight();\r\n\r\n            this._myIsBodyColliding = false;\r\n            this._myIsHeadColliding = false;\r\n            this._myIsLeaning = false;\r\n            this._myIsHopping = false;\r\n            this._myIsFar = false;\r\n\r\n            movementToCheck = this.getPositionReal(positionReal).vec3_sub(this.getPosition(position), movementToCheck);\r\n            if (movementToCheck.vec3_length() > 0.0001) {\r\n                this._myLastValidMovementDirection = movementToCheck.vec3_normalize(this._myLastValidMovementDirection); //TEMP direction\r\n            }\r\n\r\n            // Far\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.FAR)) {\r\n                if (this._myParams.myIsMaxDistanceFromRealToSyncEnabled && movementToCheck.vec3_length() > this._myParams.myMaxDistanceFromRealToSync) {\r\n                    this._myIsFar = true;\r\n                } else if (this._myParams.myIsFarExtraCheckCallback != null && this._myParams.myIsFarExtraCheckCallback(this)) {\r\n                    this._myIsFar = true;\r\n                }\r\n            }\r\n\r\n            // Body Colliding\r\n            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n            collisionRuntimeParams.myIsOnGround = true; //#TODO temp as long as surface infos are not actually updated\r\n            transformQuat = this.getTransformQuat(transformQuat);\r\n            newPosition.vec3_copy(this._myValidPosition);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.BODY_COLLIDING)) {\r\n                PP.myCollisionCheck.move(movementToCheck, transformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    if (Math.pp_clamp(this._myRealMovementCollisionCheckParams.myHeight, this._myParams.myIsBodyCollidingWhenHeightBelowValue,\r\n                        this._myParams.myIsBodyCollidingWhenHeightAboveValue) != this._myRealMovementCollisionCheckParams.myHeight) {\r\n                        this._myIsBodyColliding = true;\r\n                    } else {\r\n                        if (this._myParams.myIsBodyCollidingExtraCheckCallback != null && this._myParams.myIsBodyCollidingExtraCheckCallback(this)) {\r\n                            this._myIsBodyColliding = true;\r\n                        } else {\r\n                            this._myIsBodyColliding = false;\r\n                            newPosition.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._myIsBodyColliding = true;\r\n                }\r\n            }\r\n\r\n            // Floating \r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.FLOATING)) {\r\n\r\n                if (!this._myIsBodyColliding) {\r\n                    movementToCheck = newPosition.vec3_sub(position, movementToCheck);\r\n                } else {\r\n                    movementToCheck = positionReal.vec3_sub(position, movementToCheck);\r\n                }\r\n\r\n                collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                floatingTransformQuat.quat2_setPositionRotationQuat(this._myValidPosition, this._myValidRotationQuat);\r\n                PP.myCollisionCheck.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                //#TODO utilizzare on ground del body gia calcolato, ma ora non c'\u00E8 quindi va bene cos\u00EC\r\n\r\n                if (collisionRuntimeParams.myIsOnGround) {\r\n                    transformUp = transformQuat.quat2_getUp(transformUp);\r\n                    verticalMovement = movementToCheck.vec3_componentAlongAxis(transformUp, verticalMovement);\r\n                    let isVertical = !verticalMovement.vec3_isZero(0.00001);\r\n                    if (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovement) {\r\n                        let movementStepAmount = 1;\r\n                        movementStep.vec3_copy(movementToCheck);\r\n                        if (!movementToCheck.vec3_isZero(0.00001) && this._myParams.myFloatingSplitCheckEnabled) {\r\n                            let equalStepLength = movementToCheck.vec3_length() / this._myParams.myFloatingSplitCheckMaxSteps;\r\n                            if (!this._myParams.myFloatingSplitCheckStepEqualLength || equalStepLength < this._myParams.myFloatingSplitCheckStepEqualLengthMinLength) {\r\n                                let maxLength = this._myParams.myFloatingSplitCheckStepEqualLength ? this._myParams.myFloatingSplitCheckStepEqualLengthMinLength : this._myParams.myFloatingSplitCheckMaxLength;\r\n                                movementStepAmount = Math.ceil(movementToCheck.vec3_length() / maxLength);\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(maxLength, movementStep);\r\n                                    movementStepAmount = (this._myParams.myFloatingSplitCheckMaxSteps != null) ? Math.min(movementStepAmount, this._myParams.myFloatingSplitCheckMaxSteps) : movementStepAmount;\r\n                                }\r\n\r\n                                movementStepAmount = Math.max(1, movementStepAmount);\r\n\r\n                                if (movementStepAmount == 1) {\r\n                                    movementStep.vec3_copy(movementToCheck);\r\n                                }\r\n                            } else {\r\n                                movementStepAmount = this._myParams.myFloatingSplitCheckMaxSteps;\r\n                                if (movementStepAmount > 1) {\r\n                                    movementStep = movementStep.vec3_normalize(movementStep).vec3_scale(equalStepLength, movementStep);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isOnValidGroundAngle = collisionRuntimeParams.myGroundAngle <= this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001;\r\n\r\n                        movementChecked.vec3_zero();\r\n                        newFeetPosition.vec3_copy(this._myValidPosition);\r\n                        collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n\r\n                        let atLeastOneNotOnGround = false;\r\n                        let isOneOnGroundBetweenNoGround = false;\r\n                        let isLastOnGround = false;\r\n                        let isOneOnSteepGround = false;\r\n\r\n                        for (let i = 0; i < movementStepAmount; i++) {\r\n                            if (movementStepAmount == 1 || i != movementStepAmount - 1) {\r\n                                currentMovementStep.vec3_copy(movementStep);\r\n                            } else {\r\n                                currentMovementStep = movementToCheck.vec3_sub(movementChecked, currentMovementStep);\r\n                            }\r\n\r\n                            newFeetPosition = newFeetPosition.vec3_add(currentMovementStep, newFeetPosition);\r\n                            floatingTransformQuat.quat2_setPositionRotationQuat(newFeetPosition, this._myValidRotationQuat);\r\n                            collisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n                            PP.myCollisionCheck.updateSurfaceInfo(floatingTransformQuat, this._myRealMovementCollisionCheckParams, collisionRuntimeParams);\r\n                            movementChecked = movementChecked.vec3_add(currentMovementStep, movementChecked);\r\n\r\n                            if (!collisionRuntimeParams.myIsOnGround) {\r\n                                atLeastOneNotOnGround = true;\r\n                            } else {\r\n                                if (collisionRuntimeParams.myGroundAngle > this._myRealMovementCollisionCheckParams.myGroundAngleToIgnore + 0.0001) {\r\n                                    isOneOnSteepGround = true;\r\n                                }\r\n\r\n                                if (atLeastOneNotOnGround) {\r\n                                    isOneOnGroundBetweenNoGround = true;\r\n                                }\r\n\r\n                                if (i == movementStepAmount - 1) {\r\n                                    isLastOnGround = true;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        let isFloatingOnSteepGroundFail = isOneOnSteepGround && isOnValidGroundAngle &&\r\n                            !this._myParams.myIsFloatingValidIfSteepGround && (!isVertical || !this._myParams.myIsFloatingValidIfVerticalMovementAndSteepGround);\r\n                        if (atLeastOneNotOnGround || isFloatingOnSteepGroundFail) {\r\n                            if (isOneOnGroundBetweenNoGround) {\r\n                                this._myIsHopping = true;\r\n                            } else {\r\n                                this._myIsLeaning = true;\r\n                            }\r\n                        } else {\r\n                            this._myIsLeaning = false;\r\n                            this._myIsHopping = false;\r\n\r\n                            if (this._myParams.myIsLeaningExtraCheckCallback != null && this._myParams.myIsLeaningExtraCheckCallback(this)) {\r\n                                this._myIsLeaning = true;\r\n                            } else if (this._myParams.myIsHoppingExtraCheckCallback != null && this._myParams.myIsHoppingExtraCheckCallback(this)) {\r\n                                this._myIsHopping = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning) {\r\n                            let distance = movementToCheck.vec3_length();\r\n                            if (this._myParams.myIsLeaningValidAboveDistance && distance > this._myParams.myLeaningValidDistance) {\r\n                                this._myIsLeaning = false;\r\n                            }\r\n                        }\r\n\r\n                        if (this._myIsLeaning || this._myIsHopping) {\r\n                            if (isLastOnGround && this._myParams.myIsFloatingValidIfRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            } else if (isLastOnGround && isVertical && this._myParams.myIsFloatingValidIfVerticalMovementAndRealOnGround) {\r\n                                this._myIsLeaning = false;\r\n                                this._myIsHopping = false;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Head Colliding\r\n            movementToCheck = this.getPositionHeadReal(positionReal).vec3_sub(this.getPositionHead(position), movementToCheck);\r\n            collisionRuntimeParams.reset();\r\n            transformQuat = this.getTransformHeadQuat(transformQuat); // get eyes transform\r\n            newPositionHead.vec3_copy(this._myValidPositionHead);\r\n            if (this._myParams.mySyncEnabledFlagMap.get(PP.PlayerTransformManagerSyncFlag.HEAD_COLLIDING)) {\r\n                PP.myCollisionCheck.move(movementToCheck, transformQuat, this._myHeadCollisionCheckParams, collisionRuntimeParams);\r\n\r\n                if (!collisionRuntimeParams.myHorizontalMovementCanceled && !collisionRuntimeParams.myVerticalMovementCanceled) {\r\n                    this._myIsHeadColliding = false;\r\n                    newPositionHead.vec3_copy(collisionRuntimeParams.myNewPosition);\r\n                } else {\r\n                    this._myIsHeadColliding = true;\r\n                }\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionFlagMap) && !this._myParams.mySyncPositionDisabled) {\r\n                this._myValidPosition.vec3_copy(newPosition);\r\n                //reset real position dato che la posizione new potrebbe essere quella influenzata da snap\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncPositionHeadFlagMap)) {\r\n                this._myValidPositionHead = this.getPositionHeadReal(newPositionHead);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncRotationFlagMap)) {\r\n                this._myValidRotationQuat = this.getRotationRealQuat(this._myValidRotationQuat);\r\n            }\r\n\r\n            if (this.isSynced(this._myParams.mySyncHeightFlagMap)) {\r\n                this._myValidHeight = this._myRealMovementCollisionCheckParams.myHeight;\r\n                this._updateCollisionHeight();\r\n            }\r\n\r\n            if (this._myParams.myUpdateRealPositionValid) {\r\n                transformQuat = this.getTransformRealQuat(transformQuat);\r\n                transformUp = transformQuat.quat2_getUp(transformUp);\r\n                rotationQuat = transformQuat.quat2_getRotationQuat(rotationQuat);\r\n                horizontalDirection = this._myLastValidMovementDirection.vec3_removeComponentAlongAxis(transformUp, horizontalDirection);\r\n                if (!horizontalDirection.vec3_isZero(0.00001)) {\r\n                    horizontalDirection.vec3_normalize(horizontalDirection);\r\n                    rotationQuat.quat_setForward(horizontalDirection);\r\n                    transformQuat.quat2_setRotationQuat(rotationQuat);\r\n                }\r\n\r\n                let debugBackup = this._myParams.myMovementCollisionCheckParams.myDebugActive;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = false;\r\n                PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myRealCollisionRuntimeParams);\r\n                this._myIsRealPositionValid = this._myRealCollisionRuntimeParams.myIsPositionOk;\r\n                this._myParams.myMovementCollisionCheckParams.myDebugActive = debugBackup;\r\n            }\r\n        }\r\n    }\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.move = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function move(movement, outCollisionRuntimeParams = null, forceMove = false) {\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        PP.myCollisionCheck.move(movement, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        if (!forceMove) {\r\n            fixedMovement.vec3_copy(this._myCollisionRuntimeParams.myFixedMovement);\r\n        } else {\r\n            fixedMovement.vec3_copy(movement);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        // this make reset happens even for gravity, maybe u should do it manually\r\n        if (this._myParams.myResetRealOnMove) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add move callback\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.teleportPosition = function () {\r\n    let teleportTransformQuat = PP.quat2_create();\r\n    return function teleportPosition(teleportPosition, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        teleportTransformQuat = this.getTransformQuat(teleportTransformQuat);\r\n        teleportTransformQuat.quat2_setPosition(teleportPosition);\r\n        this.teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams, forceTeleport);\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.teleportTransformQuat = function () {\r\n    let currentPosition = PP.vec3_create();\r\n    let teleportPositionVec = PP.vec3_create();\r\n    let teleportRotation = PP.quat_create();\r\n    let rotatedTransformQuat = PP.quat2_create();\r\n    let fixedMovement = PP.vec3_create();\r\n    return function teleportTransformQuat(teleportTransformQuat, outCollisionRuntimeParams = null, forceTeleport = false) {\r\n        currentPosition = this.getPosition(currentPosition);\r\n        teleportPositionVec = teleportTransformQuat.quat2_getPosition(teleportPositionVec);\r\n        teleportRotation = teleportTransformQuat.quat2_getRotationQuat(teleportRotation);\r\n\r\n        rotatedTransformQuat.quat2_setPositionRotationQuat(currentPosition, teleportRotation);\r\n\r\n        PP.myCollisionCheck.teleport(teleportPositionVec, rotatedTransformQuat, this._myParams.myTeleportCollisionCheckParams, this._myCollisionRuntimeParams);\r\n        if (outCollisionRuntimeParams != null) {\r\n            outCollisionRuntimeParams.copy(this._myCollisionRuntimeParams);\r\n        }\r\n\r\n        fixedMovement.vec3_zero();\r\n        if (!forceTeleport) {\r\n            if (!this._myCollisionRuntimeParams.myTeleportCanceled) {\r\n                fixedMovement = this._myCollisionRuntimeParams.myFixedTeleportPosition.vec3_sub(currentPosition, fixedMovement);\r\n                this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n            }\r\n        } else {\r\n            fixedMovement = teleportPositionVec.vec3_sub(currentPosition, fixedMovement);\r\n            this.getPlayerHeadManager().setRotationFeetQuat(teleportRotation);\r\n        }\r\n\r\n        if (!fixedMovement.vec3_isZero(0.00001)) {\r\n            this._myValidPosition.vec3_add(fixedMovement, this._myValidPosition);\r\n            this.getPlayerHeadManager().moveFeet(fixedMovement);\r\n        }\r\n\r\n        if (this._myParams.myResetRealOnTeleport) {\r\n            if (!this.isSynced()) {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionVR,\r\n                        !this._myParams.myNeverResetRealRotationVR,\r\n                        !this._myParams.myNeverResetRealHeightVR,\r\n                        false);\r\n                } else {\r\n                    this.resetReal(\r\n                        !this._myParams.myNeverResetRealPositionNonVR,\r\n                        !this._myParams.myNeverResetRealRotationNonVR,\r\n                        !this._myParams.myNeverResetRealHeightNonVR,\r\n                        false);\r\n                }\r\n            }\r\n        }\r\n\r\n        //#TODO add teleport callback\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.rotateQuat = function () {\r\n    return function rotateQuat(rotationQuat) {\r\n        this._myValidRotationQuat.quat_rotateQuat(rotationQuat, this._myValidRotationQuat);\r\n        this.getPlayerHeadManager().rotateFeetQuat(rotationQuat);\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.setRotationQuat = function () {\r\n    let rotationToPerform = PP.quat_create();\r\n    return function setRotationQuat(rotationQuat) {\r\n        rotationToPerform = this._myValidRotationQuat.quat_rotationToQuat(rotationQuat, rotationToPerform);\r\n        this.rotateQuat(rotationToPerform);\r\n    };\r\n}();\r\n\r\nPP.CleanedPlayerTransformManager.prototype.setHeight = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    return function setHeight(height, forceSet = false) {\r\n        let fixedHeight = Math.pp_clamp(height, this._myParams.myMinHeight, this._myParams.myMaxHeight);\r\n        let previousHeight = this.getHeight();\r\n\r\n        this._myValidHeight = fixedHeight;\r\n        this._updateCollisionHeight();\r\n\r\n        transformQuat = this.getTransformQuat(transformQuat);\r\n\r\n        PP.myCollisionCheck.positionCheck(true, transformQuat, this._myParams.myMovementCollisionCheckParams, this._myCollisionRuntimeParams);\r\n\r\n        if (this._myCollisionRuntimeParams.myIsPositionOk || forceSet) {\r\n            this.getPlayerHeadManager().setHeight(this.getHeight(), true);\r\n        } else {\r\n            this._myValidHeight = previousHeight;\r\n        }\r\n\r\n        this._updateCollisionHeight();\r\n    };\r\n}();\r\n\r\n//sliding info, surface info, update", "WL.registerComponent('pp-finger-cursor', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myEnableMultipleClicks: { type: WL.Type.Bool, default: true },\r\n    _myCollisionGroup: { type: WL.Type.Int, default: 1 },\r\n    _myCollisionSize: { type: WL.Type.Float, default: 0.0125 },\r\n    _myCursorObject: { type: WL.Type.Object, default: null }\r\n}, {\r\n    init: function () {\r\n        this._myLastTarget = null;\r\n        this._myReferenceSpace = null;\r\n        this._myHandInputSource = null;\r\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\r\n\r\n        this._myDoubleClickTimer = 0;\r\n        this._myTripleClickTimer = 0;\r\n        this._myMultipleClickObject = null;\r\n        this._myMultipleClickDelay = 0.3;\r\n    },\r\n    start: function () {\r\n        this._myCursorObjectRoot = WL.scene.addObject(this.object);\r\n\r\n        if (this._myCursorObject == null) {\r\n            this._myCursorObject = this._myCursorObjectRoot.pp_addObject();\r\n        } else {\r\n            this._myCursorObject.pp_setParent(this._myCursorObjectRoot);\r\n        }\r\n\r\n        this._myCollisionComponent = this._myCursorObject.addComponent('collision');\r\n        this._myCollisionComponent.collider = WL.Collider.Sphere;\r\n        this._myCollisionComponent.group = 1 << this._myCollisionGroup;\r\n        this._myCollisionComponent.extents = PP.vec3_create(this._myCollisionSize, this._myCollisionSize, this._myCollisionSize);\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    update: function (dt) {\r\n        if (this._myDoubleClickTimer > 0) {\r\n            this._myDoubleClickTimer -= dt;\r\n        }\r\n\r\n        if (this._myTripleClickTimer > 0) {\r\n            this._myTripleClickTimer -= dt;\r\n        }\r\n\r\n        this._myCursorObjectRoot.pp_setTransformQuat(PP.myPlayerObjects.myPlayerPivot.pp_getTransformQuat());\r\n        this._updateHand();\r\n\r\n        if (this._myHandInputSource) {\r\n            let overlaps = this._myCollisionComponent.queryOverlaps();\r\n            let overlapTarget = null;\r\n            for (let i = 0; i < overlaps.length; ++i) {\r\n                let object = overlaps[i].object;\r\n                let target = object.getComponent('cursor-target');\r\n                if (target && (overlapTarget == null || !target.isSurface)) {\r\n                    overlapTarget = target;\r\n                    if (!target.isSurface) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!overlapTarget) {\r\n                this._targetTouchEnd();\r\n            } else if (!overlapTarget.equals(this._myLastTarget)) {\r\n                this._targetTouchEnd();\r\n\r\n                this._myLastTarget = overlapTarget;\r\n\r\n                this._targetTouchStart();\r\n            }\r\n        } else {\r\n            this._targetTouchEnd();\r\n        }\r\n    },\r\n    _targetTouchStart: function () {\r\n        this._myLastTarget.onHover(this._myLastTarget.object, this);\r\n        this._myLastTarget.onDown(this._myLastTarget.object, this);\r\n    },\r\n    _targetTouchEnd: function () {\r\n        if (this._myLastTarget) {\r\n            if (this._myEnableMultipleClicks && this._myTripleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onTripleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n            } else if (this._myEnableMultipleClicks && this._myDoubleClickTimer > 0 && this._myMultipleClickObject && this._myMultipleClickObject.equals(this._myLastTarget.object)) {\r\n                this._myLastTarget.onDoubleClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = this._myMultipleClickDelay;\r\n                this._myDoubleClickTimer = 0;\r\n            } else {\r\n                this._myLastTarget.onClick(this._myLastTarget.object, this);\r\n\r\n                this._myTripleClickTimer = 0;\r\n                this._myDoubleClickTimer = this._myMultipleClickDelay;\r\n                this._myMultipleClickObject = this._myLastTarget.object;\r\n            }\r\n\r\n            this._myLastTarget.onUp(this._myLastTarget.object, this);\r\n            this._myLastTarget.onUnhover(this._myLastTarget.object, this);\r\n\r\n            this._myLastTarget = null;\r\n        }\r\n    },\r\n    onActivate: function () {\r\n        this._myCursorObjectRoot.pp_setActive(true);\r\n    },\r\n    onDeactivate: function () {\r\n        this._myCursorObjectRoot.pp_setActive(false);\r\n    },\r\n    _updateHand() {\r\n        this._myHandInputSource = PP.InputUtils.getInputSource(this._myHandednessString, PP.InputSourceType.TRACKED_HAND);\r\n\r\n        if (this._myHandInputSource) {\r\n            let tip = Module['webxr_frame'].getJointPose(this._myHandInputSource.hand.get(\"index-finger-tip\"), this._myReferenceSpace);\r\n\r\n            if (tip) {\r\n                this._myCursorObject.pp_setRotationLocalQuat([\r\n                    tip.transform.orientation.x,\r\n                    tip.transform.orientation.y,\r\n                    tip.transform.orientation.z,\r\n                    tip.transform.orientation.w]);\r\n\r\n                this._myCursorObject.pp_setPositionLocal([\r\n                    tip.transform.position.x,\r\n                    tip.transform.position.y,\r\n                    tip.transform.position.z]);\r\n            }\r\n        }\r\n    },\r\n    _onXRSessionStart: function (session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) { this._myReferenceSpace = referenceSpace; }.bind(this));\r\n    },\r\n    _onXRSessionEnd: function (session) {\r\n        this._myReferenceSpace = null;\r\n    }\r\n});", "\r\nPP.Handedness = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\"\r\n};\r\n\r\nPP.HandednessIndex = {\r\n    LEFT: 0,\r\n    RIGHT: 1\r\n};\r\n\r\nPP.InputSourceType = {\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};\r\n\r\nPP.TrackedHandJointID = {\r\n    WRIST: \"wrist\",\r\n\r\n    THUMB_METACARPAL: \"thumb-metacarpal\",\r\n    THUMB_PHALANX_PROXIMAL: \"thumb-phalanx-proximal\",\r\n    THUMB_PHALANX_DISTAL: \"thumb-phalanx-distal\",\r\n    THUMB_TIP: \"thumb-tip\",\r\n\r\n    INDEX_FINGER_METACARPAL: \"index-finger-metacarpal\",\r\n    INDEX_FINGER_PHALANX_PROXIMAL: \"index-finger-phalanx-proximal\",\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: \"index-finger-phalanx-intermediate\",\r\n    INDEX_FINGER_PHALANX_DISTAL: \"index-finger-phalanx-distal\",\r\n    INDEX_FINGER_TIP: \"index-finger-tip\",\r\n\r\n    MIDDLE_FINGER_METACARPAL: \"middle-finger-metacarpal\",\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: \"middle-finger-phalanx-proximal\",\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: \"middle-finger-phalanx-intermediate\",\r\n    MIDDLE_FINGER_PHALANX_DISTAL: \"middle-finger-phalanx-distal\",\r\n    MIDDLE_FINGER_TIP: \"middle-finger-tip\",\r\n\r\n    RING_FINGER_METACARPAL: \"ring-finger-metacarpal\",\r\n    RING_FINGER_PHALANX_PROXIMAL: \"ring-finger-phalanx-proximal\",\r\n    RING_FINGER_PHALANX_INTERMEDIATE: \"ring-finger-phalanx-intermediate\",\r\n    RING_FINGER_PHALANX_DISTAL: \"ring-finger-phalanx-distal\",\r\n    RING_FINGER_TIP: \"ring-finger-tip\",\r\n\r\n    PINKY_FINGER_METACARPAL: \"pinky-finger-metacarpal\",\r\n    PINKY_FINGER_PHALANX_PROXIMAL: \"pinky-finger-phalanx-proximal\",\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: \"pinky-finger-phalanx-intermediate\",\r\n    PINKY_FINGER_PHALANX_DISTAL: \"pinky-finger-phalanx-distal\",\r\n    PINKY_FINGER_TIP: \"pinky-finger-tip\",\r\n};\r\n\r\nPP.TrackedHandJointIDIndex = {\r\n    WRIST: 0,\r\n\r\n    THUMB_METACARPAL: 1,\r\n    THUMB_PHALANX_PROXIMAL: 2,\r\n    THUMB_PHALANX_DISTAL: 3,\r\n    THUMB_TIP: 4,\r\n\r\n    INDEX_FINGER_METACARPAL: 5,\r\n    INDEX_FINGER_PHALANX_PROXIMAL: 6,\r\n    INDEX_FINGER_PHALANX_INTERMEDIATE: 7,\r\n    INDEX_FINGER_PHALANX_DISTAL: 8,\r\n    INDEX_FINGER_TIP: 9,\r\n\r\n    MIDDLE_FINGER_METACARPAL: 10,\r\n    MIDDLE_FINGER_PHALANX_PROXIMAL: 11,\r\n    MIDDLE_FINGER_PHALANX_INTERMEDIATE: 12,\r\n    MIDDLE_FINGER_PHALANX_DISTAL: 13,\r\n    MIDDLE_FINGER_TIP: 14,\r\n\r\n    RING_FINGER_METACARPAL: 15,\r\n    RING_FINGER_PHALANX_PROXIMAL: 16,\r\n    RING_FINGER_PHALANX_INTERMEDIATE: 17,\r\n    RING_FINGER_PHALANX_DISTAL: 18,\r\n    RING_FINGER_TIP: 19,\r\n\r\n    PINKY_FINGER_METACARPAL: 20,\r\n    PINKY_FINGER_PHALANX_PROXIMAL: 21,\r\n    PINKY_FINGER_PHALANX_INTERMEDIATE: 22,\r\n    PINKY_FINGER_PHALANX_DISTAL: 23,\r\n    PINKY_FINGER_TIP: 24,\r\n};", "PP.InputUtils = {\r\n    getHandednessByIndex: function (index) {\r\n        let handedness = null;\r\n\r\n        switch (index) {\r\n            case PP.HandednessIndex.LEFT:\r\n                handedness = PP.Handedness.LEFT;\r\n                break;\r\n            case PP.HandednessIndex.RIGHT:\r\n                handedness = PP.Handedness.RIGHT;\r\n                break;\r\n        }\r\n\r\n        return handedness;\r\n    },\r\n    getInputSource: function (handedness, inputSourceType) {\r\n        let inputSource = null;\r\n\r\n        if (WL.xrSession && WL.xrSession.inputSources) {\r\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\r\n                let input = WL.xrSession.inputSources[i];\r\n\r\n                let isCorrectType = (!inputSourceType) || (inputSourceType == PP.InputSourceType.GAMEPAD && !input.hand) || (inputSourceType == PP.InputSourceType.TRACKED_HAND && input.hand);\r\n                if (isCorrectType && input.handedness == handedness) {\r\n                    inputSource = input;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return inputSource;\r\n    },\r\n    getInputSourceTypeByHandedness: function (handedness) {\r\n        let inputSource = PP.InputUtils.getInputSource(handedness);\r\n\r\n        return PP.InputUtils.getInputSourceType(inputSource);\r\n    },\r\n    getInputSourceType: function (inputSource) {\r\n        let inputSourceType = null;\r\n\r\n        if (inputSource) {\r\n            if (inputSource.hand) {\r\n                inputSourceType = PP.InputSourceType.TRACKED_HAND;\r\n            } else {\r\n                inputSourceType = PP.InputSourceType.GAMEPAD;\r\n            }\r\n        }\r\n\r\n        return inputSourceType;\r\n    },\r\n    getOppositeHandedness: function (handedness) {\r\n        let oppositeHandedness = null;\r\n\r\n        switch (handedness) {\r\n            case PP.Handedness.LEFT:\r\n                oppositeHandedness = PP.Handedness.RIGHT;\r\n                break;\r\n            case PP.Handedness.RIGHT:\r\n                oppositeHandedness = PP.Handedness.LEFT;\r\n                break;\r\n        }\r\n\r\n        return oppositeHandedness;\r\n    },\r\n    getJointIDByIndex: function (index) {\r\n        let jointID = null;\r\n\r\n        let jointIDKey = null;\r\n        for (let jointIDIndexKey in PP.TrackedHandJointIDIndex) {\r\n            if (PP.TrackedHandJointIDIndex[jointIDIndexKey] == index) {\r\n                jointIDKey = jointIDIndexKey;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (jointIDKey != null) {\r\n            jointID = PP.TrackedHandJointID[jointIDKey];\r\n        }\r\n\r\n        return jointID;\r\n    },\r\n};", "PP.KeyID = {\r\n    _0: \"0\",\r\n    _1: \"1\",\r\n    _2: \"2\",\r\n    _3: \"3\",\r\n    _4: \"4\",\r\n    _5: \"5\",\r\n    _6: \"6\",\r\n    _7: \"7\",\r\n    _8: \"8\",\r\n    _9: \"9\",\r\n\r\n    A: \"A\",\r\n    B: \"B\",\r\n    C: \"C\",\r\n    D: \"D\",\r\n    E: \"E\",\r\n    F: \"F\",\r\n    G: \"G\",\r\n    H: \"H\",\r\n    I: \"I\",\r\n    J: \"J\",\r\n    K: \"K\",\r\n    L: \"L\",\r\n    M: \"M\",\r\n    N: \"N\",\r\n    O: \"O\",\r\n    P: \"P\",\r\n    Q: \"Q\",\r\n    R: \"R\",\r\n    S: \"S\",\r\n    T: \"T\",\r\n    U: \"U\",\r\n    V: \"V\",\r\n    W: \"W\",\r\n    X: \"X\",\r\n    Y: \"Y\",\r\n    Z: \"Z\",\r\n\r\n    a: \"a\",\r\n    b: \"b\",\r\n    c: \"c\",\r\n    d: \"d\",\r\n    e: \"e\",\r\n    f: \"f\",\r\n    g: \"g\",\r\n    h: \"h\",\r\n    i: \"i\",\r\n    j: \"j\",\r\n    k: \"k\",\r\n    l: \"l\",\r\n    m: \"m\",\r\n    n: \"n\",\r\n    o: \"o\",\r\n    p: \"p\",\r\n    q: \"q\",\r\n    r: \"r\",\r\n    s: \"s\",\r\n    t: \"t\",\r\n    u: \"u\",\r\n    v: \"v\",\r\n    w: \"w\",\r\n    x: \"x\",\r\n    y: \"y\",\r\n    z: \"z\",\r\n\r\n    UP: \"ArrowUp\",\r\n    DOWN: \"ArrowDown\",\r\n    LEFT: \"ArrowLeft\",\r\n    RIGHT: \"ArrowRight\",\r\n\r\n    SPACE: \" \",\r\n    ENTER: \"Enter\",\r\n    BACKSPACE: \"Backspace\",\r\n    ESC: \"Escape\",\r\n\r\n    SHIFT_LEFT: \"ShiftLeft\",\r\n    SHIFT_RIGHT: \"ShiftRight\",\r\n    CONTROL_LEFT: \"ControlLeft\",\r\n    CONTROL_RIGHT: \"ControlRight\",\r\n    ALT_LEFT: \"AltLeft\",\r\n    ALT_RIGHT: \"AltRight\",\r\n};\r\n\r\nPP.Keyboard = class Keyboard {\r\n    constructor() {\r\n        this._myKeyInfos = new Map();\r\n\r\n        for (let key in PP.KeyID) {\r\n            this.addKey(PP.KeyID[key]);\r\n        }\r\n    }\r\n\r\n    isKeyPressed(keyID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressed = this._myKeyInfos.get(keyID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isKeyPressStart(keyID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressStart = this._myKeyInfos.get(keyID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isKeyPressEnd(keyID) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            isPressEnd = this._myKeyInfos.get(keyID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    addKey(keyID) {\r\n        this._myKeyInfos.set(keyID, this._createKeyInfo());\r\n    }\r\n\r\n    start() {\r\n        window.addEventListener('keydown', this._keyDown.bind(this));\r\n        window.addEventListener('keyup', this._keyUp.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        if (!document.hasFocus()) {\r\n            for (let keyInfo of this._myKeyInfos.values()) {\r\n                if (keyInfo.myIsPressed) {\r\n                    keyInfo.myIsPressed = false;\r\n                    keyInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let keyInfo of this._myKeyInfos.values()) {\r\n            keyInfo.myIsPressStart = keyInfo.myIsPressStartToProcess;\r\n            keyInfo.myIsPressEnd = keyInfo.myIsPressEndToProcess;\r\n            keyInfo.myIsPressStartToProcess = false;\r\n            keyInfo.myIsPressEndToProcess = false;\r\n        }\r\n    }\r\n\r\n    _keyDown(event) {\r\n        this._keyPressedChanged(event.key, true);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, true);\r\n        }\r\n    }\r\n\r\n    _keyUp(event) {\r\n        this._keyPressedChanged(event.key, false);\r\n        if (event.key != event.code) {\r\n            this._keyPressedChanged(event.code, false);\r\n        }\r\n    }\r\n\r\n    _keyPressedChanged(keyID, isPressed) {\r\n        if (this._myKeyInfos.has(keyID)) {\r\n            let keyInfo = this._myKeyInfos.get(keyID);\r\n\r\n            if (isPressed) {\r\n                keyInfo.myIsPressed = true;\r\n                keyInfo.myIsPressStartToProcess = true;\r\n            } else {\r\n                keyInfo.myIsPressed = false;\r\n                keyInfo.myIsPressEndToProcess = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    _createKeyInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n};", "PP.MouseButtonID = {\r\n    LEFT: 0,\r\n    MIDDLE: 1,\r\n    RIGHT: 2,\r\n};\r\n\r\nPP.Mouse = class Mouse {\r\n    constructor() {\r\n        // #TODO refactor Mouse/Keyboard/Gamepad and create a sort of parent ButtonHandler that have the base ButtonInfo and all of them inherit\r\n\r\n        this._myButtonInfos = new Map();\r\n        for (let key in PP.MouseButtonID) {\r\n            this._myButtonInfos.set(PP.MouseButtonID[key], this._createButtonInfo());\r\n        }\r\n\r\n        this._myPreventContextMenuCallback = this._preventContextMenu.bind(this);\r\n        this._myPreventMiddleButtonScrollCallback = this._preventMiddleButtonScroll.bind(this);\r\n\r\n        this._myInternalMousePosition = PP.vec2_create();\r\n        this._myScreenSize = PP.vec2_create();\r\n        this._updateScreenSize();\r\n\r\n        this._myResetMovingDelay = 0.15;\r\n        this._myResetMovingTimer = new PP.Timer(this._myResetMovingDelay, false);\r\n        this._myIsMoving = false;\r\n\r\n        this._myIsInsideView = false;\r\n        this._myIsValid = false;\r\n\r\n        this._myPointerUpOnPointerLeave = true;\r\n\r\n        this._myContextMenuActive = true;\r\n        this._myMiddleButtonScrollActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myLastValidPointerEvent = null;\r\n\r\n        this._myPointerEventValidCallbacks = new Map();      // Signature: callback(event)\r\n\r\n        // Support Variables\r\n        this._myProjectionMatrixInverse = PP.mat4_create();\r\n        this._myRotationQuat = PP.quat_create();\r\n        this._myOriginWorld = PP.vec3_create();\r\n        this._myDirectionWorld = PP.vec3_create();\r\n    }\r\n\r\n    start() {\r\n        this._myOnPointerMoveCallback = this._onPointerAction.bind(this, this._onPointerMove.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        this._myOnPointerDownCallback = this._onPointerAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        this._myOnPointerUpCallback = this._onPointerAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        this._myOnPointerLeaveCallback = this._onPointerLeave.bind(this);\r\n        document.body.addEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        this._myOnPointerEnterCallback = this._onPointerEnter.bind(this);\r\n        document.body.addEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        // these are needed to being able to detect for example left and right click together, pointer only allow one down at a time\r\n        this._myOnMouseDownCallback = this._onMouseAction.bind(this, this._onPointerDown.bind(this));\r\n        document.body.addEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        this._myOnMouseUpCallback = this._onMouseAction.bind(this, this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myResetMovingTimer.isRunning()) {\r\n            this._myResetMovingTimer.update(dt);\r\n            if (this._myResetMovingTimer.isDone()) {\r\n                this._myResetMovingTimer.reset();\r\n                this._myIsMoving = false;\r\n            }\r\n        }\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            buttonInfo.myIsPressStart = buttonInfo.myIsPressStartToProcess;\r\n            buttonInfo.myIsPressEnd = buttonInfo.myIsPressEndToProcess;\r\n            buttonInfo.myIsPressStartToProcess = false;\r\n            buttonInfo.myIsPressEndToProcess = false;\r\n        }\r\n\r\n        this._updateScreenSize();\r\n\r\n        if (!this.isAnyButtonPressed() && !this._myIsMoving) {\r\n            this._myPointerID = null;\r\n        }\r\n\r\n        if (this._myLastValidPointerEvent != null) {\r\n            let isLastValidPointerEventStillValid = this._isPointerEventValid(this._myLastValidPointerEvent);\r\n            if (!isLastValidPointerEventStillValid) {\r\n                if (this._myIsInsideView) {\r\n                    this._onPointerLeave(this._myLastValidPointerEvent);\r\n                }\r\n\r\n                this._myLastValidPointerEvent = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        document.body.removeEventListener(\"pointermove\", this._myOnPointerMoveCallback);\r\n        document.body.removeEventListener(\"pointerdown\", this._myOnPointerDownCallback);\r\n        document.body.removeEventListener(\"pointerup\", this._myOnPointerUpCallback);\r\n        document.body.removeEventListener(\"pointerleave\", this._myOnPointerLeaveCallback);\r\n        document.body.removeEventListener(\"pointerenter\", this._myOnPointerEnterCallback);\r\n\r\n        document.body.removeEventListener(\"mousedown\", this._myOnMouseDownCallback);\r\n        document.body.removeEventListener(\"mouseup\", this._myOnMouseUpCallback);\r\n\r\n        document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n        document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressed = this._myButtonInfos.get(buttonID).myIsPressed;\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isAnyButtonPressed() {\r\n        let isPressed = false;\r\n\r\n        for (let buttonInfo of this._myButtonInfos.values()) {\r\n            if (buttonInfo.myIsPressed) {\r\n                isPressed = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    isButtonPressStart(buttonID) {\r\n        let isPressStart = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressStart = this._myButtonInfos.get(buttonID).myIsPressStart;\r\n        }\r\n\r\n        return isPressStart;\r\n    }\r\n\r\n    isButtonPressEnd(buttonID = null) {\r\n        let isPressEnd = false;\r\n\r\n        if (this._myButtonInfos.has(buttonID)) {\r\n            isPressEnd = this._myButtonInfos.get(buttonID).myIsPressEnd;\r\n        }\r\n\r\n        return isPressEnd;\r\n    }\r\n\r\n    isMoving() {\r\n        return this._myIsMoving;\r\n    }\r\n\r\n    isInsideView() {\r\n        return this._myIsInsideView;\r\n    }\r\n\r\n    isTargetingRenderCanvas() {\r\n        return this.isInsideView() && this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.target == WL.canvas;\r\n    }\r\n\r\n    // the origin and direction are set by the mouse\r\n    raycastWorld(raycastSetup, raycastResults = new PP.RaycastResults()) {\r\n        this.getOriginWorld(raycastSetup.myOrigin);\r\n        this.getDirectionWorld(raycastSetup.myDirection);\r\n        raycastResults = PP.PhysicsUtils.raycast(raycastSetup, raycastResults);\r\n        return raycastResults;\r\n    }\r\n\r\n    getPositionScreen(out = PP.vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = this._myInternalMousePosition[0];\r\n        mousePosition[1] = this._myScreenSize[1] - 1 - this._myInternalMousePosition[1];\r\n        return mousePosition;\r\n    }\r\n\r\n    getPositionScreenNormalized(out = PP.vec2_create()) {\r\n        let mousePosition = out;\r\n        mousePosition[0] = (this._myScreenSize[0] == 0) ? 0 : ((this._myInternalMousePosition[0] / this._myScreenSize[0]) * 2 - 1);\r\n        mousePosition[1] = (this._myScreenSize[1] == 0) ? 0 : (((this._myScreenSize[1] - 1 - this._myInternalMousePosition[1]) / this._myScreenSize[1]) * 2 - 1);\r\n        return mousePosition;\r\n    }\r\n\r\n    getScreenSize() {\r\n        return this._myScreenSize;\r\n    }\r\n\r\n    getPositionWorld(distanceFromCamera, out = PP.vec3_create()) {\r\n        let originWorld = this.getOriginWorld(this._myOriginWorld);\r\n        let directionWorld = this.getDirectionWorld(this._myDirectionWorld);\r\n\r\n        out = originWorld.vec3_add(directionWorld.vec3_scale(distanceFromCamera, out), out);\r\n        return out;\r\n    }\r\n\r\n    getOriginWorld(out = PP.vec3_create()) {\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            PP.myPlayerObjects.myEyeLeft.pp_getPosition(out); // in theory mouse should not be used inside the session, but may make sense for AR which uses eye left\r\n        } else {\r\n            PP.myPlayerObjects.myNonVRCamera.pp_getPosition(out);\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    getDirectionWorld(out = PP.vec3_create()) {\r\n        let right = this._myInternalMousePosition[0] / this._myScreenSize[0];\r\n        let up = this._myInternalMousePosition[1] / this._myScreenSize[1];\r\n\r\n        let directionLocal = out;\r\n        directionLocal.vec3_set(right * 2 - 1, -up * 2 + 1, -1.0);\r\n\r\n        let projectionMatrixInvert = this._myProjectionMatrixInverse;\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            projectionMatrixInvert = PP.myPlayerObjects.myEyeLeft.pp_getComponentHierarchy(\"view\").projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        } else {\r\n            projectionMatrixInvert = PP.myPlayerObjects.myNonVRCamera.pp_getComponentHierarchy(\"view\").projectionMatrix.mat4_invert(projectionMatrixInvert);\r\n        }\r\n\r\n        directionLocal.vec3_transformMat4(projectionMatrixInvert, directionLocal);\r\n        directionLocal.vec3_normalize(directionLocal);\r\n\r\n        let directionWorld = directionLocal;\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            directionWorld = directionLocal.vec3_transformQuat(PP.myPlayerObjects.myEyeLeft.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        } else {\r\n            directionWorld = directionLocal.vec3_transformQuat(PP.myPlayerObjects.myNonVRCamera.pp_getRotationQuat(this._myRotationQuat), directionLocal);\r\n        }\r\n\r\n        directionWorld.vec3_normalize(directionWorld);\r\n\r\n        return out;\r\n    }\r\n\r\n    setTouchValid(touchValid) {\r\n        let callbackID = \"internal_touch_valid_callback\";\r\n        if (touchValid) {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        } else {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.pointerType == \"mouse\";\r\n            });\r\n        }\r\n    }\r\n\r\n    setTargetOnlyRenderCanvas(targetOnlyRenderCanvas) {\r\n        let callbackID = \"internal_target_only_render_canvas_callback\";\r\n        if (targetOnlyRenderCanvas) {\r\n            this.addPointerEventValidCallback(callbackID, function (event) {\r\n                return event.target == WL.canvas;\r\n            });\r\n        } else {\r\n            this.removePointerEventValidCallback(callbackID);\r\n        }\r\n    }\r\n\r\n    getLastValidPointerEvent() {\r\n        return this._myLastValidPointerEvent;\r\n    }\r\n\r\n    // can be used to specify that only some pointerType are valid (eg: mouse, touch, pen) or just some target (eg: WL.canvas)\r\n    addPointerEventValidCallback(id, callback) {\r\n        this._myPointerEventValidCallbacks.set(id, callback);\r\n    }\r\n\r\n    removePointerEventValidCallback(id) {\r\n        this._myPointerEventValidCallbacks.delete(id);\r\n    }\r\n\r\n    isPointerUpOnPointerLeave() {\r\n        return this._myPointerUpOnPointerLeave;\r\n    }\r\n\r\n    setPointerUpOnPointerLeave(pointerUpOnPointerLeave) {\r\n        this._myPointerUpOnPointerLeave = pointerUpOnPointerLeave;\r\n    }\r\n\r\n    isContextMenuActive() {\r\n        return this._myContextMenuActive;\r\n    }\r\n\r\n    setContextMenuActive(active) {\r\n        if (this._myContextMenuActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"contextmenu\", this._myPreventContextMenuCallback);\r\n            } else {\r\n                document.body.addEventListener(\"contextmenu\", this._myPreventContextMenuCallback, false);\r\n            }\r\n            this._myContextMenuActive = active;\r\n        }\r\n    }\r\n\r\n    isMiddleButtonScrollActive() {\r\n        return this._myMiddleButtonScrollActive;\r\n    }\r\n\r\n    setMiddleButtonScrollActive(active) {\r\n        if (this._myMiddleButtonScrollActive != active) {\r\n            if (active) {\r\n                document.body.removeEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback);\r\n            } else {\r\n                document.body.addEventListener(\"mousedown\", this._myPreventMiddleButtonScrollCallback, false);\r\n            }\r\n            this._myMiddleButtonScrollActive = active;\r\n        }\r\n    }\r\n\r\n    setResetMovingDelay(delay) {\r\n        this._myResetMovingDelay = delay;\r\n    }\r\n\r\n    getResetMovingDelay() {\r\n        return this._myResetMovingDelay;\r\n    }\r\n\r\n    _onPointerAction(actionCallback, event) {\r\n        if (!this._isPointerEventIDValid(event)) return;\r\n\r\n        if (!this._isPointerEventValid(event)) {\r\n            if (this._myIsInsideView) {\r\n                this._onPointerLeave(event);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!this._myIsInsideView) {\r\n            this._onPointerEnter(event);\r\n        }\r\n\r\n        actionCallback(event);\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _onMouseAction(actionCallback, event) {\r\n        if (!this._myIsInsideView) return;\r\n        if (!this._isMouseAllowed()) return;\r\n        if (!this._isPointerEventIDValid(this._myLastValidPointerEvent)) return;\r\n        if (!this._isPointerEventValid(this._myLastValidPointerEvent)) return;\r\n\r\n        actionCallback(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        this._myResetMovingTimer.start(this._myResetMovingDelay);\r\n        this._myIsMoving = true;\r\n    }\r\n\r\n    _onPointerDown(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (!buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = true;\r\n            buttonInfo.myIsPressStartToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        let buttonInfo = this._myButtonInfos.get(event.button);\r\n        if (buttonInfo.myIsPressed) {\r\n            buttonInfo.myIsPressed = false;\r\n            buttonInfo.myIsPressEndToProcess = true;\r\n        }\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsInsideView || this._myLastValidPointerEvent == null || event.pointerId != this._myLastValidPointerEvent.pointerId) return;\r\n\r\n        this._myIsInsideView = false;\r\n\r\n        this._myIsMoving = false;\r\n\r\n        if (this._myPointerUpOnPointerLeave) {\r\n            for (let buttonInfo of this._myButtonInfos.values()) {\r\n                if (buttonInfo.myIsPressed) {\r\n                    buttonInfo.myIsPressed = false;\r\n                    buttonInfo.myIsPressEndToProcess = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._myPointerID = null;\r\n    }\r\n\r\n    _onPointerEnter(event) {\r\n        if ((this._myIsInsideView && this._myPointerID != null) || !this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        this._myIsInsideView = true;\r\n\r\n        this._updatePositionAndScreen(event);\r\n        this._updatePointerData(event);\r\n    }\r\n\r\n    _preventContextMenu(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    _preventMiddleButtonScroll(event) {\r\n        if (!this._isPointerEventIDValid(event) || !this._isPointerEventValid(event)) return;\r\n\r\n        if (event.button == 1) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    _updatePositionAndScreen(event) {\r\n        this._updateScreenSize();\r\n        this._myInternalMousePosition[0] = event.clientX;\r\n        this._myInternalMousePosition[1] = event.clientY;\r\n\r\n        this._myIsValid = true;\r\n    }\r\n\r\n    _updateScreenSize() {\r\n        let bounds = document.body.getBoundingClientRect();\r\n        this._myScreenSize[0] = bounds.width;\r\n        this._myScreenSize[1] = bounds.height;\r\n    }\r\n\r\n    _updatePointerData(event) {\r\n        this._myPointerID = event.pointerId;\r\n        this._myLastValidPointerEvent = event;\r\n    }\r\n\r\n    _isPointerEventIDValid(event) {\r\n        if (event == null) return false;\r\n\r\n        return this._myPointerID == null || this._myPointerID == event.pointerId;\r\n    }\r\n\r\n    _isPointerEventValid(event) {\r\n        if (event == null) return false;\r\n\r\n        let isValid = true;\r\n\r\n        for (let callback of this._myPointerEventValidCallbacks.values()) {\r\n            if (!callback(event)) {\r\n                isValid = false;\r\n                break;\r\n            };\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    _isMouseAllowed() {\r\n        // mouse events are valid only if the last pointer event was a mouse (id==1)\r\n        return this._myLastValidPointerEvent != null && this._myLastValidPointerEvent.pointerId == 1;\r\n    }\r\n\r\n    _createButtonInfo() {\r\n        return { myIsPressed: false, myIsPressStart: false, myIsPressStartToProcess: false, myIsPressEnd: false, myIsPressEndToProcess: false, };\r\n    }\r\n};", "PP.InputManager = class InputManager {\r\n    constructor() {\r\n        this._myMouse = new PP.Mouse();\r\n        this._myKeyboard = new PP.Keyboard();\r\n        this._myGamepadManager = new PP.GamepadManager();\r\n    }\r\n\r\n    start() {\r\n        this._myMouse.start();\r\n        this._myKeyboard.start();\r\n        this._myGamepadManager.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myMouse.update(dt);\r\n        this._myKeyboard.update(dt);\r\n        this._myGamepadManager.update(dt);\r\n    }\r\n\r\n    getMouse() {\r\n        return this._myMouse;\r\n    }\r\n\r\n    getKeyboard() {\r\n        return this._myKeyboard;\r\n    }\r\n\r\n    getGamepadManager() {\r\n        return this._myGamepadManager;\r\n    }\r\n};", "WL.registerComponent('pp-input-manager', {\r\n    _myGamepadFixForward: { type: WL.Type.Bool, default: true },\r\n    _myMousePreventContextMenu: { type: WL.Type.Bool, default: true },\r\n    _myMousePreventMiddleButtonScroll: { type: WL.Type.Bool, default: true },\r\n}, {\r\n    init() {\r\n        this._myInputManager = new PP.InputManager();\r\n\r\n        PP.myInputManager = this._myInputManager;\r\n\r\n        PP.myMouse = this._myInputManager.getMouse();\r\n        PP.myKeyboard = this._myInputManager.getKeyboard();\r\n\r\n        PP.myGamepadManager = this._myInputManager.getGamepadManager();\r\n        PP.myGamepads = PP.myGamepadManager.getGamepads();\r\n        PP.myLeftGamepad = PP.myGamepadManager.getLeftGamepad();\r\n        PP.myRightGamepad = PP.myGamepadManager.getRightGamepad();\r\n    },\r\n    start() {\r\n        this._myInputManager.start();\r\n\r\n        this._setupMousePrevent();\r\n        this._addGamepadCores();\r\n    },\r\n    update(dt) {\r\n        this._myInputManager.update(dt);\r\n    },\r\n    _setupMousePrevent() {\r\n        if (this._myMousePreventContextMenu) {\r\n            PP.myMouse.setContextMenuActive(false);\r\n        }\r\n\r\n        if (this._myMousePreventMiddleButtonScroll) {\r\n            PP.myMouse.setMiddleButtonScrollActive(false);\r\n        }\r\n    },\r\n    _addGamepadCores() {\r\n        let handPoseParams = new PP.HandPoseParams();\r\n        handPoseParams.myReferenceObject = PP.myPlayerObjects.myPlayerPivot;\r\n        handPoseParams.myFixForward = this._myFixForward;\r\n        handPoseParams.myForceEmulatedVelocities = false;\r\n\r\n        let leftXRGamepadCore = new PP.XRGamepadCore(PP.Handedness.LEFT, handPoseParams);\r\n        let rightXRGamepadCore = new PP.XRGamepadCore(PP.Handedness.RIGHT, handPoseParams);\r\n\r\n        PP.myLeftGamepad.addGamepadCore(\"left_xr_gamepad\", leftXRGamepadCore);\r\n        PP.myRightGamepad.addGamepadCore(\"right_xr_gamepad\", rightXRGamepadCore);\r\n\r\n        let leftKeyboardGamepadCore = new PP.KeyboardGamepadCore(PP.Handedness.LEFT, leftXRGamepadCore.getHandPose());\r\n        let rightKeyboardGamepadCore = new PP.KeyboardGamepadCore(PP.Handedness.RIGHT, rightXRGamepadCore.getHandPose());\r\n\r\n        PP.myLeftGamepad.addGamepadCore(\"left_keyboard_gamepad\", leftKeyboardGamepadCore);\r\n        PP.myRightGamepad.addGamepadCore(\"right_keyboard_gamepad\", rightKeyboardGamepadCore);\r\n\r\n        let leftClassicGamepadCore = new PP.ClassicGamepadCore(null, PP.Handedness.LEFT, leftXRGamepadCore.getHandPose());\r\n        let rightClassicGamepadCore = new PP.ClassicGamepadCore(null, PP.Handedness.RIGHT, rightXRGamepadCore.getHandPose());\r\n\r\n        PP.myLeftGamepad.addGamepadCore(\"left_classic_gamepad\", leftClassicGamepadCore);\r\n        PP.myRightGamepad.addGamepadCore(\"right_classic_gamepad\", rightClassicGamepadCore);\r\n    }\r\n});\r\n\r\nPP.myInputManager = null;\r\n\r\nPP.myMouse = null;\r\n\r\nPP.myKeyboard = null;\r\n\r\nPP.myGamepadManager = null;\r\nPP.myGamepads = null;\r\nPP.myLeftGamepad = null;\r\nPP.myRightGamepad = null;", "WL.registerComponent('pp-switch-hand-object', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myGamepad: { type: WL.Type.Object },\r\n    _myTrackedHand: { type: WL.Type.Object }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myFirstUpdate = true;\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    },\r\n    onActivate() {\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            this._start();\r\n        }\r\n\r\n        let inputSourceType = PP.InputUtils.getInputSourceTypeByHandedness(this._myHandednessType);\r\n        if (inputSourceType != null && this._myCurrentInputSourceType != inputSourceType) {\r\n            this._myCurrentInputSourceType = inputSourceType;\r\n\r\n            if (inputSourceType == PP.InputSourceType.TRACKED_HAND) {\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(false);\r\n                }\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(true);\r\n                }\r\n            } else if (inputSourceType == PP.InputSourceType.GAMEPAD) {\r\n                if (this._myTrackedHand != null) {\r\n                    this._myTrackedHand.pp_setActive(false);\r\n                }\r\n                if (this._myGamepad != null) {\r\n                    this._myGamepad.pp_setActive(true);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _start() {\r\n        if (this._myGamepad != null) {\r\n            this._myGamepad.pp_setActive(false);\r\n        }\r\n\r\n        if (this._myTrackedHand != null) {\r\n            this._myTrackedHand.pp_setActive(false);\r\n        }\r\n\r\n        this._myCurrentInputSourceType = null;\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-joint', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myJointID: {\r\n        type: WL.Type.Enum, values:\r\n            [\r\n                'Wrist',\r\n                'Thumb Metacarpal', 'Thumb Phalanx Proximal', 'Thumb Phalanx Distal', 'Thumb Tip',\r\n                'Index Metacarpal', 'Index Phalanx Proximal', 'Index Phalanx Intermediate', 'Index Phalanx Distal', 'Index Tip',\r\n                'Middle Metacarpal', 'Middle Phalanx Proximal', 'Middle Phalanx Intermediate', 'Middle Phalanx Distal', 'Middle Tip',\r\n                'Ring Metacarpal', 'Ring Phalanx Proximal', 'Ring Phalanx Intermediate', 'Ring Phalanx Distal', 'Ring Tip',\r\n                'Pinky Metacarpal', 'Pinky Phalanx Proximal', 'Pinky Phalanx Intermediate', 'Pinky Phalanx Distal', 'Pinky Tip'\r\n            ],\r\n        default: 'Wrist'\r\n    },\r\n    _myJointMesh: { type: WL.Type.Mesh },\r\n    _myJointMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = PP.InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new PP.TrackedHandJointPose(this._myHandednessInternal, this._myJointIDInternal);\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandJointPose.start();\r\n\r\n        this._buildTrackedHandHierarchy();\r\n    },\r\n    update: function (dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n        this._myJointMeshObject.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat());\r\n        this._myJointMeshObject.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n    },\r\n    _buildTrackedHandHierarchy() {\r\n        this._myJointMeshObject = this.object.pp_addObject();\r\n\r\n        let mesh = this._myJointMeshObject.pp_addComponent(\"mesh\");\r\n        mesh.mesh = this._myJointMesh;\r\n        mesh.material = this._myJointMaterial;\r\n\r\n        this._myJointMeshObject.pp_setScaleLocal(0);\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-all-joints', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myHideMetacarpals: { type: WL.Type.Bool, default: true },\r\n    _myJointMesh: { type: WL.Type.Mesh },\r\n    _myJointMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._buildTrackedHandHierarchy();\r\n    },\r\n    update: function (dt) {\r\n    },\r\n    _buildTrackedHandHierarchy() {\r\n        this._myTrackedHandMeshObject = this.object.pp_addObject();\r\n\r\n        this._myJointMeshObjectList = [];\r\n\r\n        for (let jointIDKey in PP.TrackedHandJointID) {\r\n            let jointID = PP.TrackedHandJointID[jointIDKey];\r\n            if (!this._myHideMetacarpals ||\r\n                (jointID != PP.TrackedHandJointID.THUMB_METACARPAL &&\r\n                    jointID != PP.TrackedHandJointID.INDEX_FINGER_METACARPAL && jointID != PP.TrackedHandJointID.MIDDLE_FINGER_METACARPAL &&\r\n                    jointID != PP.TrackedHandJointID.RING_FINGER_METACARPAL && jointID != PP.TrackedHandJointID.PINKY_FINGER_METACARPAL)\r\n            ) {\r\n                let jointObject = this._myTrackedHandMeshObject.pp_addObject();\r\n                this._myJointMeshObjectList[jointID] = jointObject;\r\n\r\n                jointObject.pp_addComponent(\"pp-tracked-hand-draw-joint\",\r\n                    {\r\n                        \"_myHandedness\": this._myHandedness,\r\n                        \"_myFixForward\": this._myFixForward,\r\n                        \"_myJointID\": PP.TrackedHandJointIDIndex[jointIDKey],\r\n                        \"_myJointMesh\": this._myJointMesh,\r\n                        \"_myJointMaterial\": this._myJointMaterial,\r\n                    });\r\n\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-tracked-hand-draw-skin', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myHandSkin: { type: WL.Type.Skin, default: null }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n\r\n        this._myTrackedHandPose = new PP.TrackedHandPose(this._myHandednessInternal);\r\n        this._myTrackedHandPose.setFixForward(this._myFixForward);\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandPose.start();\r\n\r\n        this._prepareJoints();\r\n    },\r\n    update: function update(dt) {\r\n        this._myTrackedHandPose.update(dt);\r\n\r\n        for (let i = 0; i < this._myJoints.length; i++) {\r\n            let jointObject = this._myJoints[i];\r\n\r\n            let jointID = jointObject.name; // joint name must match the PP.TrackedHandJointID enum value\r\n            let jointPose = this._myTrackedHandPose.getJointPose(jointID);\r\n\r\n            jointObject.pp_setTransformLocalQuat(jointPose.getTransformQuat());\r\n        }\r\n    },\r\n    _prepareJoints() {\r\n        this._myJoints = [];\r\n\r\n        let skinJointIDs = this._myHandSkin.jointIds;\r\n\r\n        for (let i = 0; i < skinJointIDs.length; i++) {\r\n            this._myJoints[i] = new WL.Object(skinJointIDs[i]);\r\n        }\r\n    }\r\n});", "PP.GamepadButtonID = {\r\n    SELECT: 0,          // Trigger\r\n    SQUEEZE: 1,         // Grip\r\n    TOUCHPAD: 2,\r\n    THUMBSTICK: 3,\r\n    BOTTOM_BUTTON: 4,   // A or X button on oculus quest gamepad\r\n    TOP_BUTTON: 5,      // B or Y button on oculus quest gamepad, reverts to TOUCHPAD button for gamepads that does not support TOP_BUTTON\r\n    THUMB_REST: 6\r\n};\r\n\r\nPP.GamepadButtonEvent = {\r\n    PRESS_START: 0,\r\n    PRESS_END: 1,\r\n    PRESSED: 2,         //Every frame that it is pressed\r\n    NOT_PRESSED: 3,     //Every frame that it is not pressed\r\n    TOUCH_START: 4,\r\n    TOUCH_END: 5,\r\n    TOUCHED: 6,         //Every frame that it is touched\r\n    NOT_TOUCHED: 7,     //Every frame that it is not touched\r\n    VALUE_CHANGED: 8,\r\n    ALWAYS: 9,          //Every frame\r\n};\r\n\r\nPP.GamepadAxesID = {\r\n    THUMBSTICK: 0\r\n};\r\n\r\nPP.GamepadAxesEvent = {\r\n    X_CHANGED: 0,\r\n    Y_CHANGED: 1,\r\n    AXES_CHANGED: 2,\r\n    ALWAYS: 3\r\n};\r\n\r\nPP.GamepadButtonInfo = class GamepadButtonInfo {\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n        this.myHandedness = handedness;\r\n\r\n        this.myIsPressed = false;\r\n        this.myPrevIsPressed = false;\r\n\r\n        this.myIsTouched = false;\r\n        this.myPrevIsTouched = false;\r\n\r\n        this.myValue = 0.0;\r\n        this.myPrevValue = 0.0;\r\n\r\n        this.myTimePressed = 0;\r\n        this.myPrevTimePressed = 0;\r\n\r\n        this.myTimeNotPressed = 0;\r\n        this.myPrevTimeNotPressed = 0;\r\n\r\n        this.myTimeTouched = 0;\r\n        this.myPrevTimeTouched = 0;\r\n\r\n        this.myTimeNotTouched = 0;\r\n        this.myPrevTimeNotTouched = 0;\r\n\r\n        this.myMultiplePressStartCount = 0;\r\n        this.myPrevMultiplePressStartCount = 0;\r\n        this.myMultiplePressEndCount = 0;\r\n        this.myPrevMultiplePressEndCount = 0;\r\n\r\n        this.myMultipleTouchStartCount = 0;\r\n        this.myPrevMultipleTouchStartCount = 0;\r\n        this.myMultipleTouchEndCount = 0;\r\n        this.myPrevMultipleTouchEndCount = 0;\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    isPressed() {\r\n        return this.myIsPressed;\r\n    }\r\n\r\n    isTouched() {\r\n        return this.myIsTouched;\r\n    }\r\n\r\n    isPressStart(multiplePressCount = null) {\r\n        return (this.myIsPressed && !this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressStartCount == multiplePressCount);\r\n    }\r\n\r\n    isPressEnd(multiplePressCount = null) {\r\n        return (!this.myIsPressed && this.myPrevIsPressed) && (multiplePressCount == null || this.myMultiplePressEndCount == multiplePressCount);\r\n    }\r\n\r\n    isTouchStart(multipleTouchCount = null) {\r\n        return (this.myIsTouched && !this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchStartCount == multipleTouchCount);\r\n    }\r\n\r\n    isTouchEnd(multipleTouchCount = null) {\r\n        return (!this.myIsTouched && this.myPrevIsTouched) && (multipleTouchCount == null || this.myMultipleTouchEndCount == multipleTouchCount);\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadButtonInfo(this.myID, this.myHandedness);\r\n        value.myIsPressed = this.myIsPressed;\r\n        value.myPrevIsPressed = this.myPrevIsPressed;\r\n        value.myIsTouched = this.myIsTouched;\r\n        value.myPrevIsTouched = this.myPrevIsTouched;\r\n        value.myValue = this.myValue;\r\n        value.myPrevValue = this.myPrevValue;\r\n\r\n        value.myTimePressed = this.myTimePressed;\r\n        value.myPrevTimePressed = this.myPrevTimePressed;\r\n        value.myTimeNotPressed = this.myTimeNotPressed;\r\n        value.myPrevTimeNotPressed = this.myPrevTimeNotPressed;\r\n\r\n        value.myTimeTouched = this.myTimeTouched;\r\n        value.myPrevTimeTouched = this.myPrevTimeTouched;\r\n        value.myTimeNotTouched = this.myTimeNotTouched;\r\n        value.myPrevTimeNotTouched = this.myPrevTimeNotTouched;\r\n\r\n        value.myMultiplePressStartCount = this.myMultiplePressStartCount;\r\n        value.myPrevMultiplePressStartCount = this.myPrevMultiplePressStartCount;\r\n        value.myMultiplePressEndCount = this.myMultiplePressEndCount;\r\n        value.myPrevMultiplePressEndCount = this.myPrevMultiplePressEndCount;\r\n\r\n        value.myMultipleTouchStartCount = this.myMultipleTouchStartCount;\r\n        value.myPrevMultipleTouchStartCount = this.myPrevMultipleTouchStartCount;\r\n        value.myMultipleTouchEndCount = this.myMultipleTouchEndCount;\r\n        value.myPrevMultipleTouchEndCount = this.myPrevMultipleTouchEndCount;\r\n\r\n        return value;\r\n    }\r\n};\r\n\r\nPP.GamepadAxesInfo = class GamepadAxesInfo {\r\n    constructor(id, handedness) {\r\n        this.myID = id;\r\n\r\n        this.myHandedness = handedness;\r\n\r\n        this.myAxes = PP.vec2_create(0, 0); // this.myAxes[0] is X,  this.myAxes[1] is Y\r\n        this.myPrevAxes = PP.vec2_create(0, 0);\r\n    }\r\n\r\n    getID() {\r\n        return this.myID;\r\n    }\r\n\r\n    getAxes() {\r\n        return this.myAxes;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this.myHandedness;\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadAxesInfo(this.myID, this.myHandedness);\r\n        value.myAxes.vec2_copy(this.myAxes);\r\n        value.myPrevAxes.vec2_copy(this.myPrevAxes);\r\n\r\n        return value;\r\n    }\r\n};\r\n\r\nPP.GamepadPulseInfo = class GamepadPulseInfo {\r\n    constructor() {\r\n        this.myIntensity = 0.0;\r\n        this.myDuration = 0.0;\r\n\r\n        this.myIsDevicePulsing = false; // true if the gamepad actually sent a request to pulse to the device\r\n    }\r\n\r\n    clone() {\r\n        let value = new PP.GamepadPulseInfo();\r\n        value.myIntensity = this.myIntensity;\r\n        value.myDuration = this.myDuration;\r\n        value.myIsDevicePulsing = this.myIsDevicePulsing;\r\n\r\n        return value;\r\n    }\r\n};", "PP.BaseGamepad = class BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myButtonInfos = [];\r\n        for (let key in PP.GamepadButtonID) {\r\n            this._myButtonInfos[PP.GamepadButtonID[key]] = new PP.GamepadButtonInfo(PP.GamepadButtonID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myAxesInfos = [];\r\n        for (let key in PP.GamepadAxesID) {\r\n            this._myAxesInfos[PP.GamepadAxesID[key]] = new PP.GamepadAxesInfo(PP.GamepadAxesID[key], this._myHandedness);\r\n        }\r\n\r\n        this._myButtonCallbacks = [];   // Signature: callback(ButtonInfo, Gamepad)\r\n        for (let key in PP.GamepadButtonID) {\r\n            this._myButtonCallbacks[PP.GamepadButtonID[key]] = [];\r\n            for (let eventKey in PP.GamepadButtonEvent) {\r\n                this._myButtonCallbacks[PP.GamepadButtonID[key]][PP.GamepadButtonEvent[eventKey]] = new Map();\r\n            }\r\n        }\r\n\r\n        this._myAxesCallbacks = [];   // Signature: callback(AxesInfo, Gamepad)\r\n        for (let key in PP.GamepadAxesID) {\r\n            this._myAxesCallbacks[PP.GamepadAxesID[key]] = [];\r\n            for (let eventKey in PP.GamepadAxesEvent) {\r\n                this._myAxesCallbacks[PP.GamepadAxesID[key]][PP.GamepadAxesEvent[eventKey]] = new Map();\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo = new PP.GamepadPulseInfo();\r\n\r\n        //Setup\r\n        this._myMultiplePressMaxDelay = 0.4;\r\n        this._myMultipleTouchMaxDelay = 0.4;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getButtonInfo(buttonID) {\r\n        return this._myButtonInfos[buttonID];\r\n    }\r\n\r\n    registerButtonEventListener(buttonID, buttonEvent, id, callback) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterButtonEventListener(buttonID, buttonEvent, id) {\r\n        this._myButtonCallbacks[buttonID][buttonEvent].delete(id);\r\n    }\r\n\r\n    getAxesInfo(axesID) {\r\n        return this._myAxesInfos[axesID];\r\n    }\r\n\r\n    registerAxesEventListener(axesID, axesEvent, id, callback) {\r\n        this._myAxesCallbacks[axesID][axesEvent].set(id, callback);\r\n    }\r\n\r\n    unregisterAxesEventListener(axesID, axesEvent, id) {\r\n        this._myAxesCallbacks[axesID][axesEvent].delete(id);\r\n    }\r\n\r\n    pulse(intensity, duration = 0) {\r\n        this._myPulseInfo.myIntensity = Math.min(Math.max(intensity, 0), 1); // clamp \r\n        this._myPulseInfo.myDuration = Math.max(duration, 0);\r\n    }\r\n\r\n    stopPulse() {\r\n        this._myPulseInfo.myIntensity = 0;\r\n        this._myPulseInfo.myDuration = 0;\r\n    }\r\n\r\n    isPulsing() {\r\n        return this._myPulseInfo.myIntensity > 0 || this._myPulseInfo.myDuration > 0;\r\n    }\r\n\r\n    getPulseInfo() {\r\n        return this._myPulseInfo;\r\n    }\r\n\r\n    getMultiplePressMaxDelay() {\r\n        return this._myMultiplePressMaxDelay;\r\n    }\r\n\r\n    setMultiplePressMaxDelay(maxDelay) {\r\n        this._myMultiplePressMaxDelay = maxDelay;\r\n    }\r\n\r\n    getMultipleTouchMaxDelay() {\r\n        return this._myMultipleTouchMaxDelay;\r\n    }\r\n\r\n    setMultipleTouchMaxDelay(maxDelay) {\r\n        this._myMultipleTouchMaxDelay = maxDelay;\r\n    }\r\n\r\n    // the following functions should be re-implemented in the actual class\r\n\r\n    getHandPose() {\r\n        return null;\r\n    }\r\n\r\n    _start() {\r\n\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        let hapticActuator = [];\r\n        return hapticActuator;\r\n    }\r\n\r\n    // the above functions should be re-implemented in the actual class\r\n\r\n    start() {\r\n        this._start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._preUpdate(dt);\r\n\r\n        this._preUpdateButtonInfos();\r\n        this._updateButtonInfos();\r\n        this._postUpdateButtonInfos(dt);\r\n\r\n        this._preUpdateAxesInfos();\r\n        this._updateAxesInfos();\r\n        this._postUpdateAxesInfos();\r\n\r\n        this._updatePulse(dt);\r\n\r\n        this._postUpdate(dt);\r\n    }\r\n\r\n    _preUpdateButtonInfos() {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            item.myPrevIsPressed = item.myIsPressed;\r\n            item.myPrevIsTouched = item.myIsTouched;\r\n            item.myPrevValue = item.myValue;\r\n        });\r\n    }\r\n\r\n    _updateButtonInfos() {\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.SELECT);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.SQUEEZE);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.TOUCHPAD);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.THUMBSTICK);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.TOP_BUTTON);\r\n        this._updateSingleButtonInfo(PP.GamepadButtonID.THUMB_REST);\r\n    }\r\n\r\n    _updateSingleButtonInfo(buttonID) {\r\n        let buttonInfo = this._myButtonInfos[buttonID];\r\n        let buttonData = this._getButtonData(buttonID);\r\n\r\n        buttonInfo.myIsPressed = buttonData.myIsPressed;\r\n        buttonInfo.myIsTouched = buttonData.myIsTouched;\r\n        buttonInfo.myValue = buttonData.myValue;\r\n    }\r\n\r\n    _postUpdateButtonInfos(dt) {\r\n        this._myButtonInfos.forEach(function (item) {\r\n            if (item.myIsPressed) {\r\n                item.myTimePressed += dt;\r\n                if (!item.myPrevIsPressed) {\r\n                    item.myMultiplePressStartCount += 1;\r\n\r\n                    item.myPrevTimeNotPressed = item.myTimeNotPressed;\r\n                    item.myTimeNotPressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotPressed + item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimePressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotPressed += dt;\r\n                if (item.myPrevIsPressed) {\r\n                    item.myMultiplePressEndCount += 1;\r\n\r\n                    item.myPrevTimePressed = item.myTimePressed;\r\n                    item.myTimePressed = 0;\r\n                }\r\n\r\n                if (item.myPrevTimePressed + item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressStartCount > 0) {\r\n                    item.myPrevMultiplePressStartCount = item.myMultiplePressStartCount;\r\n                    item.myMultiplePressStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotPressed > this._myMultiplePressMaxDelay && item.myMultiplePressEndCount > 0) {\r\n                    item.myPrevMultiplePressEndCount = item.myMultiplePressEndCount;\r\n                    item.myMultiplePressEndCount = 0;\r\n                }\r\n            }\r\n\r\n            if (item.myIsTouched) {\r\n                item.myTimeTouched += dt;\r\n                if (!item.myPrevIsTouched) {\r\n                    item.myMultipleTouchStartCount += 1;\r\n\r\n                    item.myPrevTimeNotTouched = item.myTimeNotTouched;\r\n                    item.myTimeNotTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeNotTouched + item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n\r\n                if (item.myTimeTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n            } else {\r\n                item.myTimeNotTouched += dt;\r\n                if (item.myPrevIsTouched) {\r\n                    item.myMultipleTouchEndCount += 1;\r\n\r\n                    item.myPrevTimeTouched = item.myTimeTouched;\r\n                    item.myTimeTouched = 0;\r\n                }\r\n\r\n                if (item.myPrevTimeTouched + item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchStartCount > 0) {\r\n                    item.myPrevMultipleTouchStartCount = item.myMultipleTouchStartCount;\r\n                    item.myMultipleTouchStartCount = 0;\r\n                }\r\n\r\n                if (item.myTimeNotTouched > this._myMultipleTouchMaxDelay && item.myMultipleTouchEndCount > 0) {\r\n                    item.myPrevMultipleTouchEndCount = item.myMultipleTouchEndCount;\r\n                    item.myMultipleTouchEndCount = 0;\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        for (let key in PP.GamepadButtonID) {\r\n            let buttonInfo = this._myButtonInfos[PP.GamepadButtonID[key]];\r\n            let buttonCallbacks = this._myButtonCallbacks[PP.GamepadButtonID[key]];\r\n\r\n            //PRESSED\r\n            if (buttonInfo.myIsPressed && !buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESS_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsPressed && buttonInfo.myPrevIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESS_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsPressed) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.NOT_PRESSED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //TOUCHED\r\n            if (buttonInfo.myIsTouched && !buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCH_START];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (!buttonInfo.myIsTouched && buttonInfo.myPrevIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCH_END];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            if (buttonInfo.myIsTouched) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            } else {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.NOT_TOUCHED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //VALUE\r\n            if (buttonInfo.myValue != buttonInfo.myPrevValue) {\r\n                let callbacks = buttonCallbacks[PP.GamepadButtonEvent.VALUE_CHANGED];\r\n                this._triggerCallbacks(callbacks, buttonInfo);\r\n            }\r\n\r\n            //ALWAYS\r\n            let callbacks = buttonCallbacks[PP.GamepadButtonEvent.ALWAYS];\r\n            this._triggerCallbacks(callbacks, buttonInfo);\r\n        }\r\n\r\n        this._mySelectStart = false;\r\n        this._mySelectEnd = false;\r\n        this._mySqueezeStart = false;\r\n        this._mySqueezeEnd = false;\r\n    }\r\n\r\n    _preUpdateAxesInfos() {\r\n        this._myAxesInfos.forEach(function (item) {\r\n            item.myPrevAxes[0] = item.myAxes[0];\r\n            item.myPrevAxes[1] = item.myAxes[1];\r\n        });\r\n    }\r\n\r\n    _updateAxesInfos() {\r\n        this._updateSingleAxesInfo(PP.GamepadAxesID.THUMBSTICK);\r\n    }\r\n\r\n    _updateSingleAxesInfo(axesID) {\r\n        let axesInfo = this._myAxesInfos[axesID];\r\n        let axesData = this._getAxesData(axesID);\r\n\r\n        axesInfo.myAxes[0] = axesData[0];\r\n        axesInfo.myAxes[1] = axesData[1];\r\n    }\r\n\r\n    _postUpdateAxesInfos() {\r\n        for (let key in PP.GamepadAxesID) {\r\n            let axesInfo = this._myAxesInfos[PP.GamepadAxesID[key]];\r\n            let axesCallbacks = this._myAxesCallbacks[PP.GamepadAxesID[key]];\r\n\r\n            //X CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0]) {\r\n                let callbacks = axesCallbacks[PP.GamepadAxesEvent.X_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            //Y CHANGED\r\n            if (axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let callbacks = axesCallbacks[PP.GamepadAxesEvent.Y_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            //AXES CHANGED\r\n            if (axesInfo.myAxes[0] != axesInfo.myPrevAxes[0] ||\r\n                axesInfo.myAxes[1] != axesInfo.myPrevAxes[1]) {\r\n                let callbacks = axesCallbacks[PP.GamepadAxesEvent.AXES_CHANGED];\r\n                this._triggerCallbacks(callbacks, axesInfo);\r\n            }\r\n\r\n            //ALWAYS        \r\n            let callbacks = axesCallbacks[PP.GamepadAxesEvent.ALWAYS];\r\n            this._triggerCallbacks(callbacks, axesInfo);\r\n        }\r\n    }\r\n\r\n    _updatePulse(dt) {\r\n        if (this._myPulseInfo.myIsDevicePulsing || this._myPulseInfo.myIntensity > 0) {\r\n            let hapticActuators = this._getHapticActuators();\r\n            if (hapticActuators.length > 0) {\r\n                if (this._myPulseInfo.myIntensity > 0) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.pulse(this._myPulseInfo.myIntensity, 1000); // duration is managed by this class\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = true;\r\n                } else if (this._myPulseInfo.myIsDevicePulsing) {\r\n                    for (let hapticActuator of hapticActuators) {\r\n                        hapticActuator.reset();\r\n                    }\r\n                    this._myPulseInfo.myIsDevicePulsing = false;\r\n                }\r\n            } else {\r\n                this._myPulseInfo.myIsDevicePulsing = false;\r\n            }\r\n        }\r\n\r\n        this._myPulseInfo.myDuration -= dt;\r\n        if (this._myPulseInfo.myDuration <= 0) {\r\n            this._myPulseInfo.myIntensity = 0;\r\n            this._myPulseInfo.myDuration = 0;\r\n        }\r\n    }\r\n\r\n    _triggerCallbacks(callbacks, info) {\r\n        for (let callback of callbacks.values()) {\r\n            callback(info, this);\r\n        }\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return PP.vec2_create(0, 0);\r\n    }\r\n};", "PP.UniversalGamepad = class UniversalGamepad extends PP.BaseGamepad {\r\n\r\n    constructor(handedness) {\r\n        super(handedness);\r\n\r\n        this._myGamepadCores = new Map();\r\n\r\n        this._myStarted = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n\r\n    }\r\n\r\n    addGamepadCore(id, gamepadCore) {\r\n        if (gamepadCore.getHandedness() == this.getHandedness()) {\r\n            this._myGamepadCores.set(id, gamepadCore);\r\n            if (this._myStarted) {\r\n                gamepadCore.start();\r\n            }\r\n        }\r\n    }\r\n\r\n    getGamepadCore(id) {\r\n        return this._myGamepadCores.get(id);\r\n    }\r\n\r\n    removeGamepadCore(id) {\r\n        let gamepadCore = this._myGamepadCores.get(id);\r\n        if (gamepadCore) {\r\n            this._myGamepadCores.delete(id);\r\n        }\r\n    }\r\n\r\n    removeAllGamepadCores() {\r\n        for (let id of this._myGamepadCores.keys()) {\r\n            this.removeGamepadCore(id);\r\n        }\r\n    }\r\n\r\n    getHandPose() {\r\n        let handPose = null;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let currentCoreHandPose = core.getHandPose();\r\n                if (handPose == null || (currentCoreHandPose != null && currentCoreHandPose.isValid())) {\r\n                    handPose = currentCoreHandPose;\r\n                }\r\n            }\r\n\r\n            if (handPose != null && handPose.isValid()) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return handPose;\r\n    }\r\n\r\n    _start() {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.start();\r\n        }\r\n\r\n        this._myStarted = true;\r\n    }\r\n\r\n    _preUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.preUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _postUpdate(dt) {\r\n        for (let core of this._myGamepadCores.values()) {\r\n            core.postUpdate(dt);\r\n        }\r\n    }\r\n\r\n    _getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreButtonData = core.getButtonData(buttonID);\r\n                this._myButtonData.myIsPressed = this._myButtonData.myIsPressed || coreButtonData.myIsPressed;\r\n                this._myButtonData.myIsTouched = this._myButtonData.myIsTouched || coreButtonData.myIsTouched;\r\n                if (Math.abs(coreButtonData.myValue) > Math.abs(this._myButtonData.myValue)) {\r\n                    this._myButtonData.myValue = coreButtonData.myValue;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    _getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                let coreAxesData = core.getAxesData(axesID);\r\n\r\n                if (Math.abs(coreAxesData[0]) > Math.abs(this._myAxesData[0])) {\r\n                    this._myAxesData[0] = coreAxesData[0];\r\n                }\r\n\r\n                if (Math.abs(coreAxesData[1]) > Math.abs(this._myAxesData[1])) {\r\n                    this._myAxesData[1] = coreAxesData[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    _getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        for (let core of this._myGamepadCores.values()) {\r\n            if (core.isGamepadCoreActive()) {\r\n                this._myHapticActuators.push(...core.getHapticActuators());\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n};", "PP.GamepadCore = class GamepadCore {\r\n\r\n    constructor(handedness, handPose) {\r\n        this._myHandedness = handedness;\r\n        this._myHandPose = handPose;\r\n    }\r\n\r\n    getHandedness() {\r\n        return this._myHandedness;\r\n    }\r\n\r\n    getHandPose() {\r\n        return this._myHandPose;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    preUpdate(dt) {\r\n\r\n    }\r\n\r\n    postUpdate(dt) {\r\n\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        let buttonData = this._createButtonData();\r\n        return buttonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        let axesData = this._createAxesData();\r\n        return axesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        let hapticActuators = [];\r\n        return hapticActuators;\r\n    }\r\n\r\n    _createButtonData() {\r\n        return { myIsPressed: false, myIsTouched: false, myValue: 0 };\r\n    }\r\n\r\n    _createAxesData() {\r\n        return PP.vec2_create(0, 0);\r\n    }\r\n};", "// xr-standard mapping is assumed\r\n\r\nPP.XRGamepadCore = class XRGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(handedness, handPoseParams = new PP.HandPoseParams()) {\r\n        super(handedness, new PP.HandPose(handedness, handPoseParams));\r\n\r\n        this._mySelectPressed = false;\r\n        this._mySqueezePressed = false;\r\n\r\n        this._myIsXRSessionActive = false;\r\n        this._myInputSource = null;\r\n        this._myGamepad = null;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        // connected == null is to fix webxr emulator that leaves that field undefined\r\n        return this._myIsXRSessionActive && this._myGamepad != null && (this._myGamepad.connected == null || this._myGamepad.connected);\r\n    }\r\n\r\n    start() {\r\n        this._myHandPose.start();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        this._updateHandPose(dt);\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID < this._myGamepad.buttons.length) {\r\n                let gamepadButton = this._myGamepad.buttons[buttonID];\r\n\r\n                if (buttonID != PP.GamepadButtonID.SELECT && buttonID != PP.GamepadButtonID.SQUEEZE) {\r\n                    this._myButtonData.myIsPressed = gamepadButton.pressed;\r\n                } else {\r\n                    this._myButtonData.myIsPressed = this._getSpecialButtonPressed(buttonID);\r\n                }\r\n\r\n                this._myButtonData.myIsTouched = gamepadButton.touched;\r\n                this._myButtonData.myValue = gamepadButton.value;\r\n            } else if (buttonID == PP.GamepadButtonID.TOP_BUTTON && this._myGamepad.buttons.length >= 3) {\r\n                // This way if you are using a basic touch gamepad, top button will work anyway\r\n\r\n                let touchButton = this._myGamepad.buttons[2];\r\n                this._myButtonData.myIsPressed = touchButton.pressed;\r\n                this._myButtonData.myIsTouched = touchButton.touched;\r\n                this._myButtonData.myValue = touchButton.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            let internalAxes = this._myGamepad.axes;\r\n            if (internalAxes.length == 4) {\r\n                // In this case it could be both touch axes or thumbstick axes, that depends on the gamepad\r\n                // to support both I simply choose the absolute max value (unused axes will always be 0)\r\n\r\n                // X\r\n                if (Math.abs(internalAxes[0]) > Math.abs(internalAxes[2])) {\r\n                    this._myAxesData[0] = internalAxes[0];\r\n                } else {\r\n                    this._myAxesData[0] = internalAxes[2];\r\n                }\r\n\r\n                // Y\r\n                if (Math.abs(internalAxes[1]) > Math.abs(internalAxes[3])) {\r\n                    this._myAxesData[1] = internalAxes[1];\r\n                } else {\r\n                    this._myAxesData[1] = internalAxes[3];\r\n                }\r\n\r\n            } else if (internalAxes.length == 2) {\r\n                this._myAxesData[0] = internalAxes[0];\r\n                this._myAxesData[1] = internalAxes[1];\r\n            }\r\n\r\n            // Y axis is recorded negative when thumbstick is pressed forward for weird reasons\r\n            this._myAxesData[1] = -this._myAxesData[1];\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myGamepad.hapticActuators != null && this._myGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...this._myGamepad.hapticActuators);\r\n            }\r\n\r\n            if (this._myGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(this._myGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _updateHandPose(dt) {\r\n        this._myHandPose.update(dt);\r\n\r\n        this._myInputSource = this._myHandPose.getInputSource();\r\n        if (this._myInputSource != null) {\r\n            this._myGamepad = this._myInputSource.gamepad;\r\n        } else {\r\n            this._myGamepad = null;\r\n        }\r\n    }\r\n\r\n    // This is to be more compatible\r\n    _getSpecialButtonPressed(buttonID) {\r\n        let isPressed = false;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (buttonID == PP.GamepadButtonID.SELECT) {\r\n                isPressed = this._mySelectPressed;\r\n            } else if (buttonID == PP.GamepadButtonID.SQUEEZE) {\r\n                isPressed = this._mySqueezePressed;\r\n            }\r\n        }\r\n\r\n        return isPressed;\r\n    }\r\n\r\n    _onXRSessionStart(session) {\r\n        session.addEventListener(\"selectstart\", this._selectStart.bind(this));\r\n        session.addEventListener(\"selectend\", this._selectEnd.bind(this));\r\n\r\n        session.addEventListener(\"squeezestart\", this._squeezeStart.bind(this));\r\n        session.addEventListener(\"squeezeend\", this._squeezeEnd.bind(this));\r\n\r\n        this._myIsXRSessionActive = true;\r\n    }\r\n\r\n    _onXRSessionEnd(session) {\r\n        this._myIsXRSessionActive = false;\r\n    }\r\n\r\n    // Select and Squeeze are managed this way to be more compatible\r\n    _selectStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = true;\r\n        }\r\n    }\r\n\r\n    _selectEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySelectPressed = false;\r\n        }\r\n    }\r\n\r\n    _squeezeStart(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = true;\r\n        }\r\n    }\r\n\r\n    _squeezeEnd(event) {\r\n        if (this._myInputSource != null && this._myInputSource == event.inputSource) {\r\n            this._mySqueezePressed = false;\r\n        }\r\n    }\r\n};", "PP.KeyboardGamepadCore = class KeyboardGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(handedness, handPose = null) {\r\n        super(handedness, handPose);\r\n\r\n        this._myHandPoseUpdateActive = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    setHandPoseUpdateActive(active) {\r\n        this._myHandPoseUpdateActive = active;\r\n    }\r\n\r\n    isHandPoseUpdateActive() {\r\n        return this._myHandPoseUpdateActive;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return true;\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.start();\r\n        }\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.E) || PP.myKeyboard.isKeyPressed(PP.KeyID.e);\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.Q) || PP.myKeyboard.isKeyPressed(PP.KeyID.q);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.X) || PP.myKeyboard.isKeyPressed(PP.KeyID.x);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.R) || PP.myKeyboard.isKeyPressed(PP.KeyID.r);\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.C) || PP.myKeyboard.isKeyPressed(PP.KeyID.c);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.F) || PP.myKeyboard.isKeyPressed(PP.KeyID.f);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.V) || PP.myKeyboard.isKeyPressed(PP.KeyID.v);\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.U) || PP.myKeyboard.isKeyPressed(PP.KeyID.u);\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.O) || PP.myKeyboard.isKeyPressed(PP.KeyID.o);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.M) || PP.myKeyboard.isKeyPressed(PP.KeyID.m);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.Y) || PP.myKeyboard.isKeyPressed(PP.KeyID.y);\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.N) || PP.myKeyboard.isKeyPressed(PP.KeyID.n);\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.H) || PP.myKeyboard.isKeyPressed(PP.KeyID.h);\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        this._myButtonData.myIsPressed = PP.myKeyboard.isKeyPressed(PP.KeyID.B) || PP.myKeyboard.isKeyPressed(PP.KeyID.b);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._myButtonData.myIsPressed) {\r\n            this._myButtonData.myIsTouched = true;\r\n            this._myButtonData.myValue = 1;\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.W) || PP.myKeyboard.isKeyPressed(PP.KeyID.w)) this._myAxesData[1] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.S) || PP.myKeyboard.isKeyPressed(PP.KeyID.s)) this._myAxesData[1] += -1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.D) || PP.myKeyboard.isKeyPressed(PP.KeyID.d)) this._myAxesData[0] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.A) || PP.myKeyboard.isKeyPressed(PP.KeyID.a)) this._myAxesData[0] += -1.0;\r\n            } else {\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.I) || PP.myKeyboard.isKeyPressed(PP.KeyID.i) || PP.myKeyboard.isKeyPressed(PP.KeyID.UP)) this._myAxesData[1] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.K) || PP.myKeyboard.isKeyPressed(PP.KeyID.k) || PP.myKeyboard.isKeyPressed(PP.KeyID.DOWN)) this._myAxesData[1] += -1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.L) || PP.myKeyboard.isKeyPressed(PP.KeyID.l) || PP.myKeyboard.isKeyPressed(PP.KeyID.RIGHT)) this._myAxesData[0] += 1.0;\r\n                if (PP.myKeyboard.isKeyPressed(PP.KeyID.J) || PP.myKeyboard.isKeyPressed(PP.KeyID.j) || PP.myKeyboard.isKeyPressed(PP.KeyID.LEFT)) this._myAxesData[0] += -1.0;\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n};", "PP.VirtualGamepadGamepadCore = class VirtualGamepadGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(virtualGamepad, handedness, handPose = null) {\r\n        super(handedness, handPose);\r\n\r\n        this._myHandPoseUpdateActive = false;\r\n\r\n        this._myVirtualGamepad = virtualGamepad;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    setHandPoseUpdateActive(active) {\r\n        this._myHandPoseUpdateActive = active;\r\n    }\r\n\r\n    isHandPoseUpdateActive() {\r\n        return this._myHandPoseUpdateActive;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        return this._myVirtualGamepad.isVisible();\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.start();\r\n        }\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            if (this._myVirtualGamepad.isButtonPressed(this._myHandedness, buttonID)) {\r\n                this._myButtonData.myIsPressed = true;\r\n                this._myButtonData.myIsTouched = true;\r\n                this._myButtonData.myValue = 1;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        if (this.isGamepadCoreActive()) {\r\n            this._myVirtualGamepad.getAxes(this._myHandedness, this._myAxesData);\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        return this._myHapticActuators;\r\n    }\r\n};", "PP.ClassicGamepadCore = class ClassicGamepadCore extends PP.GamepadCore {\r\n\r\n    constructor(gamepadIndex, handedness, handPose = null) {\r\n        super(handedness, handPose);\r\n\r\n        this._myGamepadIndex = gamepadIndex;    // null means any active gamepad\r\n\r\n        this._myHandPoseUpdateActive = false;\r\n\r\n        // Support Variables\r\n        this._myButtonData = this._createButtonData();\r\n        this._myAxesData = this._createAxesData();\r\n        this._myHapticActuators = [];\r\n    }\r\n\r\n    setHandPoseUpdateActive(active) {\r\n        this._myHandPoseUpdateActive = active;\r\n    }\r\n\r\n    isHandPoseUpdateActive() {\r\n        return this._myHandPoseUpdateActive;\r\n    }\r\n\r\n    isGamepadCoreActive() {\r\n        let classicGamepad = this._getClassicGamepad();\r\n        return classicGamepad != null && (classicGamepad.connected == null || classicGamepad.connected);\r\n    }\r\n\r\n    start() {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.start();\r\n        }\r\n    }\r\n\r\n    preUpdate(dt) {\r\n        if (this._myHandPose && this._myHandPoseUpdateActive) {\r\n            this._myHandPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getButtonData(buttonID) {\r\n        this._myButtonData.myIsPressed = false;\r\n        this._myButtonData.myIsTouched = false;\r\n        this._myButtonData.myValue = 0;\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            let button = null;\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[4];\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[6];\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[10];\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[13];\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[12];\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            } else {\r\n                switch (buttonID) {\r\n                    case PP.GamepadButtonID.SELECT:\r\n                        button = classicGamepad.buttons[5];\r\n                        break;\r\n                    case PP.GamepadButtonID.SQUEEZE:\r\n                        button = classicGamepad.buttons[7];\r\n                        break;\r\n                    case PP.GamepadButtonID.TOUCHPAD:\r\n                        button = null;\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMBSTICK:\r\n                        button = classicGamepad.buttons[11];\r\n                        break;\r\n                    case PP.GamepadButtonID.BOTTOM_BUTTON:\r\n                        button = classicGamepad.buttons[0];\r\n                        break;\r\n                    case PP.GamepadButtonID.TOP_BUTTON:\r\n                        button = classicGamepad.buttons[3];\r\n                        break;\r\n                    case PP.GamepadButtonID.THUMB_REST:\r\n                        button = null;\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (button != null) {\r\n                this._myButtonData.myIsPressed = button.pressed;\r\n                this._myButtonData.myIsTouched = button.touched;\r\n                this._myButtonData.myValue = button.value;\r\n            }\r\n        }\r\n\r\n        return this._myButtonData;\r\n    }\r\n\r\n    getAxesData(axesID) {\r\n        this._myAxesData.vec2_zero();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (this.getHandedness() == PP.Handedness.LEFT) {\r\n                this._myAxesData[0] = classicGamepad.axes[0];\r\n                this._myAxesData[1] = classicGamepad.axes[1];\r\n            } else {\r\n                this._myAxesData[0] = classicGamepad.axes[2];\r\n                this._myAxesData[1] = classicGamepad.axes[3];\r\n            }\r\n        }\r\n\r\n        return this._myAxesData;\r\n    }\r\n\r\n    getHapticActuators() {\r\n        this._myHapticActuators.pp_clear();\r\n\r\n        let classicGamepad = this._getClassicGamepad();\r\n        if (classicGamepad != null && this.isGamepadCoreActive()) {\r\n            if (classicGamepad.hapticActuators != null && classicGamepad.hapticActuators.length > 0) {\r\n                this._myHapticActuators.push(...classicGamepad.hapticActuators);\r\n            }\r\n\r\n            if (classicGamepad.vibrationActuator != null) {\r\n                this._myHapticActuators.push(classicGamepad.vibrationActuator);\r\n            }\r\n        }\r\n\r\n        return this._myHapticActuators;\r\n    }\r\n\r\n    _getClassicGamepad() {\r\n        let classicGamepad = null;\r\n\r\n        let gamepads = navigator.getGamepads();\r\n        if (this._myGamepadIndex != null) {\r\n            if (this._myGamepadIndex < gamepads.length) {\r\n                classicGamepad = gamepads[this._myGamepadIndex];\r\n            }\r\n        } else {\r\n            for (let gamepad of gamepads) {\r\n                if (gamepad != null && (gamepad.connected == null || gamepad.connected)) {\r\n                    classicGamepad = gamepad;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return classicGamepad;\r\n    }\r\n};", "WL.registerComponent('pp-gamepad-mesh-animator', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _mySelect: { type: WL.Type.Object, default: null },\r\n    _mySqueeze: { type: WL.Type.Object, default: null },\r\n    _myThumbstick: { type: WL.Type.Object, default: null },\r\n    _myTopButton: { type: WL.Type.Object, default: null },\r\n    _myBottomButton: { type: WL.Type.Object, default: null },\r\n    _mySelectRotateAngle: { type: WL.Type.Float, default: 15 },\r\n    _mySqueezeRotateAngle: { type: WL.Type.Float, default: 11 },\r\n    _myThumbstickRotateAngle: { type: WL.Type.Float, default: 15 },\r\n    _myThumbstickPressOffset: { type: WL.Type.Float, default: 0.000625 },\r\n    _myTopButtonPressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n    _myBottomButtonPressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n    _myUsePressForSqueeze: { type: WL.Type.Bool, default: false },\r\n    _mySqueezePressOffset: { type: WL.Type.Float, default: 0.0015 },\r\n}, {\r\n    start: function () {\r\n        let gamepad = null;\r\n        if (this._myHandedness == 0) {\r\n            gamepad = PP.myLeftGamepad; // @EDIT get gamepad LEFT here based on how you store it in your game\r\n        } else {\r\n            gamepad = PP.myRightGamepad; // @EDIT get gamepad RIGHT here based on how you store it in your game\r\n        }\r\n\r\n        if (this._mySelect != null) {\r\n            this._mySelectOriginalRotation = this._mySelect.pp_getRotationLocalQuat();\r\n            this._mySelectOriginalLeft = this._mySelect.pp_getLeftLocal();\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            this._mySqueezeOriginalPosition = this._mySqueeze.pp_getPositionLocal();\r\n            this._mySqueezeOriginalRotation = this._mySqueeze.pp_getRotationLocalQuat();\r\n            this._mySqueezeOriginalLeft = this._mySqueeze.pp_getLeftLocal();\r\n            this._mySqueezeOriginalForward = this._mySqueeze.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myThumbstick != null) {\r\n            this._myThumbstickOriginalPosition = this._myThumbstick.pp_getPositionLocal();\r\n            this._myThumbstickOriginalRotation = this._myThumbstick.pp_getRotationLocalQuat();\r\n            this._myThumbstickOriginalLeft = this._myThumbstick.pp_getLeftLocal();\r\n            this._myThumbstickOriginalUp = this._myThumbstick.pp_getUpLocal();\r\n            this._myThumbstickOriginalForward = this._myThumbstick.pp_getForwardLocal();\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            this._myTopButtonOriginalPosition = this._myTopButton.pp_getPositionLocal();\r\n            this._myTopButtonOriginalUp = this._myTopButton.pp_getUpLocal();\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n            this._myBottomButtonOriginalPosition = this._myBottomButton.pp_getPositionLocal();\r\n            this._myBottomButtonOriginalUp = this._myBottomButton.pp_getUpLocal();\r\n        }\r\n\r\n        // PRESSED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.THUMBSTICK, PP.GamepadButtonEvent.PRESS_START, this, this._thumbstickPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.THUMBSTICK, PP.GamepadButtonEvent.PRESS_END, this, this._thumbstickPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myTopButton != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.TOP_BUTTON, PP.GamepadButtonEvent.PRESS_START, this, this._topButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.TOP_BUTTON, PP.GamepadButtonEvent.PRESS_END, this, this._topButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        if (this._myBottomButton != null) {\r\n\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.BOTTOM_BUTTON, PP.GamepadButtonEvent.PRESS_START, this, this._bottomButtonPressedStart.bind(this));\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.BOTTOM_BUTTON, PP.GamepadButtonEvent.PRESS_END, this, this._bottomButtonPressedEnd.bind(this));\r\n        }\r\n\r\n        // VALUE CHANGED\r\n        if (this._mySelect != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.SELECT, PP.GamepadButtonEvent.VALUE_CHANGED, this, this._selectValueChanged.bind(this));\r\n        }\r\n\r\n        if (this._mySqueeze != null) {\r\n            gamepad.registerButtonEventListener(PP.GamepadButtonID.SQUEEZE, PP.GamepadButtonEvent.VALUE_CHANGED, this, this._squeezeValueChanged.bind(this));\r\n        }\r\n\r\n        // AXES CHANGED\r\n        if (this._myThumbstick != null) {\r\n            gamepad.registerAxesEventListener(PP.GamepadAxesID.THUMBSTICK, PP.GamepadAxesEvent.AXES_CHANGED, this, this._thumbstickValueChanged.bind(this));\r\n        }\r\n    },\r\n    _thumbstickPressedStart: function () {\r\n        let upTranslation = PP.vec3_create();\r\n        return function _thumbstickPressedStart(buttonInfo, gamepad) {\r\n            // since thumbstick object rotate you need to specifically use its original up to translate it\r\n            this._myThumbstickOriginalUp.vec3_scale(-this._myThumbstickPressOffset, upTranslation);\r\n            this._myThumbstick.pp_translateLocal(upTranslation);\r\n        };\r\n    }(),\r\n    _thumbstickPressedEnd: function _thumbstickPressedEnd(buttonInfo, gamepad) {\r\n        this._myThumbstick.pp_setPositionLocal(this._myThumbstickOriginalPosition);\r\n    },\r\n    _topButtonPressedStart: function (buttonInfo, gamepad) {\r\n        this._myTopButton.pp_translateAxisLocal(-this._myTopButtonPressOffset, this._myTopButtonOriginalUp);\r\n    },\r\n    _topButtonPressedEnd: function (buttonInfo, gamepad) {\r\n        this._myTopButton.pp_setPositionLocal(this._myTopButtonOriginalPosition);\r\n    },\r\n    _bottomButtonPressedStart: function (buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_translateAxisLocal(-this._myBottomButtonPressOffset, this._myBottomButtonOriginalUp);\r\n    },\r\n    _bottomButtonPressedEnd: function (buttonInfo, gamepad) {\r\n        this._myBottomButton.pp_setPositionLocal(this._myBottomButtonOriginalPosition);\r\n    },\r\n    _selectValueChanged: function (buttonInfo, gamepad) {\r\n        this._mySelect.pp_setRotationLocalQuat(this._mySelectOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            this._mySelect.pp_rotateAxisLocal(this._mySelectRotateAngle * buttonInfo.myValue, this._mySelectOriginalLeft);\r\n        }\r\n    },\r\n    _squeezeValueChanged: function (buttonInfo, gamepad) {\r\n        this._mySqueeze.pp_setPositionLocal(this._mySqueezeOriginalPosition);\r\n        this._mySqueeze.pp_setRotationLocalQuat(this._mySqueezeOriginalRotation);\r\n\r\n        if (buttonInfo.myValue > 0.00001) {\r\n            if (this._myUsePressForSqueeze) {\r\n                let translation = this._mySqueezePressOffset;\r\n                if (this._myHandedness == 1) {\r\n                    translation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_translateAxisLocal(translation * buttonInfo.myValue, this._mySqueezeOriginalLeft);\r\n            } else {\r\n                let rotation = -this._mySqueezeRotateAngle;\r\n                if (this._myHandedness == 1) {\r\n                    rotation *= -1;\r\n                }\r\n\r\n                this._mySqueeze.pp_rotateAxisLocal(rotation * buttonInfo.myValue, this._mySqueezeOriginalForward);\r\n            }\r\n        }\r\n    },\r\n    _thumbstickValueChanged: function (axesInfo, gamepad) {\r\n        this._myThumbstick.pp_setRotationLocalQuat(this._myThumbstickOriginalRotation);\r\n\r\n        let leftRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[1];\r\n        let forwardRotation = this._myThumbstickRotateAngle * axesInfo.myAxes[0];\r\n\r\n        if (Math.abs(leftRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(leftRotation, this._myThumbstickOriginalLeft);\r\n        }\r\n\r\n        if (Math.abs(forwardRotation) > 0.0001) {\r\n            this._myThumbstick.pp_rotateAxisLocal(forwardRotation, this._myThumbstickOriginalForward);\r\n        }\r\n    }\r\n});", "PP.GamepadManager = class GamepadManager {\r\n    constructor() {\r\n        this._myLeftGamepad = new PP.UniversalGamepad(PP.Handedness.LEFT);\r\n        this._myRightGamepad = new PP.UniversalGamepad(PP.Handedness.RIGHT);\r\n    }\r\n\r\n    start() {\r\n        this._myLeftGamepad.start();\r\n        this._myRightGamepad.start();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myLeftGamepad.update(dt);\r\n        this._myRightGamepad.update(dt);\r\n    }\r\n\r\n    getLeftGamepad() {\r\n        return this._myLeftGamepad;\r\n    }\r\n\r\n    getRightGamepad() {\r\n        return this._myRightGamepad;\r\n    }\r\n\r\n    getGamepad(handedness) {\r\n        let gamepad = null;\r\n\r\n        switch (handedness) {\r\n            case PP.Handedness.LEFT:\r\n                gamepad = this._myLeftGamepad;\r\n                break;\r\n            case PP.Handedness.RIGHT:\r\n                gamepad = this._myRightGamepad;\r\n                break;\r\n            default:\r\n                gamepad = null;\r\n        }\r\n\r\n        return gamepad;\r\n    }\r\n\r\n    getGamepads() {\r\n        let gamepads = [];\r\n\r\n        gamepads[PP.Handedness.LEFT] = this._myLeftGamepad;\r\n        gamepads[PP.Handedness.RIGHT] = this._myRightGamepad;\r\n\r\n        return gamepads;\r\n    }\r\n};", "PP.GamepadUtils = {\r\n    _mySimultaneousPressMaxDelay: 0.15,\r\n    _mySimultaneousTouchMaxDelay: 0.15,\r\n    setSimultaneousPressMaxDelay: function (simultaneousPressMaxDelay) {\r\n        PP.GamepadUtils._mySimultaneousPressMaxDelay = simultaneousPressMaxDelay;\r\n    },\r\n    setSimultaneousTouchMaxDelay: function (simultaneousTouchMaxDelay) {\r\n        PP.GamepadUtils._mySimultaneousTouchMaxDelay = simultaneousTouchMaxDelay;\r\n    },\r\n    getSimultaneousPressMaxDelay: function () {\r\n        return PP.GamepadUtils._mySimultaneousPressMaxDelay;\r\n    },\r\n    getSimultaneousTouchMaxDelay: function () {\r\n        return PP.GamepadUtils._mySimultaneousTouchMaxDelay;\r\n    },\r\n\r\n    // gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n    // if the first parameter is a number it's used as multiplePressCount\r\n    // if the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\n    isAnyButtonPressStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnePressStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isPressStart(multiplePressCount)) {\r\n                    isOnePressStart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOnePressStart) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOnePressStart;\r\n    },\r\n    // gamepadButtonIDsList is a sequence of a gamepads and a list of buttonIDs like this ([gamepad1, squeeze, top, select], [gamepad2, bottom, squeeze, select], ...)\r\n    // if the first parameter is a number it's used as multiplePressCount\r\n    // if the buttonIDs list is empty for a given gamepad, it means that every button will be included\r\n    areButtonsPressStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonPressedRecently = true;\r\n        let isOnePressStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(button.myIsPressed && (multiplePressCount == null || button.myMultiplePressStartCount == multiplePressCount) && button.myTimePressed < PP.GamepadUtils._mySimultaneousPressMaxDelay)) {\r\n                    areButtonPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressStart(multiplePressCount)) {\r\n                    isOnePressStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonPressedRecently && isOnePressStart;\r\n    },\r\n    isAnyButtonPressEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOnePressEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isPressEnd(multiplePressCount)) {\r\n                    isOnePressEnd = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOnePressEnd) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOnePressEnd;\r\n    },\r\n    areButtonsPressEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonNotPressedRecently = true;\r\n        let isOnePressEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(!button.myIsPressed && (multiplePressCount == null || button.myMultiplePressEndCount == multiplePressCount) && button.myTimeNotPressed < PP.GamepadUtils._mySimultaneousPressMaxDelay)) {\r\n                    areButtonNotPressedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isPressEnd(multiplePressCount)) {\r\n                    isOnePressEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotPressedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotPressedRecently && isOnePressEnd;\r\n    },\r\n    isAnyButtonTouchStart: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOneTouchStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isTouchStart(multiplePressCount)) {\r\n                    isOneTouchStart = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOneTouchStart) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOneTouchStart;\r\n    },\r\n    areButtonsTouchStart: function (...gamepadButtonIDsList) {\r\n        let multipleTouchCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multipleTouchCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonTouchedRecently = true;\r\n        let isOneTouchStart = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchStartCount == multipleTouchCount) && button.myTimeTouched < PP.GamepadUtils._mySimultaneousTouchMaxDelay)) {\r\n                    areButtonTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchStart(multipleTouchCount)) {\r\n                    isOneTouchStart = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonTouchedRecently && isOneTouchStart;\r\n    },\r\n    isAnyButtonTouchEnd: function (...gamepadButtonIDsList) {\r\n        let multiplePressCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multiplePressCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let isOneTouchEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (button.isTouchEnd(multiplePressCount)) {\r\n                    isOneTouchEnd = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isOneTouchEnd) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return isOneTouchEnd;\r\n    },\r\n    areButtonsTouchEnd: function (...gamepadButtonIDsList) {\r\n        let multipleTouchCount = null;\r\n        let realGamepadButtonIDsList = gamepadButtonIDsList;\r\n        if (!isNaN(gamepadButtonIDsList[0])) {\r\n            multipleTouchCount = gamepadButtonIDsList[0];\r\n            realGamepadButtonIDsList = gamepadButtonIDsList.slice(1);\r\n        }\r\n\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            if (gamepadButtonIDs.length == 1) {\r\n                for (let key in PP.GamepadButtonID) {\r\n                    gamepadButtonIDs.push(PP.GamepadButtonID[key]);\r\n                }\r\n            }\r\n        }\r\n\r\n        let areButtonNotTouchedRecently = true;\r\n        let isOneTouchEnd = false;\r\n        for (let gamepadButtonIDs of realGamepadButtonIDsList) {\r\n            let gamepad = gamepadButtonIDs[0];\r\n            for (let i = 1; i < gamepadButtonIDs.length; i++) {\r\n                let buttonID = gamepadButtonIDs[i];\r\n                let button = gamepad.getButtonInfo(buttonID);\r\n\r\n                if (!(!button.myIsTouched && (multipleTouchCount == null || button.myMultipleTouchEndCount == multipleTouchCount) && button.myTimeNotTouched < PP.GamepadUtils._mySimultaneousTouchMaxDelay)) {\r\n                    areButtonNotTouchedRecently = false;\r\n                    break;\r\n                }\r\n\r\n                if (button.isTouchEnd(multipleTouchCount)) {\r\n                    isOneTouchEnd = true;\r\n                }\r\n            }\r\n\r\n            if (!areButtonNotTouchedRecently) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return areButtonNotTouchedRecently && isOneTouchEnd;\r\n    },\r\n};", "WL.registerComponent('pp-gamepad-control-scheme', {\r\n    _myShowOnStart: { type: WL.Type.Bool, default: true },\r\n\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n\r\n    _mySelectText: { type: WL.Type.String, default: \"\" },\r\n    _mySqueezeText: { type: WL.Type.String, default: \"\" },\r\n    _myThumbstickText: { type: WL.Type.String, default: \"\" },\r\n    _myBottomButtonText: { type: WL.Type.String, default: \"\" },\r\n    _myTopButtonText: { type: WL.Type.String, default: \"\" },\r\n\r\n    _mySelect: { type: WL.Type.Object, default: null },\r\n    _mySqueeze: { type: WL.Type.Object, default: null },\r\n    _myThumbstick: { type: WL.Type.Object, default: null },\r\n    _myBottomButton: { type: WL.Type.Object, default: null },\r\n    _myTopButton: { type: WL.Type.Object, default: null },\r\n\r\n    _myTextScaleMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myTextOffsetMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myLineLengthMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myLineThicknessMultiplier: { type: WL.Type.Float, default: 1 },\r\n    _myDistanceFromButtonsMultiplier: { type: WL.Type.Float, default: 1 },\r\n\r\n    _myTextMaterial: { type: WL.Type.Material },\r\n    _myLineMaterial: { type: WL.Type.Material }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myTextMaterialFinal = (this._myTextMaterial != null) ? this._myTextMaterial : PP.myDefaultResources.myMaterials.myText.clone();\r\n        this._myLineMaterialFinal = (this._myLineMaterial != null) ? this._myLineMaterial : PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n\r\n        this._myHandednessType = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myControlSchemeDirection = (this._myHandednessType == PP.Handedness.LEFT) ? 1 : -1;\r\n\r\n        this._myVisible = false;\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._createControlScheme();\r\n        this.setVisible(this._myShowOnStart);\r\n\r\n        this._myVisibleBackup = this._myVisible;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this.setVisible(false);\r\n            this.setVisible(this._myVisibleBackup);\r\n        }\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        this._myVisibleBackup = this._myVisible;\r\n        this.setVisible(false);\r\n    },\r\n    isVisible() {\r\n        return this._myVisible;\r\n    },\r\n    setVisible(visible) {\r\n        this._myVisible = visible;\r\n\r\n        if (this._myRootObject != null) {\r\n            this._myRootObject.pp_setActive(this._myVisible);\r\n\r\n            if (this._myVisible) {\r\n                this._hideEmptySchemes();\r\n            }\r\n        }\r\n    },\r\n    setSelectText(text) {\r\n        this._mySelectText = text;\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setSqueezeText(text) {\r\n        this._mySqueezeText = text;\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setThumbstickText(text) {\r\n        this._myThumbstickText = text;\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setBottomButtonText(text) {\r\n        this._myBottomButtonText = text;\r\n        this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    setTopButtonText(text) {\r\n        this._myTopButtonText = text;\r\n        this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        this.setVisible(this._myVisible);\r\n    },\r\n    _createControlScheme() {\r\n        this._myRootObject = this.object.pp_addObject();\r\n\r\n        let distanceFromButton = 0.02 * this._myDistanceFromButtonsMultiplier;\r\n        let lineLength = 0.0935 * this._myLineLengthMultiplier;\r\n\r\n        let referenceObject = this._myThumbstick;\r\n\r\n        this._mySelectObject = this._myRootObject.pp_addObject();\r\n        this._mySelectTextComponent = this._addScheme(this._mySelect, referenceObject,\r\n            PP.vec3_create(0, 0, distanceFromButton),\r\n            PP.vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySelectObject);\r\n        this._mySelectTextComponent.text = this._mySelectText;\r\n\r\n        this._mySqueezeObject = this._myRootObject.pp_addObject();\r\n        this._mySqueezeTextComponent = this._addScheme(this._mySqueeze, referenceObject,\r\n            PP.vec3_create(distanceFromButton * this._myControlSchemeDirection, 0, 0),\r\n            PP.vec3_create(lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._mySqueezeObject);\r\n        this._mySqueezeTextComponent.text = this._mySqueezeText;\r\n\r\n        this._myThumbstickObject = this._myRootObject.pp_addObject();\r\n        this._myThumbstickTextComponent = this._addScheme(this._myThumbstick, referenceObject,\r\n            PP.vec3_create(0, distanceFromButton, 0),\r\n            PP.vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0),\r\n            this._myThumbstickObject);\r\n        this._myThumbstickTextComponent.text = this._myThumbstickText;\r\n\r\n        let thumbstickPositionLocal = this._myThumbstick.pp_getPositionLocal();\r\n        let thumbstickUpLocal = this._myThumbstick.pp_getUpLocal();\r\n\r\n        {\r\n            let bottomButtonPositionLocal = this._myBottomButton.pp_getPositionLocal();\r\n            let difference = bottomButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myBottomButtonObject = this._myRootObject.pp_addObject();\r\n            this._myBottomButtonTextComponent = this._addScheme(this._myBottomButton, referenceObject,\r\n                PP.vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                PP.vec3_create(0, 0, -lineLength),\r\n                this._myBottomButtonObject);\r\n            this._myBottomButtonTextComponent.text = this._myBottomButtonText;\r\n        }\r\n\r\n        {\r\n            let topButtonPositionLocal = this._myTopButton.pp_getPositionLocal();\r\n            let difference = topButtonPositionLocal.vec3_sub(thumbstickPositionLocal);\r\n            let differenceOnUp = difference.vec3_valueAlongAxis(thumbstickUpLocal);\r\n\r\n            this._myTopButtonObject = this._myRootObject.pp_addObject();\r\n            this._myTopButtonTextComponent = this._addScheme(this._myTopButton, referenceObject,\r\n                PP.vec3_create(0, distanceFromButton - differenceOnUp, 0),\r\n                PP.vec3_create(-lineLength * this._myControlSchemeDirection, 0, 0).vec3_rotateAxis(-45 * this._myControlSchemeDirection, PP.vec3_create(0, 1, 0)),\r\n                this._myTopButtonObject);\r\n            this._myTopButtonTextComponent.text = this._myTopButtonText;\r\n        }\r\n    },\r\n    _addScheme(buttonObject, referenceObject, startOffset, endOffset, parentObject) {\r\n        let buttonPosition = buttonObject.pp_getPositionLocal();\r\n        let referenceForward = referenceObject.pp_getForwardLocal();\r\n        let referenceRight = referenceObject.pp_getRightLocal();\r\n        let referenceUp = referenceObject.pp_getUpLocal();\r\n\r\n        let lineStart = buttonPosition.vec3_add(referenceRight.vec3_scale(startOffset[0]));\r\n        lineStart.vec3_add(referenceUp.vec3_scale(startOffset[1]), lineStart);\r\n        lineStart.vec3_add(referenceForward.vec3_scale(startOffset[2]), lineStart);\r\n\r\n        let lineEnd = lineStart.vec3_add(referenceRight.vec3_scale(endOffset[0]));\r\n        lineEnd.vec3_add(referenceUp.vec3_scale(endOffset[1]), lineEnd);\r\n        lineEnd.vec3_add(referenceForward.vec3_scale(endOffset[2]), lineEnd);\r\n\r\n        let textOffset = 0.01 * this._myTextOffsetMultiplier;\r\n        let textPosition = lineEnd.vec3_add(referenceForward.vec3_scale(-textOffset));\r\n\r\n        this._addLine(lineStart, lineEnd, parentObject);\r\n        let textComponent = this._addText(textPosition, referenceForward, referenceUp, parentObject);\r\n\r\n        return textComponent;\r\n    },\r\n    _addLine(start, end, parentObject) {\r\n        let lineDirection = end.vec3_sub(start);\r\n        let length = lineDirection.vec3_length();\r\n        lineDirection.vec3_normalize(lineDirection);\r\n\r\n        lineRootObject = parentObject.pp_addObject();\r\n        lineObject = lineRootObject.pp_addObject();\r\n\r\n        let lineMesh = lineObject.addComponent('mesh');\r\n        lineMesh.mesh = PP.myDefaultResources.myMeshes.myCylinder;\r\n        lineMesh.material = this._myLineMaterialFinal;\r\n\r\n        lineRootObject.pp_setPositionLocal(start);\r\n\r\n        let thickness = 0.001 * this._myLineThicknessMultiplier;\r\n        lineObject.pp_scaleObject(PP.vec3_create(thickness / 2, length / 2, thickness / 2));\r\n\r\n        lineObject.pp_setUpLocal(lineDirection);\r\n        lineObject.pp_translateObject(PP.vec3_create(0, length / 2, 0));\r\n    },\r\n    _addText(position, forward, up, parentObject) {\r\n        let textObject = parentObject.pp_addObject();\r\n        textObject.pp_setPositionLocal(position);\r\n        textObject.pp_lookToLocal(up, forward);\r\n        textObject.pp_scaleObject(0.0935 * this._myTextScaleMultiplier);\r\n\r\n        let textComponent = textObject.pp_addComponent(\"text\");\r\n        textComponent.alignment = WL.Alignment.Center;\r\n        textComponent.justification = WL.Justification.Top;\r\n        textComponent.material = this._myTextMaterialFinal;\r\n\r\n        return textComponent;\r\n    },\r\n    _hideEmptySchemes() {\r\n        if (this._mySelectText.length == 0) {\r\n            this._mySelectObject.pp_setActive(false);\r\n        }\r\n        if (this._mySqueezeText.length == 0) {\r\n            this._mySqueezeObject.pp_setActive(false);\r\n        }\r\n        if (this._myThumbstickText.length == 0) {\r\n            this._myThumbstickObject.pp_setActive(false);\r\n        }\r\n        if (this._myBottomButtonText.length == 0) {\r\n            this._myBottomButtonObject.pp_setActive(false);\r\n        }\r\n        if (this._myTopButtonText.length == 0) {\r\n            this._myTopButtonObject.pp_setActive(false);\r\n        }\r\n    }\r\n});", "PP.VirtualGamepad = class VirtualGamepad {\r\n    constructor(params = new PP.VirtualGamepadParams()) {\r\n        this._myParams = params;\r\n\r\n        this._myVisible = true;\r\n        this._myVirtualGamepadContainer = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons = [];\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT] = [];\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT] = [];\r\n\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON] = null;\r\n        this._myVirtualGamepadVirtualButtons[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON] = null;\r\n\r\n        this._myButtonsAmount = this._myVirtualGamepadVirtualButtons[PP.Handedness.LEFT].length;\r\n\r\n        this._myVirtualGamepadVirtualThumbsticks = [];\r\n        this._myVirtualGamepadVirtualThumbsticks[PP.Handedness.LEFT] = null;\r\n        this._myVirtualGamepadVirtualThumbsticks[PP.Handedness.RIGHT] = null;\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myVisible;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (this._myVisible != visible) {\r\n            this._myVisible = visible;\r\n\r\n            if (this._myVirtualGamepadContainer != null) {\r\n                if (this._myVisible) {\r\n                    this._myVirtualGamepadContainer.style.display = \"block\";\r\n                } else {\r\n                    this._myVirtualGamepadContainer.style.display = \"none\";\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                    for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                        if (button != null) {\r\n                            button.setActive(this._myVisible);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                    let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                    if (thumbstick != null) {\r\n                        thumbstick.setActive(this._myVisible);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isButtonPressed(handedness, gamepadButtonID) {\r\n        if (!this._myVisible) return false;\r\n\r\n        let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n        if (button != null) {\r\n            return button.isPressed();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAxes(handedness, outAxes = PP.vec2_create(0, 0)) {\r\n        if (!this._myVisible) return outAxes;\r\n\r\n        let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n        if (thumbstick != null) {\r\n            outAxes.vec2_copy(thumbstick.getAxes());\r\n        }\r\n\r\n        return outAxes;\r\n    }\r\n\r\n    start() {\r\n        this._buildVirtualGamepad();\r\n\r\n        let currentVisible = this._myVisible;\r\n        this._myVisible = !this._myVisible;\r\n        this.setVisible(currentVisible);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myParams.myAutoUpdateVisibility) {\r\n            if (PP.XRUtils.isSessionActive() && WL.vrSupported == 1) {\r\n                this.setVisible(false);\r\n            } else if (this._myParams.myShowOnDesktop && PP.BrowserUtils.isDesktop() && WL.vrSupported == 0) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnHeadset && PP.BrowserUtils.isDesktop() && WL.vrSupported == 1) {\r\n                this.setVisible(true);\r\n            } else if (this._myParams.myShowOnMobile && PP.BrowserUtils.isMobile()) {\r\n                this.setVisible(true);\r\n            } else {\r\n                this.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myVisible) {\r\n            for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n                for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                    let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                    if (button != null) {\r\n                        button.update(dt);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                if (thumbstick != null) {\r\n                    thumbstick.update(dt);\r\n                }\r\n            }\r\n\r\n            this._setMouseHoverActive(!(this._myParams.myDisableMouseHoverWhenPressed && this._isAnyElementPressed()));\r\n        }\r\n    }\r\n\r\n    _buildVirtualGamepad() {\r\n        this._documentBodySetup();\r\n\r\n        this._myVirtualGamepadContainer = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.style.display = \"block\";\r\n        this._myVirtualGamepadContainer.style.opacity = this._myParams.myOpacity.toString();\r\n        document.body.appendChild(this._myVirtualGamepadContainer);\r\n\r\n        let leftDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(leftDiv);\r\n\r\n        let rightDiv = document.createElement(\"div\");\r\n        this._myVirtualGamepadContainer.appendChild(rightDiv);\r\n\r\n        let buttonsAmount = this._myParams.myButtonsOrder[PP.Handedness.LEFT].length;\r\n        for (let i = 0; i < buttonsAmount; i++) {\r\n            if (this._myParams.myButtonsOrder[PP.Handedness.LEFT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[PP.Handedness.LEFT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[PP.Handedness.LEFT][i][1];\r\n                this._buildButton(leftDiv, PP.Handedness.LEFT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n\r\n            if (this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i] != null) {\r\n                let gamepadButtonHandedness = this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i][0];\r\n                let gamepadButtonID = this._myParams.myButtonsOrder[PP.Handedness.RIGHT][i][1];\r\n                this._buildButton(rightDiv, PP.Handedness.RIGHT, i, gamepadButtonHandedness, gamepadButtonID);\r\n            }\r\n        }\r\n\r\n        if (this._myParams.myThumbsticksOrder[PP.Handedness.LEFT] != null) {\r\n            let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[PP.Handedness.LEFT];\r\n            this._buildThumbstick(leftDiv, PP.Handedness.LEFT, gamepadThumbstickHandedness);\r\n        }\r\n\r\n        if (this._myParams.myThumbsticksOrder[PP.Handedness.RIGHT] != null) {\r\n            let gamepadThumbstickHandedness = this._myParams.myThumbsticksOrder[PP.Handedness.RIGHT];\r\n            this._buildThumbstick(rightDiv, PP.Handedness.RIGHT, gamepadThumbstickHandedness);\r\n        }\r\n    }\r\n\r\n    _documentBodySetup() {\r\n        document.body.style.overflow = \"hidden\";\r\n        document.body.style.userSelect = \"none\";\r\n        document.body.style.webkitUserSelect = \"none\";\r\n        document.body.style.webkitTapHighlightColor = \"transparent\";\r\n        document.body.style.touchAction = \"none\";\r\n        document.addEventListener('gesturestart', function (e) {\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    _buildButton(buttonElementParent, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        let virtualGamepadVirtualButton = new PP.VirtualGamepadVirtualButton(buttonElementParent, this._myParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID);\r\n        this._myVirtualGamepadVirtualButtons[gamepadButtonHandedness][gamepadButtonID] = virtualGamepadVirtualButton;\r\n    }\r\n\r\n    _buildThumbstick(thumbstickElementParent, virtualThumbstickHandedness, gamepadThumbstickHandedness) {\r\n        let virtualGamepadVirtualThumbstick = new PP.VirtualGamepadVirtualThumbstick(thumbstickElementParent, this._myParams, virtualThumbstickHandedness, gamepadThumbstickHandedness);\r\n        this._myVirtualGamepadVirtualThumbsticks[gamepadThumbstickHandedness] = virtualGamepadVirtualThumbstick;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _isAnyElementPressed() {\r\n        let isAnyElementPressed = false;\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null && button.isPressed()) {\r\n                    isAnyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!isAnyElementPressed) {\r\n            for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n                let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n                if (thumbstick != null && thumbstick.isPressed()) {\r\n                    isAnyElementPressed = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isAnyElementPressed;\r\n    }\r\n\r\n    _setMouseHoverActive(hoverActive) {\r\n        for (let handedness in this._myVirtualGamepadVirtualButtons) {\r\n            for (let gamepadButtonID in this._myVirtualGamepadVirtualButtons[handedness]) {\r\n                let button = this._myVirtualGamepadVirtualButtons[handedness][gamepadButtonID];\r\n                if (button != null) {\r\n                    button.setMouseHoverActive(hoverActive);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let handedness in this._myVirtualGamepadVirtualThumbsticks) {\r\n            let thumbstick = this._myVirtualGamepadVirtualThumbsticks[handedness];\r\n            if (thumbstick != null) {\r\n                thumbstick.setMouseHoverActive(hoverActive);\r\n            }\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-virtual-gamepad\", {\r\n    _myShowOnDesktop: { type: WL.Type.Bool, default: false },   // you may have to enable headset too\r\n    _myShowOnMobile: { type: WL.Type.Bool, default: true },\r\n    _myShowOnHeadset: { type: WL.Type.Bool, default: false },   // not 100% reliable, this is true if the device supports vr and it is desktop\r\n    _myAddToUniversalGamepad: { type: WL.Type.Bool, default: true },\r\n    _myOpacity: { type: WL.Type.Float, default: 0.5 },\r\n    _myIconColor: { type: WL.Type.String, default: \"#e0e0e0\" },\r\n    _myBackgroundColor: { type: WL.Type.String, default: \"#616161\" },\r\n    _myInterfaceScale: { type: WL.Type.Float, default: 1 },\r\n    _myMarginScale: { type: WL.Type.Float, default: 1 },\r\n\r\n    ADVANCED_PARAMS_BELOW: { type: WL.Type.String, default: '' },\r\n\r\n    _myLabelFontSize: { type: WL.Type.Float, default: 2 },\r\n    _myLabelFontFamily: { type: WL.Type.String, default: 'sans-serif' },\r\n    _myLabelFontWeight: { type: WL.Type.String, default: 'bold' },\r\n    _myImagePressedBrightness: { type: WL.Type.Float, default: 0.5 },\r\n\r\n    _myLeftSelectButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftSelectButtonOrderIndex: { type: WL.Type.Int, default: 1 },\r\n    _myLeftSelectButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'frame' },\r\n    _myLeftSelectButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftSqueezeButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftSqueezeButtonOrderIndex: { type: WL.Type.Int, default: 0 },\r\n    _myLeftSqueezeButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'square' },\r\n    _myLeftSqueezeButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftThumbstickButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftThumbstickButtonOrderIndex: { type: WL.Type.Int, default: 4 },\r\n    _myLeftThumbstickButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'dot' },\r\n    _myLeftThumbstickButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftTopButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftTopButtonOrderIndex: { type: WL.Type.Int, default: 2 },\r\n    _myLeftTopButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'circle' },\r\n    _myLeftTopButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myLeftBottomButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myLeftBottomButtonOrderIndex: { type: WL.Type.Int, default: 3 },\r\n    _myLeftBottomButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'ring' },\r\n    _myLeftBottomButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightSelectButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightSelectButtonOrderIndex: { type: WL.Type.Int, default: 1 },\r\n    _myRightSelectButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'frame' },\r\n    _myRightSelectButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightSqueezeButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightSqueezeButtonOrderIndex: { type: WL.Type.Int, default: 0 },\r\n    _myRightSqueezeButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'square' },\r\n    _myRightSqueezeButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightThumbstickButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightThumbstickButtonOrderIndex: { type: WL.Type.Int, default: 4 },\r\n    _myRightThumbstickButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'dot' },\r\n    _myRightThumbstickButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightTopButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightTopButtonOrderIndex: { type: WL.Type.Int, default: 2 },\r\n    _myRightTopButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'circle' },\r\n    _myRightTopButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' },\r\n\r\n    _myRightBottomButtonVisible: { type: WL.Type.Bool, default: true },\r\n    _myRightBottomButtonOrderIndex: { type: WL.Type.Int, default: 3 },\r\n    _myRightBottomButtonIconType: { type: WL.Type.Enum, values: ['none', 'label', 'image', 'dot', 'circle', 'square', 'ring', 'frame'], default: 'ring' },\r\n    _myRightBottomButtonIconLabelOrImageUrl: { type: WL.Type.String, default: '' }\r\n}, {\r\n    start() {\r\n        let params = new PP.VirtualGamepadParams();\r\n        params.defaultSetup();\r\n\r\n        for (let handedness in params.myButtonParams) {\r\n            for (let gamepadButtonID in params.myButtonParams[handedness]) {\r\n                let buttonParams = params.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = this._myBackgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconColor = this._myIconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n            }\r\n        }\r\n\r\n        for (let handedness in params.myThumbstickParams) {\r\n            let thumbstickParams = params.myThumbstickParams[handedness];\r\n            thumbstickParams.myBackgroundColor = this._myBackgroundColor;\r\n            thumbstickParams.myIconParams.myBackgroundColor = this._myIconColor;\r\n            thumbstickParams.myIconParams.myBackgroundPressedColor = this._myIconColor;\r\n            thumbstickParams.myIconParams.myIconColor = this._myBackgroundColor;\r\n            thumbstickParams.myIconParams.myIconPressedColor = this._myBackgroundColor;\r\n        }\r\n\r\n        params.myOpacity = this._myOpacity;\r\n\r\n        params.myInterfaceScale = this._myInterfaceScale;\r\n        params.myMarginScale = this._myMarginScale;\r\n\r\n        params.myShowOnDesktop = this._myShowOnDesktop;\r\n        params.myShowOnMobile = this._myShowOnMobile;\r\n        params.myShowOnHeadset = this._myShowOnHeadset;\r\n\r\n        if (params.myShowOnDesktop || params.myShowOnMobile || params.myShowOnHeadset) {\r\n            params.myAutoUpdateVisibility = true;\r\n        } else {\r\n            params.myAutoUpdateVisibility = false;\r\n        }\r\n\r\n        this._advancedSetup(params);\r\n\r\n        this._myVirtualGamepad = new PP.VirtualGamepad(params);\r\n        if (!params.myAutoUpdateVisibility) {\r\n            this._myVirtualGamepad.setVisible(false);\r\n        }\r\n\r\n        this._myVirtualGamepad.start();\r\n\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update(dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n\r\n            if (this._myAddToUniversalGamepad) {\r\n                let leftVirtualGamepadGamepadCore = new PP.VirtualGamepadGamepadCore(this._myVirtualGamepad, PP.Handedness.LEFT, PP.myLeftGamepad.getGamepadCore(\"left_xr_gamepad\").getHandPose());\r\n                let rightVirtualGamepadGamepadCore = new PP.VirtualGamepadGamepadCore(this._myVirtualGamepad, PP.Handedness.RIGHT, PP.myRightGamepad.getGamepadCore(\"right_xr_gamepad\").getHandPose());\r\n\r\n                PP.myLeftGamepad.addGamepadCore(\"left_virtual_gamepad\", leftVirtualGamepadGamepadCore);\r\n                PP.myRightGamepad.addGamepadCore(\"right_virtual_gamepad\", rightVirtualGamepadGamepadCore);\r\n            }\r\n        }\r\n\r\n        this._myVirtualGamepad.update(dt);\r\n    },\r\n    _advancedSetup(params) {\r\n        params.myButtonsOrder[PP.Handedness.LEFT] = [null, null, null, null, null];\r\n        params.myButtonsOrder[PP.Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSelectButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftSelectButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myLeftSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftSqueezeButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftSqueezeButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myLeftThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftThumbstickButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftThumbstickButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftTopButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftTopButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myLeftBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myLeftBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myLeftBottomButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.LEFT][this._myLeftBottomButtonOrderIndex] = [PP.Handedness.LEFT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT];\r\n            buttonParams.myIconParams.myIconType = this._myRightSelectButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSelectIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSelectButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightSelectButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SELECT];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE];\r\n            buttonParams.myIconParams.myIconType = this._myRightSqueezeButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightSqueezeIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightSqueezeButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightSqueezeButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SQUEEZE];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK];\r\n            buttonParams.myIconParams.myIconType = this._myRightThumbstickButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightThumbstickButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightThumbstickButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightThumbstickButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.THUMBSTICK];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightTopButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightTopButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightTopButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightTopButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.TOP_BUTTON];\r\n            }\r\n        }\r\n\r\n        {\r\n            let buttonParams = params.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            buttonParams.myIconParams.myIconType = this._myRightBottomButtonIconType;\r\n            buttonParams.myIconParams.myLabel = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myImageURL = this._myRightBottomButtonIconLabelOrImageUrl;\r\n            buttonParams.myIconParams.myLabelFontSize = this._myLabelFontSize;\r\n            buttonParams.myIconParams.myLabelFontFamily = this._myLabelFontFamily;\r\n            buttonParams.myIconParams.myLabelFontWeight = this._myLabelFontWeight;\r\n            buttonParams.myIconParams.myImagePressedBrightness = this._myImagePressedBrightness;\r\n\r\n            if (this._myRightBottomButtonVisible) {\r\n                params.myButtonsOrder[PP.Handedness.RIGHT][this._myRightBottomButtonOrderIndex] = [PP.Handedness.RIGHT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n            }\r\n        }\r\n    }\r\n});", "PP.VirtualGamepadButtonParams = class VirtualGamepadButtonParams {\r\n    constructor() {\r\n        this.myIconParams = new PP.VirtualGamepadIconParams();\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadThumbstickParams = class VirtualGamepadThumbstickParams {\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n\r\n        this.myMaxDistanceFromCenterMultiplier = 1;\r\n\r\n        this.myReleaseTransitionSeconds = 0.2;\r\n        this.myMoveTransitionSeconds = 0;\r\n\r\n        this.myIncludeBackgroundToDetection = false; // you can press the background of the icon to move the thumbstick, makes it harder to miss it\r\n\r\n        this.myIconParams = new PP.VirtualGamepadIconParams();\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadParams = class VirtualGamepadParams {\r\n    constructor() {\r\n        this.myShowOnDesktop = false;\r\n        this.myShowOnMobile = false;\r\n        this.myShowOnHeadset = false;   // not 100% reliable, this is true if the device supports vr and it is desktop\r\n\r\n        this.myAutoUpdateVisibility = false;\r\n\r\n        this.myOpacity = 1;\r\n\r\n        this.myInterfaceScale = 1;\r\n        this.myMarginScale = 1;\r\n\r\n        this.myReleaseOnPointerLeave = true;            // if mouse leaves the canvas it will be like it was released\r\n        this.myStopPropagatingMouseDownEvents = true;   // this can be used to make it so the rest of the game will ignore clicks on the virtual gamepad\r\n\r\n        // Advanced Params\r\n\r\n        this.myButtonParams = [];\r\n        this.myButtonParams[PP.Handedness.LEFT] = [];\r\n        this.myButtonParams[PP.Handedness.RIGHT] = [];\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON] = new PP.VirtualGamepadButtonParams();\r\n\r\n        this.myThumbstickParams = [];\r\n        this.myThumbstickParams[PP.Handedness.LEFT] = new PP.VirtualGamepadThumbstickParams();\r\n        this.myThumbstickParams[PP.Handedness.RIGHT] = new PP.VirtualGamepadThumbstickParams();\r\n\r\n        this.myButtonsOrder = [];\r\n        this.myButtonsOrder[PP.Handedness.LEFT] = [null, null, null, null, null];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT] = [null, null, null, null, null];\r\n\r\n        this.myThumbsticksOrder = [];\r\n        this.myThumbsticksOrder[PP.Handedness.LEFT] = null;\r\n        this.myThumbsticksOrder[PP.Handedness.RIGHT] = null;\r\n\r\n        // Even More Advanced Params\r\n\r\n        this.myValidPointerButtons = [];\r\n\r\n        this.myMarginLeft = 0;\r\n        this.myMarginRight = 0;\r\n        this.myMarginBottom = 0;\r\n\r\n        this.myThumbstickSize = 0;\r\n\r\n        this.myButtonSize = 0;\r\n        this.myButtonsRingRadius = 0;\r\n        this.myButtonsRingStartAngle = 0;\r\n        this.myButtonsRingEndAngle = 0;\r\n\r\n        this.myFontSize = 0;\r\n\r\n        this.myMinSizeMultiplier = 0;  // can be used to specify a min size based on the view width for when the view is in portrait mode\r\n\r\n        this.myDisableMouseHoverWhenPressed = false;\r\n    }\r\n\r\n    defaultSetup() {\r\n        this.myShowOnMobile = true;\r\n        this.myAutoUpdateVisibility = true;\r\n\r\n        this.myOpacity = 0.5;\r\n\r\n        // Params\r\n\r\n        let backgroundColor = \"#616161\";\r\n        let iconColor = \"#e0e0e0\";\r\n\r\n        let buttonHoveredBrightness = 0.75;\r\n        let thumbstickHoveredBrightness = 0.75;\r\n\r\n        let thumbstickIncludeBackgroundToDetection = true;\r\n\r\n        for (let handedness in this.myButtonParams) {\r\n            for (let gamepadButtonID in this.myButtonParams[handedness]) {\r\n                let buttonParams = this.myButtonParams[handedness][gamepadButtonID];\r\n                buttonParams.myIconParams.myBackgroundColor = backgroundColor;\r\n                buttonParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n                buttonParams.myIconParams.myIconColor = iconColor;\r\n                buttonParams.myIconParams.myIconPressedColor = backgroundColor;\r\n                buttonParams.myIconParams.myOverallHoveredBrightness = buttonHoveredBrightness;\r\n            }\r\n        }\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SQUEEZE].myIconParams.myIconType = PP.VirtualGamepadIconType.SQUARE;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SQUEEZE].myIconParams.myIconType = PP.VirtualGamepadIconType.SQUARE;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.SELECT].myIconParams.myIconType = PP.VirtualGamepadIconType.FRAME;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.SELECT].myIconParams.myIconType = PP.VirtualGamepadIconType.FRAME;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.CIRCLE;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.TOP_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.CIRCLE;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.RING;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.BOTTOM_BUTTON].myIconParams.myIconType = PP.VirtualGamepadIconType.RING;\r\n\r\n        this.myButtonParams[PP.Handedness.LEFT][PP.GamepadButtonID.THUMBSTICK].myIconParams.myIconType = PP.VirtualGamepadIconType.DOT;\r\n        this.myButtonParams[PP.Handedness.RIGHT][PP.GamepadButtonID.THUMBSTICK].myIconParams.myIconType = PP.VirtualGamepadIconType.DOT;\r\n\r\n        for (let handedness in this.myThumbstickParams) {\r\n            let thumbstickParams = this.myThumbstickParams[handedness];\r\n            thumbstickParams.myBackgroundColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myBackgroundColor = iconColor;\r\n            thumbstickParams.myIconParams.myBackgroundPressedColor = iconColor;\r\n            thumbstickParams.myIconParams.myIconColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myIconPressedColor = backgroundColor;\r\n            thumbstickParams.myIconParams.myOverallHoveredBrightness = thumbstickHoveredBrightness;\r\n\r\n            thumbstickParams.myIncludeBackgroundToDetection = thumbstickIncludeBackgroundToDetection;\r\n        }\r\n\r\n        // Orders\r\n\r\n        this.myButtonsOrder[PP.Handedness.LEFT][0] = [PP.Handedness.LEFT, PP.GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][1] = [PP.Handedness.LEFT, PP.GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][2] = [PP.Handedness.LEFT, PP.GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][3] = [PP.Handedness.LEFT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.LEFT][4] = [PP.Handedness.LEFT, PP.GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][0] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SQUEEZE];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][1] = [PP.Handedness.RIGHT, PP.GamepadButtonID.SELECT];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][2] = [PP.Handedness.RIGHT, PP.GamepadButtonID.TOP_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][3] = [PP.Handedness.RIGHT, PP.GamepadButtonID.BOTTOM_BUTTON];\r\n        this.myButtonsOrder[PP.Handedness.RIGHT][4] = [PP.Handedness.RIGHT, PP.GamepadButtonID.THUMBSTICK];\r\n\r\n        this.myThumbsticksOrder[PP.Handedness.LEFT] = PP.Handedness.LEFT;\r\n        this.myThumbsticksOrder[PP.Handedness.RIGHT] = PP.Handedness.RIGHT;\r\n\r\n        // Sizes\r\n\r\n        this.myMarginLeft = 3;\r\n        this.myMarginRight = 3;\r\n        this.myMarginBottom = 3;\r\n\r\n        this.myThumbstickSize = 15;\r\n\r\n        this.myButtonSize = 5;\r\n        this.myButtonsRingRadius = 12;\r\n        this.myButtonsRingStartAngle = 385;\r\n        this.myButtonsRingEndAngle = 245;\r\n\r\n        this.myMinSizeMultiplier = 5 / 3;\r\n\r\n        // Cauldron\r\n\r\n        this.myDisableMouseHoverWhenPressed = true;\r\n        this.myValidPointerButtons = [0];\r\n    }\r\n};", "PP.VirtualGamepadVirtualButton = class VirtualGamepadVirtualButton {\r\n    constructor(buttonElementParent, virtualGamepadParams, virtualButtonHandedness, virtualButtonIndex, gamepadButtonHandedness, gamepadButtonID) {\r\n        this._myButtonElement = null;\r\n        this._myButtonIcon = null;\r\n        this._myButtonDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myButtonParams[gamepadButtonHandedness][gamepadButtonID];\r\n\r\n        this._build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex);\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myButtonDetectionElement.addEventListener(\"mouseenter\", this._onButtonEnter.bind(this));\r\n        this._myButtonDetectionElement.addEventListener(\"mouseleave\", this._onButtonLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myButtonIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myButtonIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myButtonIcon.setPressed(false);\r\n\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n    }\r\n\r\n    update(dt) {\r\n        this._myButtonIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myButtonIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onButtonEnter(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onButtonLeave(event) {\r\n        if (!this._myIsActive) return;\r\n\r\n        this._myButtonIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _build(buttonElementParent, virtualButtonHandedness, virtualButtonIndex) {\r\n        // setup variables used for the sizes and the like\r\n\r\n        let buttonSize = this._myVirtualGamepadParams.myButtonSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n        let buttonsRingRadius = this._myVirtualGamepadParams.myButtonsRingRadius * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let buttonRingStartAngle = this._myVirtualGamepadParams.myButtonsRingStartAngle;\r\n        let buttonRingEndAngle = this._myVirtualGamepadParams.myButtonsRingEndAngle;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonsAmount = this._myVirtualGamepadParams.myButtonsOrder[PP.Handedness.LEFT].length;\r\n\r\n        let angleStep = (buttonRingEndAngle - buttonRingStartAngle) / (buttonsAmount - 1);\r\n\r\n        let currentAngle = Math.pp_angleClamp(buttonRingStartAngle + angleStep * virtualButtonIndex);\r\n\r\n        if (virtualButtonHandedness == PP.Handedness.RIGHT) {\r\n            currentAngle = 270 + (270 - currentAngle);\r\n            currentAngle = Math.pp_angleClamp(currentAngle, true);\r\n        }\r\n\r\n        let counterAngle = 360 - currentAngle;\r\n\r\n        // actual button creation\r\n\r\n        let buttonPivot = document.createElement(\"div\");\r\n        buttonPivot.style.position = \"absolute\";\r\n        buttonPivot.style.width = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n        buttonPivot.style.height = this._createSizeValue(buttonSize, minSizeMultiplier);\r\n\r\n        let centerOnThumbstickBottom = marginBottom + thumbstickSize / 2 - buttonSize / 2;\r\n\r\n        buttonPivot.style.bottom = this._createSizeValue(centerOnThumbstickBottom, minSizeMultiplier);\r\n\r\n        if (virtualButtonHandedness == PP.Handedness.LEFT) {\r\n            let centerOnThumbstickLeft = marginLeft + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.left = this._createSizeValue(centerOnThumbstickLeft, minSizeMultiplier);\r\n        } else {\r\n            let centerOnThumbstickRight = marginRight + thumbstickSize / 2 - buttonSize / 2;\r\n            buttonPivot.style.right = this._createSizeValue(centerOnThumbstickRight, minSizeMultiplier);\r\n        }\r\n\r\n        buttonPivot.style.transform = \"rotate(\" + currentAngle + \"deg) translateX(\" + this._createSizeValue(buttonsRingRadius, minSizeMultiplier) + \")\";\r\n        buttonElementParent.appendChild(buttonPivot);\r\n\r\n        this._myButtonElement = document.createElement(\"div\");\r\n        this._myButtonElement.style.position = \"absolute\";\r\n        this._myButtonElement.style.width = \"100%\";\r\n        this._myButtonElement.style.height = \"100%\";\r\n        this._myButtonElement.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(this._myButtonElement);\r\n\r\n        this._myButtonIcon = new PP.VirtualGamepadIcon(this._myButtonElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        let buttonElementStill = document.createElement(\"div\");\r\n        buttonElementStill.style.position = \"absolute\";\r\n        buttonElementStill.style.width = \"100%\";\r\n        buttonElementStill.style.height = \"100%\";\r\n        buttonElementStill.style.transform = \"rotate(\" + counterAngle + \"deg)\";\r\n        buttonPivot.appendChild(buttonElementStill);\r\n\r\n        let buttonDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        buttonDetectionElementSVG.style.position = \"absolute\";\r\n        buttonDetectionElementSVG.style.width = \"100%\";\r\n        buttonDetectionElementSVG.style.height = \"100%\";\r\n        buttonElementStill.appendChild(buttonDetectionElementSVG);\r\n\r\n        let buttonDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        buttonDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n        buttonDetectionElement.setAttributeNS(null, 'r', \"50%\");\r\n        buttonDetectionElement.style.fill = \"#00000000\";\r\n        buttonDetectionElementSVG.appendChild(buttonDetectionElement);\r\n\r\n        this._myButtonDetectionElement = buttonDetectionElement;\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n};", "PP.VirtualGamepadVirtualThumbstick = class VirtualGamepadVirtualThumbstick {\r\n    constructor(thumbstickElementParent, virtualGamepadParams, virtualThumbstickHandedness, gamepadThumbstickHandedness) {\r\n        this._myThumbstickElement = null;\r\n        this._myThumbstickIcon = null;\r\n        this._myThumbstickBackground = null;\r\n        this._myThumbstickDetectionElement = null;\r\n\r\n        this._myIsActive = true;\r\n\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null\r\n\r\n        this._myThumbstickDragStartPosition = PP.vec2_create();\r\n\r\n        this._myAxes = PP.vec2_create();\r\n        this._myIsPressed = false;\r\n\r\n        this._myVirtualGamepadParams = virtualGamepadParams;\r\n        this._myParams = this._myVirtualGamepadParams.myThumbstickParams[gamepadThumbstickHandedness];\r\n\r\n        this._build(thumbstickElementParent, virtualThumbstickHandedness);\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"pointerdown\", this._onPointerDown.bind(this, this._myVirtualGamepadParams.myStopPropagatingPointerDownEvents));\r\n        document.body.addEventListener(\"pointerup\", this._onPointerUp.bind(this));\r\n        document.body.addEventListener(\"pointermove\", this._onPointerMove.bind(this));\r\n\r\n        if (this._myVirtualGamepadParams.myReleaseOnPointerLeave) {\r\n            document.body.addEventListener(\"pointerleave\", this._onPointerLeave.bind(this));\r\n        }\r\n\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseenter\", this._onThumbstickEnter.bind(this));\r\n        this._myThumbstickDetectionElement.addEventListener(\"mouseleave\", this._onThumbstickLeave.bind(this));\r\n    }\r\n\r\n    isPressed() {\r\n        return this._myIsActive && this._myIsPressed;\r\n    }\r\n\r\n    getAxes() {\r\n        return this._myAxes;\r\n    }\r\n\r\n    setActive(active) {\r\n        if (this._myIsActive != active) {\r\n            this.reset();\r\n            this._myThumbstickIcon.reset();\r\n        }\r\n\r\n        this._myIsActive = active;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myThumbstickIcon.setMouseHoverActive(hoverActive);\r\n    }\r\n\r\n    reset() {\r\n        this._myThumbstickIcon.setPressed(false);\r\n\r\n        this._myAxes[0] = 0;\r\n        this._myAxes[1] = 0;\r\n        this._myIsPressed = false;\r\n        this._myPointerID = null;\r\n        this._myPointerButton = null;\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myReleaseTransitionSeconds + \"s ease 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(0px, 0px)\";\r\n    }\r\n\r\n    update(dt) {\r\n        this._myThumbstickIcon.update(dt);\r\n    }\r\n\r\n    _onPointerDown(stopPropagatingPointerDownEvents, event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myIsPressed) return;\r\n        if (!this._myVirtualGamepadParams.myValidPointerButtons.pp_hasEqual(event.button)) return;\r\n\r\n        if (stopPropagatingPointerDownEvents) {\r\n            event.stopPropagation();\r\n        }\r\n        event.preventDefault();\r\n\r\n        this._myThumbstickIcon.setPressed(true);\r\n\r\n        this._myPointerID = event.pointerId;\r\n        this._myPointerButton = event.button;\r\n\r\n        this._myThumbstickDragStartPosition[0] = event.clientX;\r\n        this._myThumbstickDragStartPosition[1] = event.clientY;\r\n\r\n        this._myIsPressed = true;\r\n    }\r\n\r\n    _onPointerUp(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n        if (this._myPointerButton != null && this._myPointerButton != event.button) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onPointerLeave(event) {\r\n        if (!this._myIsActive) return;\r\n        if (this._myPointerID != event.pointerId) return;\r\n\r\n        this.reset();\r\n    }\r\n\r\n    _onThumbstickEnter(event) {\r\n        this._myThumbstickIcon.onMouseEnter(event);\r\n    }\r\n\r\n    _onThumbstickLeave(event) {\r\n        this._myThumbstickIcon.onMouseLeave(event);\r\n    }\r\n\r\n    _onPointerMove(event) {\r\n        if (!this._myIsActive) return;\r\n        if (!this._myIsPressed) return;\r\n\r\n        if (event.pointerId != this._myPointerID) return;\r\n\r\n        let mouseX = event.clientX;\r\n        let mouseY = event.clientY;\r\n\r\n        let backgroundRect = this._myThumbstickBackground.getBoundingClientRect();\r\n        let maxDistanceFromCenter = (backgroundRect.width / 2) * this._myParams.myMaxDistanceFromCenterMultiplier;\r\n\r\n        let xDiff = mouseX - this._myThumbstickDragStartPosition[0];\r\n        let yDiff = mouseY - this._myThumbstickDragStartPosition[1];\r\n\r\n        let angle = Math.atan2(yDiff, xDiff);\r\n        let distanceFromDragStart = Math.min(maxDistanceFromCenter, Math.hypot(xDiff, yDiff));\r\n\r\n        let translateThumbstickX = distanceFromDragStart * Math.cos(angle);\r\n        let translateThumbstickY = distanceFromDragStart * Math.sin(angle);\r\n\r\n        this._myThumbstickElement.style.transition = \"all \" + this._myParams.myMoveTransitionSeconds + \"s ease-out 0s\";\r\n        this._myThumbstickElement.style.transform = \"translate(\" + translateThumbstickX + \"px, \" + translateThumbstickY + \"px)\";\r\n\r\n        this._myAxes[0] = translateThumbstickX / maxDistanceFromCenter;\r\n        this._myAxes[1] = -(translateThumbstickY / maxDistanceFromCenter);\r\n    }\r\n\r\n    _build(thumbstickElementParent, virtualThumbstickHandedness) {\r\n        // setup variables used for the sizes and the like\r\n\r\n        let thumbstickSize = this._myVirtualGamepadParams.myThumbstickSize * this._myVirtualGamepadParams.myInterfaceScale;\r\n\r\n        let marginBottom = this._myVirtualGamepadParams.myMarginBottom * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginLeft = this._myVirtualGamepadParams.myMarginLeft * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n        let marginRight = this._myVirtualGamepadParams.myMarginRight * this._myVirtualGamepadParams.myInterfaceScale * this._myVirtualGamepadParams.myMarginScale;\r\n\r\n        let minSizeMultiplier = Math.max(1, this._myVirtualGamepadParams.myMinSizeMultiplier / this._myVirtualGamepadParams.myInterfaceScale);\r\n\r\n        // actual thumbstick creation\r\n\r\n        let thumbstickContainer = document.createElement(\"div\");\r\n        thumbstickContainer.style.position = \"absolute\";\r\n        thumbstickContainer.style.width = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.height = this._createSizeValue(thumbstickSize, minSizeMultiplier);\r\n        thumbstickContainer.style.bottom = this._createSizeValue(marginBottom, minSizeMultiplier);\r\n\r\n        if (virtualThumbstickHandedness == PP.Handedness.LEFT) {\r\n            thumbstickContainer.style.left = this._createSizeValue(marginLeft, minSizeMultiplier);\r\n        } else {\r\n            thumbstickContainer.style.right = this._createSizeValue(marginRight, minSizeMultiplier);\r\n        }\r\n\r\n        thumbstickElementParent.appendChild(thumbstickContainer);\r\n\r\n        let thumbstickContainerSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        thumbstickContainerSVG.style.position = \"absolute\";\r\n        thumbstickContainerSVG.style.width = \"100%\";\r\n        thumbstickContainerSVG.style.height = \"100%\";\r\n        thumbstickContainer.appendChild(thumbstickContainerSVG);\r\n\r\n        this._myThumbstickBackground = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'cx', \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'cy', \"50%\");\r\n        this._myThumbstickBackground.setAttributeNS(null, 'r', \"48%\");\r\n        this._myThumbstickBackground.style.fill = this._myParams.myBackgroundColor;\r\n        thumbstickContainerSVG.appendChild(this._myThumbstickBackground);\r\n\r\n        this._myThumbstickElement = document.createElement(\"div\");\r\n        this._myThumbstickElement.style.position = \"absolute\";\r\n        this._myThumbstickElement.style.width = \"34%\";\r\n        this._myThumbstickElement.style.height = \"34%\";\r\n        this._myThumbstickElement.style.top = \"33%\";\r\n        this._myThumbstickElement.style.left = \"33%\";\r\n        thumbstickContainer.appendChild(this._myThumbstickElement);\r\n\r\n        this._myThumbstickIcon = new PP.VirtualGamepadIcon(this._myThumbstickElement, this._myParams.myIconParams, minSizeMultiplier, this._myVirtualGamepadParams.myScale);\r\n\r\n        if (this._myParams.myIncludeBackgroundToDetection) {\r\n            let thumbstickBackgroundDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickBackgroundDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickBackgroundDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickBackgroundDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickContainer.appendChild(thumbstickBackgroundDetectionElementSVG);\r\n\r\n            let thumbstickBackgroundDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n            thumbstickBackgroundDetectionElement.setAttributeNS(null, 'r', \"48%\");\r\n            thumbstickBackgroundDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickBackgroundDetectionElementSVG.appendChild(thumbstickBackgroundDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickBackgroundDetectionElement;\r\n        } else {\r\n            let thumbstickElementStill = document.createElement(\"div\");\r\n            thumbstickElementStill.style.position = \"absolute\";\r\n            thumbstickElementStill.style.width = \"34%\";\r\n            thumbstickElementStill.style.height = \"34%\";\r\n            thumbstickElementStill.style.top = \"33%\";\r\n            thumbstickElementStill.style.left = \"33%\";\r\n            thumbstickContainer.appendChild(thumbstickElementStill);\r\n\r\n            let thumbstickDetectionElementSVG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n            thumbstickDetectionElementSVG.style.position = \"absolute\";\r\n            thumbstickDetectionElementSVG.style.width = \"100%\";\r\n            thumbstickDetectionElementSVG.style.height = \"100%\";\r\n            thumbstickElementStill.appendChild(thumbstickDetectionElementSVG);\r\n\r\n            let thumbstickDetectionElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'cx', \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'cy', \"50%\");\r\n            thumbstickDetectionElement.setAttributeNS(null, 'r', \"50%\");\r\n            thumbstickDetectionElement.style.fill = \"#00000000\";\r\n            thumbstickDetectionElementSVG.appendChild(thumbstickDetectionElement);\r\n\r\n            this._myThumbstickDetectionElement = thumbstickDetectionElement;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n};", "PP.VirtualGamepadIconType = {\r\n    NONE: 0,\r\n    LABEL: 1,\r\n    IMAGE: 2,\r\n    DOT: 3,\r\n    CIRCLE: 4,\r\n    SQUARE: 5,\r\n    RING: 6,\r\n    FRAME: 7,\r\n};\r\n\r\nPP.VirtualGamepadIconParams = class VirtualGamepadIconParams {\r\n    constructor() {\r\n        this.myBackgroundColor = \"\";\r\n        this.myBackgroundPressedColor = \"\";\r\n        this.myIconColor = \"\";\r\n        this.myIconPressedColor = \"\";\r\n\r\n        this.myIconType = PP.VirtualGamepadIconType.NONE;\r\n\r\n        this.myOverallHoveredBrightness = 1;\r\n\r\n        // if icon type is label\r\n\r\n        this.myLabel = \"\";\r\n        this.myLabelFontSize = 0;\r\n        this.myLabelFontFamily = \"\";\r\n        this.myLabelFontWeight = \"\";\r\n\r\n        // if icon type is image\r\n\r\n        this.myImageURL = \"\";\r\n        this.myImagePressedBrightness = 1;\r\n    }\r\n};\r\n\r\nPP.VirtualGamepadIcon = class VirtualGamepadIcon {\r\n    constructor(iconElementParent, iconParams, minSizeMultiplier, scale) {\r\n        this._myParams = iconParams;\r\n\r\n        this._myIconContainerElement = null;\r\n        this._myBackgroundElement = null;\r\n        this._myIconElement = null;\r\n\r\n        this._myPressed = false;\r\n\r\n        this._myIsMouseHover = false;\r\n        this._myIsMouseHoverActive = true;\r\n\r\n        this._build(iconElementParent, minSizeMultiplier, scale);\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._myPressed || !this._myIsMouseHover || !this._myIsMouseHoverActive) {\r\n            this._myIconContainerElement.style.filter = \"none\";\r\n        } else {\r\n            this._myIconContainerElement.style.filter = \"brightness(\" + this._myParams.myOverallHoveredBrightness + \")\";\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setPressed(false);\r\n        this._myIsMouseHover = false;\r\n        this._myIconContainerElement.style.filter = \"none\";\r\n    }\r\n\r\n    setPressed(pressed) {\r\n        if (this._myPressed != pressed) {\r\n            this._myPressed = pressed;\r\n\r\n            if (this._myPressed) {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundPressedColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconPressedColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconPressedColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == PP.VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"brightness(\" + this._myParams.myImagePressedBrightness + \")\";\r\n                    }\r\n                }\r\n            } else {\r\n                this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n                if (this._myIconElement != null) {\r\n                    if (this._myIconElement.style.strokeWidth.length > 0) {\r\n                        this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                    } else {\r\n                        this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                    }\r\n\r\n                    if (this._myParams.myIconType == PP.VirtualGamepadIconType.IMAGE) {\r\n                        this._myIconElement.style.filter = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this._myIsMouseHover = true;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this._myIsMouseHover = false;\r\n    }\r\n\r\n    setMouseHoverActive(hoverActive) {\r\n        this._myIsMouseHoverActive = hoverActive;\r\n    }\r\n\r\n    _build(iconElementParent, minSizeMultiplier, scale) {\r\n        this._myIconContainerElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n        this._myIconContainerElement.style.position = \"absolute\";\r\n        this._myIconContainerElement.style.width = \"100%\";\r\n        this._myIconContainerElement.style.height = \"100%\";\r\n        iconElementParent.appendChild(this._myIconContainerElement);\r\n\r\n        this._myBackgroundElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'cx', \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'cy', \"50%\");\r\n        this._myBackgroundElement.setAttributeNS(null, 'r', \"50%\");\r\n        this._myBackgroundElement.style.fill = this._myParams.myBackgroundColor;\r\n        this._myIconContainerElement.appendChild(this._myBackgroundElement);\r\n\r\n        switch (this._myParams.myIconType) {\r\n            case PP.VirtualGamepadIconType.NONE:\r\n                break;\r\n            case PP.VirtualGamepadIconType.LABEL:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'text');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"50%\");\r\n                this._myIconElement.style.textAlign = \"center\";\r\n                this._myIconElement.style.textAnchor = \"middle\";\r\n                this._myIconElement.style.dominantBaseline = \"central\";\r\n                this._myIconElement.style.alignmentBaseline = \"central\";\r\n                this._myIconElement.style.fontFamily = this._myParams.myLabelFontFamily;\r\n                this._myIconElement.style.fontWeight = this._myParams.myLabelFontWeight;\r\n                this._myIconElement.style.fontSize = this._createSizeValue(this._myParams.myLabelFontSize * scale, minSizeMultiplier);\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.textContent = this._myParams.myLabel;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.IMAGE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'image');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"0%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"0%\");\r\n                this._myIconElement.setAttribute(\"href\", this._myParams.myImageURL);\r\n                this._myIconElement.style.width = \"100%\";\r\n                this._myIconElement.style.height = \"100%\";\r\n                this._myIconElement.style.filter = \"none\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.DOT:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"17.5%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.CIRCLE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"24%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.SQUARE:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'rect');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"28%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"28%\");\r\n                this._myIconElement.setAttributeNS(null, 'rx', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'ry', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'width', \"44%\");\r\n                this._myIconElement.setAttributeNS(null, 'height', \"44%\");\r\n                this._myIconElement.style.fill = this._myParams.myIconColor;\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.RING:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'circle');\r\n                this._myIconElement.setAttributeNS(null, 'cx', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'cy', \"50%\");\r\n                this._myIconElement.setAttributeNS(null, 'r', \"20%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n            case PP.VirtualGamepadIconType.FRAME:\r\n                this._myIconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'rect');\r\n                this._myIconElement.setAttributeNS(null, 'x', \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, 'y', \"31.5%\");\r\n                this._myIconElement.setAttributeNS(null, 'rx', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'ry', \"10%\");\r\n                this._myIconElement.setAttributeNS(null, 'width', \"37%\");\r\n                this._myIconElement.setAttributeNS(null, 'height', \"37%\");\r\n                this._myIconElement.style.fill = \"#00000000\";\r\n                this._myIconElement.style.stroke = this._myParams.myIconColor;\r\n                this._myIconElement.style.strokeWidth = \"10%\";\r\n                this._myIconElement.style.transformOrigin = \"center\";\r\n                this._myIconContainerElement.appendChild(this._myIconElement);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _createSizeValue(value, minSizeMultiplier) {\r\n        return \"min(\" + value.toFixed(3) + \"vmax,\" + (value * minSizeMultiplier).toFixed(3) + \"vw)\";\r\n    }\r\n\r\n    _invertColors() {\r\n        if (this._myIconElement.style.strokeWidth.length > 0) {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.stroke = this._myParams.myBackgroundColor;\r\n        } else {\r\n            this._myBackgroundElement.style.fill = this._myParams.myIconColor;\r\n            this._myIconElement.style.fill = this._myParams.myBackgroundColor;\r\n        }\r\n    }\r\n}", "PP.BasePoseParams = class BasePoseParams {\r\n    constructor() {\r\n        this.myReferenceObject = null;\r\n        this.myFixForward = true;\r\n        this.myForceEmulatedVelocities = false;\r\n        this.myUpdateOnViewReset = false;\r\n    }\r\n};\r\n\r\n// BasePose transform is local by default (as if the parent/reference object was the identity transform)\r\n// you can use setReferenceObject if you want the BasePose to return the transform in world space \r\nPP.BasePose = class BasePose {\r\n\r\n    constructor(basePoseParams = new PP.BasePoseParams()) {\r\n        this._myFixForward = basePoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = basePoseParams.myForceEmulatedVelocities;\r\n        this._myUpdateOnViewReset = basePoseParams.myUpdateOnViewReset;\r\n\r\n        this._myReferenceSpace = null;\r\n        this._myReferenceObject = basePoseParams.myReferenceObject;\r\n\r\n        this._myPosition = PP.vec3_create();\r\n        this._myRotationQuat = PP.quat_create();\r\n\r\n        this._myPrevPosition = PP.vec3_create();\r\n        this._myPrevRotationQuat = PP.quat_create();\r\n\r\n        this._myLinearVelocity = PP.vec3_create();\r\n        this._myAngularVelocityRadians = PP.vec3_create();\r\n\r\n        this._myIsValid = false;\r\n        this._myIsLinearVelocityEmulated = true;\r\n        this._myIsAngularVelocityEmulated = true;\r\n\r\n        this._myPoseUpdatedCallbacks = new Map();   // Signature: callback(thisPose)\r\n    }\r\n\r\n    // if the reference object is set, the transform will be converted using it as a parent,\r\n    // otherwise the transform will be local, as if the parent/reference object was the identity transform\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n\r\n    setUpdateOnViewReset(updateOnViewReset) {\r\n        this._myUpdateOnViewReset = updateOnViewReset;\r\n    }\r\n\r\n    isUpdateOnViewReset() {\r\n        return this._myUpdateOnViewReset;\r\n    }\r\n\r\n    getReferenceSpace() {\r\n        return this._myReferenceSpace;\r\n    }\r\n\r\n    getInputSource() {\r\n        return this._myInputSource;\r\n    }\r\n\r\n    getPosition() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getRotation() {\r\n        return this.getRotationDegrees();\r\n    }\r\n\r\n    getRotationDegrees() {\r\n        return this.getRotationQuat().quat_toDegrees();\r\n\r\n    }\r\n\r\n    getRotationRadians() {\r\n        return this.getRotationQuat().quat_toRadians();\r\n    }\r\n\r\n    getRotationQuat() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransform() {\r\n        return this.getTransformMatrix();\r\n    }\r\n\r\n    getTransformMatrix() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getTransformQuat() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getLinearVelocity() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocity() {\r\n        return this.getAngularVelocityDegrees();\r\n    }\r\n\r\n    getAngularVelocityDegrees() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    getAngularVelocityRadians() {\r\n        // implemented outside class definition\r\n    }\r\n\r\n    isValid() {\r\n        return this._myIsValid;\r\n    }\r\n\r\n    isLinearVelocityEmulated() {\r\n        return this._myIsLinearVelocityEmulated;\r\n    }\r\n\r\n    isAngularVelocityEmulated() {\r\n        return this._myIsAngularVelocityEmulated;\r\n    }\r\n\r\n    registerPoseUpdatedEventListener(id, callback) {\r\n        this._myPoseUpdatedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPoseUpdatedEventListener(id) {\r\n        this._myPoseUpdatedCallbacks.delete(id);\r\n    }\r\n\r\n    start() {\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(true, WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this, false));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    update(dt) {\r\n        this._update(dt, true);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _isReadyToGetPose() {\r\n        return true;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return null;\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n\r\n    }\r\n\r\n    _onViewResetHook() {\r\n\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _update(dt, updateVelocity) {\r\n        this._myPrevPosition.vec3_copy(this._myPosition);\r\n        this._myPrevRotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        let xrFrame = Module['webxr_frame'];\r\n        if (xrFrame && this._isReadyToGetPose()) {\r\n            let xrPose = null;\r\n            try {\r\n                xrPose = this._getPose(xrFrame);\r\n            } catch (error) {\r\n                // not handled, pose will be null\r\n            }\r\n\r\n            if (xrPose) {\r\n                this._myPosition[0] = xrPose.transform.position.x;\r\n                this._myPosition[1] = xrPose.transform.position.y;\r\n                this._myPosition[2] = xrPose.transform.position.z;\r\n\r\n                this._myRotationQuat[0] = xrPose.transform.orientation.x;\r\n                this._myRotationQuat[1] = xrPose.transform.orientation.y;\r\n                this._myRotationQuat[2] = xrPose.transform.orientation.z;\r\n                this._myRotationQuat[3] = xrPose.transform.orientation.w;\r\n                this._myRotationQuat.quat_normalize(this._myRotationQuat);\r\n\r\n                if (updateVelocity) {\r\n                    if (xrPose.linearVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myLinearVelocity[0] = xrPose.linearVelocity.x;\r\n                        this._myLinearVelocity[1] = xrPose.linearVelocity.y;\r\n                        this._myLinearVelocity[2] = xrPose.linearVelocity.z;\r\n\r\n                        this._myIsLinearVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedLinearVelocity(dt);\r\n\r\n                        this._myIsLinearVelocityEmulated = true;\r\n                    }\r\n\r\n                    if (xrPose.angularVelocity && !this._myForceEmulatedVelocities) {\r\n                        this._myAngularVelocityRadians[0] = xrPose.angularVelocity.x;\r\n                        this._myAngularVelocityRadians[1] = xrPose.angularVelocity.y;\r\n                        this._myAngularVelocityRadians[2] = xrPose.angularVelocity.z;\r\n\r\n                        this._myIsAngularVelocityEmulated = false;\r\n                    } else {\r\n                        this._computeEmulatedAngularVelocity(dt);\r\n\r\n                        this._myIsAngularVelocityEmulated = true;\r\n                    }\r\n                }\r\n\r\n                this._myIsValid = true;\r\n            } else {\r\n                // keep previous position and rotation but reset velocity because reasons\r\n\r\n                if (updateVelocity) {\r\n                    this._myLinearVelocity[0] = 0;\r\n                    this._myLinearVelocity[1] = 0;\r\n                    this._myLinearVelocity[2] = 0;\r\n\r\n                    this._myAngularVelocityRadians[0] = 0;\r\n                    this._myAngularVelocityRadians[1] = 0;\r\n                    this._myAngularVelocityRadians[2] = 0;\r\n                }\r\n\r\n                this._myIsValid = false;\r\n                this._myIsLinearVelocityEmulated = true;\r\n                this._myIsAngularVelocityEmulated = true;\r\n            }\r\n\r\n            this._updateHook(dt, updateVelocity, xrPose);\r\n        } else {\r\n            // keep previous position and rotation but reset velocity because reasons\r\n\r\n            if (updateVelocity) {\r\n                this._myLinearVelocity[0] = 0;\r\n                this._myLinearVelocity[1] = 0;\r\n                this._myLinearVelocity[2] = 0;\r\n\r\n                this._myAngularVelocityRadians[0] = 0;\r\n                this._myAngularVelocityRadians[1] = 0;\r\n                this._myAngularVelocityRadians[2] = 0;\r\n            }\r\n\r\n            this._myIsValid = false;\r\n            this._myIsLinearVelocityEmulated = true;\r\n            this._myIsAngularVelocityEmulated = true;\r\n\r\n            this._updateHook(dt, updateVelocity, null);\r\n        }\r\n\r\n        this._myPoseUpdatedCallbacks.forEach(function (callback) { callback(this); }.bind(this));\r\n    }\r\n\r\n    _computeEmulatedLinearVelocity(dt) {\r\n        if (dt > 0) {\r\n            this._myPosition.vec3_sub(this._myPrevPosition, this._myLinearVelocity);\r\n            this._myLinearVelocity.vec3_scale(1 / dt, this._myLinearVelocity);\r\n        } else {\r\n            this._myLinearVelocity[0] = 0;\r\n            this._myLinearVelocity[1] = 0;\r\n            this._myLinearVelocity[2] = 0;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStart(manualStart, session) {\r\n        session.requestReferenceSpace(WebXR.refSpace).then(function (referenceSpace) {\r\n            this._myReferenceSpace = referenceSpace;\r\n\r\n            if (referenceSpace.addEventListener != null) {\r\n                referenceSpace.addEventListener(\"reset\", this._onViewReset.bind(this));\r\n            }\r\n        }.bind(this));\r\n\r\n        this._onXRSessionStartHook(manualStart, session);\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._onXRSessionEndHook();\r\n\r\n        this._myReferenceSpace = null;\r\n    }\r\n\r\n    _onViewReset() {\r\n        if (this._myUpdateOnViewReset) {\r\n            this._update(0, false);\r\n        }\r\n\r\n        this._onViewResetHook();\r\n    }\r\n};\r\n\r\nPP.BasePose.prototype.getPosition = function () {\r\n    let position = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getPosition() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myPosition;\r\n        }\r\n\r\n        return this._myPosition.vec3_convertPositionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    let playerRotationQuat = PP.quat_create();\r\n    let up = PP.vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getTransformMatrix = function () {\r\n    let transform = PP.mat4_create();\r\n    return function getTransformMatrix() {\r\n        return this.getTransformQuat().quat2_toMatrix(transform);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getTransformQuat = function () {\r\n    let transformQuat = PP.quat2_create();\r\n    let playerTransformQuat = PP.quat2_create();\r\n    return function getTransformQuat() {\r\n        transformQuat.quat2_setPositionRotationQuat(this._myPosition, this.getRotationQuat());\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return transformQuat;\r\n        }\r\n\r\n        return transformQuat.quat_toWorld(this._myReferenceObject.pp_getTransformQuat(playerTransformQuat), transformQuat);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getLinearVelocity = function () {\r\n    let position = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getLinearVelocity() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myLinearVelocity;\r\n        }\r\n\r\n        return this._myLinearVelocity.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), position);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getAngularVelocityDegrees = function () {\r\n    let rotationDegrees = PP.vec3_create();\r\n    return function getAngularVelocityDegrees() {\r\n        this.getAngularVelocityRadians().vec3_toDegrees(rotationDegrees);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype.getAngularVelocityRadians = function () {\r\n    let rotationRadians = PP.vec3_create();\r\n    let transform = PP.mat4_create();\r\n    return function getAngularVelocityRadians() {\r\n        if (this._myReferenceObject == null) {\r\n            return this._myAngularVelocityRadians;\r\n        }\r\n\r\n        return this._myAngularVelocityRadians.vec3_convertDirectionToWorld(this._myReferenceObject.pp_getTransform(transform), rotationRadians);\r\n    };\r\n}();\r\n\r\nPP.BasePose.prototype._computeEmulatedAngularVelocity = function () {\r\n    let rotationRadians = PP.vec3_create();\r\n    let prevRotationRadians = PP.vec3_create();\r\n    return function _computeEmulatedAngularVelocity(dt) {\r\n        if (dt > 0) {\r\n            rotationRadians = this._myRotationQuat.quat_toRadians(rotationRadians);\r\n            prevRotationRadians = this._myPrevRotationQuat.quat_toRadians(prevRotationRadians);\r\n            rotationRadians.vec3_sub(prevRotationRadians, this._myAngularVelocityRadians);\r\n            this._myAngularVelocityRadians.vec3_scale(1 / dt, this._myAngularVelocityRadians);\r\n        } else {\r\n            this._myAngularVelocityRadians[0] = 0;\r\n            this._myAngularVelocityRadians[1] = 0;\r\n            this._myAngularVelocityRadians[2] = 0;\r\n        }\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.BasePose.prototype, \"getPosition\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getRotationQuat\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getTransformMatrix\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getTransformQuat\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getLinearVelocity\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getAngularVelocityDegrees\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"getAngularVelocityRadians\", { enumerable: false });\r\nObject.defineProperty(PP.BasePose.prototype, \"_computeEmulatedAngularVelocity\", { enumerable: false });", "PP.HandPoseParams = class HandPoseParams extends PP.BasePoseParams {\r\n    constructor() {\r\n        super();\r\n\r\n        this.myFixTrackedHandRotation = true;\r\n    }\r\n};\r\n\r\nPP.HandPose = class HandPose extends PP.BasePose {\r\n\r\n    constructor(handedness, handPoseParams = new PP.HandPoseParams()) {\r\n        super(handPoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myFixTrackedHandRotation = handPoseParams.myFixTrackedHandRotation;\r\n\r\n        this._myIsTrackedHand = false;\r\n    }\r\n\r\n    getInputSourceType() {\r\n        if (this._myInputSource == null) {\r\n            return null;\r\n        }\r\n\r\n        return PP.InputUtils.getInputSourceType(this._myInputSource);\r\n    }\r\n\r\n    isFixTrackedHandRotation() {\r\n        return this._myFixTrackedHandRotation;\r\n    }\r\n\r\n    setFixTrackedHandRotation(fixTrackedHandRotation) {\r\n        this.myFixTrackedHandRotation = fixTrackedHandRotation;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getPose(this._myInputSource.gripSpace, this._myReferenceSpace);\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n        session.addEventListener('inputsourceschange', function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        this._myInputSource = item;\r\n                        this._myIsTrackedHand = PP.InputUtils.getInputSourceType(this._myInputSource) == PP.InputSourceType.TRACKED_HAND;\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualStart && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    this._myInputSource = item;\r\n                    this._myIsTrackedHand = PP.InputUtils.getInputSourceType(this._myInputSource) == PP.InputSourceType.TRACKED_HAND;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n};\r\n\r\nPP.HandPose.prototype.getRotationQuat = function () {\r\n    let rotationQuat = PP.quat_create();\r\n    let playerRotationQuat = PP.quat_create();\r\n    let up = PP.vec3_create();\r\n    let right = PP.vec3_create();\r\n    let forward = PP.vec3_create();\r\n    return function getRotationQuat() {\r\n        rotationQuat.quat_copy(this._myRotationQuat);\r\n\r\n        if (this._myFixForward) {\r\n            rotationQuat.quat_rotateAxisRadians(Math.PI, rotationQuat.quat_getUp(up), rotationQuat);\r\n        }\r\n\r\n        if (this._myFixTrackedHandRotation && this._myIsTrackedHand) {\r\n            rotationQuat.quat_rotateAxis(-60, rotationQuat.quat_getRight(right), rotationQuat);\r\n\r\n            let forwardRotation = 20;\r\n            forwardRotation = (this._myHandedness == PP.Handedness.LEFT) ? forwardRotation : -forwardRotation;\r\n            rotationQuat.quat_rotateAxis(forwardRotation, rotationQuat.quat_getForward(forward), rotationQuat);\r\n        }\r\n\r\n        if (this._myReferenceObject == null) {\r\n            return rotationQuat;\r\n        }\r\n\r\n        return rotationQuat.quat_toWorld(this._myReferenceObject.pp_getRotationQuat(playerRotationQuat), rotationQuat);\r\n    };\r\n}();\r\n\r\n\r\n\r\nObject.defineProperty(PP.HandPose.prototype, \"getRotationQuat\", { enumerable: false });", "PP.HeadPose = class HeadPose extends PP.BasePose {\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getViewerPose(this._myReferenceSpace);\r\n    }\r\n};", "PP.TrackedHandJointPose = class TrackedHandJointPose extends PP.BasePose {\r\n\r\n    constructor(handedness, trackedHandJointID, basePoseParams = new PP.BasePoseParams()) {\r\n        super(basePoseParams);\r\n\r\n        this._myInputSource = null;\r\n\r\n        this._myHandedness = handedness;\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n\r\n        this._myJointRadius = 0;\r\n    }\r\n\r\n    getTrackedHandJointID() {\r\n        return this._myTrackedHandJointID;\r\n    }\r\n\r\n    setTrackedHandJointID(trackedHandJointID) {\r\n        this._myTrackedHandJointID = trackedHandJointID;\r\n    }\r\n\r\n    getJointRadius() {\r\n        return this._myJointRadius;\r\n    }\r\n\r\n    _isReadyToGetPose() {\r\n        return this._myInputSource != null;\r\n    }\r\n\r\n    _getPose(xrFrame) {\r\n        return xrFrame.getJointPose(this._myInputSource.hand.get(this._myTrackedHandJointID), this._myReferenceSpace);\r\n    }\r\n\r\n    _updateHook(dt, updateVelocity, xrPose) {\r\n        if (xrPose != null) {\r\n            this._myJointRadius = xrPose.radius;\r\n        }\r\n    }\r\n\r\n    _onXRSessionStartHook(manualStart, session) {\r\n        session.addEventListener('inputsourceschange', function (event) {\r\n            if (event.removed) {\r\n                for (let item of event.removed) {\r\n                    if (item == this._myInputSource) {\r\n                        this._myInputSource = null;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.added) {\r\n                for (let item of event.added) {\r\n                    if (item.handedness == this._myHandedness) {\r\n                        if (PP.InputUtils.getInputSourceType(item) == PP.InputSourceType.TRACKED_HAND) {\r\n                            this._myInputSource = item;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        if (manualStart && this._myInputSource == null && session.inputSources) {\r\n            for (let item of session.inputSources) {\r\n                if (item.handedness == this._myHandedness) {\r\n                    if (PP.InputUtils.getInputSourceType(item) == PP.InputSourceType.TRACKED_HAND) {\r\n                        this._myInputSource = item;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _onXRSessionEndHook() {\r\n        this._myInputSource = null;\r\n    }\r\n};", "PP.TrackedHandPoseParams = class TrackedHandPoseParams extends PP.BasePoseParams {\r\n    constructor(addAllJointIDs = true) {\r\n        super();\r\n\r\n        this.myTrackedHandJointIDList = [];\r\n\r\n        if (addAllJointIDs) {\r\n            for (let key in PP.TrackedHandJointID) {\r\n                this.myTrackedHandJointIDList.push([PP.TrackedHandJointID[key]]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nPP.TrackedHandPose = class TrackedHandPose {\r\n    constructor(handedness, trackedHandPoseParams = new PP.TrackedHandPoseParams()) {\r\n        this._myHandedness = handedness;\r\n\r\n        this._myFixForward = trackedHandPoseParams.myFixForward;\r\n        this._myForceEmulatedVelocities = trackedHandPoseParams.myForceEmulatedVelocities;\r\n        this._myReferenceObject = trackedHandPoseParams.myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoseParams = new PP.BasePoseParams();\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n\r\n        this._myTrackedHandJointPoseList = [];\r\n        for (let jointID of trackedHandPoseParams.myTrackedHandJointIDList) {\r\n            let trackedHandJointPose = new PP.TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList[jointID] = trackedHandJointPose;\r\n        }\r\n    }\r\n\r\n    start() {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.start();\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.update(dt);\r\n        }\r\n    }\r\n\r\n    getJointPoseList() {\r\n        return this._myTrackedHandJointPoseList;\r\n    }\r\n\r\n    getJointPose(jointID) {\r\n        return this._myTrackedHandJointPoseList[jointID];\r\n    }\r\n\r\n    getJointPoseByIndex(jointIDIndex) {\r\n        return this._myTrackedHandJointPoseList[PP.InputUtils.getJointIDByIndex(jointIDIndex)];\r\n    }\r\n\r\n    addTrackedHandJointID(jointID) {\r\n        if (!this._myTrackedHandJointPoseList.pp_has(element => element.getTrackedHandJointID() == jointID)) {\r\n            let trackedHandJointPose = new PP.TrackedHandJointPose(this._myHandedness, jointID, this._myTrackedHandJointPoseParams);\r\n            this._myTrackedHandJointPoseList.push(trackedHandJointPose);\r\n        }\r\n    }\r\n\r\n    removeTrackedHandJointID(jointID) {\r\n        this._myTrackedHandJointPoseList.pp_remove(element => element.getTrackedHandJointID() == jointID);\r\n    }\r\n\r\n    setReferenceObject(referenceObject) {\r\n        this._myReferenceObject = referenceObject;\r\n        this._myTrackedHandJointPoseParams.myReferenceObject = this._myReferenceObject;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setReferenceObject(referenceObject);\r\n        }\r\n    }\r\n\r\n    getReferenceObject() {\r\n        return this._myReferenceObject;\r\n    }\r\n\r\n    setFixForward(fixForward) {\r\n        this._myFixForward = fixForward;\r\n        this._myTrackedHandJointPoseParams.myFixForward = this._myFixForward;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setFixForward(fixForward);\r\n        }\r\n    }\r\n\r\n    isFixForward() {\r\n        return this._myFixForward;\r\n    }\r\n\r\n    setForceEmulatedVelocities(forceEmulatedVelocities) {\r\n        this._myForceEmulatedVelocities = forceEmulatedVelocities;\r\n        this._myTrackedHandJointPoseParams.myForceEmulatedVelocities = this._myForceEmulatedVelocities;\r\n        for (let jointPoseKey in this._myTrackedHandJointPoseList) {\r\n            let jointPose = this._myTrackedHandJointPoseList[jointPoseKey];\r\n            jointPose.setForceEmulatedVelocities(forceEmulatedVelocities);\r\n        }\r\n    }\r\n\r\n    isForceEmulatedVelocities() {\r\n        return this._myForceEmulatedVelocities;\r\n    }\r\n};", "WL.registerComponent(\"pp-set-player-height\", {\r\n    _myEyesHeight: { type: WL.Type.Float, default: 1.65 },\r\n    _mySetOnlyOnStart: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    start() {\r\n        let localPosition = this.object.pp_getPositionLocal();\r\n        this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n\r\n        this._myHeightSetOnce = false;\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    },\r\n    _onXRSessionStart() {\r\n        if (this.active && (!this._mySetOnlyOnStart || !this._myHeightSetOnce)) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            if (PP.XRUtils.isReferenceSpaceLocalFloor()) {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else if (PP.XRUtils.isDeviceEmulated()) {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], 0, localPosition[2]));\r\n            } else {\r\n                this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n            }\r\n\r\n            this._myHeightSetOnce = true;\r\n        }\r\n    },\r\n    _onXRSessionEnd() {\r\n        if (this.active && !this._mySetOnlyOnStart) {\r\n            let localPosition = this.object.pp_getPositionLocal();\r\n            this.object.pp_setPositionLocal(PP.vec3_create(localPosition[0], this._myEyesHeight, localPosition[2]));\r\n        }\r\n    }\r\n});", "WL.registerComponent('pp-set-hand-local-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHandPose = new PP.HandPose(PP.InputUtils.getHandednessByIndex(this._myHandedness));\r\n        this._myHandPose.setFixForward(this._myFixForward);\r\n        this._myHandPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHandPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHandPose.start();\r\n        this.update(0);\r\n    },\r\n    update: function update(dt) {\r\n        this._myHandPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let handPoseTransform = PP.quat2_create()\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myHandPose.getTransformQuat(handPoseTransform));\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-head-local-transform', {\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHeadPose = new PP.HeadPose();\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHeadPose.start();\r\n        this.update(0);\r\n    },\r\n    update: function () {\r\n        let nonVRCameraRotation = PP.quat_create();\r\n        let nonVRCameraUp = PP.vec3_create();\r\n        let nonVRCameraPosition = PP.vec3_create();\r\n        return function update(dt) {\r\n            if (PP.XRUtils.isSessionActive()) {\r\n                this._myHeadPose.update(dt);\r\n            } else {\r\n                nonVRCameraRotation = this._myNonVRCamera.pp_getRotationLocalQuat(nonVRCameraRotation);\r\n                if (this._myFixForward) {\r\n                    nonVRCameraRotation.quat_rotateAxisRadians(Math.PI, nonVRCameraRotation.quat_getUp(nonVRCameraUp), nonVRCameraRotation);\r\n                }\r\n                this.object.pp_setPositionLocal(this._myNonVRCamera.pp_getPositionLocal(nonVRCameraPosition));\r\n                this.object.pp_setRotationLocalQuat(nonVRCameraRotation);\r\n            }\r\n        };\r\n    }(),\r\n    onPoseUpdated: function () {\r\n        let headPoseTransform = PP.quat2_create();\r\n        return function onPoseUpdated() {\r\n            if (PP.XRUtils.isSessionActive()) {\r\n                this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n            }\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-vr-head-local-transform', {\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n        this._myHeadPose = new PP.HeadPose();\r\n        this._myHeadPose.setFixForward(this._myFixForward);\r\n        this._myHeadPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myHeadPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myHeadPose.start();\r\n        this.update(0);\r\n    },\r\n    update: function update(dt) {\r\n        this._myHeadPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let headPoseTransform = PP.quat2_create();\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myHeadPose.getTransformQuat(headPoseTransform));\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-set-non-vr-head-local-transform', {\r\n    _myNonVRCamera: { type: WL.Type.Object },\r\n    _myFixForward: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this.update(0);\r\n    },\r\n    update: function (dt) {\r\n        let nonVRCameraRotation = PP.quat_create();\r\n        let nonVRCameraUp = PP.vec3_create();\r\n        let nonVRCameraPosition = PP.vec3_create();\r\n        return function update(dt) {\r\n            nonVRCameraRotation = this._myNonVRCamera.pp_getRotationLocalQuat(nonVRCameraRotation);\r\n            if (this._myFixForward) {\r\n                nonVRCameraRotation.quat_rotateAxisRadians(Math.PI, nonVRCameraRotation.quat_getUp(nonVRCameraUp), nonVRCameraRotation);\r\n            }\r\n            this.object.pp_setPositionLocal(this._myNonVRCamera.pp_getPositionLocal(nonVRCameraPosition));\r\n            this.object.pp_setRotationLocalQuat(nonVRCameraRotation);\r\n        };\r\n    }(),\r\n}); ", "WL.registerComponent('pp-set-tracked-hand-joint-local-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myUpdateOnViewReset: { type: WL.Type.Bool, default: true },\r\n    _mySetLocalScaleAsJointRadius: { type: WL.Type.Bool, default: false },\r\n    _myJointID: {\r\n        type: WL.Type.Enum, values:\r\n            [\r\n                'Wrist',\r\n                'Thumb Metacarpal', 'Thumb Phalanx Proximal', 'Thumb Phalanx Distal', 'Thumb Tip',\r\n                'Index Metacarpal', 'Index Phalanx Proximal', 'Index Phalanx Intermediate', 'Index Phalanx Distal', 'Index Tip',\r\n                'Middle Metacarpal', 'Middle Phalanx Proximal', 'Middle Phalanx Intermediate', 'Middle Phalanx Distal', 'Middle Tip',\r\n                'Ring Metacarpal', 'Ring Phalanx Proximal', 'Ring Phalanx Intermediate', 'Ring Phalanx Distal', 'Ring Tip',\r\n                'Pinky Metacarpal', 'Pinky Phalanx Proximal', 'Pinky Phalanx Intermediate', 'Pinky Phalanx Distal', 'Pinky Tip'\r\n            ],\r\n        default: 'Wrist'\r\n    }\r\n}, {\r\n    init: function () {\r\n        this._myHandednessInternal = PP.InputUtils.getHandednessByIndex(this._myHandedness);\r\n        this._myJointIDInternal = PP.InputUtils.getJointIDByIndex(this._myJointID);\r\n\r\n        this._myTrackedHandJointPose = new PP.TrackedHandJointPose(this._myHandednessInternal, this._myJointIDInternal);\r\n        this._myTrackedHandJointPose.setFixForward(this._myFixForward);\r\n        this._myTrackedHandJointPose.setUpdateOnViewReset(this._myUpdateOnViewReset);\r\n        this._myTrackedHandJointPose.registerPoseUpdatedEventListener(this, this.onPoseUpdated.bind(this));\r\n    },\r\n    start: function () {\r\n        this._myTrackedHandJointPose.start();\r\n        this.update(0);\r\n    },\r\n    update: function (dt) {\r\n        this._myTrackedHandJointPose.update(dt);\r\n    },\r\n    onPoseUpdated: function () {\r\n        let jointPoseTransform = PP.quat2_create()\r\n        return function onPoseUpdated() {\r\n            this.object.pp_setTransformLocalQuat(this._myTrackedHandJointPose.getTransformQuat(jointPoseTransform));\r\n\r\n            if (this._mySetLocalScaleAsJointRadius) {\r\n                this.object.pp_setScaleLocal(this._myTrackedHandJointPose.getJointRadius());\r\n            }\r\n        }\r\n    }()\r\n});", "WL.registerComponent('pp-copy-hand-transform', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n}, {\r\n    init: function () {\r\n        this._myHandednessType = (this._myHandedness == 0) ? PP.Handedness.LEFT : PP.Handedness.RIGHT;\r\n    },\r\n    update: function (dt) {\r\n        let hand = PP.myPlayerObjects.myHands[this._myHandednessType];\r\n        this.object.pp_setTransformQuat(hand.pp_getTransformQuat());\r\n        this.object.pp_setScale(hand.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-head-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let head = PP.myPlayerObjects.myHead;\r\n        this.object.pp_setTransformQuat(head.pp_getTransformQuat());\r\n        this.object.pp_setScale(head.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-player-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let player = PP.myPlayerObjects.myPlayer;\r\n        this.object.pp_setTransformQuat(player.pp_getTransformQuat());\r\n        this.object.pp_setScale(player.pp_getScale());\r\n    },\r\n});", "WL.registerComponent('pp-copy-player-pivot-transform', {\r\n}, {\r\n    update: function (dt) {\r\n        let playerPivot = PP.myPlayerObjects.myPlayerPivot;\r\n        this.object.pp_setTransformQuat(playerPivot.pp_getTransformQuat());\r\n        this.object.pp_setScale(playerPivot.pp_getScale());\r\n    },\r\n});", "\r\nPP.ToolHandedness = {\r\n    NONE: null,\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n};\r\n\r\nPP.ToolInputSourceType = {\r\n    NONE: null,\r\n    GAMEPAD: 0,\r\n    TRACKED_HAND: 1\r\n};", "WL.registerComponent('pp-tool-cursor', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['left', 'right'], default: 'left' },\r\n    _myFixForward: { type: WL.Type.Bool, default: true },\r\n    _myApplyDefaultCursorOffset: { type: WL.Type.Bool, default: true },\r\n    _myPulseOnHover: { type: WL.Type.Bool, default: false },\r\n    _myShowFingerCursor: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n        this._myHandednessString = ['left', 'right'][this._myHandedness];\r\n\r\n        this._myCursorPositionDefaultOffset = PP.vec3_create(0, -0.035, -0.05);\r\n        this._myCursorRotationDefaultOffset = PP.vec3_create(-30, 0, 0);\r\n\r\n        this._myCursorMeshScale = PP.vec3_create(0.0025, 0.0025, 0.0025);\r\n        this._myCursorColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this._myCursorTargetCollisionGroup = 7;\r\n    },\r\n    start: function () {\r\n        this._myToolCursorObject = WL.scene.addObject(this.object);\r\n        this._myFixForwardObject = WL.scene.addObject(this._myToolCursorObject);\r\n\r\n        if (this._myFixForward) {\r\n            this._myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n        }\r\n\r\n        this._myCursorObjectVR = WL.scene.addObject(this._myFixForwardObject);\r\n\r\n        if (this._myApplyDefaultCursorOffset) {\r\n            this._myCursorObjectVR.pp_setPositionLocal(this._myCursorPositionDefaultOffset);\r\n            this._myCursorObjectVR.pp_rotateObject(this._myCursorRotationDefaultOffset);\r\n        }\r\n\r\n        {\r\n            this._myCursorMeshobject = WL.scene.addObject(this._myCursorObjectVR);\r\n            this._myCursorMeshobject.pp_setScale(this._myCursorMeshScale);\r\n\r\n            let cursorMeshComponent = this._myCursorMeshobject.addComponent(\"mesh\");\r\n            cursorMeshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n            cursorMeshComponent.material = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n            cursorMeshComponent.material.color = this._myCursorColor;\r\n\r\n            let cursorComponent = this._myCursorObjectVR.addComponent(\"cursor\", { \"collisionGroup\": this._myCursorTargetCollisionGroup, \"handedness\": this._myHandedness + 1, \"cursorObject\": this._myCursorMeshobject });\r\n            cursorComponent.rayCastMode = 0; //collision\r\n            if (this._myPulseOnHover) {\r\n                cursorComponent.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n        }\r\n\r\n        this._myCursorObjectNonVR = WL.scene.addObject(this._myToolCursorObject);\r\n\r\n        {\r\n            let cursorComponent = this._myCursorObjectNonVR.addComponent(\"cursor\", { \"collisionGroup\": this._myCursorTargetCollisionGroup, \"handedness\": this._myHandedness + 1 });\r\n            cursorComponent.rayCastMode = 0; //collision\r\n            if (this._myPulseOnHover) {\r\n                cursorComponent.globalTarget.addHoverFunction(this._pulseOnHover.bind(this));\r\n            }\r\n            cursorComponent.setViewComponent(PP.myPlayerObjects.myNonVRCamera.getComponent(\"view\"));\r\n        }\r\n\r\n        let fingerCursorMeshObject = null;\r\n        let fingerCollisionSize = 0.0125;\r\n\r\n        if (this._myShowFingerCursor) {\r\n            fingerCursorMeshObject = this._myToolCursorObject.pp_addObject();\r\n\r\n            let meshComponent = fingerCursorMeshObject.addComponent(\"mesh\");\r\n            meshComponent.mesh = PP.myDefaultResources.myMeshes.mySphere;\r\n            meshComponent.material = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n            meshComponent.material.color = this._myCursorColor;\r\n\r\n            fingerCursorMeshObject.pp_setScale(fingerCollisionSize);\r\n        }\r\n\r\n        this._myFingerCursorObject = WL.scene.addObject(this._myToolCursorObject);\r\n        this._myFingerCursorComponent = this._myFingerCursorObject.addComponent(\"pp-finger-cursor\", {\r\n            \"_myHandedness\": this._myHandedness,\r\n            \"_myEnableMultipleClicks\": true,\r\n            \"_myCollisionGroup\": this._myCursorTargetCollisionGroup,\r\n            \"_myCollisionSize\": fingerCollisionSize,\r\n            \"_myCursorObject\": fingerCursorMeshObject\r\n        });\r\n\r\n        this._myCursorObjectVR.pp_setActive(false);\r\n        this._myCursorObjectNonVR.pp_setActive(false);\r\n        this._myFingerCursorObject.pp_setActive(false);\r\n\r\n    },\r\n    update: function () {\r\n        let transformQuat = PP.quat2_create();\r\n        let transform = PP.mat4_create();\r\n        return function update(dt) {\r\n            let isUsingHand = this._isUsingHand();\r\n\r\n            this._myFingerCursorObject.pp_setActive(isUsingHand);\r\n\r\n            if (isUsingHand) {\r\n                this._myCursorObjectNonVR.pp_setActive(false);\r\n                this._myCursorObjectVR.pp_setActive(false);\r\n            } else {\r\n                if (PP.XRUtils.isSessionActive()) {\r\n                    this._myCursorObjectVR.pp_setActive(!isUsingHand);\r\n                    this._myCursorObjectNonVR.pp_setActive(false);\r\n                } else {\r\n                    this._myCursorObjectNonVR.pp_setActive(!isUsingHand);\r\n                    this._myCursorObjectVR.pp_setActive(false);\r\n\r\n                    this._myCursorObjectNonVR.pp_setTransformQuat(PP.myPlayerObjects.myNonVRCamera.pp_getTransformQuat(transformQuat));\r\n                }\r\n            }\r\n        };\r\n    }(),\r\n    _isUsingHand: function () {\r\n        let isUsingHand = false;\r\n\r\n        if (WL.xrSession && WL.xrSession.inputSources) {\r\n            for (let i = 0; i < WL.xrSession.inputSources.length; i++) {\r\n                let input = WL.xrSession.inputSources[i];\r\n                if (input.hand && input.handedness == this._myHandednessString) {\r\n                    isUsingHand = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isUsingHand;\r\n    },\r\n    _pulseOnHover: function (object) {\r\n        let targetComponent = object.getComponent(\"cursor-target\");\r\n\r\n        if (targetComponent && !targetComponent.isSurface) {\r\n            if (this._myHandedness == 0) {\r\n                if (PP.myLeftGamepad) {\r\n                    PP.myLeftGamepad.pulse(0.4, 0);\r\n                }\r\n            } else {\r\n                if (PP.myRightGamepad) {\r\n                    PP.myRightGamepad.pulse(0.4, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n});", "PP.ConsoleVRWidgetSetup = class ConsoleVRWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup() {\r\n        //General\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = 2; // box\r\n        this.myCursorTargetCollisionGroup = 7; //keep this in sync with ConsoleVRSetup\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = 2; // center\r\n        this.myTextJustification = 2; // middle\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myMessageTypeColors = [];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myDefaultTextColor;\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR] = [255 / 255, 40 / 255, 40 / 255, 1];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN] = [250 / 255, 220 / 255, 40 / 255, 1];\r\n        this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.DEBUG] = [60 / 255, 200 / 255, 255 / 255, 1];\r\n\r\n        //Messages\r\n        this.myMessagesPanelPosition = PP.vec3_create(0, 0.075, 0);\r\n\r\n        this.myMessagesBackgroundScale = PP.vec3_create(0.34, 0.15, 1);\r\n\r\n        {\r\n            let xPaddingPercentage = 0.03;\r\n            let yPaddingPercentage = xPaddingPercentage * this.myMessagesBackgroundScale[0] / this.myMessagesBackgroundScale[1] * 0.8; //a bit less padding\r\n            let xPosition = -this.myMessagesBackgroundScale[0] + this.myMessagesBackgroundScale[0] * xPaddingPercentage;\r\n            let yPosition = this.myMessagesBackgroundScale[1] - this.myMessagesBackgroundScale[1] * yPaddingPercentage;\r\n            this.myMessagesTextsPanelPosition = PP.vec3_create(xPosition, yPosition, 0.007);\r\n        }\r\n        this.myMessagesTextsPanelScale = PP.vec3_create(0.1, 0.1, 0.1);\r\n\r\n        this.myMessagesTextStartString = \".\\n\"; // to avoid issue with text component padding\r\n        this.myMessagesTextAlignment = 1; // left\r\n        this.myMessagesTextJustification = 3; // top\r\n\r\n        this.myMessagesTextPositions = [];\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.LOG] = PP.vec3_create(0, 0, 0.00001);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.ERROR] = PP.vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.WARN] = PP.vec3_create(0, 0, 0);\r\n        this.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType.DEBUG] = PP.vec3_create(0, 0, 0);\r\n\r\n        this.myMessagesTextColors = [];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\r\n        this.myMessagesTextColors[PP.ConsoleVRWidget.MessageType.DEBUG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.DEBUG];\r\n\r\n        //Buttons     \r\n        this.myButtonsPanelPosition = PP.vec3_create(0, -0.11, 0.015);\r\n\r\n        this.myButtonBackgroundScale = PP.vec3_create(0.04, 0.02, 1);\r\n\r\n        this.myButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myButtonCursorTargetPosition[2] = this.myButtonTextPosition[2];\r\n\r\n        this.myButtonsCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myButtonsCollisionGroup = this.myCursorTargetCollisionGroup;\r\n        this.myButtonsCollisionExtents = this.myButtonBackgroundScale.slice(0);\r\n        this.myButtonsCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myClearButtonTextLabel = \"clear\";\r\n        this.myUpButtonTextLabel = \"up\";\r\n        this.myDownButtonTextLabel = \"down\";\r\n\r\n        this.myFilterButtonsTextColors = [];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.LOG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.LOG];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.ERROR] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.ERROR];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.WARN] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.WARN];\r\n        this.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType.DEBUG] = this.myMessageTypeColors[PP.ConsoleVRWidget.MessageType.DEBUG];\r\n\r\n        this.myFilterButtonsTextLabel = [];\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.LOG] = \"log\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.ERROR] = \"error\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.WARN] = \"warn\";\r\n        this.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType.DEBUG] = \"debug\";\r\n\r\n        //Buttons positioning\r\n        {\r\n            let numberOfButtons = 7;\r\n            let buttonsHorizontalSpace = Math.max(0.68, this.myButtonBackgroundScale[0] * numberOfButtons);\r\n            //2 at start, 3 between filters, 4 spaces between filter and clear and 4 spaces between clear and up/down, 1 space between up and down, 1 at end\r\n            let numberOfSpacesBetweenButtons = 2 + 3 + 4 + 4 + 1 + 2;\r\n            let spaceWidth = Math.max((buttonsHorizontalSpace - numberOfButtons * this.myButtonBackgroundScale[0] * 2) / numberOfSpacesBetweenButtons, 0);\r\n            let halfButtonWidth = this.myButtonBackgroundScale[0];\r\n            let initialPosition = - buttonsHorizontalSpace / 2;\r\n\r\n            this.myFilterButtonsPositions = [];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG] = [initialPosition + spaceWidth * 2 + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.LOG][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.ERROR][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n            this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.DEBUG] = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.WARN][0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n\r\n            this.myClearButtonPosition = [this.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType.DEBUG][0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myUpButtonPosition = [this.myClearButtonPosition[0] + halfButtonWidth + spaceWidth * 4 + halfButtonWidth, 0, 0];\r\n            this.myDownButtonPosition = [this.myUpButtonPosition[0] + halfButtonWidth + spaceWidth + halfButtonWidth, 0, 0];\r\n        }\r\n\r\n        //Notify Icon\r\n        this.myNotifyIconBackgroundScale = PP.vec3_create(0.01, 0.01, 1);\r\n\r\n        this.myNotifyIconPanelPositions = [];\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE] = PP.vec3_create(0, 0, 0);\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][0] = -this.myMessagesBackgroundScale[0] + this.myNotifyIconBackgroundScale[0] + 0.01;\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][1] = -this.myMessagesBackgroundScale[1] + this.myNotifyIconBackgroundScale[1] + 0.01;\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE][2] = this.myMessagesTextsPanelPosition[2] - 0.00001; //prevent glitches with text\r\n\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.LEFT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconPanelPositions[PP.ToolHandedness.RIGHT] = this.myNotifyIconPanelPositions[PP.ToolHandedness.NONE];\r\n\r\n        this.myNotifyIconCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myNotifyIconCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - this.myMessagesTextsPanelPosition[2]; // a little behind the button target to avoid hiding it\r\n\r\n        this.myNotifyIconCollisionExtents = this.myNotifyIconBackgroundScale.slice(0);\r\n        this.myNotifyIconCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNotifyIconColor = [210 / 255, 210 / 255, 210 / 255, 1];\r\n\r\n        //Pointer\r\n        this.myPointerCollisionCollider = this.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionGroup = this.myCursorTargetCollisionGroup;\r\n\r\n        {\r\n            let spaceBetweenMessagesAndButtons = Math.abs((this.myMessagesPanelPosition[1] - this.myMessagesBackgroundScale[1]) - (this.myButtonsPanelPosition[1] + this.myButtonBackgroundScale[1]));\r\n            let pointerCollisionHalfHeight = this.myMessagesBackgroundScale[1] + this.myButtonBackgroundScale[1] + spaceBetweenMessagesAndButtons / 2;\r\n            this.myPointerCollisionExtents = PP.vec3_create(this.myMessagesBackgroundScale[0], pointerCollisionHalfHeight, this.myCursorTargetCollisionThickness);\r\n        }\r\n\r\n        this.myPointerCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myPointerCursorTargetPosition[1] = (this.myMessagesPanelPosition[1] + this.myMessagesBackgroundScale[1]) - this.myPointerCollisionExtents[1];\r\n        this.myPointerCursorTargetPosition[2] = this.myButtonsPanelPosition[2] + this.myButtonTextPosition[2] - 0.0001; // a little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myTabString = \"     \";\r\n        this.myAssertStartString = \"Assertion failed:\";\r\n\r\n        this.myMaxCharactersPerLine = 100;\r\n        this.myMaxLineSplits = 50; //prevent infinite splitting\r\n        this.myMaxLines = 22;\r\n        this.myMaxMessages = 2000;\r\n        this.myMaxMessagesDeletePad = 2000; // to prevent deleting at every message, delay the delete after the limit is exceed by this value\r\n\r\n        this.myLinesBetweenMessages = 1;\r\n\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\r\n\r\n        this.myFilterButtonDisabledTextColor = this.myButtonDisabledTextColor;\r\n        this.myFilterButtonDisabledBackgroundColor = this.myButtonDisabledBackgroundColor;\r\n\r\n        this.myScrollDelay = 0.1;\r\n        this.myScrollAmount = 1;\r\n        this.myScrollThumbstickHandedness = PP.ToolHandedness.RIGHT;\r\n        this.myScrollThumbstickDelay = 0.1;\r\n        this.myScrollThumbstickMinThreshold = 0.2;\r\n        this.myScrollThumbstickAmount = 3;\r\n\r\n        this.myPulseDelay = 5;\r\n        this.myPulseIntensity = 0.3;\r\n        this.myPulseDuration = 0.085;\r\n\r\n        this.myClearBrowserConsoleWhenClearPressed = true;\r\n\r\n        this.myGamepadScrollOnlyOnHover = true;\r\n    }\r\n};", "PP.ConsoleVRWidgetUI = class ConsoleVRWidgetUI {\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActiveHierarchy(visible);\r\n    }\r\n\r\n    //Skeleton\r\n    _createSkeleton() {\r\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\r\n\r\n        this._createMessagesSkeleton();\r\n        this._createButtonsSkeleton();\r\n        this._createPointerSkeleton();\r\n    }\r\n\r\n    _createMessagesSkeleton() {\r\n        this.myMessagesPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myMessagesBackground = WL.scene.addObject(this.myMessagesPanel);\r\n        this.myMessagesTextsPanel = WL.scene.addObject(this.myMessagesPanel);\r\n\r\n        this.myMessagesTexts = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myMessagesTextsPanel);\r\n        }\r\n\r\n        this.myNotifyIconPanel = WL.scene.addObject(this.myMessagesPanel);\r\n        this.myNotifyIconBackground = WL.scene.addObject(this.myNotifyIconPanel);\r\n        this.myNotifyIconCursorTarget = WL.scene.addObject(this.myNotifyIconPanel);\r\n    }\r\n\r\n    _createButtonsSkeleton() {\r\n        this.myButtonsPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myFilterButtonsPanels = [];\r\n        this.myFilterButtonsBackgrounds = [];\r\n        this.myFilterButtonsTexts = [];\r\n        this.myFilterButtonsCursorTargets = [];\r\n\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myButtonsPanel);\r\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]] = WL.scene.addObject(this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]]);\r\n        }\r\n\r\n        this.myClearButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myClearButtonBackground = WL.scene.addObject(this.myClearButtonPanel);\r\n        this.myClearButtonText = WL.scene.addObject(this.myClearButtonPanel);\r\n        this.myClearButtonCursorTarget = WL.scene.addObject(this.myClearButtonPanel);\r\n\r\n        this.myUpButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myUpButtonBackground = WL.scene.addObject(this.myUpButtonPanel);\r\n        this.myUpButtonText = WL.scene.addObject(this.myUpButtonPanel);\r\n        this.myUpButtonCursorTarget = WL.scene.addObject(this.myUpButtonPanel);\r\n\r\n        this.myDownButtonPanel = WL.scene.addObject(this.myButtonsPanel);\r\n        this.myDownButtonBackground = WL.scene.addObject(this.myDownButtonPanel);\r\n        this.myDownButtonText = WL.scene.addObject(this.myDownButtonPanel);\r\n        this.myDownButtonCursorTarget = WL.scene.addObject(this.myDownButtonPanel);\r\n    }\r\n\r\n    _createPointerSkeleton() {\r\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\r\n    }\r\n\r\n    //Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.setDirty();\r\n\r\n        this._setMessagesTransforms();\r\n        this._setButtonsTransforms();\r\n        this._setPointerTransform();\r\n    }\r\n\r\n    _setMessagesTransforms() {\r\n        this.myMessagesPanel.setTranslationLocal(this._mySetup.myMessagesPanelPosition);\r\n        this.myMessagesBackground.scale(this._mySetup.myMessagesBackgroundScale);\r\n\r\n        this.myMessagesTextsPanel.setTranslationLocal(this._mySetup.myMessagesTextsPanelPosition);\r\n        this.myMessagesTextsPanel.scale(this._mySetup.myMessagesTextsPanelScale);\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myMessagesTextPositions[PP.ConsoleVRWidget.MessageType[key]]);\r\n        }\r\n\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n        this.myNotifyIconBackground.scale(this._mySetup.myNotifyIconBackgroundScale);\r\n        this.myNotifyIconCursorTarget.setTranslationLocal(this._mySetup.myNotifyIconCursorTargetPosition);\r\n    }\r\n\r\n    _setButtonsTransforms() {\r\n        this.myButtonsPanel.setTranslationLocal(this._mySetup.myButtonsPanelPosition);\r\n\r\n        //Filter Buttons\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this.myFilterButtonsPanels[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myFilterButtonsPositions[PP.ConsoleVRWidget.MessageType[key]]);\r\n\r\n            this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Clear\r\n        {\r\n            this.myClearButtonPanel.setTranslationLocal(this._mySetup.myClearButtonPosition);\r\n\r\n            this.myClearButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myClearButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myClearButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myClearButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Up\r\n        {\r\n            this.myUpButtonPanel.setTranslationLocal(this._mySetup.myUpButtonPosition);\r\n\r\n            this.myUpButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myUpButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myUpButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myUpButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n\r\n        //Down\r\n        {\r\n            this.myDownButtonPanel.setTranslationLocal(this._mySetup.myDownButtonPosition);\r\n\r\n            this.myDownButtonBackground.scale(this._mySetup.myButtonBackgroundScale);\r\n\r\n            this.myDownButtonText.setTranslationLocal(this._mySetup.myButtonTextPosition);\r\n            this.myDownButtonText.scale(this._mySetup.myButtonTextScale);\r\n\r\n            this.myDownButtonCursorTarget.setTranslationLocal(this._mySetup.myButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _setPointerTransform() {\r\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\r\n    }\r\n\r\n    //Components\r\n    _addComponents() {\r\n        this._addMessagesComponents();\r\n        this._addButtonsComponents();\r\n        this._addPointerComponents();\r\n    }\r\n\r\n    _addMessagesComponents() {\r\n        let messagesBackgroundMeshComp = this.myMessagesBackground.addComponent('mesh');\r\n        messagesBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n        messagesBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        messagesBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myMessagesTextComponents = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let textComp = this.myMessagesTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\r\n\r\n            textComp.alignment = this._mySetup.myMessagesTextAlignment;\r\n            textComp.justification = this._mySetup.myMessagesTextJustification;\r\n            textComp.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n            textComp.material.color = this._mySetup.myMessagesTextColors[PP.ConsoleVRWidget.MessageType[key]];\r\n            textComp.lineSpacing = 1.2;\r\n            textComp.text = this._mySetup.myMessagesTextStartString;\r\n\r\n            this.myMessagesTextComponents[PP.ConsoleVRWidget.MessageType[key]] = textComp;\r\n        }\r\n\r\n        this.myNotifyIconBackgroundComponent = this.myNotifyIconBackground.addComponent('mesh');\r\n        this.myNotifyIconBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNotifyIconBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNotifyIconBackgroundComponent.material.color = this._mySetup.myNotifyIconColor;\r\n\r\n        this.myNotifyIconCursorTargetComponent = this.myNotifyIconCursorTarget.addComponent('cursor-target');\r\n\r\n        this.myNotifyIconCollisionComponent = this.myNotifyIconCursorTarget.addComponent('collision');\r\n        this.myNotifyIconCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNotifyIconCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNotifyIconCollisionComponent.extents = this._mySetup.myNotifyIconCollisionExtents;\r\n    }\r\n\r\n    _addButtonsComponents() {\r\n        //worship the code copy pasteness\r\n\r\n        this.myFilterButtonsBackgroundComponents = [];\r\n        this.myFilterButtonsTextComponents = [];\r\n        this.myFilterButtonsCursorTargetComponents = [];\r\n        this.myFilterButtonsCollisionComponents = [];\r\n\r\n        //Filter Buttons\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let buttonBackgroundMeshComp = this.myFilterButtonsBackgrounds[PP.ConsoleVRWidget.MessageType[key]].addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myFilterButtonsTexts[PP.ConsoleVRWidget.MessageType[key]].addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.material.color = this._mySetup.myFilterButtonsTextColors[PP.ConsoleVRWidget.MessageType[key]];\r\n            buttonTextComp.text = this._mySetup.myFilterButtonsTextLabel[PP.ConsoleVRWidget.MessageType[key]];\r\n\r\n            let buttonCursorTargetComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myFilterButtonsCursorTargets[PP.ConsoleVRWidget.MessageType[key]].addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonBackgroundMeshComp;\r\n            this.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonTextComp;\r\n            this.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCursorTargetComp;\r\n            this.myFilterButtonsCollisionComponents[PP.ConsoleVRWidget.MessageType[key]] = buttonCollisionComp;\r\n        }\r\n\r\n        //Clear \r\n        {\r\n            let buttonBackgroundMeshComp = this.myClearButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myClearButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myClearButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myClearButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myClearButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myClearButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myClearButtonTextComponent = buttonTextComp;\r\n            this.myClearButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myClearButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        //Up \r\n        {\r\n            let buttonBackgroundMeshComp = this.myUpButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myUpButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myUpButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myUpButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myUpButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myUpButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myUpButtonTextComponent = buttonTextComp;\r\n            this.myUpButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myUpButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n\r\n        //Down \r\n        {\r\n            let buttonBackgroundMeshComp = this.myDownButtonBackground.addComponent('mesh');\r\n            buttonBackgroundMeshComp.mesh = this._myPlaneMesh;\r\n            buttonBackgroundMeshComp.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            buttonBackgroundMeshComp.material.color = this._mySetup.myBackgroundColor;\r\n\r\n            let buttonTextComp = this.myDownButtonText.addComponent('text');\r\n            this._setupButtonTextComponent(buttonTextComp);\r\n            buttonTextComp.text = this._mySetup.myDownButtonTextLabel;\r\n\r\n            let buttonCursorTargetComp = this.myDownButtonCursorTarget.addComponent('cursor-target');\r\n\r\n            let buttonCollisionComp = this.myDownButtonCursorTarget.addComponent('collision');\r\n            buttonCollisionComp.collider = this._mySetup.myButtonsCollisionCollider;\r\n            buttonCollisionComp.group = 1 << this._mySetup.myButtonsCollisionGroup;\r\n            buttonCollisionComp.extents = this._mySetup.myButtonsCollisionExtents;\r\n\r\n            this.myDownButtonBackgroundComponent = buttonBackgroundMeshComp;\r\n            this.myDownButtonTextComponent = buttonTextComp;\r\n            this.myDownButtonCursorTargetComponent = buttonCursorTargetComp;\r\n            this.myDownButtonCollisionComponent = buttonCollisionComp;\r\n        }\r\n    }\r\n\r\n    _addPointerComponents() {\r\n        this.myPointerCursorTargetComponent = this.myPointerCursorTarget.addComponent('cursor-target');\r\n        this.myPointerCursorTargetComponent.isSurface = true;\r\n\r\n        let collisionComp = this.myPointerCursorTarget.addComponent('collision');\r\n        collisionComp.collider = this._mySetup.myPointerCollisionCollider;\r\n        collisionComp.group = 1 << this._mySetup.myPointerCollisionGroup;\r\n        collisionComp.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this.myPointerCollisionComponent = collisionComp;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myNotifyIconPanel.setTranslationLocal(this._mySetup.myNotifyIconPanelPositions[PP.ToolHandedness.NONE]);\r\n    }\r\n};", "/* Doesn't support\r\n    - Placeholder like %d and other similar kind of way to build strings\r\n*/\r\n\r\nPP.ConsoleVRWidget = class ConsoleVRWidget {\r\n\r\n    constructor() {\r\n        this._myWidgetFrame = new PP.WidgetFrame(\"C\", 0);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new PP.ConsoleVRWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new PP.ConsoleVRWidgetUI();\r\n\r\n        this._myMessages = [];\r\n\r\n        this._myOldBrowserConsole = [];\r\n        this._myOldConsoleVR = [];\r\n\r\n        this._myTypeFilters = [];\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n        }\r\n\r\n        this._myScrollUp = false;\r\n        this._myScrollDown = false;\r\n        this._myScrollOffset = 0;\r\n        this._myScrollTimer = 0;\r\n        this._myScrollThumbstickTimer = 0;\r\n\r\n        this._myPulseTimer = 0;\r\n\r\n        this._myGamepadScrollActive = true;\r\n        if (this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = false;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get gamepad LEFT here based on how you store it in your game\r\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get gamepad RIGHT here based on how you store it in your game\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myUI.build(this._myWidgetFrame.getWidgetObject(), this._mySetup, additionalSetup);\r\n        this._myUI.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n        this._setNotifyIconActive(false);\r\n\r\n        this._addListeners();\r\n\r\n        this._overrideConsolesFunctions();\r\n    }\r\n\r\n    //This must be done only when all the setup is complete, to avoid issues with other part of the code calling the console and then triggering the console vr while not ready yet\r\n    _overrideConsolesFunctions() {\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.LOG] = console.log;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = console.error;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.WARN] = console.warn;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.INFO] = console.info;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = console.debug;\r\n        this._myOldBrowserConsole[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = console.assert;\r\n        this._myOldBrowserConsoleClear = console.clear;\r\n\r\n        if (this._myAdditionalSetup.myOverrideBrowserConsole) {\r\n            console.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n            console.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE);\r\n\r\n            window.addEventListener('error', function (errorEvent) {\r\n                if (errorEvent.error != null) {\r\n                    this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught\", errorEvent.error.stack);\r\n                } else {\r\n                    this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught\", errorEvent.message);\r\n                }\r\n            }.bind(this));\r\n\r\n            window.addEventListener('unhandledrejection', function (errorEvent) {\r\n                this._consolePrint(PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.WINDOW, \"Uncaught (in promise)\", errorEvent.reason);\r\n            }.bind(this));\r\n        }\r\n\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.LOG] = PP.ConsoleVR.log;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ERROR] = PP.ConsoleVR.error;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.WARN] = PP.ConsoleVR.warn;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.INFO] = PP.ConsoleVR.info;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.DEBUG] = PP.ConsoleVR.debug;\r\n        this._myOldConsoleVR[PP.ConsoleVRWidget.ConsoleFunction.ASSERT] = PP.ConsoleVR.assert;\r\n        this._myOldConsoleVRClear = PP.ConsoleVR.clear;\r\n\r\n        PP.ConsoleVR.log = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.LOG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.error = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ERROR, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.warn = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.WARN, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.info = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.INFO, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.debug = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.DEBUG, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.assert = this._consolePrint.bind(this, PP.ConsoleVRWidget.ConsoleFunction.ASSERT, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n        PP.ConsoleVR.clear = this._clearConsole.bind(this, true, PP.ConsoleVRWidget.Sender.CONSOLE_VR);\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._updateScroll(dt);\r\n        }\r\n\r\n        this._updateGamepadsExtraActions(dt);\r\n    }\r\n\r\n    //Text section\r\n\r\n    _updateText(messageType) {\r\n        let consoleText = \"\";\r\n\r\n        if (!this._myTypeFilters[messageType]) {\r\n            let linesCount = 0;\r\n            let i = this._myMessages.length - 1;\r\n\r\n            let scrollLinesToSkip = Math.round(this._myScrollOffset);\r\n\r\n            while (i >= 0 && linesCount < this._mySetup.myMaxLines) {\r\n                let message = this._myMessages[i];\r\n\r\n                //skip filtered messages\r\n                if (this._myTypeFilters[message.myType]) {\r\n                    i -= 1;\r\n                    continue;\r\n                }\r\n\r\n                let messageLines = message.myLines.length;\r\n\r\n                //compute line to skip due to scroll offset\r\n                let linesToSkip = 0;\r\n                if (scrollLinesToSkip > 0) {\r\n                    let additionalEmptyLines = 0;\r\n                    if (i != this._myMessages.length - 1) {\r\n                        additionalEmptyLines = this._mySetup.myLinesBetweenMessages;\r\n                    }\r\n\r\n                    if (scrollLinesToSkip >= messageLines + additionalEmptyLines) { // + empty lines between messages\r\n                        scrollLinesToSkip -= messageLines + additionalEmptyLines;\r\n                        linesToSkip = messageLines + additionalEmptyLines;\r\n                    } else {\r\n                        linesToSkip = scrollLinesToSkip;\r\n                        scrollLinesToSkip = 0;\r\n                    }\r\n                }\r\n\r\n                //add empty lines between messages\r\n                if (i != this._myMessages.length - 1) {\r\n                    let emptyLinesToSkip = this._mySetup.myLinesBetweenMessages - Math.max(this._mySetup.myLinesBetweenMessages - linesToSkip, 0);\r\n                    let emptyLinesToShow = this._mySetup.myLinesBetweenMessages - emptyLinesToSkip;\r\n                    if (linesCount + emptyLinesToShow > this._mySetup.myMaxLines) {\r\n                        emptyLinesToShow = this._myMaxLines - linesCount;\r\n                    }\r\n\r\n                    for (let j = 0; j < emptyLinesToShow; j++) {\r\n                        consoleText = (\"\\n\").concat(consoleText);\r\n                    }\r\n\r\n                    linesCount += emptyLinesToShow;\r\n                    linesToSkip -= emptyLinesToSkip;\r\n                }\r\n\r\n                //computing the number of message lines to show\r\n                let linesToShow = messageLines - linesToSkip;\r\n                if (linesCount + linesToShow > this._mySetup.myMaxLines) {\r\n                    linesToShow = this._mySetup.myMaxLines - linesCount;\r\n                }\r\n\r\n                if (linesToShow > 0) {\r\n                    if (message.myType == messageType) {\r\n                        //if the message is the same type of this message text component, add the message lines\r\n\r\n                        let linesToPrint = message.myLines.slice(messageLines - linesToShow - linesToSkip, messageLines - linesToSkip);\r\n                        let text = linesToPrint.join(\"\\n\");\r\n                        consoleText = (text.concat(\"\\n\")).concat(consoleText);\r\n\r\n                        linesCount += linesToShow;\r\n                    } else {\r\n                        //otherwise add empty lines, so that the text component with the correct type will have space to show this message\r\n\r\n                        for (let j = 0; j < linesToShow; j++) {\r\n                            consoleText = (\"\\n\").concat(consoleText);\r\n                        }\r\n\r\n                        linesCount += linesToShow;\r\n                    }\r\n                }\r\n\r\n                i -= 1;\r\n            }\r\n        }\r\n\r\n        consoleText = this._mySetup.myMessagesTextStartString.concat(consoleText);\r\n\r\n        this._myUI.myMessagesTextComponents[messageType].text = consoleText;\r\n    }\r\n\r\n    _consolePrint(consoleFunction, sender, ...args) {\r\n        if (consoleFunction != PP.ConsoleVRWidget.ConsoleFunction.ASSERT || (args.length > 0 && !args[0])) {\r\n            let message = this._argsToMessage(consoleFunction, ...args);\r\n            this._addMessage(message);\r\n\r\n            if (this._myMessages.length >= this._mySetup.myMaxMessages + this._mySetup.myMaxMessagesDeletePad) {\r\n                this._myMessages = this._myMessages.slice(this._myMessages.length - this._mySetup.myMaxMessages);\r\n                this._clampScrollOffset();\r\n            }\r\n\r\n            this._updateAllTexts();\r\n\r\n            this._pulseGamepad();\r\n        }\r\n\r\n        switch (sender) {\r\n            case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n            case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\r\n                this._myOldConsoleVR[consoleFunction].apply(PP.ConsoleVR, args);\r\n                break;\r\n            default:\r\n                this._myOldBrowserConsole[consoleFunction].apply(console, args);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _argsToMessage(consoleFunction, ...args) {\r\n        if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.ASSERT) {\r\n            args = args.slice(1);\r\n            args.splice(0, 0, this._mySetup.myAssertStartString);\r\n        }\r\n\r\n        let messageType = this._consoleFunctionToMessageType(consoleFunction);\r\n\r\n        let formattedText = this._formatArgs(...args);\r\n\r\n        let lines = this._splitLongLines(formattedText);\r\n\r\n        if (messageType == PP.ConsoleVRWidget.MessageType.INFO) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n        } else if (messageType == PP.ConsoleVRWidget.MessageType.EXCEPTION || messageType == PP.ConsoleVRWidget.MessageType.ASSERT) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\r\n        }\r\n\r\n\r\n        let message = new PP.ConsoleVRWidget.Message(messageType, lines);\r\n\r\n        return message;\r\n    }\r\n\r\n    _consoleFunctionToMessageType(consoleFunction) {\r\n        let messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n\r\n        if (consoleFunction < PP.ConsoleVRWidget.ConsoleFunction.INFO) {\r\n            messageType = consoleFunction;\r\n        } else if (consoleFunction == PP.ConsoleVRWidget.ConsoleFunction.INFO) {\r\n            messageType = PP.ConsoleVRWidget.MessageType.LOG;\r\n        } else {\r\n            messageType = PP.ConsoleVRWidget.MessageType.ERROR;\r\n        }\r\n\r\n        return messageType;\r\n    }\r\n\r\n    //Here the formatting using placeholder like %d could be implemented in the future\r\n    _formatArgs(...args) {\r\n        let stringifiedArgs = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            if (args[i] === undefined) {\r\n                stringifiedArgs.push(\"undefined\");\r\n            } else {\r\n                stringifiedArgs.push(this._stringifyItem(args[i]));\r\n            }\r\n        }\r\n\r\n        let formattedString = stringifiedArgs.join(\" \");\r\n\r\n        return formattedString;\r\n    }\r\n\r\n    _stringifyItem(item) {\r\n        if (typeof item === 'object') {\r\n            let stringifiedItem = null;\r\n            let linesBetweenItems = 2;\r\n\r\n            try {\r\n                stringifiedItem = JSON.stringify(item, this._jsonReplacer.bind(this), linesBetweenItems);\r\n            } catch (error) {\r\n                let cache = new WeakSet();\r\n\r\n                stringifiedItem = JSON.stringify(item, function (key, value) {\r\n                    if (typeof value === 'object' && value !== null) {\r\n                        if (cache.has(value)) {\r\n                            return \"<stringify error: object already stringified>\"; //try to avoid circular reference, a repeated object will be caught in this check too sadly\r\n                        }\r\n                        cache.add(value);\r\n                    }\r\n\r\n                    return this._jsonReplacer(key, value);\r\n                }.bind(this), linesBetweenItems);\r\n            }\r\n\r\n            stringifiedItem = stringifiedItem.replaceAll('\"[', '[');\r\n            stringifiedItem = stringifiedItem.replaceAll(\"'[\", \"[\");\r\n            stringifiedItem = stringifiedItem.replaceAll(']\"', ']');\r\n            stringifiedItem = stringifiedItem.replaceAll(\"]'\", \"]\");\r\n\r\n            return stringifiedItem;\r\n        }\r\n\r\n        return item;\r\n    }\r\n\r\n    _splitLongLines(messageText) {\r\n        let linesToSplit = messageText.split(\"\\n\");\r\n        let lines = [];\r\n        for (let i = 0; i < linesToSplit.length; i++) {\r\n            let lineToSplit = linesToSplit[i];\r\n\r\n            if (lineToSplit.length > this._mySetup.myMaxCharactersPerLine) {\r\n                let spacesAtStart = this._getSpacesAtStart(lineToSplit);\r\n                let spaceToAdd = this._mySetup.myTabString.concat(spacesAtStart);\r\n                let lineSplits = 0;\r\n\r\n                while (lineToSplit.length > this._mySetup.myMaxCharactersPerLine && lineSplits < this._mySetup.myMaxLineSplits) {\r\n                    let firstSub = lineToSplit.substr(0, this._mySetup.myMaxCharactersPerLine - 1);\r\n                    let secondSub = lineToSplit.substr(this._mySetup.myMaxCharactersPerLine - 1);\r\n                    secondSub = spaceToAdd.concat(secondSub);\r\n\r\n                    lines.push(firstSub);\r\n\r\n                    lineToSplit = secondSub;\r\n                    lineSplits++;\r\n                }\r\n                lines.push(lineToSplit);\r\n            } else {\r\n                lines.push(lineToSplit);\r\n            }\r\n        }\r\n\r\n        return lines;\r\n    }\r\n\r\n    _getSpacesAtStart(text) {\r\n        let spaces = \"\";\r\n        let i = 0;\r\n\r\n        while (i < text.length && text[i] == ' ') {\r\n            spaces = spaces.concat(\" \");\r\n            i++;\r\n        }\r\n\r\n        return spaces;\r\n    }\r\n\r\n    _addMessage(message) {\r\n        let hasSameInfoAsPrev = false;\r\n        if (this._myMessages.length > 0) {\r\n            let lastMessage = this._myMessages[this._myMessages.length - 1];\r\n            if (lastMessage.hasSameInfo(message)) {\r\n                lastMessage.increaseCount();\r\n                hasSameInfoAsPrev = true;\r\n            }\r\n        }\r\n\r\n        if (!hasSameInfoAsPrev) {\r\n            this._myMessages.push(message);\r\n        }\r\n\r\n        this._adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev);\r\n        this._updateNotifyIcon(message);\r\n    }\r\n\r\n    //if you have scrolled, new messages does not move the scroll position\r\n    _adjustScrollOffsetAfterMessageAdded(message, hasSameInfoAsPrev) {\r\n        if (!hasSameInfoAsPrev && !(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._myScrollOffset += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n        }\r\n    }\r\n\r\n    _updateAllTexts() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                this._updateText(PP.ConsoleVRWidget.MessageType[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateNotifyIcon(message) {\r\n        if (!(this._myTypeFilters[message.myType]) && this._myScrollOffset > 0) {\r\n            this._setNotifyIconActive(true);\r\n        }\r\n    }\r\n\r\n    _updateScroll(dt) {\r\n        if (this._myScrollUp) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset += this._mySetup.myScrollAmount;\r\n            }\r\n        } else if (this._myScrollDown) {\r\n            this._myScrollTimer += dt;\r\n            while (this._myScrollTimer > this._mySetup.myScrollDelay) {\r\n                this._myScrollTimer -= this._mySetup.myScrollDelay;\r\n                this._myScrollOffset -= this._mySetup.myScrollAmount;\r\n            }\r\n        }\r\n\r\n        this._clampScrollOffset();\r\n\r\n        if (this._myScrollUp || this._myScrollDown) {\r\n            this._updateAllTexts();\r\n        }\r\n\r\n        if (this._myScrollOffset == 0) {\r\n            this._setNotifyIconActive(false);\r\n        }\r\n    }\r\n\r\n    _clampScrollOffset() {\r\n        let maxScroll = this._getMaxScrollOffset();\r\n        this._myScrollOffset = Math.min(Math.max(this._myScrollOffset, 0), maxScroll); //clamp \r\n    }\r\n\r\n    _getMaxScrollOffset() {\r\n        return Math.max(this._getLinesCount() - this._mySetup.myMaxLines, 0);\r\n    }\r\n\r\n    _getLinesCount() {\r\n        let linesCount = 0;\r\n        for (let message of this._myMessages) {\r\n            if (!this._myTypeFilters[message.myType]) {\r\n                linesCount += message.myLines.length + this._mySetup.myLinesBetweenMessages;\r\n            }\r\n        }\r\n        linesCount -= this._mySetup.myLinesBetweenMessages; //empty line is added only between messages\r\n        linesCount = Math.max(linesCount, 0);\r\n\r\n        return linesCount;\r\n    }\r\n\r\n    //Listener section\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        for (let key in PP.ConsoleVRWidget.MessageType) {\r\n            let cursorTarget = ui.myFilterButtonsCursorTargetComponents[PP.ConsoleVRWidget.MessageType[key]];\r\n            let backgroundMaterial = ui.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n            let textMaterial = ui.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n\r\n            cursorTarget.addTripleClickFunction(this._resetFilters.bind(this, PP.ConsoleVRWidget.MessageType[key]));\r\n            cursorTarget.addDoubleClickFunction(this._filterAllButOne.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\r\n            cursorTarget.addClickFunction(this._toggleFilter.bind(this, PP.ConsoleVRWidget.MessageType[key], textMaterial));\r\n            cursorTarget.addHoverFunction(this._filterHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._filterUnHover.bind(this, PP.ConsoleVRWidget.MessageType[key], backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myClearButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myClearButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._clearConsole.bind(this, false, null));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myUpButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myUpButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollUp.bind(this, true));\r\n            cursorTarget.addDownFunction(this._setScrollUp.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollUp.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myDownButtonCursorTargetComponent;\r\n            let backgroundMaterial = ui.myDownButtonBackgroundComponent.material;\r\n\r\n            cursorTarget.addDoubleClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addDownFunction(this._setScrollDown.bind(this, true));\r\n            cursorTarget.addUpFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addUnHoverFunction(this._setScrollDown.bind(this, false));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._genericUnHover.bind(this, backgroundMaterial));\r\n        }\r\n\r\n        {\r\n            let cursorTarget = ui.myNotifyIconCursorTargetComponent;\r\n            let backgroundMaterial = ui.myNotifyIconBackgroundComponent.material;\r\n\r\n            cursorTarget.addClickFunction(this._instantScrollDown.bind(this));\r\n            cursorTarget.addHoverFunction(this._genericHover.bind(this, backgroundMaterial));\r\n            cursorTarget.addUnHoverFunction(this._notifyIconUnHover.bind(this));\r\n        }\r\n\r\n        ui.myPointerCursorTargetComponent.addHoverFunction(this._setGamepadScrollActive.bind(this, true));\r\n        ui.myPointerCursorTargetComponent.addUnHoverFunction(this._setGamepadScrollActive.bind(this, false));\r\n    }\r\n\r\n    _resetFilters(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n\r\n                this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n                filterTextMaterial.color = this._mySetup.myMessageTypeColors[PP.ConsoleVRWidget.MessageType[key]];\r\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _filterAllButOne(messageType) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            for (let key in PP.ConsoleVRWidget.MessageType) {\r\n                let backgroundMaterial = this._myUI.myFilterButtonsBackgroundComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                let filterTextMaterial = this._myUI.myFilterButtonsTextComponents[PP.ConsoleVRWidget.MessageType[key]].material;\r\n                if (PP.ConsoleVRWidget.MessageType[key] != messageType) {\r\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = true;\r\n                    backgroundMaterial.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n                    filterTextMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n                } else {\r\n                    this._myTypeFilters[PP.ConsoleVRWidget.MessageType[key]] = false;\r\n                    filterTextMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n                }\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _toggleFilter(messageType, textMaterial) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n\r\n            this._myTypeFilters[messageType] = !this._myTypeFilters[messageType];\r\n            if (this._myTypeFilters[messageType]) {\r\n                textMaterial.color = this._mySetup.myFilterButtonDisabledTextColor;\r\n            } else {\r\n                textMaterial.color = this._mySetup.myMessageTypeColors[messageType];\r\n            }\r\n\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _clearConsole(codeDrivenClear = false, sender = null) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || codeDrivenClear) {\r\n            this._myMessages = [];\r\n            this._clampScrollOffset();\r\n            this._updateAllTexts();\r\n\r\n            if (codeDrivenClear) {\r\n                switch (sender) {\r\n                    case PP.ConsoleVRWidget.Sender.BROWSER_CONSOLE:\r\n                        this._myOldBrowserConsoleClear.apply(console);\r\n                        break;\r\n                    case PP.ConsoleVRWidget.Sender.CONSOLE_VR:\r\n                        this._myOldConsoleVRClear.apply(PP.ConsoleVR);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            } else if (this._mySetup.myClearBrowserConsoleWhenClearPressed) {\r\n                PP.ConsoleVR._myRealClear();\r\n            }\r\n        }\r\n    }\r\n\r\n    _setScrollUp(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollUp = value;\r\n        }\r\n    }\r\n\r\n    _setScrollDown(value) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible || !value) {\r\n            if (value) {\r\n                this._myScrollTimer = 0;\r\n            }\r\n\r\n            this._myScrollDown = value;\r\n        }\r\n    }\r\n\r\n    _instantScrollUp() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = this._getMaxScrollOffset();\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _instantScrollDown() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myScrollOffset = 0;\r\n            this._setNotifyIconActive(false);\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _setNotifyIconActive(active) {\r\n        this._myUI.myNotifyIconPanel.pp_setActiveHierarchy(active && this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _notifyIconUnHover() {\r\n        let material = this._myUI.myNotifyIconBackgroundComponent.material;\r\n        material.color = this._mySetup.myNotifyIconColor;\r\n    }\r\n\r\n    _filterHover(messageType, material) {\r\n        this._genericHover(material);\r\n    }\r\n\r\n    _filterUnHover(messageType, material) {\r\n        if (this._myTypeFilters[messageType]) {\r\n            material.color = this._mySetup.myFilterButtonDisabledBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    //Gamepad section\r\n\r\n    _updateGamepadsExtraActions(dt) {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            if ((this._myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressStart() && this._myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).myIsPressed) ||\r\n                (this._myRightGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).isPressStart() && this._myLeftGamepad.getButtonInfo(PP.GamepadButtonID.THUMBSTICK).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n\r\n            this._myPulseTimer = Math.max(this._myPulseTimer - dt, 0);\r\n\r\n            this._updateScrollWithThumbstick(dt);\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        this._myUI.setVisible(visible);\r\n        if (visible) {\r\n            this._updateAllTexts();\r\n        }\r\n    }\r\n\r\n    _updateScrollWithThumbstick(dt) {\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myGamepadScrollActive) {\r\n            let axes = [0, 0];\r\n            if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.LEFT) {\r\n                axes = this._myLeftGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes;\r\n            } else if (this._mySetup.myScrollThumbstickHandedness == PP.ToolHandedness.RIGHT) {\r\n                axes = this._myRightGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes;\r\n            }\r\n\r\n            if (Math.abs(axes[1]) > this._mySetup.myScrollThumbstickMinThreshold) {\r\n                this._myScrollThumbstickTimer += dt;\r\n\r\n                while (this._myScrollThumbstickTimer > this._mySetup.myScrollThumbstickDelay) {\r\n                    this._myScrollThumbstickTimer -= this._mySetup.myScrollThumbstickDelay;\r\n\r\n                    let normalizedScrollAmount = (Math.abs(axes[1]) - this._mySetup.myScrollThumbstickMinThreshold) / (1 - this._mySetup.myScrollThumbstickMinThreshold);\r\n                    this._myScrollOffset += Math.sign(axes[1]) * normalizedScrollAmount * this._mySetup.myScrollThumbstickAmount;\r\n                }\r\n\r\n                this._clampScrollOffset();\r\n                this._updateAllTexts();\r\n            } else {\r\n                this._myScrollThumbstickTimer = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _pulseGamepad() {\r\n        if (this._myLeftGamepad && this._myRightGamepad) {\r\n            let pulseType = this._myAdditionalSetup.myPulseOnNewMessage;\r\n            let pulseEnabled = pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.ALWAYS || (!this._myWidgetFrame.myIsWidgetVisible && pulseType == PP.ConsoleVRWidget.PulseOnNewMessage.WHEN_HIDDEN);\r\n            if (pulseEnabled && this._myPulseTimer == 0) {\r\n                if (this._myAdditionalSetup.myHandedness == PP.ToolHandedness.RIGHT) {\r\n                    this._myRightGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                } else {\r\n                    this._myLeftGamepad.pulse(this._mySetup.myPulseIntensity, this._mySetup.myPulseDuration);\r\n                }\r\n                this._myPulseTimer = this._mySetup.myPulseDelay;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isSimpleArray(array) {\r\n        if (this._isSpecialSimpleArray(array)) {\r\n            return true;\r\n        } else if (Array.isArray(array)) {\r\n            let isBuiltIn = true;\r\n            for (let element of array) {\r\n                if (element instanceof Object) {\r\n                    isBuiltIn = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return isBuiltIn;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _isSpecialSimpleArray(item) {\r\n        return item && item.constructor &&\r\n            (\r\n                item.constructor.name == \"Uint32Array\" ||\r\n                item.constructor.name == \"Int32Array\" ||\r\n                item.constructor.name == \"Float32Array\" ||\r\n                item.constructor.name == \"Float64Array\"\r\n            );\r\n    }\r\n\r\n    _setGamepadScrollActive(active) {\r\n        this._myGamepadScrollActive = active;\r\n\r\n        if (!this._mySetup.myGamepadScrollOnlyOnHover) {\r\n            this._myGamepadScrollActive = true;\r\n        }\r\n    }\r\n\r\n    _jsonReplacer(key, value) {\r\n        if (value instanceof Map) {\r\n            return Array.from(value.entries());\r\n        } else if (this._isSimpleArray(value)) {\r\n            let array = value;\r\n            if (this._isSpecialSimpleArray(array)) {\r\n                let arrayCopy = []; // Special arrays like Float32Array do not print like Array\r\n                for (let i = 0; i < array.length; i++) {\r\n                    arrayCopy[i] = array[i];\r\n                }\r\n\r\n                array = arrayCopy;\r\n            }\r\n\r\n            let stringifiedArray = JSON.stringify(array);\r\n            stringifiedArray = stringifiedArray.split(\",\").join(\", \");\r\n            return stringifiedArray;\r\n        } else {\r\n            return value;\r\n        }\r\n    }\r\n};\r\n\r\nPP.ConsoleVRWidget.AdditionalSetup = class ConsoleVRWidgetAdditionalSetup {\r\n    constructor() {\r\n        this.myHandedness = PP.ToolHandedness.NONE;\r\n        this.myOverrideBrowserConsole = false;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myPulseOnNewMessage = PP.ConsoleVRWidget.PulseOnNewMessage.NEVER;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n    }\r\n};\r\n\r\nPP.ConsoleVRWidget.ConsoleFunction = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3,\r\n    INFO: 4,\r\n    ASSERT: 5\r\n};\r\n\r\nPP.ConsoleVRWidget.Sender = {\r\n    BROWSER_CONSOLE: 0,\r\n    CONSOLE_VR: 1,\r\n    WINDOW: 2\r\n};\r\n\r\nPP.ConsoleVRWidget.PulseOnNewMessage = {\r\n    NEVER: 0,\r\n    ALWAYS: 1,\r\n    WHEN_HIDDEN: 2,\r\n};\r\n\r\nPP.ConsoleVRWidget.MessageType = {\r\n    DEBUG: 0,\r\n    WARN: 1,\r\n    ERROR: 2,\r\n    LOG: 3\r\n};\r\n\r\nPP.ConsoleVRWidget.Message = class ConsoleVRWidgetMessage {\r\n    constructor(messageType, messageLines) {\r\n        this.myType = messageType;\r\n        this.myLines = messageLines;\r\n\r\n        this._myOriginalText = messageLines.join(\"\\n\");\r\n\r\n        this._myMessagesCount = 1;\r\n    }\r\n\r\n    hasSameInfo(message) {\r\n        return this._myOriginalText == message._myOriginalText && this.myType == message.myType;\r\n    }\r\n\r\n    increaseCount() {\r\n        this._myMessagesCount += 1;\r\n\r\n        let countString = ((\"(x\").concat(this._myMessagesCount)).concat(\") \");\r\n\r\n        let text = this._myOriginalText.slice(0);\r\n        text = countString.concat(text);\r\n        this.myLines = text.split(\"\\n\");\r\n    }\r\n};", "PP.ConsoleVR = {\r\n    _myRealLog: console.log,\r\n    _myRealError: console.error,\r\n    _myRealWarn: console.warn,\r\n    _myRealInfo: console.info,\r\n    _myRealDebug: console.debug,\r\n    _myRealAssert: console.assert,\r\n    _myRealClear: console.clear,\r\n    _myForwardToBrowserConsole: true,\r\n\r\n    log: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealLog.apply(console, args);\r\n        }\r\n    },\r\n    error: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealError.apply(console, args);\r\n        }\r\n    },\r\n    warn: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealWarn.apply(console, args);\r\n        }\r\n    },\r\n    info: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealInfo.apply(console, args);\r\n        }\r\n    },\r\n    debug: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealDebug.apply(console, args);\r\n        }\r\n    },\r\n    assert: function (...args) {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealAssert.apply(console, args);\r\n        }\r\n    },\r\n    clear: function () {\r\n        if (this._myForwardToBrowserConsole) {\r\n            this._myRealClear.apply(console);\r\n        }\r\n    },\r\n    setForwardToBrowserConsole: function (forwardToBrowserConsole) {\r\n        this._myForwardToBrowserConsole = forwardToBrowserConsole;\r\n    },\r\n    isForwardToBrowserConsole: function () {\r\n        return this._myForwardToBrowserConsole;\r\n    }\r\n};", "WL.registerComponent('pp-console-vr', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\r\n    _myOverrideBrowserConsole: { type: WL.Type.Bool, default: true },\r\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\r\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: false },\r\n    _myPulseOnNewMessage: { type: WL.Type.Enum, values: ['never', 'always', 'when hidden'], default: 'never' }\r\n}, {\r\n    init: function () {\r\n        this._myWidget = new PP.ConsoleVRWidget();\r\n\r\n        this._myStarted = false;\r\n    },\r\n    start: function () {\r\n        let additionalSetup = new PP.ConsoleVRWidget.AdditionalSetup();\r\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\r\n        additionalSetup.myOverrideBrowserConsole = this._myOverrideBrowserConsole;\r\n        additionalSetup.myShowOnStart = this._myShowOnStart;\r\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n        additionalSetup.myPulseOnNewMessage = this._myPulseOnNewMessage;\r\n        additionalSetup.myPlaneMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        additionalSetup.myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        this._myWidget.start(this.object, additionalSetup);\r\n\r\n        this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._myStarted = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this._myWidget.setVisible(false);\r\n            this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n        }\r\n\r\n        this._myWidget.update(dt);\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        if (this._myStarted) {\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n            this._myWidget.setVisible(false);\r\n        }\r\n    },\r\n});\r\n", "//Don't move inside easy_object_tuners folder, otherwise it won't resolve the parent class dependency\r\n\r\nPP.EasyObjectTuner = class EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        this._myObject = object;\r\n        this._myUseTuneTarget = useTuneTarget;\r\n        this._mySetAsDefault = setAsDefault;\r\n\r\n        this._myEasyObject = this._myObject;\r\n        if (this._myUseTuneTarget) {\r\n            this._myEasyObject = PP.myEasyTuneTarget;\r\n        }\r\n        this._myPrevEasyObject = null;\r\n\r\n        let variableNamePrefix = this._getVariableNamePrefix();\r\n\r\n        if (variableName == \"\") {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(this._myObject.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = variableNamePrefix.concat(variableName);\r\n        }\r\n    }\r\n\r\n    start() {\r\n        let easyTuneVariable = this._createEasyTuneVariable(this._myEasyTuneVariableName);\r\n\r\n        PP.myEasyTuneVariables.add(easyTuneVariable);\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            if (this._myUseTuneTarget) {\r\n                this._myEasyObject = PP.myEasyTuneTarget;\r\n            }\r\n\r\n            if (this._myPrevEasyObject != this._myEasyObject) {\r\n                this._myPrevEasyObject = this._myEasyObject;\r\n                if (this._myEasyObject) {\r\n                    let value = this._getObjectValue(this._myEasyObject);\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                } else {\r\n                    let value = this._getDefaultValue();\r\n                    PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value, true);\r\n                }\r\n            }\r\n\r\n            if (this._myEasyObject) {\r\n                this._updateObjectValue(this._myEasyObject, PP.myEasyTuneVariables.get(this._myEasyTuneVariableName));\r\n            }\r\n        }\r\n    }\r\n\r\n    updateVariableValue(value) {\r\n        PP.myEasyTuneVariables.set(this._myEasyTuneVariableName, value);\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-light-attenuation\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightAttenuation(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightAttenuation = class EasyLightAttenuation extends PP.EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = \"Light Attenuation \";\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumber(variableName, this._getDefaultValue(), 0.01, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let attenuation = this._getLightAttenuation(object);\r\n        return attenuation;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let attenuation = value;\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[3] = attenuation;\r\n        }\r\n    }\r\n\r\n    _getLightAttenuation(object) {\r\n        let attenuation = this._getDefaultValue();\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            attenuation = light.color[3];\r\n        }\r\n\r\n        return attenuation;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-light-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'] }\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyLightColor(this._myColorModel, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyLightColor = class EasyLightColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Light RGB \";\r\n        } else {\r\n            nameFirstPart = \"Light HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let lightColor = this._getLightColor(object);\r\n        if (lightColor) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbCodeToHuman(lightColor);\r\n            } else {\r\n                color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(lightColor));\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.vec3_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorModel == 0) {\r\n            color = PP.ColorUtils.rgbHumanToCode(color);\r\n        } else {\r\n            color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n        }\r\n\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            light.color[0] = color[0];\r\n            light.color[1] = color[1];\r\n            light.color[2] = color[2];\r\n            light.color[3] = light.color[3];\r\n        }\r\n\r\n        if ((PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n            (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n            let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n            let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n            console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n        }\r\n    }\r\n\r\n    _getLightColor(object) {\r\n        let color = null;\r\n        let light = object.pp_getComponent(\"light\");\r\n        if (light) {\r\n            color = light.color.slice(0, 3);\r\n        }\r\n\r\n        return color;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-mesh-color\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myColorModel: { type: WL.Type.Enum, values: ['rgb', 'hsv'], default: 'hsv' },\r\n    _myColorType: { type: WL.Type.Enum, values: ['color', 'diffuse color', 'ambient color', 'specular color', 'emissive color', 'fog color', 'ambient factor'], default: 'color' },\r\n\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyMeshColor(this._myColorModel, this._myColorType, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myColorModel\": this._myColorModel,\r\n            \"_myColorType\": this._myColorType,\r\n        });\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyMeshColor = class EasyMeshColor extends PP.EasyObjectTuner {\r\n    constructor(colorModel, colorType, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myColorModel = colorModel;\r\n        this._myColorType = colorType;\r\n        this._myColorVariableNames = ['color', 'diffuseColor', 'ambientColor', 'specularColor', 'emissiveColor', 'fogColor', 'ambientFactor',];\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh RGB \";\r\n        } else {\r\n            nameFirstPart = \"Mesh HSV \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        if (this._myColorType == 6) {\r\n            return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n        }\r\n        return new PP.EasyTuneIntArray(variableName, this._getDefaultValue(), 100, 0, 255);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let color = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            if (this._myColorType != 6) {\r\n                color = meshMaterial[this._myColorVariableNames[this._myColorType]].pp_clone();\r\n\r\n                if (this._myColorModel == 0) {\r\n                    color = PP.ColorUtils.rgbCodeToHuman(color);\r\n                } else {\r\n                    color = PP.ColorUtils.hsvCodeToHuman(PP.ColorUtils.rgbToHsv(color));\r\n                }\r\n            } else {\r\n                color = [meshMaterial[this._myColorVariableNames[this._myColorType]]];\r\n            }\r\n        } else {\r\n            color = this._getDefaultValue();\r\n        }\r\n\r\n        return color;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        if (this._myColorType == 6) {\r\n            return [0];\r\n        }\r\n\r\n        return PP.vec4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let color = value;\r\n\r\n        if (this._myColorType != 6) {\r\n            if (this._myColorModel == 0) {\r\n                color = PP.ColorUtils.rgbHumanToCode(color);\r\n            } else {\r\n                color = PP.ColorUtils.hsvToRgb(PP.ColorUtils.hsvHumanToCode(color));\r\n            }\r\n        }\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial[this._myColorVariableNames[this._myColorType]] = color;\r\n        }\r\n\r\n        if (this._myColorType != 6) {\r\n            if ((PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (PP.myLeftGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && PP.myRightGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed)) {\r\n\r\n                let hsvColor = PP.ColorUtils.color1To255(PP.ColorUtils.rgbToHsv(color));\r\n                let rgbColor = PP.ColorUtils.color1To255(color);\r\n\r\n                console.log(\"RGB:\", rgbColor.vec_toString(0), \"- HSV:\", hsvColor.vec_toString(0));\r\n            }\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponentHierarchy(\"mesh\");\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-scale\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyScale(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    }\r\n});\r\n\r\nPP.EasyScale = class EasyScale extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Scale \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumberArray(variableName, this._getDefaultValue(), 1, 3, 0.001, null, this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getScaleLocal() : object.pp_getScaleWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.vec3_create(1, 1, 1);\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setScaleLocal(value);\r\n        } else {\r\n            object.pp_setScaleWorld(value);\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-set-tune-target-child-number\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myEasyTuneVariableName = \"Target Child \";\r\n\r\n        if (this._myVariableName == \"\") {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this.object.objectId);\r\n        } else {\r\n            this._myEasyTuneVariableName = this._myEasyTuneVariableName.concat(this._myVariableName);\r\n        }\r\n\r\n        let childrenCount = this.object.pp_getChildren().length;\r\n        let min = 1;\r\n        let max = childrenCount;\r\n        if (childrenCount == 0) {\r\n            min = 0;\r\n            max = 0;\r\n        }\r\n\r\n        PP.myEasyTuneVariables.add(new PP.EasyTuneInt(this._myEasyTuneVariableName, 0, 10, min, max));\r\n        if (this._mySetAsDefault) {\r\n            PP.setEasyTuneWidgetActiveVariable(this._myEasyTuneVariableName);\r\n        }\r\n\r\n        this._myCurrentChildIndex = -1;\r\n        this._myCurrentChildrenCount = childrenCount;\r\n    },\r\n    update: function () {\r\n        if (PP.myEasyTuneVariables.isActive(this._myEasyTuneVariableName)) {\r\n            let childrenCount = this.object.pp_getChildren().length;\r\n            if (childrenCount != this._myCurrentChildrenCount) {\r\n                this._myCurrentChildrenCount = childrenCount;\r\n\r\n                let min = 1;\r\n                let max = childrenCount;\r\n                if (childrenCount == 0) {\r\n                    min = 0;\r\n                    max = 0;\r\n                }\r\n\r\n                let easyTuneVariable = PP.myEasyTuneVariables.getEasyTuneVariable(this._myEasyTuneVariableName);\r\n                easyTuneVariable.setMin(min);\r\n                easyTuneVariable.setMax(max);\r\n            }\r\n\r\n            let childIndex = PP.myEasyTuneVariables.get(this._myEasyTuneVariableName);\r\n            if (childIndex != this._myCurrentChildIndex) {\r\n                if (childIndex == 0 && this._myCurrentChildIndex != -1) {\r\n                    PP.myEasyTuneTarget = null;\r\n                } else if (childIndex > 0) {\r\n                    PP.myEasyTuneTarget = this.object.pp_getChildren()[childIndex - 1];\r\n                }\r\n\r\n                this._myCurrentChildIndex = childIndex;\r\n            }\r\n        }\r\n    }\r\n});", "WL.registerComponent(\"pp-easy-set-tune-target-grab\", {\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myGrabber = this.object.pp_getComponent(\"pp-grabber-hand\");\r\n    },\r\n    update: function () {\r\n    },\r\n    _onRelease: function (grabber, grabbable) {\r\n        PP.myEasyTuneTarget = grabbable.object;\r\n    },\r\n    _onGrab: function (grabber, grabbable) {\r\n        //PP.myEasyTuneTarget = null;\r\n    },\r\n    onActivate() {\r\n        this._myGrabber.registerGrabEventListener(this, this._onGrab.bind(this));\r\n        this._myGrabber.registerThrowEventListener(this, this._onRelease.bind(this));\r\n    },\r\n    onDeactivate() {\r\n        this._myGrabber.unregisterGrabEventListener(this);\r\n        this._myGrabber.unregisterThrowEventListener(this);\r\n    }\r\n});", "WL.registerComponent(\"pp-easy-transform\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _myIsLocal: { type: WL.Type.Bool, default: false },\r\n    _myScaleAsOne: { type: WL.Type.Bool, default: true }, // Edit all scale values together\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyTransform(this._myIsLocal, this._myScaleAsOne, this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget,\r\n            \"_myIsLocal\": this._myIsLocal,\r\n            \"_myScaleAsOne\": this._myScaleAsOne,\r\n        });\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyTransform = class EasyTransform extends PP.EasyObjectTuner {\r\n    constructor(isLocal, scaleAsOne, object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n        this._myIsLocal = isLocal;\r\n        this._myScaleAsOne = scaleAsOne;\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        return \"Transform \";\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneTransform(variableName, this._getDefaultValue(), this._myScaleAsOne);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        return this._myIsLocal ? object.pp_getTransformLocal() : object.pp_getTransformWorld();\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return PP.mat4_create();\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        if (this._myIsLocal) {\r\n            object.pp_setTransformLocal(value);\r\n        } else {\r\n            object.pp_setTransformWorld(value);\r\n        }\r\n    }\r\n};", "WL.registerComponent(\"pp-easy-mesh-ambient-factor\", {\r\n    _myVariableName: { type: WL.Type.String, default: \"\" },\r\n    _myUseTuneTarget: { type: WL.Type.Bool, default: false },\r\n    _mySetAsDefault: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n        this._myEasyObjectTuner = new PP.EasyMeshAmbientFactor(this.object, this._myVariableName, this._mySetAsDefault, this._myUseTuneTarget);\r\n    },\r\n    start: function () {\r\n        this._myEasyObjectTuner.start();\r\n    },\r\n    update: function (dt) {\r\n        this._myEasyObjectTuner.update(dt);\r\n    },\r\n    pp_clone(targetObject) {\r\n        let clonedComponent = targetObject.pp_addComponent(this.type, {\r\n            \"_myVariableName\": this._myVariableName,\r\n            \"_mySetAsDefault\": this._mySetAsDefault,\r\n            \"_myUseTuneTarget\": this._myUseTuneTarget\r\n        });\r\n\r\n        return clonedComponent;\r\n    }\r\n});\r\n\r\nPP.EasyMeshAmbientFactor = class EasyMeshAmbientFactor extends PP.EasyObjectTuner {\r\n    constructor(object, variableName, setAsDefault, useTuneTarget) {\r\n        super(object, variableName, setAsDefault, useTuneTarget);\r\n    }\r\n\r\n    _getVariableNamePrefix() {\r\n        let nameFirstPart = null;\r\n\r\n        if (this._myColorModel == 0) {\r\n            nameFirstPart = \"Mesh AF \";\r\n        } else {\r\n            nameFirstPart = \"Mesh AF \";\r\n        }\r\n\r\n        return nameFirstPart;\r\n    }\r\n\r\n    _createEasyTuneVariable(variableName) {\r\n        return new PP.EasyTuneNumber(variableName, this._getDefaultValue(), 0.1, 3, 0, 1);\r\n    }\r\n\r\n    _getObjectValue(object) {\r\n        let ambientFactor = null;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            ambientFactor = meshMaterial.ambientFactor;\r\n        } else {\r\n            ambientFactor = this._getDefaultValue();\r\n        }\r\n\r\n        return ambientFactor;\r\n    }\r\n\r\n    _getDefaultValue() {\r\n        return 0;\r\n    }\r\n\r\n    _updateObjectValue(object, value) {\r\n        let ambientFactor = value;\r\n\r\n        let meshMaterial = this._getMeshMaterial(object);\r\n        if (meshMaterial) {\r\n            meshMaterial.ambientFactor = ambientFactor;\r\n        }\r\n    }\r\n\r\n    _getMeshMaterial(object) {\r\n        let material = null;\r\n        let mesh = object.pp_getComponentHierarchy(\"mesh\");\r\n        if (mesh) {\r\n            material = mesh.material;\r\n        }\r\n\r\n        return material;\r\n    }\r\n};", "PP.EasyTuneBaseWidgetParams = class EasyTuneBaseWidgetParams {\r\n    constructor() {\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n};\r\n\r\nPP.EasyTuneBaseWidget = class EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        this._mySetup = null;\r\n        this._myUI = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myVariable = null;\r\n\r\n        this._myIsVisible = true;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myAppendToVariableName = \"\";\r\n\r\n        this._myScrollVariableActive = false;\r\n        this._myScrollDirection = 0;\r\n        this._myScrollVariableTimer = 0;\r\n        this._myHasScrolled = false;\r\n\r\n        this._myResetImportLabelTimer = new PP.Timer(0, false);\r\n        this._myResetExportLabelTimer = new PP.Timer(0, false);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        if (visible) {\r\n            this._refreshUI();\r\n        }\r\n\r\n        this._myUI.setVisible(visible);\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n\r\n        if ((typeof appendToVariableName) !== 'undefined') {\r\n            this._myAppendToVariableName = appendToVariableName;\r\n        } else {\r\n            this._myAppendToVariableName = \"\";\r\n        }\r\n\r\n        this._setEasyTuneVariableHook();\r\n\r\n        this._refreshUI();\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        return this._myScrollVariableActive;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        return this._myScrollDirection;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        this._myScrollVariableActive = active;\r\n        this._myScrollDirection = scrollDirection;\r\n        this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        this._myHasScrolled = false;\r\n    }\r\n\r\n    getWidget() {\r\n        return this;\r\n    }\r\n\r\n    syncWidget(otherEasyTuneWidget) {\r\n        if (otherEasyTuneWidget != null) {\r\n            if (otherEasyTuneWidget._myResetImportLabelTimer.isRunning()) {\r\n                this._myResetImportLabelTimer.start(otherEasyTuneWidget._myResetImportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetImportLabelTimer.reset();\r\n            }\r\n\r\n            if (otherEasyTuneWidget._myResetExportLabelTimer.isRunning()) {\r\n                this._myResetExportLabelTimer.start(otherEasyTuneWidget._myResetExportLabelTimer.getTimeLeft());\r\n            } else {\r\n                this._myResetExportLabelTimer.reset();\r\n            }\r\n\r\n            this._myUI.myImportButtonTextComponent.text = otherEasyTuneWidget._myUI.myImportButtonTextComponent.text;\r\n            this._myUI.myExportButtonTextComponent.text = otherEasyTuneWidget._myUI.myExportButtonTextComponent.text;\r\n\r\n            this.setScrollVariableActive(otherEasyTuneWidget.isScrollVariableActive(), otherEasyTuneWidget.getScrollVariableDirection());\r\n        } else {\r\n            this._myResetImportLabelTimer.reset();\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n            this._myResetExportLabelTimer.reset();\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportSuccessButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onImportFailure() {\r\n        this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportFailureButtonText;\r\n        this._myResetImportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportSuccess() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportSuccessButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    onExportFailure() {\r\n        this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportFailureButtonText;\r\n        this._myResetExportLabelTimer.start(this._mySetup.myImportExportResetLabelSeconds);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._mySetup.build();\r\n\r\n        this._myResetImportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n        this._myResetExportLabelTimer.setDuration(this._mySetup.myImportExportResetLabelSeconds);\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setImportExportButtonsActive(this._myAdditionalSetup.myEnableVariablesImportExportButtons);\r\n\r\n        this._startHook(parentObject, additionalSetup);\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._updateHook(dt);\r\n\r\n            this._updateScrollVariable(dt);\r\n\r\n            this._updateImportExportLabel(dt);\r\n        }\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _setEasyTuneVariableHook() {\r\n    }\r\n\r\n    _refreshUIHook() {\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n    }\r\n\r\n    _addListenersHook() {\r\n    }\r\n\r\n    _updateHook(dt) {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _refreshUI() {\r\n        if (this._myVariable) {\r\n            if (this._myVariable.myName != null) {\r\n                this._myUI.myVariableLabelTextComponent.text = this._myVariable.myName.concat(this._myAppendToVariableName);\r\n            } else {\r\n                let name = \"Unknown\";\r\n                this._myUI.myVariableLabelTextComponent.text = name.concat(this._myAppendToVariableName);\r\n            }\r\n\r\n            this._refreshUIHook();\r\n        }\r\n    }\r\n\r\n    _updateScrollVariable(dt) {\r\n        if (this._myScrollVariableActive) {\r\n            if (this._myScrollVariableTimer <= 0) {\r\n                this._scrollVariableRequest(this._myScrollDirection);\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n                this._myHasScrolled = true;\r\n            } else {\r\n                this._myScrollVariableTimer -= dt;\r\n            }\r\n        }\r\n    }\r\n\r\n    _updateImportExportLabel(dt) {\r\n        if (this._myResetImportLabelTimer.isRunning(dt)) {\r\n            this._myResetImportLabelTimer.update(dt);\r\n            if (this._myResetImportLabelTimer.isDone()) {\r\n                this._myResetImportLabelTimer.reset();\r\n                this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n            }\r\n        }\r\n\r\n        if (this._myResetExportLabelTimer.isRunning(dt)) {\r\n            this._myResetExportLabelTimer.update(dt);\r\n            if (this._myResetExportLabelTimer.isDone()) {\r\n                this._myResetExportLabelTimer.reset();\r\n                this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n            }\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myNextButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, 1, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myNextButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myNextButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n        ui.myNextButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myNextButtonBackgroundComponent.material));\r\n\r\n        ui.myPreviousButtonCursorTargetComponent.addDownFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addDownOnHoverFunction(this._setScrollVariableActive.bind(this, true, -1, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpFunction(this._setScrollVariableActive.bind(this, false, 0, false));\r\n        ui.myPreviousButtonCursorTargetComponent.addUpWithNoDownFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._setScrollVariableActive.bind(this, false, 0, true));\r\n        ui.myPreviousButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n        ui.myPreviousButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPreviousButtonBackgroundComponent.material));\r\n\r\n        ui.myImportButtonCursorTargetComponent.addUpFunction(this._importVariables.bind(this));\r\n        ui.myImportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n        ui.myImportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myImportButtonBackgroundComponent.material));\r\n\r\n        ui.myExportButtonCursorTargetComponent.addUpFunction(this._exportVariables.bind(this));\r\n        ui.myExportButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n        ui.myExportButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myExportButtonBackgroundComponent.material));\r\n\r\n        this._addListenersHook();\r\n    }\r\n\r\n    _setScrollVariableActive(active, scrollDirection, skipForceScroll) {\r\n        if (this._isActive() || !active) {\r\n            let forceScroll = !active && !this._myHasScrolled && !skipForceScroll;\r\n            let oldScrollDirection = this._myScrollDirection;\r\n\r\n            this.setScrollVariableActive(active, scrollDirection);\r\n\r\n            if (forceScroll) {\r\n                this._scrollVariableRequest(oldScrollDirection);\r\n            }\r\n        }\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        if (this._isActive() && amount != 0) {\r\n            for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n                callback(amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _genericUnHover(material) {\r\n        material.color = this._mySetup.myBackgroundColor;\r\n    }\r\n\r\n    _importVariables() {\r\n        if (this._myUI.myImportButtonTextComponent.text == this._mySetup.myImportButtonText) {\r\n            this._myUI.myImportButtonTextComponent.text = this._mySetup.myImportingButtonText;\r\n            this._myResetImportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesImportCallback();\r\n        }\r\n    }\r\n\r\n    _exportVariables() {\r\n        if (this._myUI.myExportButtonTextComponent.text == this._mySetup.myExportButtonText) {\r\n            this._myUI.myExportButtonTextComponent.text = this._mySetup.myExportingButtonText;\r\n            this._myResetExportLabelTimer.reset();\r\n\r\n            this._myParams.myVariablesExportCallback();\r\n        }\r\n    }\r\n};", "\r\nPP.EasyTuneBaseWidgetUI = class EasyTuneBaseWidgetUI {\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myImportExportButtonsActive = true;\r\n\r\n        this._myPlaneMesh = PP.myDefaultResources.myMeshes.myPlane;\r\n\r\n        this._buildHook();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myPivotObject.pp_setActiveHierarchy(visible);\r\n\r\n        if (visible) {\r\n            this.setImportExportButtonsActive(this._myImportExportButtonsActive);\r\n        }\r\n\r\n        this._setVisibleHook(visible);\r\n    }\r\n\r\n    setImportExportButtonsActive(active) {\r\n        this._myImportExportButtonsActive = active;\r\n\r\n        this.myImportExportPanel.pp_setActiveHierarchy(this._myImportExportButtonsActive);\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _buildHook() {\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n    }\r\n\r\n    _setTransformHook() {\r\n    }\r\n\r\n    _addComponentsHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    // Skeleton\r\n\r\n    _createSkeleton() {\r\n        this.myPivotObject = WL.scene.addObject(this._myParentObject);\r\n\r\n        this.myBackPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myBackBackground = WL.scene.addObject(this.myBackPanel);\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myVariableLabelPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myVariableLabelText = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myVariableLabelCursorTarget = WL.scene.addObject(this.myVariableLabelPanel);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myNextButtonBackground = WL.scene.addObject(this.myNextButtonPanel);\r\n        this.myNextButtonText = WL.scene.addObject(this.myNextButtonPanel);\r\n        this.myNextButtonCursorTarget = WL.scene.addObject(this.myNextButtonPanel);\r\n\r\n        this.myPreviousButtonPanel = WL.scene.addObject(this.myVariableLabelPanel);\r\n        this.myPreviousButtonBackground = WL.scene.addObject(this.myPreviousButtonPanel);\r\n        this.myPreviousButtonText = WL.scene.addObject(this.myPreviousButtonPanel);\r\n        this.myPreviousButtonCursorTarget = WL.scene.addObject(this.myPreviousButtonPanel);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myImportButtonPanel = WL.scene.addObject(this.myImportExportPanel);\r\n        this.myImportButtonBackground = WL.scene.addObject(this.myImportButtonPanel);\r\n        this.myImportButtonText = WL.scene.addObject(this.myImportButtonPanel);\r\n        this.myImportButtonCursorTarget = WL.scene.addObject(this.myImportButtonPanel);\r\n\r\n        this.myExportButtonPanel = WL.scene.addObject(this.myImportExportPanel);\r\n        this.myExportButtonBackground = WL.scene.addObject(this.myExportButtonPanel);\r\n        this.myExportButtonText = WL.scene.addObject(this.myExportButtonPanel);\r\n        this.myExportButtonCursorTarget = WL.scene.addObject(this.myExportButtonPanel);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this._createSkeletonHook();\r\n    }\r\n\r\n    // Transforms\r\n\r\n    _setTransforms() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n\r\n        this.myBackPanel.setTranslationLocal(this._mySetup.myBackPanelPosition);\r\n        this.myBackBackground.scale(this._mySetup.myBackBackgroundScale);\r\n\r\n        // Display\r\n        this.myDisplayPanel.setTranslationLocal(this._mySetup.myDisplayPanelPosition);\r\n\r\n        this.myVariableLabelPanel.setTranslationLocal(this._mySetup.myVariableLabelPanelPosition);\r\n        this.myVariableLabelText.scale(this._mySetup.myVariableLabelTextScale);\r\n        this.myVariableLabelCursorTarget.setTranslationLocal(this._mySetup.myVariableLabelCursorTargetPosition);\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myNextButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myNextButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myNextButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myNextButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPreviousButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myPreviousButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPreviousButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPreviousButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPreviousButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Import/Export\r\n\r\n        this.myImportExportPanel.setTranslationLocal(this._mySetup.myImportExportPanelPosition);\r\n\r\n        this.myImportButtonPanel.setTranslationLocal(this._mySetup.myImportButtonPosition);\r\n        this.myImportButtonBackground.scale(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myImportButtonText.setTranslationLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myImportButtonText.scale(this._mySetup.myImportExportButtonTextScale);\r\n        this.myImportButtonCursorTarget.setTranslationLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        this.myExportButtonPanel.setTranslationLocal(this._mySetup.myExportButtonPosition);\r\n        this.myExportButtonBackground.scale(this._mySetup.myImportExportButtonBackgroundScale);\r\n        this.myExportButtonText.setTranslationLocal(this._mySetup.myImportExportButtonTextPosition);\r\n        this.myExportButtonText.scale(this._mySetup.myImportExportButtonTextScale);\r\n        this.myExportButtonCursorTarget.setTranslationLocal(this._mySetup.myImportExportButtonCursorTargetPosition);\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCursorTarget.setTranslationLocal(this._mySetup.myPointerCursorTargetPosition);\r\n\r\n        this._setTransformHook();\r\n    }\r\n\r\n    // Components\r\n\r\n    _addComponents() {\r\n        this.myBackBackgroundComponent = this.myBackBackground.addComponent('mesh');\r\n        this.myBackBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myBackBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myBackBackgroundComponent.material.color = this._mySetup.myBackBackgroundColor;\r\n\r\n        // Display\r\n\r\n        this.myVariableLabelTextComponent = this.myVariableLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myVariableLabelTextComponent);\r\n        this.myVariableLabelTextComponent.text = \" \";\r\n\r\n        this.myVariableLabelCursorTargetComponent = this.myVariableLabelCursorTarget.addComponent('cursor-target');\r\n        this.myVariableLabelCollisionComponent = this.myVariableLabelCursorTarget.addComponent('collision');\r\n        this.myVariableLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVariableLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVariableLabelCollisionComponent.extents = this._mySetup.myVariableLabelCollisionExtents;\r\n\r\n        // Next/Previous\r\n\r\n        this.myNextButtonBackgroundComponent = this.myNextButtonBackground.addComponent('mesh');\r\n        this.myNextButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myNextButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myNextButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myNextButtonTextComponent = this.myNextButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myNextButtonTextComponent);\r\n        this.myNextButtonTextComponent.text = this._mySetup.myNextButtonText;\r\n\r\n        this.myNextButtonCursorTargetComponent = this.myNextButtonCursorTarget.addComponent('cursor-target');\r\n        this.myNextButtonCollisionComponent = this.myNextButtonCursorTarget.addComponent('collision');\r\n        this.myNextButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myNextButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myNextButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPreviousButtonBackgroundComponent = this.myPreviousButtonBackground.addComponent('mesh');\r\n        this.myPreviousButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPreviousButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPreviousButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPreviousButtonTextComponent = this.myPreviousButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPreviousButtonTextComponent);\r\n        this.myPreviousButtonTextComponent.text = this._mySetup.myPreviousButtonText;\r\n\r\n        this.myPreviousButtonCursorTargetComponent = this.myPreviousButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPreviousButtonCollisionComponent = this.myPreviousButtonCursorTarget.addComponent('collision');\r\n        this.myPreviousButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPreviousButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPreviousButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Import/Export\r\n\r\n        this.myImportButtonBackgroundComponent = this.myImportButtonBackground.addComponent('mesh');\r\n        this.myImportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myImportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myImportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myImportButtonTextComponent = this.myImportButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myImportButtonTextComponent);\r\n        this.myImportButtonTextComponent.text = this._mySetup.myImportButtonText;\r\n\r\n        this.myImportButtonCursorTargetComponent = this.myImportButtonCursorTarget.addComponent('cursor-target');\r\n        this.myImportButtonCollisionComponent = this.myImportButtonCursorTarget.addComponent('collision');\r\n        this.myImportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myImportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myImportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        this.myExportButtonBackgroundComponent = this.myExportButtonBackground.addComponent('mesh');\r\n        this.myExportButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myExportButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myExportButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myExportButtonTextComponent = this.myExportButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myExportButtonTextComponent);\r\n        this.myExportButtonTextComponent.text = this._mySetup.myExportButtonText;\r\n\r\n        this.myExportButtonCursorTargetComponent = this.myExportButtonCursorTarget.addComponent('cursor-target');\r\n        this.myExportButtonCollisionComponent = this.myExportButtonCursorTarget.addComponent('collision');\r\n        this.myExportButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myExportButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myExportButtonCollisionComponent.extents = this._mySetup.myImportExportButtonCollisionExtents;\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionComponent = this.myPointerCursorTarget.addComponent('collision');\r\n        this.myPointerCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPointerCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPointerCollisionComponent.extents = this._mySetup.myPointerCollisionExtents;\r\n\r\n        this._addComponentsHook();\r\n    }\r\n\r\n    _setupTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[this._myAdditionalSetup.myHandedness]);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectPositions[PP.ToolHandedness.NONE]);\r\n    }\r\n};", "PP.EasyTuneBaseWidgetSetup = class EasyTuneBaseWidgetSetup {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    build() {\r\n        this._initializeBuildSetup();\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    // Hooks\r\n\r\n    _getBackPanelMaxY() {\r\n        return this.myDisplayPanelPosition[1] + this.myVariableLabelPanelPosition[1] + this.mySideButtonBackgroundScale[1] + this._mySideButtonDistanceFromBorder * 1.25;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myDisplayPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this._mySideButtonPanelHalfWidth\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return -this._mySideButtonPanelHalfWidth;\r\n    }\r\n\r\n    // small Z offset to avoid glitching with other widgets\r\n    _getPivotZOffset() {\r\n        return 0;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n    }\r\n\r\n    // Hooks end\r\n\r\n    _initializeBuildSetup() {\r\n        // General\r\n\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = WL.Collider.Box;\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = WL.Alignment.Center;\r\n        this.myTextJustification = WL.Justification.Middle;\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myLabelTextScale = PP.vec3_create(0.19, 0.19, 0.19);\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this._myPanelZOffset = 0.01;\r\n        this._myColliderZOffset = 0.017;\r\n        this._mySideButtonDistanceFromBorder = 0.0125;\r\n        this._mySideButtonPanelHalfWidth = 0.2;\r\n\r\n        // Pivot\r\n\r\n        this.myPivotObjectPositions = [];\r\n        this.myPivotObjectPositions[PP.ToolHandedness.NONE] = PP.vec3_create(0, 0, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[PP.ToolHandedness.LEFT] = PP.vec3_create(-0.04, 0.02, this._getPivotZOffset());\r\n        this.myPivotObjectPositions[PP.ToolHandedness.RIGHT] = PP.vec3_create(-0.08, 0.02, this._getPivotZOffset());\r\n\r\n        this.mySideButtonBackgroundScale = PP.vec3_create(0.015, 0.015, 1);\r\n        this.mySideButtonTextScale = this.myButtonTextScale;\r\n        this.mySideButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n\r\n        this.mySideButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.mySideButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.mySideButtonCollisionExtents = this.mySideButtonBackgroundScale.slice(0);\r\n        this.mySideButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myLeftSideButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myLeftSideButtonPosition[0] = -this._mySideButtonPanelHalfWidth + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n\r\n        this.myRightSideButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myRightSideButtonPosition[0] = -this.myLeftSideButtonPosition[0];\r\n\r\n        // Display\r\n\r\n        this.myDisplayPanelPosition = PP.vec3_create(0, 0.1, 0);\r\n\r\n        this.myVariableLabelPanelPosition = PP.vec3_create(0, 0.025, this._myPanelZOffset);\r\n        this.myVariableLabelTextScale = this.myLabelTextScale;\r\n\r\n        this.myVariableLabelCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myVariableLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myVariableLabelCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myVariableLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myNextButtonText = \">\";\r\n        this.myPreviousButtonText = \"<\";\r\n\r\n        this._initializeBuildSetupHook();\r\n\r\n        // Background\r\n\r\n        {\r\n            let maxX = this._getBackPanelMaxX();\r\n            let minX = this._getBackPanelMinX();\r\n            let maxY = this._getBackPanelMaxY();\r\n            let minY = this._getBackPanelMinY();\r\n\r\n            this.myBackPanelPosition = [(maxX + minX) / 2, (maxY + minY) / 2, 0];\r\n            this.myBackBackgroundScale = [(maxX - minX) / 2, (maxY - minY) / 2, 1];\r\n\r\n            this.myBackBackgroundColor = [70 / 255, 70 / 255, 70 / 255, 1];\r\n        }\r\n\r\n        // Import Export\r\n\r\n        this.myImportExportButtonBackgroundScale = PP.vec3_create(0.04, 0.02, 1);\r\n        this.myImportExportButtonTextScale = this.myButtonTextScale;\r\n        this.myImportExportButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n\r\n        this.myImportExportPanelPosition = [0, this._getBackPanelMaxY() + this._mySideButtonDistanceFromBorder + this.myImportExportButtonBackgroundScale[1], this._myPanelZOffset];\r\n\r\n        this.myImportExportButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myImportExportButtonCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myImportExportButtonCollisionExtents = this.myImportExportButtonBackgroundScale.slice(0);\r\n        this.myImportExportButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myImportButtonText = \"Import\";\r\n        this.myExportButtonText = \"Export\";\r\n\r\n        this.myImportExportResetLabelSeconds = 2;\r\n\r\n        this.myImportingButtonText = \"...\";\r\n        this.myImportSuccessButtonText = \"Done\";\r\n        this.myImportFailureButtonText = \"Error\";\r\n\r\n        this.myExportingButtonText = \"...\";\r\n        this.myExportSuccessButtonText = \"Done\";\r\n        this.myExportFailureButtonText = \"Error\";\r\n\r\n        this.myImportButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myImportButtonPosition[0] = -this.myImportExportButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder / 2;\r\n\r\n        this.myExportButtonPosition = PP.vec3_create(0, 0, -0.00001);\r\n        this.myExportButtonPosition[0] = -this.myImportButtonPosition[0];\r\n\r\n\r\n        // Pointer\r\n\r\n        this.myPointerCollisionExtents = this.myBackBackgroundScale.slice(0);\r\n        this.myPointerCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n        this.myPointerCursorTargetPosition = this.myBackPanelPosition.slice(0);\r\n        this.myPointerCursorTargetPosition[2] = this._myColliderZOffset - 0.0001; // a little behind the button target to avoid hiding it\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n\r\n        this._initializeRuntimeSetupHook();\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidget = class EasyTuneBoolArrayWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad) {\r\n        super(params);\r\n\r\n        this._mySetup = new PP.EasyTuneBoolArrayWidgetSetup(arraySize);\r\n        this._myUI = new PP.EasyTuneBoolArrayWidgetUI();\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myValueEditIndex = 0;\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myValueEditActive = false;\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = (this._myVariable.myValue[i]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            stickVariableIntensity = this._myGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes[1];\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(valueIntensity) > this._mySetup.myThumbstickToggleThreshold) {\r\n            this._myVariable.myValue[this._myValueEditIndex] = valueIntensity > 0;\r\n            this._refreshUI();\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueEditIndex = index;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = (this._myVariable.myValue[index]) ? \"true\" : \"false\";\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidgetUI = class EasyTuneBoolArrayWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\r\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n\r\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n\r\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n        }\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n};", "PP.EasyTuneBoolArrayWidgetSetup = class EasyTuneBoolArrayWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        return super._getBackPanelMinY() + this.myValuesPanelPosition[1] + valuePanelLastPosition;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00802713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myThumbstickToggleThreshold = 0.6;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "\r\nPP.EasyTuneBoolArrayWidgetSelector = class EasyTuneBoolArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myIsVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myCurrentArraySize = 0;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n        this._myCurrentArraySize = this._myVariable.myValue.length;\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myIsVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n            callback(amount);\r\n        }\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, new PP.EasyTuneBoolArrayWidget(this._myParams, arraySize, this._myGamepad));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n};", "\r\nPP.EasyTuneNoneWidget = class EasyTuneNoneWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n\r\n        this._mySetup = new PP.EasyTuneNoneWidgetSetup();\r\n        this._myUI = new PP.EasyTuneNoneWidgetUI();\r\n    }\r\n};", "\r\nPP.EasyTuneNoneWidgetUI = class EasyTuneNoneWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    _createSkeletonHook() {\r\n        this.myTypeNotSupportedPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myTypeNotSupportedText = WL.scene.addObject(this.myTypeNotSupportedPanel);\r\n        this.myTypeNotSupportedCursorTarget = WL.scene.addObject(this.myTypeNotSupportedPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myTypeNotSupportedPanel.setTranslationLocal(this._mySetup.myTypeNotSupportedPanelPosition);\r\n        this.myTypeNotSupportedText.scale(this._mySetup.myTypeNotSupportedTextScale);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myTypeNotSupportedTextComponent = this.myTypeNotSupportedText.addComponent('text');\r\n        this._setupTextComponent(this.myTypeNotSupportedTextComponent);\r\n        this.myTypeNotSupportedTextComponent.text = this._mySetup.myTypeNotSupportedText;\r\n    }\r\n};", "PP.EasyTuneNoneWidgetSetup = class EasyTuneNoneWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myTypeNotSupportedPanelPosition[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00804713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myTypeNotSupportedPanelPosition = PP.vec3_create(0, -0.03, this._myPanelZOffset);\r\n        this.myTypeNotSupportedTextScale = PP.vec3_create(0.275, 0.275, 0.275);\r\n        this.myTypeNotSupportedText = \"Type Not Supported\";\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidget = class EasyTuneNumberArrayWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, arraySize, gamepad) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new PP.EasyTuneNumberArrayWidgetSetup(arraySize);\r\n        this._myUI = new PP.EasyTuneNumberArrayWidgetUI();\r\n\r\n        this._myValueEditIndex = -1;\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myVariable.myStepPerSecond * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.pp_clamp(this._myValueRealValue, this._myVariable.myMin, this._myVariable.myMax);\r\n            } else if (this._myVariable.myMin != null) {\r\n                this._myValueRealValue = Math.max(this._myValueRealValue, this._myVariable.myMin);\r\n            } else if (this._myVariable.myMax != null) {\r\n                this._myValueRealValue = Math.min(this._myValueRealValue, this._myVariable.myMax);\r\n            }\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            if (this._myVariable.myEditAllValuesTogether) {\r\n                let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                let difference = newValue - this._myVariable.myValue[this._myValueEditIndex];\r\n\r\n                for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n                    this._myVariable.myValue[i] = Math.round((this._myVariable.myValue[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                    if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.pp_clamp(this._myVariable.myValue[i], this._myVariable.myMin, this._myVariable.myMax);\r\n                    } else if (this._myVariable.myMin != null) {\r\n                        this._myVariable.myValue[i] = Math.max(this._myVariable.myValue[i], this._myVariable.myMin);\r\n                    } else if (this._myVariable.myMax != null) {\r\n                        this._myVariable.myValue[i] = Math.min(this._myVariable.myValue[i], this._myVariable.myMax);\r\n                    }\r\n\r\n                    this._myUI.myValueTextComponents[i].text = this._myVariable.myValue[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                }\r\n\r\n            } else {\r\n                this._myVariable.myValue[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n\r\n                if (this._myVariable.myMin != null && this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.pp_clamp(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin, this._myVariable.myMax);\r\n                } else if (this._myVariable.myMin != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.max(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMin);\r\n                } else if (this._myVariable.myMax != null) {\r\n                    this._myVariable.myValue[this._myValueEditIndex] = Math.min(this._myVariable.myValue[this._myValueEditIndex], this._myVariable.myMax);\r\n                }\r\n\r\n                this._myUI.myValueTextComponents[this._myValueEditIndex].text = this._myVariable.myValue[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n            }\r\n        } else {\r\n            this._myValueRealValue = this._myVariable.myValue[this._myValueEditIndex];\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myVariable.myStepPerSecond * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, 1));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, i, -1));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, i, 0));\r\n\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myValueDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myValueDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myValueCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, i));\r\n            ui.myValueCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], true));\r\n            ui.myValueCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, i, ui.myValueTexts[i], false));\r\n        }\r\n\r\n        ui.myStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this));\r\n        ui.myStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, true));\r\n        ui.myStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, ui.myStepText, false));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, -1));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0));\r\n\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myStepDecreaseButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _setValueEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                this._myValueRealValue = this._myVariable.myValue[index];\r\n                this._myValueEditIndex = index;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myStepTextScale;\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n        }\r\n    }\r\n\r\n    _resetValue(index) {\r\n        if (this._isActive()) {\r\n            this._myVariable.myValue[index] = this._myVariable.myDefaultValue[index];\r\n            this._myUI.myValueTextComponents[index].text = this._myVariable.myValue[index].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this._resetValue(i);\r\n        }\r\n    }\r\n\r\n    _resetStep() {\r\n        if (this._isActive()) {\r\n            this._changeStep(this._myVariable.myDefaultStepPerSecond);\r\n        }\r\n    }\r\n\r\n    _changeStep(step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n        this._myVariable.myStepPerSecond = step;\r\n        this._myUI.myStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myStepPerSecond);\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidgetUI = class EasyTuneNumberArrayWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myValueDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n\r\n        this.myStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        this.myValuesPanel = WL.scene.addObject(this.myDisplayPanel);\r\n\r\n        this.myValuePanels = [];\r\n        this.myValueTexts = [];\r\n        this.myValueCursorTargets = [];\r\n\r\n        this.myValueIncreaseButtonPanels = [];\r\n        this.myValueIncreaseButtonBackgrounds = [];\r\n        this.myValueIncreaseButtonTexts = [];\r\n        this.myValueIncreaseButtonCursorTargets = [];\r\n\r\n        this.myValueDecreaseButtonPanels = [];\r\n        this.myValueDecreaseButtonBackgrounds = [];\r\n        this.myValueDecreaseButtonTexts = [];\r\n        this.myValueDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i] = WL.scene.addObject(this.myValuesPanel);\r\n            this.myValueTexts[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueCursorTargets[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n\r\n            this.myValueIncreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonTexts[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n            this.myValueIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueIncreaseButtonPanels[i]);\r\n\r\n            this.myValueDecreaseButtonPanels[i] = WL.scene.addObject(this.myValuePanels[i]);\r\n            this.myValueDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonTexts[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n            this.myValueDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myValueDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        this.myStepPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myStepText = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepCursorTarget = WL.scene.addObject(this.myStepPanel);\r\n\r\n        this.myStepIncreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepIncreaseButtonBackground = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n        this.myStepIncreaseButtonText = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n        this.myStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myStepIncreaseButtonPanel);\r\n\r\n        this.myStepDecreaseButtonPanel = WL.scene.addObject(this.myStepPanel);\r\n        this.myStepDecreaseButtonBackground = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n        this.myStepDecreaseButtonText = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n        this.myStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myStepDecreaseButtonPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        this.myValuesPanel.setTranslationLocal(this._mySetup.myValuesPanelPosition);\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValuePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myValueTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myValueCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myValueIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n            this.myValueIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myValueDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n            this.myValueDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myValueDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myValueDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myValueDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        this.myStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myRightSideButtonPosition);\r\n        this.myStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myLeftSideButtonPosition);\r\n        this.myStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        this.myValueTextComponents = [];\r\n        this.myValueCursorTargetComponents = [];\r\n        this.myValueCollisionComponents = [];\r\n\r\n        this.myValueIncreaseButtonBackgroundComponents = [];\r\n        this.myValueIncreaseButtonTextComponents = [];\r\n        this.myValueIncreaseButtonCursorTargetComponents = [];\r\n        this.myValueIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myValueDecreaseButtonBackgroundComponents = [];\r\n        this.myValueDecreaseButtonTextComponents = [];\r\n        this.myValueDecreaseButtonCursorTargetComponents = [];\r\n        this.myValueDecreaseButtonCollisionComponents = [];\r\n\r\n\r\n        for (let i = 0; i < this._mySetup.myArraySize; i++) {\r\n            this.myValueTextComponents[i] = this.myValueTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueTextComponents[i]);\r\n            this.myValueTextComponents[i].text = \" \";\r\n\r\n            this.myValueCursorTargetComponents[i] = this.myValueCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueCollisionComponents[i] = this.myValueCursorTargets[i].addComponent('collision');\r\n            this.myValueCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myValueIncreaseButtonBackgroundComponents[i] = this.myValueIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueIncreaseButtonTextComponents[i] = this.myValueIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueIncreaseButtonTextComponents[i]);\r\n            this.myValueIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myValueIncreaseButtonCursorTargetComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueIncreaseButtonCollisionComponents[i] = this.myValueIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myValueDecreaseButtonBackgroundComponents[i] = this.myValueDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myValueDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myValueDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myValueDecreaseButtonTextComponents[i] = this.myValueDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myValueDecreaseButtonTextComponents[i]);\r\n            this.myValueDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myValueDecreaseButtonCursorTargetComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myValueDecreaseButtonCollisionComponents[i] = this.myValueDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myValueDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myValueDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myValueDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        this.myStepTextComponent = this.myStepText.addComponent('text');\r\n        this._setupTextComponent(this.myStepTextComponent);\r\n        this.myStepTextComponent.text = \" \";\r\n\r\n        this.myStepCursorTargetComponent = this.myStepCursorTarget.addComponent('cursor-target');\r\n        this.myStepCollisionComponent = this.myStepCursorTarget.addComponent('collision');\r\n        this.myStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myStepIncreaseButtonBackgroundComponent = this.myStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepIncreaseButtonTextComponent = this.myStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myStepIncreaseButtonTextComponent);\r\n        this.myStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myStepIncreaseButtonCursorTargetComponent = this.myStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myStepIncreaseButtonCollisionComponent = this.myStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myStepDecreaseButtonBackgroundComponent = this.myStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myStepDecreaseButtonTextComponent = this.myStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myStepDecreaseButtonTextComponent);\r\n        this.myStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myStepDecreaseButtonCursorTargetComponent = this.myStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myStepDecreaseButtonCollisionComponent = this.myStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _setVisibleHook(visible) {\r\n        if (visible) {\r\n            this.setAdditionalButtonsActive(this._myAdditionalButtonsActive);\r\n        }\r\n    }\r\n};", "PP.EasyTuneNumberArrayWidgetSetup = class EasyTuneNumberArrayWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    constructor(arraySize) {\r\n        super();\r\n\r\n        this.myArraySize = arraySize;\r\n    }\r\n\r\n    _getBackPanelMinY() {\r\n        return this.myStepPanelPosition[1] - this._mySideButtonDistanceFromBorder * 1.25 - this.mySideButtonBackgroundScale[1];\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00803713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValuesPanelPosition = [0, this.myVariableLabelPanelPosition[1] - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, 0, 0);\r\n        for (let i = 1; i < this.myArraySize; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = (this.myValuePanelsPositions[this.myArraySize - 1]) ? this.myValuePanelsPositions[this.myArraySize - 1][1] : 0;\r\n        this.myStepPanelPosition = [0, this.myDisplayPanelPosition[1] + this.myValuesPanelPosition[1] + valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, this._myPanelZOffset];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "\r\nPP.EasyTuneNumberArrayWidgetSelector = class EasyTuneNumberArrayWidgetSelector {\r\n\r\n    constructor(params, gamepad) {\r\n        this._myGamepad = gamepad;\r\n\r\n        this._myParentObject = null;\r\n\r\n        this._myParams = params;\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = new Map();\r\n\r\n        this._myVariable = null;\r\n        this._myIsVisible = true;\r\n\r\n        this._myAppendToVariableName = null;\r\n\r\n        this._myScrollVariableRequestCallbacks = new Map();     // Signature: callback(scrollAmount)\r\n\r\n        this._myCurrentArraySize = 0;\r\n    }\r\n\r\n    setEasyTuneVariable(variable, appendToVariableName) {\r\n        this._myVariable = variable;\r\n        this._myCurrentArraySize = this._myVariable.myValue.length;\r\n        this._myAppendToVariableName = appendToVariableName;\r\n\r\n        if (!this._myWidgets.has(this._myCurrentArraySize)) {\r\n            this._createWidget(this._myCurrentArraySize);\r\n        }\r\n\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setEasyTuneVariable(variable, appendToVariableName);\r\n        }\r\n\r\n        this.setVisible(this._myIsVisible);\r\n    }\r\n\r\n    setVisible(visible) {\r\n        for (let widget of this._myWidgets.values()) {\r\n            widget.setVisible(false);\r\n        }\r\n\r\n        if (this._myVariable) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.setVisible(visible);\r\n            }\r\n        }\r\n\r\n        this._myIsVisible = visible;\r\n    }\r\n\r\n    isScrollVariableActive() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.isScrollVariableActive();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getScrollVariableDirection() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            return widget.getScrollVariableDirection();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    setScrollVariableActive(active, scrollDirection) {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.setScrollVariableActive(active, scrollDirection);\r\n        }\r\n    }\r\n\r\n    getWidget() {\r\n        return this._myWidgets.get(this._myCurrentArraySize);\r\n    }\r\n\r\n    registerScrollVariableRequestEventListener(id, callback) {\r\n        this._myScrollVariableRequestCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterScrollVariableRequestEventListener(id) {\r\n        this._myScrollVariableRequestCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._createWidget(1);\r\n\r\n        if (this._myVariable) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this._isActive()) {\r\n            this._sizeChangedCheck();\r\n\r\n            let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n            if (widget) {\r\n                widget.update(dt);\r\n            }\r\n        }\r\n    }\r\n\r\n    onImportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    onImportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    onExportSuccess() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    onExportFailure() {\r\n        let widget = this._myWidgets.get(this._myCurrentArraySize);\r\n        if (widget) {\r\n            widget.onExportFailure();\r\n        }\r\n    }\r\n\r\n    _isActive() {\r\n        return this._myIsVisible && this._myVariable;\r\n    }\r\n\r\n    _scrollVariableRequest(amount) {\r\n        for (let callback of this._myScrollVariableRequestCallbacks.values()) {\r\n            callback(amount);\r\n        }\r\n    }\r\n\r\n    _createWidget(arraySize) {\r\n        this._myWidgets.set(arraySize, new PP.EasyTuneNumberArrayWidget(this._myParams, arraySize, this._myGamepad));\r\n        this._myWidgets.get(arraySize).start(this._myParentObject, this._myAdditionalSetup);\r\n        this._myWidgets.get(arraySize).setVisible(false);\r\n        this._myWidgets.get(arraySize).registerScrollVariableRequestEventListener(this, this._scrollVariableRequest.bind(this));\r\n    }\r\n\r\n    _sizeChangedCheck() {\r\n        if (this._myVariable.myValue.length != this._myCurrentArraySize) {\r\n            this.setEasyTuneVariable(this._myVariable, this._myAppendToVariableName);\r\n        }\r\n    }\r\n};", "PP.EasyTuneTransformWidget = class EasyTuneTransformWidget extends PP.EasyTuneBaseWidget {\r\n\r\n    constructor(params, gamepad) {\r\n        super(params);\r\n\r\n        this._myGamepad = gamepad;\r\n\r\n        this._mySetup = new PP.EasyTuneTransformWidgetSetup();\r\n        this._myUI = new PP.EasyTuneTransformWidgetUI();\r\n\r\n        this._myValueButtonEditIntensity = 0;\r\n        this._myValueButtonEditIntensityTimer = 0;\r\n        this._myStepButtonEditIntensity = 0;\r\n        this._myStepButtonEditIntensityTimer = 0;\r\n\r\n        this._myValueEditActive = false;\r\n        this._myStepEditActive = false;\r\n\r\n        this._myValueRealValue = 0;\r\n        this._myComponentStepValue = 0;\r\n        this._myStepMultiplierValue = 0;\r\n        this._myStepFastEdit = false;\r\n\r\n        this._myValueEditIndex = -1;\r\n        this._myComponentIndex = 0;\r\n        this._myStepIndex = 0;\r\n    }\r\n\r\n    _setEasyTuneVariableHook() {\r\n        if (this._myValueEditIndex >= 0) {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    _refreshUIHook() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myPositionTextComponents[i].text = this._myVariable.myPosition[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myRotationTextComponents[i].text = this._myVariable.myRotation[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n        }\r\n        this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n    }\r\n\r\n    _startHook(parentObject, additionalSetup) {\r\n        this._myUI.setAdditionalButtonsActive(additionalSetup.myEnableAdditionalButtons);\r\n    }\r\n\r\n    _updateHook(dt) {\r\n        this._updateValue(dt);\r\n    }\r\n\r\n    _updateValue(dt) {\r\n        let stickVariableIntensity = 0;\r\n\r\n        if (this._myGamepad) {\r\n            let y = this._myGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes[1];\r\n\r\n            if (Math.abs(y) > this._mySetup.myEditThumbstickMinThreshold) {\r\n                let normalizedEditAmount = (Math.abs(y) - this._mySetup.myEditThumbstickMinThreshold) / (1 - this._mySetup.myEditThumbstickMinThreshold);\r\n                stickVariableIntensity = Math.sign(y) * normalizedEditAmount;\r\n            }\r\n        }\r\n\r\n        let valueIntensity = 0;\r\n        if (this._myValueEditActive) {\r\n            valueIntensity = stickVariableIntensity;\r\n        } else if (this._myValueButtonEditIntensity != 0) {\r\n            if (this._myValueButtonEditIntensityTimer <= 0) {\r\n                valueIntensity = this._myValueButtonEditIntensity;\r\n            } else {\r\n                this._myValueButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (valueIntensity != 0) {\r\n            let amountToAdd = valueIntensity * this._myComponentStepValue * dt;\r\n\r\n            this._myValueRealValue += amountToAdd;\r\n\r\n            let decimalPlacesMultiplier = Math.pow(10, this._myVariable.myDecimalPlaces);\r\n\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myPositionTextComponents[this._myValueEditIndex].text = this._myVariable.myPosition[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    if (this._myValueRealValue > 180) {\r\n                        while (this._myValueRealValue > 180) {\r\n                            this._myValueRealValue -= 180;\r\n                        }\r\n                        this._myValueRealValue = -180 + this._myValueRealValue;\r\n                    }\r\n\r\n                    if (this._myValueRealValue < -180) {\r\n                        while (this._myValueRealValue < - 180) {\r\n                            this._myValueRealValue += 180;\r\n                        }\r\n                        this._myValueRealValue = 180 - this._myValueRealValue;\r\n                    }\r\n\r\n                    this._myVariable.myRotation[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                    this._myUI.myRotationTextComponents[this._myValueEditIndex].text = this._myVariable.myRotation[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    if (this._myValueRealValue <= 0) {\r\n                        this._myValueRealValue = 1 / decimalPlacesMultiplier;\r\n                    }\r\n\r\n                    if (this._myVariable.myScaleAsOne) {\r\n                        let newValue = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        let difference = newValue - this._myVariable.myScale[this._myValueEditIndex];\r\n\r\n                        for (let i = 0; i < 3; i++) {\r\n                            this._myVariable.myScale[i] = Math.round((this._myVariable.myScale[i] + difference) * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                            this._myVariable.myScale[i] = Math.max(this._myVariable.myScale[i], 1 / decimalPlacesMultiplier);\r\n                            this._myUI.myScaleTextComponents[i].text = this._myVariable.myScale[i].toFixed(this._myVariable.myDecimalPlaces);\r\n                        }\r\n                    } else {\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.round(this._myValueRealValue * decimalPlacesMultiplier + Number.EPSILON) / decimalPlacesMultiplier;\r\n                        this._myVariable.myScale[this._myValueEditIndex] = Math.max(this._myVariable.myScale[this._myValueEditIndex], 1 / decimalPlacesMultiplier);\r\n                        this._myUI.myScaleTextComponents[this._myValueEditIndex].text = this._myVariable.myScale[this._myValueEditIndex].toFixed(this._myVariable.myDecimalPlaces);\r\n                    }\r\n                    break;\r\n            }\r\n        } else {\r\n            switch (this._myComponentIndex) {\r\n                case 0:\r\n                    this._myValueRealValue = this._myVariable.myPosition[this._myValueEditIndex];\r\n                    break;\r\n                case 1:\r\n                    this._myValueRealValue = this._myVariable.myRotation[this._myValueEditIndex];\r\n                    break;\r\n                case 2:\r\n                    this._myValueRealValue = this._myVariable.myScale[this._myValueEditIndex];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        let stepIntensity = 0;\r\n        if (this._myStepEditActive) {\r\n            stepIntensity = stickVariableIntensity;\r\n        } else if (this._myStepButtonEditIntensity != 0) {\r\n            if (this._myStepButtonEditIntensityTimer <= 0) {\r\n                stepIntensity = this._myStepButtonEditIntensity;\r\n            } else {\r\n                this._myStepButtonEditIntensityTimer -= dt;\r\n            }\r\n        }\r\n\r\n        if (stepIntensity != 0) {\r\n            let amountToAdd = 0;\r\n            if (this._myStepFastEdit) {\r\n                amountToAdd = Math.sign(stepIntensity) * 1;\r\n                this._myStepFastEdit = false;\r\n            } else {\r\n                amountToAdd = stepIntensity * this._mySetup.myStepMultiplierStepPerSecond * dt;\r\n            }\r\n\r\n            this._myStepMultiplierValue += amountToAdd;\r\n            if (Math.abs(this._myStepMultiplierValue) >= 1) {\r\n                let stepValue = 0;\r\n                switch (this._myStepIndex) {\r\n                    case 0:\r\n                        stepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        stepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        stepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                    default:\r\n                        stepValue = 0;\r\n                }\r\n                if (Math.sign(this._myStepMultiplierValue) > 0) {\r\n                    this._myStepMultiplierValue -= 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 10);\r\n                } else {\r\n                    this._myStepMultiplierValue += 1;\r\n                    this._changeStep(this._myStepIndex, stepValue * 0.1);\r\n                }\r\n            }\r\n        } else {\r\n            this._myStepMultiplierValue = 0;\r\n            this._myStepFastEdit = true;\r\n        }\r\n    }\r\n\r\n    _addListenersHook() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myVariableLabelCursorTargetComponent.addClickFunction(this._resetAllValues.bind(this));\r\n        ui.myVariableLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myVariableLabelText));\r\n        ui.myVariableLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myVariableLabelText, this._mySetup.myVariableLabelTextScale));\r\n\r\n        ui.myPositionLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 0));\r\n        ui.myPositionLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myPositionLabelText));\r\n        ui.myPositionLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myPositionLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 1));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, -1));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 0, i, 0));\r\n\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myPositionDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myPositionCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 0, i));\r\n            ui.myPositionCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], true));\r\n            ui.myPositionCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 0, i, ui.myPositionTexts[i], false));\r\n        }\r\n\r\n        ui.myRotationLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 1));\r\n        ui.myRotationLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myRotationLabelText));\r\n        ui.myRotationLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myRotationLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 1));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, -1));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 1, i, 0));\r\n\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myRotationDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myRotationCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 1, i));\r\n            ui.myRotationCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], true));\r\n            ui.myRotationCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 1, i, ui.myRotationTexts[i], false));\r\n        }\r\n\r\n        ui.myScaleLabelCursorTargetComponent.addClickFunction(this._resetComponentValues.bind(this, 2));\r\n        ui.myScaleLabelCursorTargetComponent.addHoverFunction(this._genericTextHover.bind(this, ui.myScaleLabelText));\r\n        ui.myScaleLabelCursorTargetComponent.addUnHoverFunction(this._genericTextUnHover.bind(this, ui.myScaleLabelText, this._mySetup.myComponentLabelTextScale));\r\n        for (let i = 0; i < 3; i++) {\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 1));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addDownOnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, -1));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUpWithNoDownFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._setValueEditIntensity.bind(this, 2, i, 0));\r\n\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleIncreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleIncreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addHoverFunction(this._genericHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n            ui.myScaleDecreaseButtonCursorTargetComponents[i].addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleDecreaseButtonBackgroundComponents[i].material));\r\n\r\n            ui.myScaleCursorTargetComponents[i].addClickFunction(this._resetValue.bind(this, 2, i));\r\n            ui.myScaleCursorTargetComponents[i].addHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], true));\r\n            ui.myScaleCursorTargetComponents[i].addUnHoverFunction(this._setValueEditActive.bind(this, 2, i, ui.myScaleTexts[i], false));\r\n        }\r\n\r\n        ui.myPositionStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 0));\r\n        ui.myPositionStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, true));\r\n        ui.myPositionStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 0, ui.myPositionStepText, false));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, 1));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 0, -1));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 0, 0));\r\n\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myPositionStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myPositionStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myRotationStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 1));\r\n        ui.myRotationStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, true));\r\n        ui.myRotationStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 1, ui.myRotationStepText, false));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, 1));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 1, -1));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 1, 0));\r\n\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myRotationStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myRotationStepDecreaseButtonBackgroundComponent.material));\r\n\r\n        ui.myScaleStepCursorTargetComponent.addClickFunction(this._resetStep.bind(this, 2));\r\n        ui.myScaleStepCursorTargetComponent.addHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, true));\r\n        ui.myScaleStepCursorTargetComponent.addUnHoverFunction(this._setStepEditActive.bind(this, 2, ui.myScaleStepText, false));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, 1));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addDownOnHoverFunction(this._setStepEditIntensity.bind(this, 2, -1));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUpWithNoDownFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._setStepEditIntensity.bind(this, 2, 0));\r\n\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepIncreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepIncreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n        ui.myScaleStepDecreaseButtonCursorTargetComponent.addUnHoverFunction(this._genericUnHover.bind(this, ui.myScaleStepDecreaseButtonBackgroundComponent.material));\r\n\r\n    }\r\n\r\n    _setValueEditIntensity(componentIndex, index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n            }\r\n\r\n            this._myValueButtonEditIntensity = value;\r\n        }\r\n    }\r\n\r\n    _setStepEditIntensity(index, value) {\r\n        if (this._isActive() || value == 0) {\r\n            if (value != 0) {\r\n                this._myStepButtonEditIntensityTimer = this._mySetup.myButtonEditDelay;\r\n            }\r\n\r\n            this._myStepButtonEditIntensity = value;\r\n\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _setValueEditActive(componentIndex, index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                switch (componentIndex) {\r\n                    case 0:\r\n                        this._myValueRealValue = this._myVariable.myPosition[index];\r\n                        this._myComponentStepValue = this._myVariable.myPositionStepPerSecond;\r\n                        break;\r\n                    case 1:\r\n                        this._myValueRealValue = this._myVariable.myRotation[index];\r\n                        this._myComponentStepValue = this._myVariable.myRotationStepPerSecond;\r\n                        break;\r\n                    case 2:\r\n                        this._myValueRealValue = this._myVariable.myScale[index];\r\n                        this._myComponentStepValue = this._myVariable.myScaleStepPerSecond;\r\n                        break;\r\n                }\r\n\r\n                this._myValueEditIndex = index;\r\n                this._myComponentIndex = componentIndex;\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myValueTextScale;\r\n            }\r\n\r\n            this._myValueEditActive = active;\r\n        }\r\n    }\r\n\r\n    _setStepEditActive(index, text, active) {\r\n        if (this._isActive() || !active) {\r\n            if (active) {\r\n                text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n            } else {\r\n                text.scalingWorld = this._mySetup.myStepTextScale;\r\n            }\r\n\r\n            this._myStepEditActive = active;\r\n            this._myStepIndex = index;\r\n        }\r\n    }\r\n\r\n    _resetValue(componentIndex, index) {\r\n        if (this._isActive()) {\r\n            switch (componentIndex) {\r\n                case 0:\r\n                    this._myVariable.myPosition[index] = this._myVariable.myDefaultPosition[index];\r\n                    this._myUI.myPositionTextComponents[index].text = this._myVariable.myPosition[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 1:\r\n                    this._myVariable.myRotation[index] = this._myVariable.myDefaultRotation[index];\r\n                    this._myUI.myRotationTextComponents[index].text = this._myVariable.myRotation[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                case 2:\r\n                    this._myVariable.myScale[index] = this._myVariable.myDefaultScale[index];\r\n                    this._myUI.myScaleTextComponents[index].text = this._myVariable.myScale[index].toFixed(this._myVariable.myDecimalPlaces);\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    _resetAllValues() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetComponentValues(i);\r\n        }\r\n    }\r\n\r\n    _resetComponentValues(index) {\r\n        for (let i = 0; i < 3; i++) {\r\n            this._resetValue(index, i);\r\n        }\r\n    }\r\n\r\n    _resetStep(index) {\r\n        if (this._isActive()) {\r\n            let defaultValue = 0;\r\n            switch (index) {\r\n                case 0:\r\n                    defaultValue = this._myVariable.myDefaultPositionStepPerSecond;\r\n                    break;\r\n                case 1:\r\n                    defaultValue = this._myVariable.myDefaultRotationStepPerSecond;\r\n                    break;\r\n                case 2:\r\n                    defaultValue = this._myVariable.myDefaultScaleStepPerSecond;\r\n                    break;\r\n                default:\r\n                    defaultValue = 0;\r\n            }\r\n\r\n            this._changeStep(index, defaultValue);\r\n        }\r\n    }\r\n\r\n    _changeStep(index, step) {\r\n        step = Math.pp_roundDecimal(step, 10);\r\n\r\n        switch (index) {\r\n            case 0:\r\n                this._myVariable.myPositionStepPerSecond = step;\r\n                this._myUI.myPositionStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myPositionStepPerSecond);\r\n                break;\r\n            case 1:\r\n                this._myVariable.myRotationStepPerSecond = step;\r\n                this._myUI.myRotationStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myRotationStepPerSecond);\r\n                break;\r\n            case 2:\r\n                this._myVariable.myScaleStepPerSecond = step;\r\n                this._myUI.myScaleStepTextComponent.text = this._mySetup.myStepStartString.concat(this._myVariable.myScaleStepPerSecond);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _genericTextHover(text) {\r\n        text.scale(this._mySetup.myTextHoverScaleMultiplier);\r\n    }\r\n\r\n    _genericTextUnHover(text, originalScale) {\r\n        text.scalingWorld = originalScale;\r\n    }\r\n};", "\r\nPP.EasyTuneTransformWidgetUI = class EasyTuneTransformWidgetUI extends PP.EasyTuneBaseWidgetUI {\r\n\r\n    setAdditionalButtonsActive(active) {\r\n        this._myAdditionalButtonsActive = active;\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myPositionDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myPositionStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myPositionStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myRotationDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myRotationStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myRotationStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleIncreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n            this.myScaleDecreaseButtonPanels[i].pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        }\r\n        this.myScaleStepIncreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n        this.myScaleStepDecreaseButtonPanel.pp_setActiveHierarchy(this._myAdditionalButtonsActive);\r\n    }\r\n\r\n    _buildHook() {\r\n        this._myAdditionalButtonsActive = true;\r\n    }\r\n\r\n    _createSkeletonHook() {\r\n        // Position\r\n\r\n        this.myPositionPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myPositionLabelText = WL.scene.addObject(this.myPositionPanel);\r\n        this.myPositionLabelCursorTarget = WL.scene.addObject(this.myPositionPanel);\r\n\r\n        this.myPositionPanels = [];\r\n        this.myPositionTexts = [];\r\n        this.myPositionCursorTargets = [];\r\n\r\n        this.myPositionIncreaseButtonPanels = [];\r\n        this.myPositionIncreaseButtonBackgrounds = [];\r\n        this.myPositionIncreaseButtonTexts = [];\r\n        this.myPositionIncreaseButtonCursorTargets = [];\r\n\r\n        this.myPositionDecreaseButtonPanels = [];\r\n        this.myPositionDecreaseButtonBackgrounds = [];\r\n        this.myPositionDecreaseButtonTexts = [];\r\n        this.myPositionDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i] = WL.scene.addObject(this.myPositionPanel);\r\n            this.myPositionTexts[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionCursorTargets[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n\r\n            this.myPositionIncreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n            this.myPositionIncreaseButtonTexts[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n            this.myPositionIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionIncreaseButtonPanels[i]);\r\n\r\n            this.myPositionDecreaseButtonPanels[i] = WL.scene.addObject(this.myPositionPanels[i]);\r\n            this.myPositionDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n            this.myPositionDecreaseButtonTexts[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n            this.myPositionDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myPositionDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myRotationLabelText = WL.scene.addObject(this.myRotationPanel);\r\n        this.myRotationLabelCursorTarget = WL.scene.addObject(this.myRotationPanel);\r\n\r\n        this.myRotationPanels = [];\r\n        this.myRotationTexts = [];\r\n        this.myRotationCursorTargets = [];\r\n\r\n        this.myRotationIncreaseButtonPanels = [];\r\n        this.myRotationIncreaseButtonBackgrounds = [];\r\n        this.myRotationIncreaseButtonTexts = [];\r\n        this.myRotationIncreaseButtonCursorTargets = [];\r\n\r\n        this.myRotationDecreaseButtonPanels = [];\r\n        this.myRotationDecreaseButtonBackgrounds = [];\r\n        this.myRotationDecreaseButtonTexts = [];\r\n        this.myRotationDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i] = WL.scene.addObject(this.myRotationPanel);\r\n            this.myRotationTexts[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationCursorTargets[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n\r\n            this.myRotationIncreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n            this.myRotationIncreaseButtonTexts[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n            this.myRotationIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationIncreaseButtonPanels[i]);\r\n\r\n            this.myRotationDecreaseButtonPanels[i] = WL.scene.addObject(this.myRotationPanels[i]);\r\n            this.myRotationDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n            this.myRotationDecreaseButtonTexts[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n            this.myRotationDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myRotationDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel = WL.scene.addObject(this.myDisplayPanel);\r\n        this.myScaleLabelText = WL.scene.addObject(this.myScalePanel);\r\n        this.myScaleLabelCursorTarget = WL.scene.addObject(this.myScalePanel);\r\n\r\n        this.myScalePanels = [];\r\n        this.myScaleTexts = [];\r\n        this.myScaleCursorTargets = [];\r\n\r\n        this.myScaleIncreaseButtonPanels = [];\r\n        this.myScaleIncreaseButtonBackgrounds = [];\r\n        this.myScaleIncreaseButtonTexts = [];\r\n        this.myScaleIncreaseButtonCursorTargets = [];\r\n\r\n        this.myScaleDecreaseButtonPanels = [];\r\n        this.myScaleDecreaseButtonBackgrounds = [];\r\n        this.myScaleDecreaseButtonTexts = [];\r\n        this.myScaleDecreaseButtonCursorTargets = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i] = WL.scene.addObject(this.myScalePanel);\r\n            this.myScaleTexts[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleCursorTargets[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n\r\n            this.myScaleIncreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleIncreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n            this.myScaleIncreaseButtonTexts[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n            this.myScaleIncreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleIncreaseButtonPanels[i]);\r\n\r\n            this.myScaleDecreaseButtonPanels[i] = WL.scene.addObject(this.myScalePanels[i]);\r\n            this.myScaleDecreaseButtonBackgrounds[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n            this.myScaleDecreaseButtonTexts[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n            this.myScaleDecreaseButtonCursorTargets[i] = WL.scene.addObject(this.myScaleDecreaseButtonPanels[i]);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel = WL.scene.addObject(this.myPositionPanel);\r\n        this.myPositionStepText = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepCursorTarget = WL.scene.addObject(this.myPositionStepPanel);\r\n\r\n        this.myPositionStepIncreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepIncreaseButtonBackground = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n        this.myPositionStepIncreaseButtonText = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n        this.myPositionStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepIncreaseButtonPanel);\r\n\r\n        this.myPositionStepDecreaseButtonPanel = WL.scene.addObject(this.myPositionStepPanel);\r\n        this.myPositionStepDecreaseButtonBackground = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n        this.myPositionStepDecreaseButtonText = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n        this.myPositionStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myPositionStepDecreaseButtonPanel);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel = WL.scene.addObject(this.myRotationPanel);\r\n        this.myRotationStepText = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepCursorTarget = WL.scene.addObject(this.myRotationStepPanel);\r\n\r\n        this.myRotationStepIncreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepIncreaseButtonBackground = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n        this.myRotationStepIncreaseButtonText = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n        this.myRotationStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepIncreaseButtonPanel);\r\n\r\n        this.myRotationStepDecreaseButtonPanel = WL.scene.addObject(this.myRotationStepPanel);\r\n        this.myRotationStepDecreaseButtonBackground = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n        this.myRotationStepDecreaseButtonText = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n        this.myRotationStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myRotationStepDecreaseButtonPanel);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel = WL.scene.addObject(this.myScalePanel);\r\n        this.myScaleStepText = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepCursorTarget = WL.scene.addObject(this.myScaleStepPanel);\r\n\r\n        this.myScaleStepIncreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepIncreaseButtonBackground = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n        this.myScaleStepIncreaseButtonText = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n        this.myScaleStepIncreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepIncreaseButtonPanel);\r\n\r\n        this.myScaleStepDecreaseButtonPanel = WL.scene.addObject(this.myScaleStepPanel);\r\n        this.myScaleStepDecreaseButtonBackground = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n        this.myScaleStepDecreaseButtonText = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n        this.myScaleStepDecreaseButtonCursorTarget = WL.scene.addObject(this.myScaleStepDecreaseButtonPanel);\r\n    }\r\n\r\n    _setTransformHook() {\r\n        //Position\r\n\r\n        this.myPositionPanel.setTranslationLocal(this._mySetup.myPositionPanelPosition);\r\n        this.myPositionLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myPositionLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myPositionTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myPositionCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myPositionIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myPositionIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myPositionDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myPositionDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myPositionDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myPositionDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myPositionDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationPanel.setTranslationLocal(this._mySetup.myRotationPanelPosition);\r\n        this.myRotationLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myRotationLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationPanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myRotationTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myRotationCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myRotationIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myRotationIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myRotationDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myRotationDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myRotationDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myRotationDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myRotationDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScalePanel.setTranslationLocal(this._mySetup.myScalePanelPosition);\r\n        this.myScaleLabelText.scale(this._mySetup.myComponentLabelTextScale);\r\n        this.myScaleLabelCursorTarget.setTranslationLocal(this._mySetup.myComponentLabelCursorTargetPosition);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScalePanels[i].setTranslationLocal(this._mySetup.myValuePanelsPositions[i]);\r\n            this.myScaleTexts[i].scale(this._mySetup.myValueTextScale);\r\n            this.myScaleCursorTargets[i].setTranslationLocal(this._mySetup.myValueCursorTargetPosition);\r\n\r\n            this.myScaleIncreaseButtonPanels[i].setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n            this.myScaleIncreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleIncreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleIncreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleIncreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n            this.myScaleDecreaseButtonPanels[i].setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n            this.myScaleDecreaseButtonBackgrounds[i].scale(this._mySetup.mySideButtonBackgroundScale);\r\n            this.myScaleDecreaseButtonTexts[i].setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n            this.myScaleDecreaseButtonTexts[i].scale(this._mySetup.mySideButtonTextScale);\r\n            this.myScaleDecreaseButtonCursorTargets[i].setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position\r\n\r\n        this.myPositionStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myPositionStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myPositionStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myPositionStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myPositionStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myPositionStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myPositionStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myPositionStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myPositionStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myPositionStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myRotationStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myRotationStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myRotationStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myRotationStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myRotationStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myRotationStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myRotationStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myRotationStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myRotationStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepPanel.setTranslationLocal(this._mySetup.myStepPanelPosition);\r\n        this.myScaleStepText.scale(this._mySetup.myStepTextScale);\r\n        this.myScaleStepCursorTarget.setTranslationLocal(this._mySetup.myStepCursorTargetPosition);\r\n\r\n        this.myScaleStepIncreaseButtonPanel.setTranslationLocal(this._mySetup.myIncreaseButtonPosition);\r\n        this.myScaleStepIncreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepIncreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepIncreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepIncreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n\r\n        this.myScaleStepDecreaseButtonPanel.setTranslationLocal(this._mySetup.myDecreaseButtonPosition);\r\n        this.myScaleStepDecreaseButtonBackground.scale(this._mySetup.mySideButtonBackgroundScale);\r\n        this.myScaleStepDecreaseButtonText.setTranslationLocal(this._mySetup.mySideButtonTextPosition);\r\n        this.myScaleStepDecreaseButtonText.scale(this._mySetup.mySideButtonTextScale);\r\n        this.myScaleStepDecreaseButtonCursorTarget.setTranslationLocal(this._mySetup.mySideButtonCursorTargetPosition);\r\n    }\r\n\r\n    _addComponentsHook() {\r\n        // Position\r\n\r\n        this.myPositionLabelTextComponent = this.myPositionLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionLabelTextComponent);\r\n        this.myPositionLabelTextComponent.text = this._mySetup.myPositionText;\r\n\r\n        this.myPositionLabelCursorTargetComponent = this.myPositionLabelCursorTarget.addComponent('cursor-target');\r\n        this.myPositionLabelCollisionComponent = this.myPositionLabelCursorTarget.addComponent('collision');\r\n        this.myPositionLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myPositionTextComponents = [];\r\n        this.myPositionCursorTargetComponents = [];\r\n        this.myPositionCollisionComponents = [];\r\n\r\n        this.myPositionIncreaseButtonBackgroundComponents = [];\r\n        this.myPositionIncreaseButtonTextComponents = [];\r\n        this.myPositionIncreaseButtonCursorTargetComponents = [];\r\n        this.myPositionIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myPositionDecreaseButtonBackgroundComponents = [];\r\n        this.myPositionDecreaseButtonTextComponents = [];\r\n        this.myPositionDecreaseButtonCursorTargetComponents = [];\r\n        this.myPositionDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myPositionTextComponents[i] = this.myPositionTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionTextComponents[i]);\r\n            this.myPositionTextComponents[i].text = \" \";\r\n\r\n            this.myPositionCursorTargetComponents[i] = this.myPositionCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionCollisionComponents[i] = this.myPositionCursorTargets[i].addComponent('collision');\r\n            this.myPositionCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myPositionIncreaseButtonBackgroundComponents[i] = this.myPositionIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionIncreaseButtonTextComponents[i] = this.myPositionIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionIncreaseButtonTextComponents[i]);\r\n            this.myPositionIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myPositionIncreaseButtonCursorTargetComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionIncreaseButtonCollisionComponents[i] = this.myPositionIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myPositionIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myPositionDecreaseButtonBackgroundComponents[i] = this.myPositionDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myPositionDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myPositionDecreaseButtonTextComponents[i] = this.myPositionDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myPositionDecreaseButtonTextComponents[i]);\r\n            this.myPositionDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myPositionDecreaseButtonCursorTargetComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myPositionDecreaseButtonCollisionComponents[i] = this.myPositionDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myPositionDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myPositionDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Rotation\r\n\r\n        this.myRotationLabelTextComponent = this.myRotationLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationLabelTextComponent);\r\n        this.myRotationLabelTextComponent.text = this._mySetup.myRotationText;\r\n\r\n        this.myRotationLabelCursorTargetComponent = this.myRotationLabelCursorTarget.addComponent('cursor-target');\r\n        this.myRotationLabelCollisionComponent = this.myRotationLabelCursorTarget.addComponent('collision');\r\n        this.myRotationLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myRotationTextComponents = [];\r\n        this.myRotationCursorTargetComponents = [];\r\n        this.myRotationCollisionComponents = [];\r\n\r\n        this.myRotationIncreaseButtonBackgroundComponents = [];\r\n        this.myRotationIncreaseButtonTextComponents = [];\r\n        this.myRotationIncreaseButtonCursorTargetComponents = [];\r\n        this.myRotationIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myRotationDecreaseButtonBackgroundComponents = [];\r\n        this.myRotationDecreaseButtonTextComponents = [];\r\n        this.myRotationDecreaseButtonCursorTargetComponents = [];\r\n        this.myRotationDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myRotationTextComponents[i] = this.myRotationTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationTextComponents[i]);\r\n            this.myRotationTextComponents[i].text = \" \";\r\n\r\n            this.myRotationCursorTargetComponents[i] = this.myRotationCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationCollisionComponents[i] = this.myRotationCursorTargets[i].addComponent('collision');\r\n            this.myRotationCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myRotationIncreaseButtonBackgroundComponents[i] = this.myRotationIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationIncreaseButtonTextComponents[i] = this.myRotationIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationIncreaseButtonTextComponents[i]);\r\n            this.myRotationIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myRotationIncreaseButtonCursorTargetComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationIncreaseButtonCollisionComponents[i] = this.myRotationIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myRotationIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myRotationDecreaseButtonBackgroundComponents[i] = this.myRotationDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myRotationDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myRotationDecreaseButtonTextComponents[i] = this.myRotationDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myRotationDecreaseButtonTextComponents[i]);\r\n            this.myRotationDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myRotationDecreaseButtonCursorTargetComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myRotationDecreaseButtonCollisionComponents[i] = this.myRotationDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myRotationDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myRotationDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Scale\r\n\r\n        this.myScaleLabelTextComponent = this.myScaleLabelText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleLabelTextComponent);\r\n        this.myScaleLabelTextComponent.text = this._mySetup.myScaleText;\r\n\r\n        this.myScaleLabelCursorTargetComponent = this.myScaleLabelCursorTarget.addComponent('cursor-target');\r\n        this.myScaleLabelCollisionComponent = this.myScaleLabelCursorTarget.addComponent('collision');\r\n        this.myScaleLabelCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleLabelCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleLabelCollisionComponent.extents = this._mySetup.myComponentLabelCollisionExtents;\r\n\r\n        this.myScaleTextComponents = [];\r\n        this.myScaleCursorTargetComponents = [];\r\n        this.myScaleCollisionComponents = [];\r\n\r\n        this.myScaleIncreaseButtonBackgroundComponents = [];\r\n        this.myScaleIncreaseButtonTextComponents = [];\r\n        this.myScaleIncreaseButtonCursorTargetComponents = [];\r\n        this.myScaleIncreaseButtonCollisionComponents = [];\r\n\r\n        this.myScaleDecreaseButtonBackgroundComponents = [];\r\n        this.myScaleDecreaseButtonTextComponents = [];\r\n        this.myScaleDecreaseButtonCursorTargetComponents = [];\r\n        this.myScaleDecreaseButtonCollisionComponents = [];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScaleTextComponents[i] = this.myScaleTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleTextComponents[i]);\r\n            this.myScaleTextComponents[i].text = \" \";\r\n\r\n            this.myScaleCursorTargetComponents[i] = this.myScaleCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleCollisionComponents[i] = this.myScaleCursorTargets[i].addComponent('collision');\r\n            this.myScaleCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleCollisionComponents[i].extents = this._mySetup.myValueCollisionExtents;\r\n\r\n            this.myScaleIncreaseButtonBackgroundComponents[i] = this.myScaleIncreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleIncreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleIncreaseButtonTextComponents[i] = this.myScaleIncreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleIncreaseButtonTextComponents[i]);\r\n            this.myScaleIncreaseButtonTextComponents[i].text = this._mySetup.myIncreaseButtonText;\r\n\r\n            this.myScaleIncreaseButtonCursorTargetComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleIncreaseButtonCollisionComponents[i] = this.myScaleIncreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myScaleIncreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleIncreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n            this.myScaleDecreaseButtonBackgroundComponents[i] = this.myScaleDecreaseButtonBackgrounds[i].addComponent('mesh');\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].mesh = this._myPlaneMesh;\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n            this.myScaleDecreaseButtonBackgroundComponents[i].material.color = this._mySetup.myBackgroundColor;\r\n\r\n            this.myScaleDecreaseButtonTextComponents[i] = this.myScaleDecreaseButtonTexts[i].addComponent('text');\r\n            this._setupTextComponent(this.myScaleDecreaseButtonTextComponents[i]);\r\n            this.myScaleDecreaseButtonTextComponents[i].text = this._mySetup.myDecreaseButtonText;\r\n\r\n            this.myScaleDecreaseButtonCursorTargetComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('cursor-target');\r\n            this.myScaleDecreaseButtonCollisionComponents[i] = this.myScaleDecreaseButtonCursorTargets[i].addComponent('collision');\r\n            this.myScaleDecreaseButtonCollisionComponents[i].collider = this._mySetup.myCursorTargetCollisionCollider;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n            this.myScaleDecreaseButtonCollisionComponents[i].extents = this._mySetup.mySideButtonCollisionExtents;\r\n        }\r\n\r\n        // Steps\r\n\r\n        // Position \r\n        this.myPositionStepTextComponent = this.myPositionStepText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.addComponent('collision');\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Rotation\r\n\r\n        this.myRotationStepTextComponent = this.myRotationStepText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.addComponent('collision');\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        // Scale\r\n\r\n        this.myScaleStepTextComponent = this.myScaleStepText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.addComponent('collision');\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n\r\n    _addStepComponents() {\r\n        //Position\r\n        this.myPositionStepTextComponent = this.myPositionStepText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepTextComponent);\r\n        this.myPositionStepTextComponent.text = \" \";\r\n\r\n        this.myPositionStepCursorTargetComponent = this.myPositionStepCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepCollisionComponent = this.myPositionStepCursorTarget.addComponent('collision');\r\n        this.myPositionStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myPositionStepIncreaseButtonBackgroundComponent = this.myPositionStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepIncreaseButtonTextComponent = this.myPositionStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepIncreaseButtonTextComponent);\r\n        this.myPositionStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myPositionStepIncreaseButtonCursorTargetComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepIncreaseButtonCollisionComponent = this.myPositionStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myPositionStepDecreaseButtonBackgroundComponent = this.myPositionStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPositionStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myPositionStepDecreaseButtonTextComponent = this.myPositionStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myPositionStepDecreaseButtonTextComponent);\r\n        this.myPositionStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myPositionStepDecreaseButtonCursorTargetComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myPositionStepDecreaseButtonCollisionComponent = this.myPositionStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myPositionStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPositionStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        //Rotation\r\n        this.myRotationStepTextComponent = this.myRotationStepText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepTextComponent);\r\n        this.myRotationStepTextComponent.text = \" \";\r\n\r\n        this.myRotationStepCursorTargetComponent = this.myRotationStepCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepCollisionComponent = this.myRotationStepCursorTarget.addComponent('collision');\r\n        this.myRotationStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myRotationStepIncreaseButtonBackgroundComponent = this.myRotationStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepIncreaseButtonTextComponent = this.myRotationStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepIncreaseButtonTextComponent);\r\n        this.myRotationStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myRotationStepIncreaseButtonCursorTargetComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepIncreaseButtonCollisionComponent = this.myRotationStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myRotationStepDecreaseButtonBackgroundComponent = this.myRotationStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myRotationStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myRotationStepDecreaseButtonTextComponent = this.myRotationStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myRotationStepDecreaseButtonTextComponent);\r\n        this.myRotationStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myRotationStepDecreaseButtonCursorTargetComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myRotationStepDecreaseButtonCollisionComponent = this.myRotationStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myRotationStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myRotationStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        //Scale\r\n        this.myScaleStepTextComponent = this.myScaleStepText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepTextComponent);\r\n        this.myScaleStepTextComponent.text = \" \";\r\n\r\n        this.myScaleStepCursorTargetComponent = this.myScaleStepCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepCollisionComponent = this.myScaleStepCursorTarget.addComponent('collision');\r\n        this.myScaleStepCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepCollisionComponent.extents = this._mySetup.myStepCollisionExtents;\r\n\r\n        //Increase/Decrease\r\n        this.myScaleStepIncreaseButtonBackgroundComponent = this.myScaleStepIncreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepIncreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepIncreaseButtonTextComponent = this.myScaleStepIncreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepIncreaseButtonTextComponent);\r\n        this.myScaleStepIncreaseButtonTextComponent.text = this._mySetup.myIncreaseButtonText;\r\n\r\n        this.myScaleStepIncreaseButtonCursorTargetComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepIncreaseButtonCollisionComponent = this.myScaleStepIncreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepIncreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepIncreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n\r\n        this.myScaleStepDecreaseButtonBackgroundComponent = this.myScaleStepDecreaseButtonBackground.addComponent('mesh');\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myScaleStepDecreaseButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myScaleStepDecreaseButtonTextComponent = this.myScaleStepDecreaseButtonText.addComponent('text');\r\n        this._setupTextComponent(this.myScaleStepDecreaseButtonTextComponent);\r\n        this.myScaleStepDecreaseButtonTextComponent.text = this._mySetup.myDecreaseButtonText;\r\n\r\n        this.myScaleStepDecreaseButtonCursorTargetComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('cursor-target');\r\n        this.myScaleStepDecreaseButtonCollisionComponent = this.myScaleStepDecreaseButtonCursorTarget.addComponent('collision');\r\n        this.myScaleStepDecreaseButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myScaleStepDecreaseButtonCollisionComponent.extents = this._mySetup.mySideButtonCollisionExtents;\r\n    }\r\n};", "PP.EasyTuneTransformWidgetSetup = class EasyTuneTransformWidgetSetup extends PP.EasyTuneBaseWidgetSetup {\r\n\r\n    _getBackPanelMinY() {\r\n        return super._getBackPanelMinY() + this.myPositionPanelPosition[1] + this.myStepPanelPosition[1];\r\n    }\r\n\r\n    _getBackPanelMaxX() {\r\n        return this.myDisplayPanelPosition[0] + this.myRotationPanelPosition[0] + this.myIncreaseButtonPosition[0] + this.mySideButtonBackgroundScale[0] + this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getBackPanelMinX() {\r\n        return this.myDisplayPanelPosition[0] + this.myScalePanelPosition[0] + this.myDecreaseButtonPosition[0] - this.mySideButtonBackgroundScale[0] - this._mySideButtonDistanceFromBorder;\r\n    }\r\n\r\n    _getPivotZOffset() {\r\n        return 0.00805713;\r\n    }\r\n\r\n    _initializeBuildSetupHook() {\r\n        this.myIncreaseButtonText = \"+\";\r\n        this.myDecreaseButtonText = \"-\";\r\n\r\n        this.myDecreaseButtonPosition = PP.vec3_create(-0.13, 0, -0.00001);\r\n        this.myIncreaseButtonPosition = PP.vec3_create(-this.myDecreaseButtonPosition[0], 0, -0.00001);\r\n\r\n        let distanceBetweenComponents = Math.abs(this.myIncreaseButtonPosition[0]) + Math.abs(this.myRightSideButtonPosition[0]);\r\n        let distanceFromVariableLabel = 0.045;\r\n        this.myPositionPanelPosition = [0, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myRotationPanelPosition = [this.myPositionPanelPosition[0] + distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n        this.myScalePanelPosition = [this.myPositionPanelPosition[0] - distanceBetweenComponents, this.myVariableLabelPanelPosition[1] - distanceFromVariableLabel, this._myPanelZOffset];\r\n\r\n        this.myPositionText = \"Position\";\r\n        this.myRotationText = \"Rotation\";\r\n        this.myScaleText = \"Scale\";\r\n\r\n        this.myComponentLabelTextScale = this.myLabelTextScale;\r\n        this.myComponentLabelCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myComponentLabelCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myComponentLabelCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myComponentLabelCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this._myValuePanelDistanceFromVariableLabelPanel = 0.055;\r\n        this._myDistanceBetweenValues = this.mySideButtonBackgroundScale[1] * 2 + 0.015;\r\n\r\n        this.myValueTextScale = PP.vec3_create(0.4, 0.4, 0.4);\r\n\r\n        this.myValueCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myValueCursorTargetPosition[2] = this._myColliderZOffset - this._myPanelZOffset;\r\n        this.myValueCollisionExtents = PP.vec3_create(0.065, 0.02, 1);\r\n        this.myValueCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myValuePanelsPositions = [];\r\n        this.myValuePanelsPositions[0] = PP.vec3_create(0, -this._myValuePanelDistanceFromVariableLabelPanel, 0);\r\n        for (let i = 1; i < 3; i++) {\r\n            this.myValuePanelsPositions[i] = this.myValuePanelsPositions[i - 1].slice(0);\r\n            this.myValuePanelsPositions[i][1] -= this._myDistanceBetweenValues;\r\n        }\r\n\r\n        let valuePanelLastPosition = this.myValuePanelsPositions[2][1];\r\n        this.myStepPanelPosition = [0, valuePanelLastPosition - this._myValuePanelDistanceFromVariableLabelPanel, 0];\r\n        this.myStepTextScale = this.myLabelTextScale;\r\n        this.myStepStartString = \"Step: \";\r\n\r\n        this.myStepCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myStepCursorTargetPosition[2] = this._myColliderZOffset - this.myStepPanelPosition[2];\r\n        this.myStepCollisionExtents = PP.vec3_create(0.065, 0.0175, 1);\r\n        this.myStepCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetupHook() {\r\n        this.myTextHoverScaleMultiplier = PP.vec3_create(1.25, 1.25, 1.25);\r\n\r\n        this.myEditThumbstickMinThreshold = 0.35;\r\n        this.myStepMultiplierStepPerSecond = 2.25;\r\n        this.myButtonEditDelay = 0;\r\n    }\r\n};", "PP.EasyTuneWidgetAdditionalSetup = class EasyTuneWidgetAdditionalSetup {\r\n    constructor() {\r\n        this.myHandedness = PP.ToolHandedness.NONE;\r\n        this.myShowOnStart = false;\r\n        this.myShowVisibilityButton = false;\r\n        this.myEnableAdditionalButtons = false;\r\n        this.myEnableGamepadScrollVariable = false;\r\n        this.myPlaneMaterial = null;\r\n        this.myTextMaterial = null;\r\n\r\n        this.myEnableVariablesImportExportButtons = false;\r\n        this.myVariablesImportCallback = null;   // Signature: callback()\r\n        this.myVariablesExportCallback = null;   // Signature: callback()\r\n    }\r\n};\r\n\r\nPP.EasyTuneWidget = class EasyTuneWidget {\r\n\r\n    constructor() {\r\n        this._myIsStarted = false;\r\n        this._myStartVariable = null;\r\n\r\n        this._myWidgetFrame = new PP.WidgetFrame(\"E\", 1);\r\n        this._myWidgetFrame.registerWidgetVisibleChangedEventListener(this, this._widgetVisibleChanged.bind(this));\r\n\r\n        this._mySetup = new PP.EasyTuneWidgetSetup();\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myWidgets = [];\r\n\r\n        this._myEasyTuneVariables = null;\r\n        this._myEasyTuneLastSize = 0;\r\n        this._myVariableNames = null;\r\n\r\n        this._myCurrentWidget = null;\r\n        this._myCurrentVariable = null;\r\n\r\n        this._myScrollVariableTimer = 0;\r\n\r\n        this._myGamepad = null;\r\n\r\n        this._myRefreshVariablesTimer = 0;\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    setActiveVariable(variableName) {\r\n        if (!this._myIsStarted) {\r\n            this._myStartVariable = variableName;\r\n        } else if (this._myEasyTuneVariables.has(variableName)) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(variableName);\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            console.log(\"Can't set easy tune active variable\");\r\n        }\r\n    }\r\n\r\n    refresh() {\r\n        if (this._myWidgetFrame.myIsWidgetVisible) {\r\n            this._myDirty = true;\r\n        }\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this._myWidgetFrame.setVisible(visible);\r\n    }\r\n\r\n    isVisible() {\r\n        return this._myWidgetFrame.isVisible();\r\n    }\r\n\r\n    start(parentObject, additionalSetup, easyTuneVariables) {\r\n        this._myRightGamepad = PP.myRightGamepad; //@EDIT get right gamepad here based on how you store it in your game\r\n        this._myLeftGamepad = PP.myLeftGamepad; //@EDIT get left gamepad here based on how you store it in your game\r\n        if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.RIGHT) {\r\n            this._myGamepad = this._myRightGamepad;\r\n        } else if (this._mySetup.myGamepadHandedness == PP.ToolHandedness.LEFT) {\r\n            this._myGamepad = this._myLeftGamepad;\r\n        }\r\n\r\n        this._myIsStarted = true;\r\n\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myWidgetFrame.start(parentObject, additionalSetup);\r\n\r\n        this._myEasyTuneVariables = easyTuneVariables;\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n        }\r\n\r\n        if (this._myStartVariable) {\r\n            if (this._myEasyTuneVariables.has(this._myStartVariable)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myStartVariable);\r\n            } else {\r\n                console.log(\"Can't set easy tune active variable\");\r\n            }\r\n        }\r\n\r\n        this._initializeWidgets();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myWidgetFrame.update(dt);\r\n\r\n        if (this._myEasyTuneVariables.length() != this._myEasyTuneLastSize || this._myDirty) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myEasyTuneVariables.length() > 0) {\r\n            if (this._mySetup.myRefreshVariablesDelay != null) {\r\n                this._myRefreshVariablesTimer += dt;\r\n                if (this._myRefreshVariablesTimer > this._mySetup.myRefreshVariablesDelay) {\r\n                    this._myRefreshVariablesTimer = 0;\r\n                    this._refreshEasyTuneVariables();\r\n                }\r\n            }\r\n\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.update(dt);\r\n            }\r\n\r\n            if (this._myAdditionalSetup.myEnableGamepadScrollVariable) {\r\n                this._updateGamepadScrollVariable(dt);\r\n            }\r\n        }\r\n\r\n        this._updateGamepadWidgetVisibility();\r\n\r\n        this._updateActiveVariable();\r\n    }\r\n\r\n    _initializeWidgets() {\r\n        let widgetParams = new PP.EasyTuneBaseWidgetParams();\r\n        widgetParams.myVariablesImportCallback = this._importVariables.bind(this);\r\n        widgetParams.myVariablesExportCallback = this._exportVariables.bind(this);\r\n\r\n        this._myWidgets[PP.EasyTuneVariableType.NONE] = new PP.EasyTuneNoneWidget(widgetParams);\r\n        this._myWidgets[PP.EasyTuneVariableType.NUMBER] = new PP.EasyTuneNumberArrayWidgetSelector(widgetParams, this._myGamepad);\r\n        this._myWidgets[PP.EasyTuneVariableType.BOOL] = new PP.EasyTuneBoolArrayWidgetSelector(widgetParams, this._myGamepad);\r\n        this._myWidgets[PP.EasyTuneVariableType.TRANSFORM] = new PP.EasyTuneTransformWidget(widgetParams, this._myGamepad);\r\n\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.start(this._myWidgetFrame.getWidgetObject(), this._myAdditionalSetup);\r\n                widget.setVisible(false);\r\n                widget.registerScrollVariableRequestEventListener(this, this._scrollVariable.bind(this));\r\n            }\r\n        }\r\n\r\n        this._selectCurrentWidget();\r\n    }\r\n\r\n    _selectCurrentWidget() {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let prevWidget = null;\r\n        if (this._myCurrentWidget != null) {\r\n            prevWidget = this._myCurrentWidget.getWidget();\r\n        }\r\n\r\n        if (this._myCurrentVariable.myType in this._myWidgets) {\r\n            this._myCurrentWidget = this._myWidgets[this._myCurrentVariable.myType];\r\n        } else {\r\n            this._myCurrentWidget = this._myWidgets[PP.EasyTuneVariableType.NONE];\r\n        }\r\n\r\n        this._myCurrentWidget.setEasyTuneVariable(this._myCurrentVariable, this._createIndexString());\r\n        this._myCurrentWidget.getWidget().syncWidget(prevWidget);\r\n\r\n        if (prevWidget != null) {\r\n            prevWidget.setVisible(false);\r\n        }\r\n\r\n        this._myCurrentWidget.setVisible(this._myWidgetFrame.myIsWidgetVisible);\r\n    }\r\n\r\n    _refreshEasyTuneVariables() {\r\n        this._myVariableNames = this._myEasyTuneVariables.getEasyTuneVariablesNames();\r\n        this._myEasyTuneLastSize = this._myEasyTuneVariables.length();\r\n\r\n        if (this._myEasyTuneVariables.length() > 0) {\r\n            if (this._myCurrentVariable && this._myEasyTuneVariables.has(this._myCurrentVariable.myName)) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myCurrentVariable.myName);\r\n            } else {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[0]);\r\n            }\r\n\r\n            this._selectCurrentWidget();\r\n        } else {\r\n            this._myCurrentVariable = null;\r\n            if (this._myCurrentWidget) {\r\n                this._myCurrentWidget.setVisible(false);\r\n                this._myCurrentWidget = null;\r\n            }\r\n        }\r\n\r\n        this._myDirty = false;\r\n    }\r\n\r\n    _updateGamepadWidgetVisibility() {\r\n        if (this._myGamepad) {\r\n            if ((this._myGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).myIsPressed) ||\r\n                (this._myGamepad.getButtonInfo(PP.GamepadButtonID.TOP_BUTTON).isPressStart() && this._myGamepad.getButtonInfo(PP.GamepadButtonID.BOTTOM_BUTTON).myIsPressed)) {\r\n                this._toggleVisibility();\r\n            }\r\n        }\r\n    }\r\n\r\n    _toggleVisibility() {\r\n        this._myWidgetFrame.toggleVisibility();\r\n    }\r\n\r\n    _widgetVisibleChanged(visible) {\r\n        for (let widget of this._myWidgets) {\r\n            if (widget != null) {\r\n                widget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (this._myCurrentWidget) {\r\n            if (this._myEasyTuneVariables.length() > 0) {\r\n                this._myCurrentWidget.setVisible(visible);\r\n            } else {\r\n                this._myCurrentWidget.setVisible(false);\r\n            }\r\n        }\r\n\r\n        if (visible) {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _updateGamepadScrollVariable(dt) {\r\n        if (this._myGamepad && (!this._mySetup.myScrollVariableButtonID || this._myGamepad.getButtonInfo(this._mySetup.myScrollVariableButtonID).myIsPressed)) {\r\n            let x = this._myGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes[0];\r\n            let y = this._myGamepad.getAxesInfo(PP.GamepadAxesID.THUMBSTICK).myAxes[1];\r\n            if (Math.abs(x) > this._mySetup.myScrollVariableMinXThreshold && Math.abs(y) < this._mySetup.myScrollVariableMaxYThreshold) {\r\n                this._myScrollVariableTimer += dt;\r\n                while (this._myScrollVariableTimer > this._mySetup.myScrollVariableDelay) {\r\n                    this._myScrollVariableTimer -= this._mySetup.myScrollVariableDelay;\r\n                    this._scrollVariable(Math.sign(x));\r\n                }\r\n            } else {\r\n                this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n            }\r\n        } else {\r\n            this._myScrollVariableTimer = this._mySetup.myScrollVariableDelay;\r\n        }\r\n    }\r\n\r\n    _scrollVariable(amount) {\r\n        if (this._myEasyTuneVariables.length() <= 0) {\r\n            return;\r\n        }\r\n\r\n        let variableIndex = this._getVariableIndex(this._myCurrentVariable);\r\n        if (variableIndex >= 0) {\r\n            let newIndex = (((variableIndex + amount) % this._myVariableNames.length) + this._myVariableNames.length) % this._myVariableNames.length; //manage negative numbers\r\n            if (this._myEasyTuneVariables.has(this._myVariableNames[newIndex])) {\r\n                this._myCurrentVariable = this._myEasyTuneVariables.getEasyTuneVariable(this._myVariableNames[newIndex]);\r\n                this._selectCurrentWidget();\r\n            } else {\r\n                this._refreshEasyTuneVariables();\r\n            }\r\n        } else {\r\n            this._refreshEasyTuneVariables();\r\n        }\r\n    }\r\n\r\n    _createIndexString() {\r\n        let indexString = \" (\";\r\n        let index = (this._getVariableIndex(this._myCurrentVariable) + 1).toString();\r\n        let length = (this._myEasyTuneVariables.length()).toString();\r\n        while (index.length < length.length) {\r\n            index = \"0\".concat(index);\r\n        }\r\n\r\n        indexString = indexString.concat(index).concat(\" - \").concat(length).concat(\")\");\r\n\r\n        return indexString;\r\n    }\r\n\r\n    _getVariableIndex(variable) {\r\n        let variableIndex = this._myVariableNames.indexOf(variable.myName);\r\n        return variableIndex;\r\n    }\r\n\r\n    _updateActiveVariable() {\r\n        this._myEasyTuneVariables.getEasyTuneVariables().forEach(function (value) {\r\n            value.myIsActive = false;\r\n        });\r\n\r\n        if (this._myWidgetFrame.myIsWidgetVisible && this._myCurrentVariable) {\r\n            this._myCurrentVariable.myIsActive = true;\r\n        }\r\n    }\r\n\r\n    _importVariables() {\r\n        this._myAdditionalSetup.myVariablesImportCallback(this._onImportSuccess.bind(this), this._onImportFailure.bind(this));\r\n    }\r\n\r\n    _exportVariables() {\r\n        this._myAdditionalSetup.myVariablesExportCallback(this._onExportSuccess.bind(this), this._onExportFailure.bind(this));\r\n    }\r\n\r\n    _onImportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportSuccess();\r\n        }\r\n    }\r\n\r\n    _onImportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onImportFailure();\r\n        }\r\n    }\r\n\r\n    _onExportSuccess() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportSuccess();\r\n        }\r\n    }\r\n\r\n    _onExportFailure() {\r\n        if (this._myCurrentWidget) {\r\n            this._myCurrentWidget.onExportFailure();\r\n        }\r\n    }\r\n};", "PP.EasyTuneWidgetSetup = class EasyTuneWidgetSetup {\r\n\r\n    constructor() {\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this.myGamepadHandedness = PP.ToolHandedness.RIGHT;\r\n\r\n        this.myScrollVariableDelay = 0.5;\r\n        this.myScrollVariableMinXThreshold = 0.6;\r\n        this.myScrollVariableMaxYThreshold = 0.25;\r\n        this.myScrollVariableButtonID = null;\r\n\r\n        this.myRefreshVariablesDelay = null;\r\n    }\r\n};", "PP.EasyTuneVariables = class EasyTuneVariables {\r\n    constructor() {\r\n        this._myVariables = new Map();\r\n    }\r\n\r\n    add(variable) {\r\n        this._myVariables.set(variable.myName, variable);\r\n    }\r\n\r\n    remove(variableName) {\r\n        this._myVariables.delete(variableName);\r\n    }\r\n\r\n    get(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.getValue();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    set(variableName, value, resetDefaultValue = false) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            variable.setValue(value, resetDefaultValue);\r\n        }\r\n    }\r\n\r\n    has(variableName) {\r\n        return this._myVariables.has(variableName);\r\n    }\r\n\r\n    length() {\r\n        return this._myVariables.size;\r\n    }\r\n\r\n    isActive(variableName) {\r\n        let variable = this._myVariables.get(variableName);\r\n        if (variable) {\r\n            return variable.myIsActive;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getEasyTuneVariable(variableName) {\r\n        return this._myVariables.get(variableName);\r\n    }\r\n\r\n    getEasyTuneVariables() {\r\n        return Array.from(this._myVariables.values());\r\n    }\r\n\r\n    getEasyTuneVariablesNames() {\r\n        return Array.from(this._myVariables.keys());\r\n    }\r\n\r\n    fromJSON(json, resetDefaultValue = false) {\r\n        let objectJSON = JSON.parse(json);\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            let variableValueJSON = objectJSON[variable.myName];\r\n            if (variableValueJSON !== undefined) {\r\n                variable.fromJSON(variableValueJSON, resetDefaultValue);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let objectJSON = {};\r\n\r\n        for (let variable of this._myVariables.values()) {\r\n            objectJSON[variable.myName] = variable.toJSON();\r\n        }\r\n\r\n        return JSON.stringify(objectJSON);\r\n    }\r\n\r\n    registerValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).registerValueChangedEventListener(callbackID, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(variableName, callbackID, callback) {\r\n        this._myVariables.get(variableName).unregisterValueChangedEventListener(callbackID);\r\n    }\r\n};", "/*\r\nEasy Tune Variables Examples\r\n\r\nNumber:         PP.myEasyTuneVariables.add(new PP.EasyTuneNumber(\"Float\", 1.00, 0.1, 3));\r\nNumber Array:   PP.myEasyTuneVariables.add(new PP.EasyTuneNumberArray(\"Float Array\", [1.00, 2.00, 3.00], 0.1, 3));\r\nInt:            PP.myEasyTuneVariables.add(new PP.EasyTuneInt(\"Int\", 1, 1));\r\nInt Array:      PP.myEasyTuneVariables.add(new PP.EasyTuneIntArray(\"Int Array\", [1, 2, 3], 1));\r\nBool:           PP.myEasyTuneVariables.add(new PP.EasyTuneBool(\"Bool\", false));\r\nBool Array:     PP.myEasyTuneVariables.add(new PP.EasyTuneBoolArray(\"Bool Array\", [false, true, false]));\r\nTransform:      PP.myEasyTuneVariables.add(new PP.EasyTuneTransform(\"Transform\", PP.mat4_create(), true));\r\n*/\r\n\r\nPP.EasyTuneVariableType = {\r\n    NONE: 0,\r\n    NUMBER: 1,\r\n    BOOL: 2,\r\n    TRANSFORM: 3\r\n};\r\n\r\nPP.EasyTuneVariable = class EasyTuneVariable {\r\n    constructor(name, type) {\r\n        this.myName = name.slice(0);\r\n        this.myType = type;\r\n\r\n        this.myValue = null;\r\n        this.myDefaultValue = null;\r\n\r\n        this.myIsActive = false;\r\n\r\n        this._myValueChangedCallbacks = new Map();      // Signature: callback(name, value)\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue;\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value;\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneVariable.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (oldValue != value) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value;\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return JSON.stringify(this.getValue());\r\n    }\r\n\r\n    registerValueChangedEventListener(id, callback) {\r\n        this._myValueChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterValueChangedEventListener(id) {\r\n        this._myValueChangedCallbacks.delete(id);\r\n    }\r\n\r\n    _triggerValueChangedCallback() {\r\n        if (this._myValueChangedCallbacks.size > 0) {\r\n            this._myValueChangedCallbacks.forEach(function (callback) { callback(this.myName, this.getValue()); }.bind(this));\r\n        }\r\n    }\r\n};\r\n\r\nPP.EasyTuneVariableArray = class EasyTuneVariableArray extends PP.EasyTuneVariable {\r\n    constructor(name, type, value) {\r\n        super(name, type);\r\n\r\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, value, true);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue.slice(0);\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        let oldValue = this.myValue;\r\n        this.myValue = value.slice(0);\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneVariableArray.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (oldValue == null || !oldValue.pp_equals(value)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultValue = value.slice(0);\r\n    }\r\n};\r\n\r\n//NUMBER\r\n\r\nPP.EasyTuneNumberArray = class EasyTuneNumberArray extends PP.EasyTuneVariableArray {\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min = null, max = null, editAllValuesTogether = false) {\r\n        super(name, PP.EasyTuneVariableType.NUMBER, value);\r\n\r\n        this.myDecimalPlaces = decimalPlaces;\r\n        this.myStepPerSecond = stepPerSecond;\r\n\r\n        this.myDefaultStepPerSecond = this.myStepPerSecond;\r\n\r\n        this.myMin = min;\r\n        this.myMax = max;\r\n\r\n        this.myEditAllValuesTogether = editAllValuesTogether;\r\n\r\n        this._clampValue(true);\r\n    }\r\n\r\n    setMax(max) {\r\n        this.myMax = max;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    setMin(min) {\r\n        this.myMin = min;\r\n        this._clampValue(false);\r\n    }\r\n\r\n    _clampValue(resetDefaultValue) {\r\n        let clampedValue = this.myValue.vec_clamp(this.myMin, this.myMax);\r\n\r\n        if (!resetDefaultValue) {\r\n            let clampedDefaultValue = this.myDefaultValue.vec_clamp(this.myMin, this.myMax);\r\n            let defaultValueChanged = !clampedDefaultValue.vec_equals(this.myDefaultValue, 0.00001);\r\n            if (defaultValueChanged) {\r\n                PP.EasyTuneVariableArray.prototype.setDefaultValue.call(this, clampedDefaultValue);\r\n            }\r\n        }\r\n\r\n        PP.EasyTuneVariableArray.prototype.setValue.call(this, clampedValue, resetDefaultValue);\r\n    }\r\n};\r\n\r\nPP.EasyTuneNumber = class EasyTuneNumber extends PP.EasyTuneNumberArray {\r\n    constructor(name, value, stepPerSecond, decimalPlaces, min, max) {\r\n        super(name, [value], stepPerSecond, decimalPlaces, min, max);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setValue([value]);\r\n    }\r\n};\r\n\r\nPP.EasyTuneInt = class EasyTuneInt extends PP.EasyTuneNumber {\r\n    constructor(name, value, stepPerSecond, min, max) {\r\n        super(name, value, stepPerSecond, 0, min, max);\r\n    }\r\n};\r\n\r\nPP.EasyTuneIntArray = class EasyTuneIntArray extends PP.EasyTuneNumberArray {\r\n    constructor(name, value, stepPerSecond, min, max, editAllValuesTogether) {\r\n        let tempValue = value.slice(0);\r\n\r\n        for (let i = 0; i < value.length; i++) {\r\n            tempValue[i] = Math.round(tempValue[i]);\r\n        }\r\n\r\n        super(name, tempValue, stepPerSecond, 0, min != null ? Math.round(min) : null, max != null ? Math.round(max) : max, editAllValuesTogether);\r\n    }\r\n};\r\n\r\n//BOOL\r\n\r\nPP.EasyTuneBoolArray = class EasyTuneBoolArray extends PP.EasyTuneVariableArray {\r\n    constructor(name, value) {\r\n        super(name, PP.EasyTuneVariableType.BOOL, value);\r\n    }\r\n};\r\n\r\nPP.EasyTuneBool = class EasyTuneBool extends PP.EasyTuneBoolArray {\r\n    constructor(name, value) {\r\n        super(name, [value]);\r\n    }\r\n\r\n    getValue() {\r\n        return this.myValue[0];\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        super.setValue([value], resetDefaultValue);\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        super.setValue([value]);\r\n    }\r\n};\r\n\r\n//EASY TUNE EASY TRANSFORM\r\n\r\nPP.EasyTuneTransform = class EasyTuneTransform extends PP.EasyTuneVariable {\r\n    constructor(name, value, scaleAsOne = true, positionStepPerSecond = 1, rotationStepPerSecond = 50, scaleStepPerSecond = 1) {\r\n        super(name, PP.EasyTuneVariableType.TRANSFORM);\r\n\r\n        this.myDecimalPlaces = 3;\r\n\r\n        this.myPosition = value.mat4_getPosition();\r\n        this.myRotation = value.mat4_getRotationDegrees();\r\n        this.myScale = value.mat4_getScale();\r\n\r\n        let decimalPlacesMultiplier = Math.pow(10, this.myDecimalPlaces);\r\n        for (let i = 0; i < 3; i++) {\r\n            this.myScale[i] = Math.max(this.myScale[i], 1 / decimalPlacesMultiplier);\r\n        }\r\n\r\n        this.myScaleAsOne = scaleAsOne;\r\n\r\n        this.myPositionStepPerSecond = positionStepPerSecond;\r\n        this.myRotationStepPerSecond = rotationStepPerSecond;\r\n        this.myScaleStepPerSecond = scaleStepPerSecond;\r\n\r\n        this.myDefaultPosition = this.myPosition.vec3_clone();\r\n        this.myDefaultRotation = this.myRotation.vec3_clone();\r\n        this.myDefaultScale = this.myScale.vec3_clone();\r\n\r\n        this.myDefaultPositionStepPerSecond = this.myPositionStepPerSecond;\r\n        this.myDefaultRotationStepPerSecond = this.myRotationStepPerSecond;\r\n        this.myDefaultScaleStepPerSecond = this.myScaleStepPerSecond;\r\n\r\n        this.myTransform = PP.mat4_create();\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        this.myTempTransform = PP.mat4_create();\r\n    }\r\n\r\n    getValue() {\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n        return this.myTransform.slice(0);\r\n    }\r\n\r\n    setValue(value, resetDefaultValue = false) {\r\n        this.myTempTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        value.mat4_getPosition(this.myPosition);\r\n        value.mat4_getRotationDegrees(this.myRotation);\r\n        value.mat4_getScale(this.myScale);\r\n\r\n        this.myTransform.mat4_setPositionRotationDegreesScale(this.myPosition, this.myRotation, this.myScale);\r\n\r\n        if (resetDefaultValue) {\r\n            PP.EasyTuneTransform.prototype.setDefaultValue.call(this, value);\r\n        }\r\n\r\n        PP.refreshEasyTuneWidget();\r\n\r\n        if (!this.myTempTransform.pp_equals(this.myTransform)) {\r\n            this._triggerValueChangedCallback();\r\n        }\r\n    }\r\n\r\n    setDefaultValue(value) {\r\n        this.myDefaultPosition = value.mat4_getPosition();\r\n        this.myDefaultRotation = value.mat4_getRotationDegrees();\r\n        this.myDefaultScale = value.mat4_getScale();\r\n    }\r\n\r\n    fromJSON(valueJSON, resetDefaultValue = false) {\r\n        this.setValue(JSON.parse(valueJSON), resetDefaultValue);\r\n    }\r\n\r\n    toJSON() {\r\n        return this.getValue().vec_toString();\r\n    }\r\n};", "PP.myEasyTuneVariables = new PP.EasyTuneVariables();\r\n\r\nPP.myEasyTuneTarget = null;\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nPP.importEasyTuneVariables = function importEasyTuneVariables(fileURL = null, resetVariablesDefaultValueOnImport = false, onSuccessCallback = null, onFailureCallback = null) {\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.readText().then(\r\n                function (clipboard) {\r\n                    PP.myEasyTuneVariables.fromJSON(clipboard, resetVariablesDefaultValueOnImport);\r\n\r\n                    PP.refreshEasyTuneWidget();\r\n\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Imported from: clipboard\");\r\n                    console.log(clipboard);\r\n                }, function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = PP._importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    response.text().then(\r\n                        function (text) {\r\n                            PP.myEasyTuneVariables.fromJSON(text, resetVariablesDefaultValueOnImport);\r\n\r\n                            PP.refreshEasyTuneWidget();\r\n\r\n                            if (onSuccessCallback != null) {\r\n                                onSuccessCallback();\r\n                            }\r\n\r\n                            console.log(\"Easy Tune Variables Imported from:\", replacedFileURL);\r\n                            console.log(text);\r\n                        },\r\n                        function (response) {\r\n                            if (onFailureCallback != null) {\r\n                                onFailureCallback();\r\n                            }\r\n\r\n                            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                            console.error(response);\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while importing the easy tune variables from:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n\r\n    PP.refreshEasyTuneWidget();\r\n};\r\n\r\n// fileURL can contain parameters inside brackets, like {param}\r\n// those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\nPP.exportEasyTuneVariables = function exportEasyTuneVariables(fileURL = null, onSuccessCallback = null, onFailureCallback = null) {\r\n    let jsonVariables = PP.myEasyTuneVariables.toJSON();\r\n\r\n    if (fileURL == null || fileURL.length == 0) {\r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(jsonVariables).then(\r\n                function () {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to: clipboard\");\r\n                    console.log(jsonVariables);\r\n                },\r\n                function () {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                }\r\n            ).catch(function (reason) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to: clipboard\");\r\n                console.error(reason);\r\n            });\r\n        }\r\n    } else {\r\n        let replacedFileURL = PP._importExportEasyTuneVariablesReplaceFileURLParams(fileURL);\r\n\r\n        fetch(replacedFileURL, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: jsonVariables\r\n        }).then(\r\n            function (response) {\r\n                if (response.ok) {\r\n                    if (onSuccessCallback != null) {\r\n                        onSuccessCallback();\r\n                    }\r\n\r\n                    console.log(\"Easy Tune Variables Exported to:\", replacedFileURL);\r\n                    console.log(jsonVariables);\r\n                } else {\r\n                    if (onFailureCallback != null) {\r\n                        onFailureCallback();\r\n                    }\r\n\r\n                    console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                    console.error(response);\r\n                }\r\n            },\r\n            function (response) {\r\n                if (onFailureCallback != null) {\r\n                    onFailureCallback();\r\n                }\r\n\r\n                console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n                console.error(response);\r\n            }\r\n        ).catch(function (reason) {\r\n            if (onFailureCallback != null) {\r\n                onFailureCallback();\r\n            }\r\n\r\n            console.error(\"An error occurred while exporting the easy tune variables to:\", replacedFileURL);\r\n            console.error(reason);\r\n        });\r\n    }\r\n};\r\n\r\nPP.mySetEasyTuneWidgetActiveVariableCallbacks = [];\r\nPP.setEasyTuneWidgetActiveVariable = function setEasyTuneWidgetActiveVariable(variableName) {\r\n    for (let callback of PP.mySetEasyTuneWidgetActiveVariableCallbacks) {\r\n        callback(variableName);\r\n    }\r\n};\r\n\r\nPP.myRefreshEasyTuneWidgetCallbacks = [];\r\nPP.refreshEasyTuneWidget = function refreshEasyTuneWidget() {\r\n    for (let callback of PP.myRefreshEasyTuneWidgetCallbacks) {\r\n        callback();\r\n    }\r\n};\r\n\r\nPP._importExportEasyTuneVariablesReplaceFileURLParams = function _importExportEasyTuneVariablesReplaceFileURLParams(fileURL) {\r\n    let params = fileURL.match(/\\{.+?\\}/g);\r\n\r\n    if (params == null || params.length == 0) {\r\n        return fileURL;\r\n    }\r\n\r\n    for (let i = 0; i < params.length; i++) {\r\n        params[i] = params[i].replace(\"{\", \"\");\r\n        params[i] = params[i].replace(\"}\", \"\");\r\n    }\r\n\r\n    let urlSearchParams = new URL(document.location).searchParams;\r\n\r\n    let replacedFileURL = fileURL;\r\n\r\n    for (let param of params) {\r\n        let searchParamValue = urlSearchParams.get(param);\r\n        if (searchParamValue != null) {\r\n            replacedFileURL = replacedFileURL.replace(\"{\" + param + \"}\", searchParamValue);\r\n        }\r\n    }\r\n\r\n    return replacedFileURL;\r\n};", "WL.registerComponent('pp-easy-tune', {\r\n    _myHandedness: { type: WL.Type.Enum, values: ['none', 'left', 'right'], default: 'none' },\r\n    _myShowOnStart: { type: WL.Type.Bool, default: false },\r\n    _myShowVisibilityButton: { type: WL.Type.Bool, default: false },\r\n    _myEnableGamepadScrollVariable: { type: WL.Type.Bool, default: true },\r\n    _myEnableVariablesImportExportButtons: { type: WL.Type.Bool, default: false },\r\n    _myVariablesImportURL: { type: WL.Type.String, default: '' },   // the URL can contain parameters inside brackets, like {param}\r\n    _myVariablesExportURL: { type: WL.Type.String, default: '' },   // those parameters will be replaced with the same one on the current page url, like www.currentpage.com/?param=2\r\n    _myImportVariablesOnStart: { type: WL.Type.Bool, default: false },\r\n    _myResetVariablesDefaultValueOnImport: { type: WL.Type.Bool, default: false }\r\n}, {\r\n    init: function () {\r\n        this._myWidget = new PP.EasyTuneWidget();\r\n\r\n        PP.mySetEasyTuneWidgetActiveVariableCallbacks.push(function (variableName) {\r\n            this._myWidget.setActiveVariable(variableName);\r\n        }.bind(this));\r\n\r\n        PP.myRefreshEasyTuneWidgetCallbacks.push(function () {\r\n            this._myWidget.refresh();\r\n        }.bind(this));\r\n\r\n        this._myStarted = false;\r\n    },\r\n    start: function () {\r\n        let additionalSetup = new PP.EasyTuneWidgetAdditionalSetup();\r\n        additionalSetup.myHandedness = [null, 'left', 'right'][this._myHandedness];\r\n        additionalSetup.myShowOnStart = this._myShowOnStart;\r\n        additionalSetup.myShowVisibilityButton = this._myShowVisibilityButton;\r\n        additionalSetup.myEnableAdditionalButtons = true;\r\n        additionalSetup.myEnableGamepadScrollVariable = this._myEnableGamepadScrollVariable;\r\n        additionalSetup.myPlaneMaterial = PP.myDefaultResources.myMaterials.myFlatOpaque.clone();\r\n        additionalSetup.myTextMaterial = PP.myDefaultResources.myMaterials.myText.clone();\r\n\r\n        additionalSetup.myEnableVariablesImportExportButtons = this._myEnableVariablesImportExportButtons;\r\n        additionalSetup.myVariablesImportCallback = function (onSuccessCallback, onFailureCallback) {\r\n            PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport, onSuccessCallback, onFailureCallback);\r\n        }.bind(this);\r\n        additionalSetup.myVariablesExportCallback = function (onSuccessCallback, onFailureCallback) {\r\n            PP.exportEasyTuneVariables(this._myVariablesExportURL, onSuccessCallback, onFailureCallback);\r\n        }.bind(this);\r\n\r\n        this._myWidget.start(this.object, additionalSetup, PP.myEasyTuneVariables);\r\n\r\n        this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n        this._mySetVisibleNextUpdate = false;\r\n\r\n        this._myStarted = true;\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            if (this._myImportVariablesOnStart) {\r\n                PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport);\r\n            }\r\n        }\r\n\r\n        if (this._mySetVisibleNextUpdate) {\r\n            this._mySetVisibleNextUpdate = false;\r\n            this._myWidget.setVisible(false);\r\n            this._myWidget.setVisible(this._myWidgetVisibleBackup);\r\n        }\r\n\r\n        this._myWidget.update(dt);\r\n    },\r\n    onActivate() {\r\n        this._mySetVisibleNextUpdate = true;\r\n    },\r\n    onDeactivate() {\r\n        if (this._myStarted) {\r\n            this._myWidgetVisibleBackup = this._myWidget.isVisible();\r\n\r\n            this._myWidget.setVisible(false);\r\n        }\r\n    },\r\n});", "WL.registerComponent(\"pp-easy-tune-import-variables\", {\r\n    _myVariablesImportURL: { type: WL.Type.String, default: '' },\r\n    _myResetVariablesDefaultValueOnImport: { type: WL.Type.Bool, default: true }\r\n}, {\r\n    init: function () {\r\n    },\r\n    start: function () {\r\n        this._myFirstUpdate = true;\r\n    },\r\n    update: function (dt) {\r\n        if (this._myFirstUpdate) {\r\n            this._myFirstUpdate = false;\r\n            PP.importEasyTuneVariables(this._myVariablesImportURL, this._myResetVariablesDefaultValueOnImport);\r\n        }\r\n    }\r\n});", "PP.WidgetFrameSetup = class WidgetFrameSetup {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n\r\n        this._initializeBuildSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._initializeRuntimeSetup();\r\n    }\r\n\r\n    _initializeBuildSetup(widgetLetterID, buttonsColumnIndex) {\r\n        //General\r\n        this.myBackgroundColor = [46 / 255, 46 / 255, 46 / 255, 1];\r\n\r\n        this.myCursorTargetCollisionCollider = 2; // box\r\n        this.myCursorTargetCollisionGroup = 7;\r\n        this.myCursorTargetCollisionThickness = 0.001;\r\n\r\n        this.myDefaultTextColor = [255 / 255, 255 / 255, 255 / 255, 1];\r\n\r\n        this.myTextAlignment = 2; // center\r\n        this.myTextJustification = 2; // middle\r\n        this.myTextColor = this.myDefaultTextColor;\r\n\r\n        this.myButtonTextScale = PP.vec3_create(0.18, 0.18, 0.18);\r\n\r\n        this.myVisibilityButtonBackgroundScale = PP.vec3_create(0.015, 0.015, 1);\r\n        this.myVisibilityButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myVisibilityButtonTextScale = this.myButtonTextScale;\r\n\r\n        let distanceBetweenToolsVisibilityButtons = 0.01;\r\n        let buttonXOffset = this.myVisibilityButtonBackgroundScale[0] * (2 * buttonsColumnIndex) + distanceBetweenToolsVisibilityButtons * buttonsColumnIndex;\r\n\r\n        this.myVisibilityButtonPosition = [];\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition = [-0.3 + buttonXOffset, -0.205, 0.035];\r\n\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition = [-0.2 + buttonXOffset, 0.025, 0.015];\r\n\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT] = {};\r\n        this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition = [0.2 - buttonXOffset, 0.025, 0.015];\r\n\r\n        this.myVisibilityButtonText = widgetLetterID;\r\n\r\n        this.myVisibilityButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myVisibilityButtonCursorTargetPosition[2] = this.myVisibilityButtonTextPosition[2];\r\n        this.myVisibilityButtonCollisionExtents = this.myVisibilityButtonBackgroundScale.slice(0);\r\n        this.myVisibilityButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n\r\n        this.myFlagButtonBackgroundScale = PP.vec3_create(0.0125, 0.0125, 1);\r\n        this.myFlagButtonTextPosition = PP.vec3_create(0, 0, 0.007);\r\n        this.myFlagButtonTextScale = PP.vec3_create(0.15, 0.15, 0.15);\r\n\r\n        let distanceBetweenFlagButtons = 0.0075;\r\n        let pinFlagIndex = 0;\r\n        let pinButtonYOffset = this.myVisibilityButtonBackgroundScale[1] + this.myFlagButtonBackgroundScale[1] + distanceBetweenFlagButtons +\r\n            this.myFlagButtonBackgroundScale[1] * (2 * pinFlagIndex) + distanceBetweenFlagButtons * pinFlagIndex;\r\n\r\n        this.myPinButtonPosition = [];\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.LEFT].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.LEFT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT] = {};\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition = this.myVisibilityButtonPosition[PP.ToolHandedness.RIGHT].myPosition.slice(0);\r\n        this.myPinButtonPosition[PP.ToolHandedness.RIGHT].myPosition[1] += pinButtonYOffset;\r\n\r\n        this.myPinButtonText = \"P\";\r\n\r\n        this.myPinButtonCursorTargetPosition = PP.vec3_create(0, 0, 0);\r\n        this.myPinButtonCursorTargetPosition[2] = this.myFlagButtonTextPosition[2];\r\n        this.myPinButtonCollisionExtents = this.myFlagButtonBackgroundScale.slice(0);\r\n        this.myPinButtonCollisionExtents[2] = this.myCursorTargetCollisionThickness;\r\n    }\r\n\r\n    _initializeRuntimeSetup() {\r\n        this._initializeObjectsTransforms();\r\n\r\n        this.myButtonHoverColor = [150 / 255, 150 / 255, 150 / 255, 1];\r\n        this.myButtonDisabledTextColor = this.myBackgroundColor;\r\n        this.myButtonDisabledBackgroundColor = [110 / 255, 110 / 255, 110 / 255, 1];\r\n    }\r\n\r\n    _initializeObjectsTransforms() {\r\n        this.myPivotObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(-0.645, 0.425, 0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(-0.645, -0.425, -0.25, 0.584);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myRotation);\r\n\r\n        /*\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(-0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation = PP.quat_create(0, 0.536, -0.43, 0.727);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myRotation);\r\n\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.04, 0.045, -0.055);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation = PP.quat_create(0, -0.536, 0.43, 0.727);\r\n        this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation.quat_normalize(this.myPivotObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myRotation);\r\n        */\r\n\r\n        this.myWidgetObjectTransforms = this._createDefaultObjectTransforms();\r\n\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.GAMEPAD][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.LEFT].myPosition = PP.vec3_create(0.1, 0.23, -0.02);\r\n        this.myWidgetObjectTransforms[PP.ToolInputSourceType.TRACKED_HAND][PP.ToolHandedness.RIGHT].myPosition = PP.vec3_create(0.07, 0.23, -0.02);\r\n\r\n        this._myPivotObjectDistanceFromNonVRHead = 0.6;\r\n    }\r\n\r\n    _createDefaultObjectTransforms() {\r\n        let defaultObjectTransforms = [];\r\n\r\n        for (let inputSourceTypeKey in PP.ToolInputSourceType) {\r\n            let inputSourceType = PP.ToolInputSourceType[inputSourceTypeKey];\r\n            defaultObjectTransforms[inputSourceType] = [];\r\n            for (let handednessKey in PP.ToolHandedness) {\r\n                let handedness = PP.ToolHandedness[handednessKey];\r\n                defaultObjectTransforms[inputSourceType][handedness] = {};\r\n                defaultObjectTransforms[inputSourceType][handedness].myPosition = PP.vec3_create(0, 0, 0);\r\n                defaultObjectTransforms[inputSourceType][handedness].myRotation = PP.quat_create(0, 0, 0, 1);\r\n            }\r\n        }\r\n\r\n        return defaultObjectTransforms;\r\n    }\r\n};", "\r\nPP.WidgetFrameUI = class WidgetFrameUI {\r\n\r\n    constructor() {\r\n        this._myInputSourceType = null;\r\n\r\n        this._myParentObject = null;\r\n        this._myIsPinned = false;\r\n\r\n        this._myWidgetVisible = true;\r\n        this._myVisibilityButtonVisible = true;\r\n    }\r\n\r\n    build(parentObject, setup, additionalSetup) {\r\n        this._myParentObject = parentObject;\r\n        this._mySetup = setup;\r\n        this._myAdditionalSetup = additionalSetup;\r\n        this._myPlaneMesh = PP.MeshUtils.createPlaneMesh();\r\n\r\n        this._createSkeleton();\r\n        this._setTransforms();\r\n        this._addComponents();\r\n\r\n        this._setTransformForNonVR();\r\n\r\n        if (WL.xrSession) {\r\n            this._onXRSessionStart(WL.xrSession);\r\n        }\r\n        WL.onXRSessionStart.push(this._onXRSessionStart.bind(this));\r\n        WL.onXRSessionEnd.push(this._onXRSessionEnd.bind(this));\r\n    }\r\n\r\n    setWidgetVisible(visible) {\r\n        this._myWidgetVisible = visible;\r\n        this.myFlagsButtonPanel.pp_setActiveHierarchy(visible);\r\n        if (visible) {\r\n            this._updateObjectsTransforms(true);\r\n        }\r\n    }\r\n\r\n    setVisibilityButtonVisible(visible) {\r\n        this._myVisibilityButtonVisible = visible;\r\n        this.myVisibilityButtonPanel.pp_setActiveHierarchy(visible);\r\n    }\r\n\r\n    setPinned(pinned) {\r\n        if (pinned != this._myIsPinned) {\r\n            this._myIsPinned = pinned;\r\n            if (this._myIsPinned) {\r\n                this.myPivotObject.pp_setParent(null);\r\n            } else {\r\n                this.myPivotObject.pp_setParent(this.myFixForwardObject);\r\n\r\n                if (!PP.XRUtils.isSessionActive()) {\r\n                    this._setTransformForNonVR();\r\n                }\r\n\r\n                this._updateObjectsTransforms(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this._updateObjectsTransforms(false);\r\n    }\r\n\r\n    _updateObjectsTransforms(forceRefreshObjectsTransforms) {\r\n        if (PP.XRUtils.isSessionActive()) {\r\n            let inputSourceType = PP.InputUtils.getInputSourceTypeByHandedness(this._myAdditionalSetup.myHandedness);\r\n\r\n            if (inputSourceType != this._myInputSourceType || forceRefreshObjectsTransforms) {\r\n                this._myInputSourceType = inputSourceType;\r\n\r\n                if (!this._myIsPinned) {\r\n                    this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPivotObject.resetRotation();\r\n                    this.myPivotObject.rotateObject(this._mySetup.myPivotObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myWidgetObject.setTranslationLocal(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myWidgetObject.resetRotation();\r\n                    this.myWidgetObject.rotateObject(this._mySetup.myWidgetObjectTransforms[this._myInputSourceType][this._myAdditionalSetup.myHandedness].myRotation);\r\n\r\n                    this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                    this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n                }\r\n            }\r\n        } else {\r\n            this.myVisibilityButtonPanel.pp_setActiveHierarchy(this._myWidgetVisible || this._myVisibilityButtonVisible);\r\n        }\r\n    }\r\n\r\n    //Skeleton\r\n    _createSkeleton() {\r\n        this.myFixForwardObject = WL.scene.addObject(this._myParentObject);\r\n        this.myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n        this.myPivotObject = WL.scene.addObject(this.myFixForwardObject);\r\n        this.myWidgetObject = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myVisibilityButtonPanel = WL.scene.addObject(this.myPivotObject);\r\n        this.myVisibilityButtonBackground = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n        this.myVisibilityButtonText = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n        this.myVisibilityButtonCursorTarget = WL.scene.addObject(this.myVisibilityButtonPanel);\r\n\r\n        this.myFlagsButtonPanel = WL.scene.addObject(this.myPivotObject);\r\n\r\n        this.myPinButtonPanel = WL.scene.addObject(this.myFlagsButtonPanel);\r\n        this.myPinButtonBackground = WL.scene.addObject(this.myPinButtonPanel);\r\n        this.myPinButtonText = WL.scene.addObject(this.myPinButtonPanel);\r\n        this.myPinButtonCursorTarget = WL.scene.addObject(this.myPinButtonPanel);\r\n\r\n        this.myNonVRParentObject = WL.scene.addObject(PP.myPlayerObjects.myNonVRCamera);\r\n        this.myNonVRParentObject.pp_translateLocal(PP.vec3_create(0, 0, -this._mySetup._myPivotObjectDistanceFromNonVRHead));\r\n        this.myNonVRParentObject.pp_lookToLocal(PP.vec3_create(0, 0, 1), PP.vec3_create(0, 1, 0));\r\n\r\n    }\r\n\r\n    //Transforms\r\n    _setTransforms() {\r\n        this.myPivotObject.setDirty();\r\n\r\n        this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n        this.myVisibilityButtonBackground.scale(this._mySetup.myVisibilityButtonBackgroundScale);\r\n        this.myVisibilityButtonText.setTranslationLocal(this._mySetup.myVisibilityButtonTextPosition);\r\n        this.myVisibilityButtonText.scale(this._mySetup.myVisibilityButtonTextScale);\r\n        this.myVisibilityButtonCursorTarget.setTranslationLocal(this._mySetup.myVisibilityButtonCursorTargetPosition);\r\n\r\n        this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[this._myAdditionalSetup.myHandedness].myPosition);\r\n\r\n        this.myPinButtonBackground.scale(this._mySetup.myFlagButtonBackgroundScale);\r\n        this.myPinButtonText.setTranslationLocal(this._mySetup.myFlagButtonTextPosition);\r\n        this.myPinButtonText.scale(this._mySetup.myFlagButtonTextScale);\r\n        this.myPinButtonCursorTarget.setTranslationLocal(this._mySetup.myPinButtonCursorTargetPosition);\r\n    }\r\n\r\n    //Components\r\n    _addComponents() {\r\n        this.myVisibilityButtonBackgroundComponent = this.myVisibilityButtonBackground.addComponent('mesh');\r\n        this.myVisibilityButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myVisibilityButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myVisibilityButtonBackgroundComponent.material.color = this._mySetup.myBackgroundColor;\r\n\r\n        this.myVisibilityButtonTextComponent = this.myVisibilityButtonText.addComponent('text');\r\n        this._setupButtonTextComponent(this.myVisibilityButtonTextComponent);\r\n        this.myVisibilityButtonTextComponent.text = this._mySetup.myVisibilityButtonText;\r\n\r\n        this.myVisibilityButtonCursorTargetComponent = this.myVisibilityButtonCursorTarget.addComponent('cursor-target');\r\n        this.myVisibilityButtonCollisionComponent = this.myVisibilityButtonCursorTarget.addComponent('collision');\r\n        this.myVisibilityButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myVisibilityButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myVisibilityButtonCollisionComponent.extents = this._mySetup.myVisibilityButtonCollisionExtents;\r\n\r\n        this.myPinButtonBackgroundComponent = this.myPinButtonBackground.addComponent('mesh');\r\n        this.myPinButtonBackgroundComponent.mesh = this._myPlaneMesh;\r\n        this.myPinButtonBackgroundComponent.material = this._myAdditionalSetup.myPlaneMaterial.clone();\r\n        this.myPinButtonBackgroundComponent.material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n\r\n        this.myPinButtonTextComponent = this.myPinButtonText.addComponent('text');\r\n        this._setupButtonTextComponent(this.myPinButtonTextComponent);\r\n        this.myPinButtonTextComponent.material.color = this._mySetup.myButtonDisabledTextColor;\r\n        this.myPinButtonTextComponent.text = this._mySetup.myPinButtonText;\r\n\r\n        this.myPinButtonCursorTargetComponent = this.myPinButtonCursorTarget.addComponent('cursor-target');\r\n\r\n        this.myPinButtonCollisionComponent = this.myPinButtonCursorTarget.addComponent('collision');\r\n        this.myPinButtonCollisionComponent.collider = this._mySetup.myCursorTargetCollisionCollider;\r\n        this.myPinButtonCollisionComponent.group = 1 << this._mySetup.myCursorTargetCollisionGroup;\r\n        this.myPinButtonCollisionComponent.extents = this._mySetup.myPinButtonCollisionExtents;\r\n    }\r\n\r\n    _setupButtonTextComponent(textComponent) {\r\n        textComponent.alignment = this._mySetup.myTextAlignment;\r\n        textComponent.justification = this._mySetup.myTextJustification;\r\n        textComponent.material = this._myAdditionalSetup.myTextMaterial.clone();\r\n        textComponent.material.color = this._mySetup.myTextColor;\r\n        textComponent.text = \"\";\r\n    }\r\n\r\n    _onXRSessionStart() {\r\n        this.myVisibilityButtonPanel.pp_setActiveHierarchy(this._myVisibilityButtonVisible);\r\n\r\n        this._setTransformForVR();\r\n    }\r\n\r\n    _onXRSessionEnd() {\r\n        this._setTransformForNonVR();\r\n    }\r\n\r\n    _setTransformForVR() {\r\n        this.myFixForwardObject.pp_setParent(this._myParentObject);\r\n\r\n        this.myFixForwardObject.pp_resetTransformLocal();\r\n        this.myFixForwardObject.pp_rotateObject(PP.vec3_create(0, 180, 0));\r\n\r\n        this._updateObjectsTransforms(true);\r\n    }\r\n\r\n    _setTransformForNonVR() {\r\n        if (!this._myIsPinned) {\r\n            this.myFixForwardObject.pp_setParent(this.myNonVRParentObject);\r\n            this.myFixForwardObject.pp_resetTransformLocal();\r\n\r\n            this.myPivotObject.setTranslationLocal(this._mySetup.myPivotObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myPosition);\r\n            this.myPivotObject.resetRotation();\r\n            this.myPivotObject.rotateObject(this._mySetup.myPivotObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myRotation);\r\n\r\n            this.myWidgetObject.setTranslationLocal(this._mySetup.myWidgetObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myPosition);\r\n            this.myWidgetObject.resetRotation();\r\n            this.myWidgetObject.rotateObject(this._mySetup.myWidgetObjectTransforms[PP.ToolInputSourceType.NONE][PP.ToolHandedness.NONE].myRotation);\r\n\r\n            this.myVisibilityButtonPanel.setTranslationLocal(this._mySetup.myVisibilityButtonPosition[PP.ToolHandedness.NONE].myPosition);\r\n            this.myPinButtonPanel.setTranslationLocal(this._mySetup.myPinButtonPosition[PP.ToolHandedness.NONE].myPosition);\r\n        }\r\n    }\r\n};", "\r\nPP.WidgetFrame = class WidgetFrame {\r\n\r\n    constructor(widgetLetterID, buttonsColumnIndex) {\r\n        this.myIsWidgetVisible = true;\r\n        this.myIsPinned = false;\r\n\r\n        this._mySetup = new PP.WidgetFrameSetup(widgetLetterID, buttonsColumnIndex);\r\n        this._myAdditionalSetup = null;\r\n\r\n        this._myUI = new PP.WidgetFrameUI();\r\n        this._myShowVisibilityButton = false;\r\n\r\n        this._myWidgetVisibleChangedCallbacks = new Map();      // Signature: callback(isWidgetVisible)\r\n        this._myPinChangedCallbacks = new Map();                // Signature: callback(isPinned)\r\n    }\r\n\r\n    getWidgetObject() {\r\n        return this._myUI.myWidgetObject;\r\n    }\r\n\r\n    setVisible(visible) {\r\n        this.myIsWidgetVisible = !visible;\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    isVisible() {\r\n        return this.myIsWidgetVisible;\r\n    }\r\n\r\n    toggleVisibility() {\r\n        this._toggleVisibility(false, true);\r\n    }\r\n\r\n    togglePin() {\r\n        this._togglePin(false);\r\n    }\r\n\r\n    registerWidgetVisibleChangedEventListener(id, callback) {\r\n        this._myWidgetVisibleChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterWidgetVisibleChangedEventListener(id) {\r\n        this._myWidgetVisibleChangedCallbacks.delete(id);\r\n    }\r\n\r\n    registerPinChangedEventListener(id, callback) {\r\n        this._myPinChangedCallbacks.set(id, callback);\r\n    }\r\n\r\n    unregisterPinChangedEventListener(id) {\r\n        this._myPinChangedCallbacks.delete(id);\r\n    }\r\n\r\n    start(parentObject, additionalSetup) {\r\n        this._myAdditionalSetup = additionalSetup;\r\n\r\n        this._myUI.build(parentObject, this._mySetup, additionalSetup);\r\n        this._myUI.setVisibilityButtonVisible(additionalSetup.myShowVisibilityButton);\r\n        this._myShowVisibilityButton = additionalSetup.myShowVisibilityButton;\r\n        if (!additionalSetup.myShowOnStart) {\r\n            this._toggleVisibility(false, false);\r\n        }\r\n\r\n        this._addListeners();\r\n    }\r\n\r\n    update(dt) {\r\n        this._myUI.update(dt);\r\n    }\r\n\r\n    _addListeners() {\r\n        let ui = this._myUI;\r\n\r\n        ui.myPinButtonCursorTargetComponent.addClickFunction(this._togglePin.bind(this, true));\r\n        ui.myPinButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n        ui.myPinButtonCursorTargetComponent.addUnHoverFunction(this._pinUnHover.bind(this, ui.myPinButtonBackgroundComponent.material));\r\n\r\n        ui.myVisibilityButtonCursorTargetComponent.addClickFunction(this._toggleVisibility.bind(this, true, true));\r\n        ui.myVisibilityButtonCursorTargetComponent.addHoverFunction(this._genericHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n        ui.myVisibilityButtonCursorTargetComponent.addUnHoverFunction(this._visibilityUnHover.bind(this, ui.myVisibilityButtonBackgroundComponent.material));\r\n    }\r\n\r\n    _toggleVisibility(isButton, notify) {\r\n        this.myIsWidgetVisible = !this.myIsWidgetVisible;\r\n\r\n        this._myUI.setWidgetVisible(this.myIsWidgetVisible);\r\n\r\n        let textMaterial = this._myUI.myVisibilityButtonTextComponent.material;\r\n        let backgroundMaterial = this._myUI.myVisibilityButtonBackgroundComponent.material;\r\n        if (this.myIsWidgetVisible) {\r\n            textMaterial.color = this._mySetup.myDefaultTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n            }\r\n        } else {\r\n            textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n            if (!isButton) {\r\n                backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n            }\r\n        }\r\n\r\n        if (notify) {\r\n            for (let callback of this._myWidgetVisibleChangedCallbacks.values()) {\r\n                callback(this.myIsWidgetVisible);\r\n            }\r\n        }\r\n\r\n        this._myUI.setVisibilityButtonVisible(this._myShowVisibilityButton);\r\n    }\r\n\r\n    _togglePin(isButton) {\r\n        if (this.myIsWidgetVisible) {\r\n            this.myIsPinned = !this.myIsPinned;\r\n\r\n            this._myUI.setPinned(this.myIsPinned);\r\n\r\n            let textMaterial = this._myUI.myPinButtonTextComponent.material;\r\n            let backgroundMaterial = this._myUI.myPinButtonBackgroundComponent.material;\r\n            if (this.myIsPinned) {\r\n                textMaterial.color = this._mySetup.myDefaultTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myBackgroundColor;\r\n                }\r\n            } else {\r\n                textMaterial.color = this._mySetup.myButtonDisabledTextColor;\r\n                if (!isButton) {\r\n                    backgroundMaterial.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n                }\r\n            }\r\n\r\n            for (let callback of this._myPinChangedCallbacks.values()) {\r\n                callback(this.myIsPinned);\r\n            }\r\n        }\r\n    }\r\n\r\n    _genericHover(material) {\r\n        material.color = this._mySetup.myButtonHoverColor;\r\n    }\r\n\r\n    _visibilityUnHover(material) {\r\n        if (this.myIsWidgetVisible) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n\r\n    _pinUnHover(material) {\r\n        if (this.myIsPinned) {\r\n            material.color = this._mySetup.myBackgroundColor;\r\n        } else {\r\n            material.color = this._mySetup.myButtonDisabledBackgroundColor;\r\n        }\r\n    }\r\n};", "//PP\r\n\r\nrequire('./pp/pp');\r\n\r\n//\tPLUGIN\r\nrequire('./pp/plugin/extensions/array_extension');\r\nrequire('./pp/plugin/extensions/math_extension');\r\nrequire('./pp/plugin/extensions/object_extension');\r\nrequire('./pp/plugin/extensions/scene_extension');\r\n\r\nrequire('./pp/plugin/component_mods/clone_component_mod');\r\nrequire('./pp/plugin/component_mods/cursor_component_mod');\r\nrequire('./pp/plugin/component_mods/cursor_target_component_mod');\r\nrequire('./pp/plugin/component_mods/mouse_look_component_mod');\r\n\r\n//\tAUDIO\r\nrequire('./pp/audio/spatial_audio_listener');\r\nrequire('./pp/audio/audio_manager_component');\r\nrequire('./pp/audio/audio_manager');\r\nrequire('./pp/audio/audio_player');\r\nrequire('./pp/audio/audio_setup');\r\nrequire('./pp/audio/mute_everything');\r\nrequire('./pp/audio/audio_utils');\r\n\r\nrequire('./pp/audio/howler/howler_audio_player');\r\n\r\n//\tCAULDRON\r\nrequire('./pp/cauldron/benchmarks/max_physx');\r\nrequire('./pp/cauldron/benchmarks/max_visible_triangles');\r\n\r\nrequire('./pp/cauldron/cauldron/object_pool_manager');\r\nrequire('./pp/cauldron/cauldron/save_manager');\r\nrequire('./pp/cauldron/cauldron/timer');\r\n\r\nrequire('./pp/cauldron/components/clear_console_on_xr_session_start');\r\nrequire('./pp/cauldron/components/set_active');\r\nrequire('./pp/cauldron/components/adjust_hierarchy_physx_scale');\r\nrequire('./pp/cauldron/components/get_player_objects');\r\nrequire('./pp/cauldron/components/get_default_resources');\r\nrequire('./pp/cauldron/components/show_fps');\r\n\r\nrequire('./pp/cauldron/fsm/fsm');\r\nrequire('./pp/cauldron/fsm/state');\r\nrequire('./pp/cauldron/fsm/transition');\r\nrequire('./pp/cauldron/fsm/states/timer_state');\r\n\r\nrequire('./pp/cauldron/utils/color_utils');\r\nrequire('./pp/cauldron/utils/material_utils');\r\nrequire('./pp/cauldron/utils/mesh_utils');\r\nrequire('./pp/cauldron/utils/save_utils');\r\nrequire('./pp/cauldron/utils/text_utils');\r\nrequire('./pp/cauldron/utils/xr_utils');\r\nrequire('./pp/cauldron/utils/browser_utils');\r\nrequire('./pp/cauldron/utils/js_utils');\r\n\r\nrequire('./pp/cauldron/physics/physics_utils');\r\nrequire('./pp/cauldron/physics/physics_raycast_data');\r\nrequire('./pp/cauldron/physics/physics_layer_flags');\r\nrequire('./pp/cauldron/physics/physics_collision_collector');\r\n\r\nrequire('./pp/cauldron/visual/visual_manager');\r\n\r\nrequire('./pp/cauldron/visual/elements/visual_element_types');\r\nrequire('./pp/cauldron/visual/elements/visual_line');\r\nrequire('./pp/cauldron/visual/elements/visual_mesh');\r\nrequire('./pp/cauldron/visual/elements/visual_point');\r\nrequire('./pp/cauldron/visual/elements/visual_arrow');\r\nrequire('./pp/cauldron/visual/elements/visual_text');\r\nrequire('./pp/cauldron/visual/elements/visual_transform');\r\nrequire('./pp/cauldron/visual/elements/visual_raycast');\r\nrequire('./pp/cauldron/visual/elements/visual_torus');\r\n\r\nrequire('./pp/cauldron/visual/components/visual_manager_component');\r\n\r\n//\tDEBUG\r\nrequire('./pp/debug/debug_manager');\r\nrequire('./pp/debug/debug_visual_manager');\r\n\r\nrequire('./pp/debug/components/debug_transform_component');\r\nrequire('./pp/debug/components/debug_manager_component');\r\n\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_overwriter');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analyzer');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/debug_functions_performance_analysis_results_logger');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_functions_performance_analyzer_component');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_functions_performance_analyzer_component');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_array_functions_performance_analyzer_component');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_pp_array_creation_performance_analyzer_component');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_function_performance_analyzer_component');\r\nrequire('./pp/debug/debug_functions_overwriter/debug_functions_performance_analyzer/components/debug_wl_components_function_performance_analyzer_component.js');\r\n\r\n//\tGAMEPLAY\r\n\r\n//    CAULDRON\r\nrequire('./pp/gameplay/cauldron/cauldron/direction_2D_to_3D_converter');\r\nrequire('./pp/gameplay/cauldron/cauldron/number_over_value');\r\n\r\n//    GRAB & THROW\r\nrequire('./pp/gameplay/grab_throw/grabbable');\r\nrequire('./pp/gameplay/grab_throw/grabber_hand');\r\n\r\n//    INTEGRATIONS\r\nrequire('./pp/gameplay/integrations/construct_arcade/ca_utils');\r\nrequire('./pp/gameplay/integrations/construct_arcade/ca_dummy_server');\r\nrequire('./pp/gameplay/integrations/construct_arcade/ca_display_leaderboard');\r\n\r\n//    EXPERIMENTAL\r\n\r\n//          CAULDRON\r\nrequire('./pp/gameplay/experimental/cauldron/player/player_head_controller');\r\nrequire('./pp/gameplay/experimental/cauldron/player/player_occlusion');\r\n//require('./pp/gameplay/experimental/cauldron/player/components/player_head_controller_component');\r\n//require('./pp/gameplay/experimental/cauldron/player/components/player_occlusion_component');\r\n\r\n//          CHARACTER CONTROLLER\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_params');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_movement_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_teleport_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_position_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_sliding');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_movement_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/horizontal_collision_position_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/vertical_collision_check');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/legacy/collision_check/collision_surface_check');\r\n\r\nrequire('./pp/gameplay/experimental/character_controller/collision/collision_check_bridge');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/character_collider_setup');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/character_collider_utils');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/character_collision_results');\r\nrequire('./pp/gameplay/experimental/character_controller/collision/character_collision_system');\r\n//require('./pp/gameplay/experimental/character_controller/collision/components/character_collision_system_component');\r\n\r\nrequire('./pp/gameplay/experimental/character_controller/character_controller');\r\nrequire('./pp/gameplay/experimental/character_controller/synced_character_controller');\r\nrequire('./pp/gameplay/experimental/character_controller/character_controller_utils');\r\n\r\n//require('./pp/gameplay/experimental/character_controller/components/character_controller_component');\r\n\r\nrequire('./pp/gameplay/experimental/character_controller/player/player_character_controller');\r\nrequire('./pp/gameplay/experimental/character_controller/player/player_head_character_controller');\r\nrequire('./pp/gameplay/experimental/character_controller/player/player_hand_character_controller');\r\n\r\n//require('./pp/gameplay/experimental/character_controller/player/components/player_character_controller_component');\r\n//require('./pp/gameplay/experimental/character_controller/player/components/player_head_character_controller_component');\r\n//require('./pp/gameplay/experimental/character_controller/player/components/player_hand_character_controller_component');\r\n\r\n//          LOCOMOTION\r\nrequire('./pp/gameplay/experimental/locomotion/components/global_gravity');\r\n\r\nrequire('./pp/gameplay/experimental/locomotion/player/player_locomotion_smooth');\r\nrequire('./pp/gameplay/experimental/locomotion/player/player_locomotion_rotate');\r\nrequire('./pp/gameplay/experimental/locomotion/player/player_locomotion_gravity');\r\n\r\nrequire('./pp/gameplay/experimental/locomotion/player/teleport/player_locomotion_teleport');\r\n\r\n//require('./pp/gameplay/experimental/locomotion/player/components/player_locomotion_teleport_component');\r\n//require('./pp/gameplay/experimental/locomotion/player/components/player_locomotion_smooth_component');\r\n//require('./pp/gameplay/experimental/locomotion/player/components/player_locomotion_rotate_component');\r\n//require('./pp/gameplay/experimental/locomotion/player/components/player_locomotion_gravity_component');\r\n\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/locomotion_utils');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_head_manager');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_transform_manager');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_rotate');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_movement');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_smooth');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_obscure_manager');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/player_locomotion_component');\r\n\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_parable');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_state');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_visualizer');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_detection_state_visibility');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_state');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_blink_state');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport_teleport_shift_state');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/teleport/player_locomotion_teleport');\r\n\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_cleaned');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_locomotion_smooth_cleaned');\r\nrequire('./pp/gameplay/experimental/locomotion/legacy/locomotion/cleaned/player_transform_manager_cleaned');\r\n\r\n//\tINPUT\r\nrequire('./pp/input/cauldron/finger_cursor');\r\nrequire('./pp/input/cauldron/input_types');\r\nrequire('./pp/input/cauldron/input_utils');\r\nrequire('./pp/input/cauldron/keyboard');\r\nrequire('./pp/input/cauldron/mouse');\r\nrequire('./pp/input/cauldron/input_manager');\r\nrequire('./pp/input/cauldron/input_manager_component');\r\nrequire('./pp/input/cauldron/switch_hand_object');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_joint');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_all_joints');\r\nrequire('./pp/input/cauldron/tracked_hand_draw_skin');\r\n\r\nrequire('./pp/input/gamepad/gamepad_buttons');\r\nrequire('./pp/input/gamepad/base_gamepad');\r\nrequire('./pp/input/gamepad/universal_gamepad');\r\nrequire('./pp/input/gamepad/gamepad_cores/gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/xr_gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/keyboard_gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/virtual_gamepad_gamepad_core');\r\nrequire('./pp/input/gamepad/gamepad_cores/classic_gamepad_core');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_mesh_animator');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_manager');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_utils');\r\nrequire('./pp/input/gamepad/cauldron/gamepad_control_scheme');\r\n\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_component');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_params');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_button');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_virtual_thumbstick');\r\nrequire('./pp/input/gamepad/virtual_gamepad/virtual_gamepad_icon');\r\n\r\nrequire('./pp/input/pose/base_pose.js');\r\nrequire('./pp/input/pose/hand_pose');\r\nrequire('./pp/input/pose/head_pose');\r\nrequire('./pp/input/pose/tracked_hand_joint_pose');\r\nrequire('./pp/input/pose/tracked_hand_pose');\r\nrequire('./pp/input/pose/components/set_player_height');\r\nrequire('./pp/input/pose/components/set_hand_local_transform');\r\nrequire('./pp/input/pose/components/set_head_local_transform');\r\nrequire('./pp/input/pose/components/set_vr_head_local_transform');\r\nrequire('./pp/input/pose/components/set_non_vr_head_local_transform');\r\nrequire('./pp/input/pose/components/set_tracked_hand_joint_local_transform');\r\nrequire('./pp/input/pose/components/copy_hand_transform');\r\nrequire('./pp/input/pose/components/copy_head_transform');\r\nrequire('./pp/input/pose/components/copy_player_transform');\r\nrequire('./pp/input/pose/components/copy_player_pivot_transform');\r\n\r\n//\tTOOL\r\nrequire('./pp/tool/cauldron/cauldron/tool_types');\r\nrequire('./pp/tool/cauldron/components/tool_cursor');\r\n\r\nrequire('./pp/tool/console_vr/console_vr_widget_setup');\r\nrequire('./pp/tool/console_vr/console_vr_widget_ui');\r\nrequire('./pp/tool/console_vr/console_vr_widget');\r\nrequire('./pp/tool/console_vr/console_vr');\r\nrequire('./pp/tool/console_vr/console_vr_component');\r\n\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_object_tuner');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_light_attenuation');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_light_color');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_mesh_color');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_scale');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_child_number');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_set_tune_target_grab');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_transform');\r\nrequire('./pp/tool/easy_tune/easy_object_tuners/easy_mesh_ambient_factor');\r\n\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/base/easy_tune_base_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/bool/easy_tune_bool_array_widget_selector');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/none/easy_tune_none_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_array_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/number/easy_tune_number_widget_selector');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_ui');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/transform/easy_tune_transform_widget_setup');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget');\r\nrequire('./pp/tool/easy_tune/easy_tune_widgets/easy_tune_widget_setup');\r\n\r\nrequire('./pp/tool/easy_tune/easy_tune_variables');\r\nrequire('./pp/tool/easy_tune/easy_tune_variable_types');\r\nrequire('./pp/tool/easy_tune/easy_tune_globals');\r\n\r\nrequire('./pp/tool/easy_tune/components/easy_tune_component');\r\nrequire('./pp/tool/easy_tune/components/easy_tune_import_variables');\r\n\r\nrequire('./pp/tool/widget_frame/widget_frame_setup');\r\nrequire('./pp/tool/widget_frame/widget_frame_ui');\r\nrequire('./pp/tool/widget_frame/widget_frame');"],
  "mappings": "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Y,KAAK,uBAAuB,OAAO,EACpDA,EAAS,KAAK,UAAU,CAEhC,CACJ,CAEA,cAAcS,EAAU,CACpBA,EAAS,MAAQ,KAAK,SAAS,kBACnC,CAEA,mBAAmBA,EAAU,CACrB,KAAK,kBACLA,EAAS,MAAQ,KAAK,SAAS,kBAE/BA,EAAS,MAAQ,KAAK,SAAS,+BAEvC,CAEA,YAAYA,EAAU,CACd,KAAK,WACLA,EAAS,MAAQ,KAAK,SAAS,kBAE/BA,EAAS,MAAQ,KAAK,SAAS,+BAEvC,CACJ,IC1JA,KAGA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KAGA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KAGA,KACA,KAEA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KAEA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KAGA,KACA,KAEA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAKA,KACA,KAGA,KACA,KAGA,KACA,KACA,KAKA,KACA,KAKA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KAGA,KACA,KACA,KAIA,KACA,KACA,KAOA,KAEA,KACA,KACA,KAEA,KAOA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KAGA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAGA,KACA,KAEA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAEA,KACA,KACA,KAEA,KACA,KAEA,KACA,KACA",
  "names": ["require_pp", "__commonJSMin", "common_exports", "__export", "ARRAY_TYPE", "EPSILON", "RANDOM", "equals", "setMatrixArrayType", "toRadian", "type", "a", "degree", "b", "init_common", "__esmMin", "y", "i", "mat3_exports", "__export", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromMat2d", "fromMat4", "fromQuat", "fromRotation", "fromScaling", "fromTranslation", "fromValues", "identity", "invert", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "normalFromMat4", "projection", "rotate", "scale", "set", "str", "sub", "subtract", "translate", "transpose", "out", "ARRAY_TYPE", "a", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "a01", "a02", "a12", "a00", "a10", "a11", "a20", "a21", "a22", "b01", "b11", "b21", "det", "b", "b00", "b02", "b10", "b12", "b20", "b22", "v", "x", "y", "rad", "s", "c", "q", "z", "w", "x2", "y2", "z2", "xx", "yx", "yy", "zx", "zy", "zz", "wx", "wy", "wz", "a03", "a13", "a23", "a30", "a31", "a32", "a33", "b03", "b04", "b05", "b06", "b07", "b08", "b09", "width", "height", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "b0", "b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "EPSILON", "init_mat3", "__esmMin", "init_common", "mat4_exports", "__export", "add", "adjoint", "clone", "copy", "create", "determinant", "equals", "exactEquals", "frob", "fromQuat", "fromQuat2", "fromRotation", "fromRotationTranslation", "fromRotationTranslationScale", "fromRotationTranslationScaleOrigin", "fromScaling", "fromTranslation", "fromValues", "fromXRotation", "fromYRotation", "fromZRotation", "frustum", "getRotation", "getScaling", "getTranslation", "identity", "invert", "lookAt", "mul", "multiply", "multiplyScalar", "multiplyScalarAndAdd", "ortho", "orthoNO", "orthoZO", "perspective", "perspectiveFromFieldOfView", "perspectiveNO", "perspectiveZO", "rotate", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "targetTo", "translate", "transpose", "out", "ARRAY_TYPE", "a", "m00", "m01", "m02", "m03", "m10", "m11", "m12", "m13", "m20", "m21", "m22", "m23", "m30", "m31", "m32", "m33", "a01", "a02", "a03", "a12", "a13", "a23", "a00", "a10", "a11", "a20", "a21", "a22", "a30", "a31", "a32", "a33", "b00", "b01", "b02", "b03", "b04", "b05", "b06", "b07", "b08", "b09", "b10", "b11", "det", "b", "b0", "b1", "b2", "b3", "v", "x", "y", "z", "rad", "axis", "len", "s", "t", "b12", "b20", "b21", "b22", "EPSILON", "c", "q", "w", "x2", "y2", "z2", "xx", "xy", "xz", "yy", "yz", "zz", "wx", "wy", "wz", "translation", "bx", "by", "bz", "bw", "ax", "ay", "az", "aw", "magnitude", "mat", "scaling", "is1", "is2", "is3", "sm11", "sm12", "sm13", "sm21", "sm22", "sm23", "sm31", "sm32", "sm33", "trace", "S", "sx", "sy", "sz", "o", "ox", "oy", "oz", "out0", "out1", "out2", "out4", "out5", "out6", "out8", "out9", "out10", "yx", "zx", "zy", "left", "right", "bottom", "top", "near", "far", "rl", "tb", "nf", "fovy", "aspect", "f", "fov", "upTan", "downTan", "leftTan", "rightTan", "xScale", "yScale", "lr", "bt", "eye", "center", "up", "x0", "x1", "y0", "y1", "z0", "z1", "eyex", "eyey", "eyez", "upx", "upy", "upz", "centerx", "centery", "centerz", "target", "a0", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a14", "a15", "b4", "b5", "b6", "b7", "b8", "b9", "b13", "b14", "b15", "init_mat4", "__esmMin", "init_common", "vec3_exports", "__export", "add", "angle", "bezier", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "hermite", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotateX", "rotateY", "rotateZ", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "transformQuat", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "z", "b", "ax", "ay", "az", "bx", "by", "bz", "t", "c", "d", "factorTimes2", "factor1", "factor2", "factor3", "factor4", "inverseFactor", "inverseFactorTimesTwo", "r", "RANDOM", "zScale", "m", "w", "q", "qx", "qy", "qz", "qw", "uvx", "uvy", "uvz", "uuvx", "uuvy", "uuvz", "w2", "rad", "p", "mag1", "mag2", "mag", "cosine", "a0", "a1", "a2", "b0", "b1", "b2", "EPSILON", "init_vec3", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "vec4_exports", "__export", "add", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat4", "transformQuat", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "z", "w", "b", "u", "v", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "t", "ax", "ay", "az", "aw", "v1", "v2", "v3", "v4", "s1", "s2", "RANDOM", "d", "m", "q", "qx", "qy", "qz", "qw", "ix", "iy", "iz", "iw", "a0", "a1", "a2", "a3", "b0", "b1", "b2", "b3", "EPSILON", "init_vec4", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "quat_exports", "__export", "add", "calculateW", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "exp", "fromEuler", "fromMat3", "fromValues", "getAngle", "getAxisAngle", "identity", "invert", "len", "length", "lerp", "ln", "mul", "multiply", "normalize", "pow", "random", "rotateX", "rotateY", "rotateZ", "rotationTo", "scale", "set", "setAxes", "setAxisAngle", "slerp", "sqlerp", "sqrLen", "squaredLength", "str", "out", "ARRAY_TYPE", "axis", "rad", "s", "out_axis", "q", "EPSILON", "a", "b", "dotproduct", "ax", "ay", "az", "aw", "bx", "by", "bz", "bw", "x", "y", "z", "w", "r", "et", "t", "omega", "cosom", "sinom", "scale0", "scale1", "u1", "RANDOM", "u2", "u3", "sqrt1MinusU1", "sqrtU1", "a0", "a1", "a2", "a3", "invDot", "m", "fTrace", "fRoot", "i", "j", "k", "halfToRad", "sx", "cx", "sy", "cy", "sz", "cz", "init_quat", "__esmMin", "init_common", "init_mat3", "init_vec3", "init_vec4", "tmpvec3", "xUnitVec3", "yUnitVec3", "cross", "temp1", "temp2", "c", "d", "matr", "view", "right", "up", "quat2_exports", "__export", "add", "clone", "conjugate", "copy", "create", "dot", "equals", "exactEquals", "fromMat4", "fromRotation", "fromRotationTranslation", "fromRotationTranslationValues", "fromTranslation", "fromValues", "getDual", "getReal", "getTranslation", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "rotateAroundAxis", "rotateByQuatAppend", "rotateByQuatPrepend", "rotateX", "rotateY", "rotateZ", "scale", "set", "setDual", "setReal", "sqrLen", "squaredLength", "str", "translate", "dq", "ARRAY_TYPE", "a", "x1", "y1", "z1", "w1", "x2", "y2", "z2", "w2", "ax", "ay", "az", "out", "q", "bx", "by", "bz", "bw", "t", "outer", "getRotation", "aw", "v", "ax1", "ay1", "az1", "aw1", "bx1", "by1", "bz1", "ax2", "ay2", "az2", "aw2", "rad", "qx", "qy", "qz", "qw", "axis", "EPSILON", "axisLength", "b", "ax0", "ay0", "az0", "aw0", "bw1", "bx0", "by0", "bz0", "bw0", "mt", "sqlen", "magnitude", "a0", "a1", "a2", "a3", "b0", "b1", "b2", "b3", "a_dot_b", "a4", "a5", "a6", "a7", "b4", "b5", "b6", "b7", "init_quat2", "__esmMin", "init_common", "init_quat", "init_mat4", "vec2_exports", "__export", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat2", "transformMat2d", "transformMat3", "transformMat4", "zero", "out", "ARRAY_TYPE", "a", "x", "y", "b", "z", "t", "ax", "ay", "r", "RANDOM", "m", "rad", "p0", "p1", "sinC", "cosC", "x1", "y1", "x2", "y2", "mag", "cosine", "a0", "a1", "b0", "b1", "EPSILON", "init_vec2", "__esmMin", "init_common", "vec", "stride", "offset", "count", "fn", "arg", "i", "l", "init_esm", "__esmMin", "init_common", "init_mat3", "init_mat4", "init_quat", "init_quat2", "init_vec2", "init_vec3", "init_vec4", "array_extension_exports", "init_array_extension", "__esmMin", "init_esm", "prototypes", "prefixes", "key", "found", "prefix", "prototype", "x", "y", "vec2_exports", "z", "vec3_exports", "w", "vec4_exports", "quat_exports", "x1", "y1", "z1", "w1", "x2", "y2", "z2", "w2", "quat2_exports", "m00", "m01", "m02", "m10", "m11", "m12", "m20", "m21", "m22", "mat3_exports", "m03", "m13", "m23", "m30", "m31", "m32", "m33", "mat4_exports", "out", "position", "rotation", "scale", "callback", "elementToFind", "elementsEqualCallback", "elementFound", "index", "indexes", "i", "element", "currentElement", "elementsFound", "indexFound", "indexesFound", "elementRemoved", "arrayRemoved", "elementsRemoved", "elementToRemove", "length", "array", "copyCallback", "cloneCallback", "clone", "equals", "decimalPlaces", "message", "value", "start", "end", "fixedStart", "fixedEnd", "min", "max", "vector", "epsilon", "thisX", "thisY", "thisZ", "vectorX", "vectorY", "vectorZ", "thisLengthSquared", "vectorLengthSquared", "lengthSquared", "angle", "cosine", "quat", "mat3", "mat4", "positiveDirection", "signedLength", "upAxis", "crossAxis", "common_exports", "axis", "componentAlongAxisLength", "componentAlong", "componentAlongThis", "componentAlongVector", "zeroSign", "angleSigned", "up", "thisToAxis", "fixedProjectAlongAxis", "projectAlongAxis", "angleWithAlongAxis", "lengthToRemove", "planeNormal", "thisToPlane", "zero", "origin", "parentTransform", "inverse", "parentTransformMatrix", "one", "direction", "rotationQuat", "rotationAxis", "signedAngle", "pivotAxis", "thisFlat", "directionFlat", "to", "interpolationValue", "easingFunction", "lerpValue", "rotationMatrix", "left", "forward", "backward", "down", "right", "parentQuat", "invertQuat", "leftAxis", "forwardAxis", "radiansRotation", "degreesRotation", "projection", "rotationAlongAxis", "dotProd", "twist", "swing", "quat2", "parentTransformQuat", "transformMatrixNoScale", "inverseScale", "tempScale", "convertTransform", "getIndexes", "fixedAxes", "fixedAxesFixSignMap", "fixedLeft", "fixedUp", "fixedForward", "currentAxis", "rotationMat", "axes", "priority", "firstAxis", "secondAxis", "thirdAxis", "secondAxisValid", "thirdAxisValid", "secondAxisIndex", "thirdAxisIndex", "fixSignMap", "angleBetween", "require_math_extension", "__commonJSMin", "value", "start", "end", "fixedStart", "fixedEnd", "min", "max", "zeroSign", "sign", "angle", "number", "decimalPlaces", "factor", "originRangeStart", "originRangeEnd", "newRangeStart", "newRangeEnd", "clampedValue", "newValue", "args", "random", "randomIndex", "from", "to", "interpolationValue", "t", "easingFunction", "lerpValue", "clampedFrom", "clampedTo", "distance", "usePositiveRange", "clampedAngle", "useShortestAngle", "isInside", "anglePositive", "startPositive", "endPositive", "temp", "key", "prefixes", "found", "prefix", "require_object_extension", "__commonJSMin", "position", "rotation", "value", "index", "array", "quat", "scale", "transform", "transformQuat", "axes", "forward", "backward", "up", "down", "left", "right", "degreesRotation", "vector", "transformMatrixNoScale", "inverseScale", "one", "zero", "identity", "translation", "amount", "direction", "rotationQuat", "currentRotationQuat", "angle", "axis", "origin", "transformToRotate", "transformToRotateConjugate", "defaultQuat", "convertedPosition", "convertedAxis", "internalUp", "newParent", "keepTransform", "matrix", "resultPosition", "resultDirection", "resultTransform", "convertTransform", "type", "paramsOrActive", "active", "params", "objects", "applyToHierarchy", "deepClone", "componentName", "variableName", "componentsVariablesMap", "overrideValue", "clonedObject", "objectsToCloneData", "objectsToCloneComponentsData", "cloneData", "parent", "objectToClone", "currentClonedObject", "child", "cloneChild", "childToInclude", "childToIgnore", "componentsToCloneData", "components", "component", "cloneComponent", "componentsToPostProcessData", "componentToClone", "clonedComponent", "currentClonedComponent", "isCloneable", "object", "tab", "newLine", "startObject", "endObject", "nameLabel", "idLabel", "componentsLabel", "typeLabel", "childrenLabel", "startComponents", "endComponents", "startChildren", "endChildren", "separator", "newLineTab", "objectString", "children", "name", "i", "childString", "emptyName", "hierarchy", "descendants", "descendantsQueue", "descendant", "childDescendants", "otherObject", "count", "componentsAmountMap", "amountMap", "objectsAmount", "typeAmount", "objectFound", "objectsFound", "mat3", "quatRotation", "radiansRotation", "min", "max", "objectsToReserve", "componentsToReserve", "componentCount", "fixedAxes", "fixedAxesFixSignMap", "fixedLeft", "fixedUp", "fixedForward", "currentAxis", "rotationAxis", "rotationMat", "priority", "isLocal", "firstAxis", "secondAxis", "thirdAxis", "secondAxisValid", "thirdAxisValid", "crossAxis", "secondAxisIndex", "thirdAxisIndex", "fixSignMap", "angleBetween", "key", "prefixes", "found", "prefix", "require_scene_extension", "__commonJSMin", "type", "index", "name", "amountMap", "key", "prefixes", "found", "prefix", "require_clone_component_mod", "__commonJSMin", "targetObject", "deepCloneParams", "customParamsMap", "clonedComponent", "componentParams", "cursor_component_mod_exports", "init_cursor_component_mod", "__esmMin", "init_esm", "sceneLoaded", "index", "inputComp", "onXRSessionStart", "viewComponent", "onClick", "onPointerDown", "onPointerMove", "onPointerUp", "onPointerLeave", "mat4_exports", "onViewportResize", "hitPosition", "dist", "vec3_exports", "visible", "dt", "doClick", "p", "rayHit", "forceUnhover", "hoveringObjectChanged", "cursorTarget", "s", "onSessionEnd", "e", "onSelect", "onSelectStart", "onSelectEnd", "bounds", "clientX", "clientY", "w", "h", "left", "top", "f", "hitLocationLocalToTarget", "hitLocation", "isMoving", "require_cursor_target_component_mod", "__commonJSMin", "object", "cursor", "f", "arr", "value", "index", "dt", "require_mouse_look_component_mod", "__commonJSMin", "event", "dt", "viewForward", "viewUp", "referenceUp", "referenceUpNegate", "referenceRight", "newUp", "minAngle", "movementX", "movementY", "maxVerticalAngle", "angleWithUp", "fixAngle", "require_howler", "__commonJSMin", "exports", "HowlerGlobal", "self", "Howler", "vol", "setupAudioContext", "i", "ids", "j", "sound", "muted", "ext", "test", "audioTest", "mpegTest", "ua", "checkOpera", "isOldOpera", "checkSafari", "safariVersion", "isOldSafari", "unlock", "e", "audioNode", "source", "testPlay", "audio", "handleSuspension", "Howl", "o", "url", "str", "Sound", "loadBuffer", "sprite", "internal", "id", "num", "soundId", "seek", "duration", "timeout", "start", "stop", "setParams", "node", "playWebAudio", "playHtml5", "play", "err", "loadedNoReadyState", "listener", "args", "index", "from", "to", "len", "currentTime", "end", "isGroup", "diff", "steps", "stepLen", "lastTick", "tick", "loop", "rate", "playing", "seekAndEmit", "emitSeek", "realTime", "rateSeek", "sounds", "remCache", "cache", "event", "fn", "once", "events", "isId", "keys", "msg", "task", "limit", "cnt", "isIOS", "checkIE", "howl", "parent", "volume", "loadSound", "data", "dataView", "decodeAudioData", "xhr", "key", "code", "safeXhrSend", "arraybuffer", "error", "success", "buffer", "iOS", "appVersion", "version", "safari", "pan", "x", "y", "z", "xUp", "yUp", "zUp", "or", "_super", "pannerType", "setupPanner", "pa", "panner", "type", "spatial_audio_listener_exports", "import_howler", "init_spatial_audio_listener", "__esmMin", "init_esm", "__esmMin", "allocateTempMemory", "size", "_tempMemSize", "_tempMem", "updateTempMemory", "requireTempMem", "_tempMemFloat", "_tempMemInt", "_tempMemUint32", "_tempMemUint16", "_tempMemUint8", "getTempBufferU16", "count", "getTempBufferF32", "isString", "value", "_wrapObject", "objectId", "o", "ObjectCache", "$Object", "_wrapComponent", "type", "componentType", "componentId", "c", "ComponentCache", "component", "CollisionComponent", "TextComponent", "ViewComponent", "MeshComponent", "InputComponent", "LightComponent", "AnimationComponent", "PhysXComponent", "typeIndex", "constructor", "EXCLUDED_COMPONENT_PROPERTIES", "Type", "_componentDefaults", "Collider", "Alignment", "Justification", "TextEffect", "InputType", "LightType", "AnimationState", "ForceMode", "CollisionEventType", "Shape", "MeshAttribute", "MaterialParamType", "xrSession", "physics", "_images", "UP_VECTOR", "Component", "MeshIndexType", "Mesh", "MeshAttributeAccessor", "Material", "tempCanvas", "Texture", "textures", "Animation", "Skin", "init_wonderland", "__esmMin", "managerIndex", "id", "active", "otherComponent", "collider", "extents", "group", "overlaps", "i", "alignment", "justification", "spacing", "effect", "text", "strLen", "ptr", "material", "matIndex", "near", "far", "fov", "inputSource", "inputType", "t", "anim", "playCount", "speed", "mesh", "skin", "b", "s", "d", "v", "m", "f", "localForce", "p", "local", "callback", "otherComp", "callbackId", "r", "prop", "params", "indexData", "indexType", "indexDataSize", "skinned", "positions", "normals", "textureCoordinates", "start", "indexCount", "out", "attr", "a", "index", "dest", "bytesPerElt", "bytes", "destFormatSize", "srcFormatSize", "pipeline", "lengthBytes", "target", "param", "x", "y", "w", "h", "_a", "img", "filename", "crossOrigin", "image", "resolve", "reject", "texture", "newTargets", "animId", "newName", "mem", "childrenCount", "children", "newParent", "q", "up", "comps", "typeOrClass", "jsIndex", "components", "maxComps", "componentsCount", "offset", "jsManagerIndex", "comp", "managerName", "componentIndex", "key", "otherObject", "init_api", "__esmMin", "init_esm", "init_wonderland", "audio_manager_component_exports", "_a", "init_audio_manager_component", "__esmMin", "init_api", "Component", "dt", "__publicField", "audio_manager_exports", "import_howler", "init_audio_manager", "__esmMin", "audioSetupID", "id", "audioSetup", "preload", "volume", "mute", "audio_player_exports", "import_howler", "init_audio_player", "__esmMin", "audioSetupOrAudioFilePath", "createAudio", "eventKey", "audioID", "checkOnlyLast", "isPlaying", "fromVolume", "toVolume", "duration", "updateOnlyLast", "position", "pitch", "rate", "volume", "spatial", "audioEvent", "listenerID", "callback", "event", "callbacks", "require_audio_setup", "__commonJSMin", "audioFilePath", "audioSetup", "pitch", "rate", "mute_everything_exports", "import_howler", "init_mute_everything", "__esmMin", "dt", "require_audio_utils", "__commonJSMin", "isBlocked", "require_howler_audio_player", "__commonJSMin", "howl", "audioSetup", "require_max_physx", "__commonJSMin", "dt", "debugActive", "staticCollisions", "collector", "dynamicCollisions", "kinematicCollisions", "totalCollisions", "fpsString", "fps", "physX", "strength", "raycastCount", "distance", "i", "origin", "direction", "raycastResults", "isStatic", "isDynamic", "maxCount", "physXList", "cloves", "angleForClove", "minDistance", "maxDistance", "minExtraRotation", "maxExtraRotation", "upDirection", "horizontalDirection", "verticalDirection", "rotationAxis", "j", "extraAxisRotation", "extraUpRotation", "physXDirection", "position", "scale", "shape", "physXComponent", "require_max_visible_triangles", "__commonJSMin", "dt", "frameRate", "isLagging", "reset", "count", "plane", "gridSize", "spaceBetween", "totalSpaceBetween", "planeSize", "currentCount", "i", "j", "position", "meshComponent", "poolParams", "isStart", "elementToRemove", "averageDT", "trianglesAmount", "squaresAmount", "row", "column", "closestSqrt", "meshParams", "x", "y", "vertexParams", "firstTriangle", "secondTriangle", "require_object_pool_manager", "__commonJSMin", "poolID", "poolObject", "objectPoolParams", "pool", "amount", "percentage", "object", "amountToAdd", "released", "size", "log", "i", "clone", "active", "first", "second", "equals", "require_save_manager", "__commonJSMin", "delay", "delayed", "cache", "enabled", "dt", "id", "value", "overrideDelaySavesCommit", "overrideCacheEnabled", "sameValue", "failed", "isCommitSaveDelayed", "callback", "callbacks", "result", "isCommitSavesDelayed", "defaultValue", "functionName", "loadFromCache", "saveResult", "session", "event", "callbackID", "valueID", "valueIDCallbacks", "require_timer", "__commonJSMin", "duration", "autoStart", "dt", "percentage", "durationPercentage", "callback", "id", "require_clear_console_on_xr_session_start", "__commonJSMin", "dt", "require_set_active", "__commonJSMin", "dt", "require_adjust_hierarchy_physx_scale", "__commonJSMin", "dt", "scale", "physXComponents", "physX", "require_get_player_objects", "__commonJSMin", "require_get_default_resources", "__commonJSMin", "require_show_fps", "__commonJSMin", "visualParams", "playerTransformQuat", "dt", "fps", "require_fsm", "__commonJSMin", "stateID", "stateObject", "transitionID", "fromStateData", "toStateData", "transitionObject", "skipStateFunction", "args", "performMode", "performDelayedMode", "state", "cloneObject", "stateData", "fromStateID", "toStateID", "transition", "transitionsFromState", "transitionData", "initStateID", "initTransition", "initTransitionObject", "initStateData", "callback", "callbacks", "dt", "i", "performDelayed", "transitions", "transitionsToState", "toDelete", "fromTransitions", "hasTransition", "deepClone", "cloneFSM", "entry", "transitonEntry", "fromState", "toState", "isDeepCloneable", "active", "debugLogName", "showDelayedInfo", "callbackID", "initStateIDCallbacks", "internalTransitionIDCallbacks", "value", "transitionIDCallbacks", "element", "currentlyPerformedTransition", "consoleArguments", "transitionToPerform", "require_state", "__commonJSMin", "dt", "fsm", "args", "state", "transition", "require_transition", "__commonJSMin", "fsm", "initState", "args", "transition", "require_timer_state", "__commonJSMin", "duration", "transitionToPerformOnEnd", "transitionArgs", "callback", "id", "dt", "fsm", "transition", "state", "require_color_utils", "__commonJSMin", "rgb", "hsv", "r", "g", "b", "max", "min", "d", "h", "s", "v", "i", "f", "p", "q", "t", "color", "result", "require_material_utils", "__commonJSMin", "color", "material", "alpha", "object", "meshComponents", "meshComponent", "cloneMaterial", "require_mesh_utils", "__commonJSMin", "vertexCount", "meshParams", "i", "vertexParams", "firstTriangle", "secondTriangle", "meshCreationParams", "indexData", "triangle", "indexDataUnsignedInt", "mesh", "positionAttribute", "textureCoordinatesAttribute", "normalAttribute", "colorAttribute", "vertex", "position", "textureCoordinates", "normal", "color", "clonedIndexData", "clonedMesh", "clonedPositionAttribute", "clonedTextureCoordinatesAttribute", "clonedNormalAttribute", "clonedColorAttribute", "invertedIndexData", "invertedMesh", "invertedPositionAttribute", "invertedTextureCoordinatesAttribute", "invertedNormalAttribute", "invertedColorAttribute", "require_save_utils", "__commonJSMin", "id", "value", "defaultValue", "item", "require_text_utils", "__commonJSMin", "object", "textComponents", "textComponent", "require_xr_utils", "__commonJSMin", "require_browser_utils", "__commonJSMin", "require_js_utils", "__commonJSMin", "reference", "prototypes", "referenceProto", "prototypesToCheck", "prototypeToCheck", "propertyNames", "prototype", "ownPropertyNames", "ownPropertyName", "propertyName", "propertyDescriptor", "propertyParent", "property", "valueToSet", "setUsed", "parent", "parents", "possibleParents", "possibleParent", "path", "pathStartReference", "referenceName", "pathSplit", "currentParent", "i", "newProperty", "overwriteOnOwnParent", "javascriptObjectFunctionsSpecialOverwrite", "debugLogActive", "success", "propertyOwnParent", "originalPropertyDescriptor", "originalProperty", "overwriteTarget", "fromReference", "toReference", "cleanCopy", "javascriptObjectFunctionsSpecialCopy", "fromReferencePropertyNames", "fromReferencePropertyName", "fromReferencePropertyDescriptor", "referenceNames", "propertyUseAccessors", "functionParent", "functionName", "isFunction", "functionProperty", "classParent", "className", "isClass", "classProperty", "objectParent", "objectName", "isObject", "objectProperty", "functionsToOverwrite", "functionToOverwrite", "propertyDescriptorToOverwrite", "valueToReturn", "overwrittenFunction", "require_physics_utils", "__commonJSMin", "layerFlagsAmount", "layerFlagsNames", "isInsideSubVector", "invertedRaycastDirection", "objectsEqualCallback", "first", "second", "raycastSetup", "raycastResults", "internalRaycastResults", "currentValidHitIndex", "validHitsCount", "hitCount", "objects", "distances", "locations", "normals", "i", "isHitInsideCollision", "hit", "hitsToRemove", "require_physics_raycast_data", "__commonJSMin", "setup", "ignoreHitsInsideCollision", "firstHit", "hit", "hits", "hitIndex", "removedHit", "result", "copyHitCallback", "currentElement", "elementToCopy", "i", "length", "require_physics_layer_flags", "__commonJSMin", "indexOrName", "active", "index", "mask", "isActive", "layerFlags", "layerMask", "require_physics_collision_collector", "__commonJSMin", "physXComponent", "isTrigger", "active", "dt", "callbackID", "callback", "type", "objectFound", "object", "element", "collisionsToEnd", "physX", "collision", "require_visual_manager", "__commonJSMin", "active", "dt", "visualElementParams", "lifetimeSeconds", "idToReuse", "visualElement", "idReused", "visualElements", "elementID", "visualElementPair", "visualElementType", "amount", "pool", "difference", "visuaElementPrototypeCreationCallback", "idsToRemove", "visualElementsEntry", "id", "params", "element", "type", "objectPoolParams", "object", "visualElementPrototype", "require_visual_element_types", "__commonJSMin", "require_visual_line", "__commonJSMin", "start", "end", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "scaleLine", "translateLine", "forward", "require_visual_mesh", "__commonJSMin", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "require_visual_point", "__commonJSMin", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "rotation", "require_visual_arrow", "__commonJSMin", "start", "end", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "translateRoot", "scaleArrow", "direction", "forward", "visualLineParams", "require_visual_text", "__commonJSMin", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "require_visual_transform", "__commonJSMin", "other", "params", "visible", "autoRefresh", "dt", "clonedParams", "clone", "axes", "scale", "position", "maxValue", "value", "visualArrowParams", "require_visual_raycast", "__commonJSMin", "result", "other", "params", "visible", "hitsToShow", "i", "visualRaycastHit", "autoRefresh", "hitsToRefresh", "dt", "raycastDistance", "visualRaycastParams", "visualRaycastHitParams", "clonedParams", "clone", "require_visual_torus", "__commonJSMin", "other", "params", "visible", "segmentToShow", "i", "visualSegment", "autoRefresh", "segmentToRefresh", "dt", "clonedParams", "clone", "segmentStart", "segmentEnd", "segmentDirection", "fixedSegmentStart", "fixedSegmentEnd", "up", "sliceAngle", "extraLength", "visualSegmentParams", "require_visual_manager_component", "__commonJSMin", "dt", "require_debug_manager", "__commonJSMin", "dt", "require_debug_visual_manager", "__commonJSMin", "lifetimeSeconds", "start", "direction", "length", "color", "thickness", "visualParams", "end", "position", "radius", "text", "transform", "alignment", "justification", "raycastResult", "showOnlyFirstHit", "hitNormalLength", "require_debug_transform_component", "__commonJSMin", "dt", "require_debug_manager_component", "__commonJSMin", "dt", "require_debug_functions_overwriter", "__commonJSMin", "params", "classesAndParents", "objectsAndParents", "functionsAndParents", "referenceAndParent", "reference", "referenceParent", "referenceName", "referencePath", "referenceNameForFilter", "propertyName", "isClass", "isFunction", "referenceParentForConstructor", "referenceNameForConstructor", "isConstructor", "includePathList", "excludePathList", "includeNameList", "excludeNameList", "isValidReferencePath", "isValidReferenceName", "propertyNames", "overwriteTargetReference", "fixedReference", "ownReferenceDescriptor", "isValidFunctionName", "isValidFunctionPath", "overwriteSuccess", "newFunction", "error", "referenceForConstructor", "newConstructor", "byReferenceList", "byPathList", "referenceAndParents", "equalCallback", "first", "second", "pathPair", "path", "referencePair", "objectsToVisit", "objectAndParent", "objectToVisit", "object", "objectLevel", "objectPath", "objectProperty", "currentPath", "currentName", "isObject", "name", "includeList", "excludeList", "isValidName", "includeName", "excludeName", "javascriptObjectFunctions", "require_debug_functions_performance_analyzer", "__commonJSMin", "other", "params", "originalPush", "originalPop", "property", "sortOrder", "results", "reference", "propertyName", "referencePath", "isClass", "isFunction", "referenceParentForConstructor", "referenceNameForConstructor", "isConstructor", "propertyID", "sortedResults", "first", "second", "sortResult", "id", "timeElapsedSinceLastReset", "beforeTime", "maxResults", "newFunction", "analysisResults", "functionPerformanceAnalysisResults", "executionTimes", "originalFunction", "functionCallOverhead", "overheadError", "executionTimeAnalysisEnabled", "startTime", "errorToThrow", "returnValue", "bindFunction", "startOriginalFunctionTime", "endOriginalFunctionTime", "originalFunctionOverheadExecutionTime", "executionTimeToAdjust", "executionTime", "beforeOverhead", "inBetweenOverhead", "error", "isPerformanceAnalyzer", "require_debug_functions_performance_analysis_results_logger", "__commonJSMin", "params", "dt", "timeSinceLastReset", "analysisResults", "analysisResultsClone", "keys", "i", "results", "counter", "analysisResultsToLog", "key", "currentResults", "resultsToLog", "resultsText", "entry", "name", "parametersToLog", "textOrdered", "callsCountText", "totalExecutionTimeText", "totalExecutionTimePercentageText", "averageExecutionTimeText", "nameIndented", "avoidFirst", "text", "require_debug_functions_performance_analyzer_component", "__commonJSMin", "dt", "functionsPerformanceAnalyzerParams", "toIncludeList", "i", "toExcludeList", "functionsPerformanceAnalysisResultsLoggerParams", "require_debug_pp_functions_performance_analyzer_component", "__commonJSMin", "require_debug_array_functions_performance_analyzer_component", "__commonJSMin", "classesByPath", "require_debug_pp_array_creation_performance_analyzer_component", "__commonJSMin", "require_debug_wl_function_performance_analyzer_component", "__commonJSMin", "require_debug_wl_components_function_performance_analyzer_component", "__commonJSMin", "objectsByPath", "objectByReference", "nativeComponentTypes", "nativeComponentType", "dt", "b", "require_direction_2D_to_3D_converter", "__commonJSMin", "params", "direction2D", "conversionTransform", "direction3DUp", "outDirection3D", "forward", "conversionTransformMatrix", "conversionTransformQuat", "conversionRotationQuat", "rotationQuat", "right", "direction3DUpNegate", "forwardScaled", "rightScaled", "angleForwardWithDirectionUp", "angleRightWithDirectionUp", "require_number_over_value", "__commonJSMin", "startNumber", "endNumber", "startInterpolationValue", "endInterpolationValue", "easingFunction", "roundingFunction", "interpolationValue", "lerpInterpolationValue", "lerpNumber", "number", "currentNumber", "clampedNumber", "clampedCurrentNumber", "numberToRound", "roundedNumber", "startRange", "endRange", "randomValue", "average", "min", "max", "require_grabbable", "__commonJSMin", "grabber", "callback", "linearVelocity", "angularVelocity", "angularVelocityDegrees", "angularVelocityRadians", "id", "targetObject", "clonedComponent", "require_grabber_hand", "__commonJSMin", "dt", "grabButton", "throwButton", "id", "callback", "grabbablesToGrab", "collisions", "i", "grabbable", "grabberPosition", "first", "second", "firstPosition", "secondPosition", "firstDistance", "secondDistance", "grabbableToGrab", "grabbableData", "linearVelocity", "angularVelocity", "grabber", "element", "handPose", "linearVelocityHistory", "speed", "speedEaseMultiplier", "directionCurrentWeight", "lastDirectionIndex", "direction", "currentDirection", "angularVelocityHistory", "j", "color", "useGrabbableAsVelocitySource", "linearVelocityHistorySize", "angularVelocityHistorySize", "require_ca_utils", "__commonJSMin", "useDummyServer", "dummyServer", "leaderboardID", "isAscending", "isAroundPlayer", "scoresAmount", "callbackOnDone", "callbackOnError", "overrideUseDummyServer", "user", "userName", "result", "userValid", "value", "error", "scoreToSubmit", "require_ca_dummy_server", "__commonJSMin", "leaderboardID", "isAscending", "isAroundPlayer", "scoresAmount", "callbackOnDone", "callbackOnError", "leaderboard", "scoreToSubmit", "user", "require_ca_display_leaderboard", "__commonJSMin", "dt", "namesObject", "scoresObject", "leaderboard", "namesText", "scoresText", "maxRankDigit", "value", "rank", "fixedRank", "newlines", "i", "convertedScore", "score", "hoursEnabled", "minutesEnabled", "secondsEnabled", "time", "hours", "minutes", "seconds", "convertedTime", "targetObject", "clonedComponent", "require_player_head_controller", "__commonJSMin", "require_player_occlusion", "__commonJSMin", "require_collision_params", "__commonJSMin", "other", "require_collision_check", "__commonJSMin", "movementParams", "outTeleportParams", "movement", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "position", "allowFix", "fixedMovement", "feetPosition", "up", "originalHorizontalMovement", "horizontalMovement", "verticalMovement", "feetPositionPlusOffset", "tempRaycastResult", "origin", "direction", "distance", "ignoreHitsInsideCollision", "isHorizontal", "raycastResult", "require_collision_movement_check", "__commonJSMin", "transformUp", "transformForward", "feetPosition", "transformOffsetLocalQuat", "offsetTransformQuat", "horizontalMovement", "verticalMovement", "movementStep", "currentMovementStep", "movementChecked", "fixedMovement", "newFeetPosition", "fixedMovementStep", "previousCollisionRuntimeParams", "previousFixedMovement", "previousMovementChecked", "movement", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "height", "movementStepAmount", "equalStepLength", "maxLength", "stepsPerformed", "splitMovementStop", "i", "fixedHorizontalMovement", "fixedVerticalMovement", "horizontalDirection", "forwardForHorizontal", "forwardForVertical", "forwardForPerceivedAngle", "surfaceAdjustedVerticalMovement", "surfaceAdjustedHorizontalMovement", "zAxis", "xAxis", "allowSurfaceSteepFix", "outFixedMovement", "originalMovementSign", "moveStepFixed", "surfaceTooSteepResults", "newSurfaceTooSteepResults", "previousFixedHorizontalMovement", "up", "angleWithPreviousThreshold", "angleSigned", "angleSignedThreshold", "require_collision_teleport_check", "__commonJSMin", "transformUp", "transformForward", "feetPosition", "originalFeetPosition", "transformOffsetLocalQuat", "offsetTransformQuat", "feetPositionOffsetToOriginal", "offsetTeleportPosition", "zero", "forwardForHorizontal", "forwardForVertical", "forwardForPerceivedAngle", "fixedHorizontalMovement", "fixedVerticalMovement", "newFeetPosition", "endPosition", "zAxis", "xAxis", "teleportPosition", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "isPositionCheck", "height", "downward", "minAngle", "require_collision_position_check", "__commonJSMin", "feetPosition", "allowAdjustments", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "require_horizontal_collision_check", "__commonJSMin", "fixedFeetPosition", "newFixedFeetPosition", "newFeetPosition", "horizontalDirection", "movement", "feetPosition", "height", "up", "forward", "allowSurfaceSteepFix", "collisionCheckParams", "collisionRuntimeParams", "previousCollisionRuntimeParams", "avoidSlidingExtraCheck", "outFixedMovement", "surfaceTooSteepResults", "fixedHeight", "canMove", "direction", "fixedHitPosition", "startPosition", "endPosition", "movementDirection", "ignoreHitsInsideCollision", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "fixHitOnCollision", "checkAllHits", "ignoreHitsInsideCollisionIfObjectToIgnore", "origin", "distance", "raycastResult", "isOk", "hitsToControl", "validHitIndex", "i", "hit", "hitPosition", "directionOffsetEpsilonValue", "swapRaycastResult", "objectsEqualCallback", "first", "second", "hitDirection", "hitMovement", "projectAlongAxis", "movementOrForward", "objectsToIgnore", "outIgnoredObjects", "isGround", "isMovementCheck", "isIgnorable", "surfaceIgnoreHeight", "groundIgnoreHeight", "ceilingIgnoreHeight", "surfaceIgnoreMaxMovementLeft", "surfaceAngle", "perceivedAngle", "surfaceHeightCheckOk", "maxMovementLeftCheckOk", "feetPositionUp", "hitHeight", "movementLength", "halfConeAngle", "hitMovementLength", "require_horizontal_collision_sliding", "__commonJSMin", "previousHorizontalMovement", "horizontalDirection", "movement", "feetPosition", "height", "up", "forward", "allowSurfaceSteepFix", "collisionCheckParams", "collisionRuntimeParams", "previousCollisionRuntimeParams", "outSlideMovement", "isFlickering", "backupFlickerPrevented", "horizontalCollisionNormal", "oppositeSlideMovement", "hitNormal", "previousIsSliding", "preSlideCollisionRuntimeParams", "postSlideCollisionRuntimeParams", "angleNormalWithMovementThreshold", "isOppositeBetter", "angleEpsilon", "newFeetPosition", "fixedMovement", "flickerFixSlideMovement", "slideMovement", "shouldCheckFlicker", "flickerCollisionAngle", "flickerMovementAngle", "backupDebugActive", "invertedNormal", "slidingMovement", "movement90", "currentMovement", "slideMovementForward", "checkOppositeDirection", "slidingSign", "angleThreshold", "currentAngle", "maxAngle", "minAngle", "angleWithPrevious", "originalCurrentAngle", "i", "movementDirection", "hitDirection", "projectAlongAxis", "newFixedFeetPosition", "originalFeetPosition", "originalHeight", "hitPosition", "halfConeAngle", "flatNormal", "isValid", "require_horizontal_collision_movement_check", "__commonJSMin", "checkPositions", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "_localGroundObjectsToIgnore", "_localCeilingObjectsToIgnore", "_localGroundCeilingObjectsToIgnore", "objectsEqualCallback", "first", "second", "movementDirection", "heightOffset", "heightStep", "currentHeightOffset", "leftRadialDirection", "rightRadialDirection", "movement", "originalFeetPosition", "originalHeight", "feetPosition", "height", "up", "collisionCheckParams", "collisionRuntimeParams", "halfConeAngle", "steplength", "tempCheckPosition", "i", "currentStep", "currentRadialPosition", "currentCheckPosition", "groundObjectsToIgnore", "ceilingObjectsToIgnore", "groundCeilingObjectsToIgnore", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "groundCeilingCheckIsFine", "object", "heightStepAmount", "movementStep", "firstPosition", "secondPosition", "firstMovementPosition", "secondMovementPosition", "firstHeightPosition", "secondHeightPosition", "firstHeightMovementPosition", "secondHeightMovementPosition", "isHorizontalCheckOk", "movementStepAmount", "m", "j", "secondIndex", "require_horizontal_collision_position_check", "__commonJSMin", "checkPositions", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "_localGroundObjectsToIgnore", "_localCeilingObjectsToIgnore", "_localGroundCeilingObjectsToIgnore", "objectsEqualCallback", "first", "second", "heightOffset", "heightStep", "currentHeightOffset", "hitHeightOffset", "hitHeightOffsetEpsilon", "downwardHeightOffset", "downwardHeightStep", "verticalDirection", "vertilCheckHit", "originalFeetPosition", "originalHeight", "feetPosition", "height", "up", "forward", "collisionCheckParams", "collisionRuntimeParams", "sliceAngle", "tempCheckPosition", "i", "currentAngle", "radialDirection", "groundObjectsToIgnore", "ceilingObjectsToIgnore", "groundCeilingObjectsToIgnore", "ignoreGroundAngleCallback", "ignoreCeilingAngleCallback", "groundCeilingCheckIsFine", "object", "heightStepAmount", "hitHeightOffsetEpsilonValue", "basePosition", "forwardNegate", "currentRadialPosition", "previousRadialPosition", "isHorizontalCheckOk", "halfRadialPositions", "j", "leftIndex", "rightIndex", "leftAndRightEqual", "r", "currentIndex", "previousIndex", "previousBasePosition", "previousCurrentRadialPosition", "previousPreviousRadialPosition", "previousCheckPositionIsEqual", "require_vertical_collision_check", "__commonJSMin", "newFeetPosition", "additionalFixedMovement", "zero", "verticalMovement", "originalMovementSign", "feetPosition", "height", "up", "forward", "collisionCheckParams", "collisionRuntimeParams", "outFixedMovement", "movementSign", "isMovementDownward", "isOppositeMovementDownward", "startOffset", "endOffset", "tempVector", "furtherDirection", "furtherDirectionPosition", "upNegate", "origin", "direction", "popOutEnabled", "snapEnabled", "checkPositions", "furtherDirectionPositionSet", "i", "currentPosition", "distance", "raycastResult", "smallHeightFixOffset", "heightOffset", "startPosition", "endPosition", "checkUpward", "isVerticalPositionOk", "atLeastOneIsOk", "adjustmentEpsilon", "insideHitSet", "firstHitOutsideCollision", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "currentDirection", "tempCheckPosition", "radiusStep", "sliceAngle", "currentStepRotation", "currentRadius", "j", "sliceDirection", "require_collision_surface_check", "__commonJSMin", "transformUp", "transformForward", "feetPosition", "transformOffsetLocalQuat", "offsetTransformQuat", "forwardForPerceivedAngle", "forwardForVertical", "zAxis", "xAxis", "transformQuat", "collisionCheckParams", "collisionRuntimeParams", "height", "horizontalDirection", "fixedHorizontalMovement", "originalVerticalMovement", "previousCollisionRuntimeParams", "isVerticalMovementZero", "isVerticalMovemenDownward", "horizontalMovementIsZero", "groundPerceivedAngle", "ceilingPerceivedAngle", "mustRemainOnGroundOk", "mustRemainOnCeilingOk", "mustStayBelowGroundAngleOk", "minAngle", "mustStayBelowCeilingAngleOk", "mustStayOnGroundHitAngleOk", "mustStayOnCeilingHitAngleOk", "isOnValidGroundAngleUphill", "isOnValidGroundAngleDownhill", "isOnValidCeilingAngleUphill", "isOnValidCeilingAngleDownhill", "surfaceSteepResults", "up", "direction", "groundTooSteep", "ceilingTooSteep", "extraVerticalMovement", "horizontalMovement", "verticalMovement", "outAdjustedVerticalMovement", "extraVerticalLength", "groundExtraVerticalLength", "ceilingExtraVerticalLength", "sameSignThanGround", "verticalMovementLength", "sameSignThanExtra", "extraHorizontalMovement", "groundHorizontalDirection", "ceilingHorizontalDirection", "scaledCeilingHorizontalDirection", "scaledCeilingHorizontalDirectionAlongGroundHorizontalDirection", "scaledCeilingHorizontalDirectionWithoutGroundHorizontalDirection", "outAdjustedHorizontalMovement", "isMovementDownward", "groundExtraHorizontalLength", "ceilingExtraHorizontalLength", "sameDirectionAsGround", "tempVector", "outExtraSurfaceVerticalMovement", "verticalDirection", "startOffset", "endOffset", "heightOffset", "smallOffset", "smallStartPosition", "smallEndPosition", "surfaceNormal", "surfaceHitMaxNormal", "hitFromCurrentPosition", "startPosition", "endPosition", "isGround", "checkPositions", "distanceToBeOnSurface", "distanceToComputeSurfaceInfo", "distanceToFindSurfaceDistance", "verticalFixToBeOnSurface", "verticalFixToComputeSurfaceInfo", "verticalFixToFindSurfaceDistance", "isOnSurfaceIfInsideHit", "isBaseInsideCollisionCheckEnabled", "isOnSurface", "surfaceAngle", "surfacePerceivedAngle", "surfaceHitMaxAngle", "surfaceDistance", "isBaseInsideCollision", "i", "currentPosition", "baseHitIsInsideCollision", "origin", "distance", "raycastResult", "hitFromCurrentPositionLength", "currentSurfaceNormal", "surfaceHitAngle", "forwardOnSurface", "forward", "isFartherOnUp", "require_collision_check_bridge", "__commonJSMin", "collisionCheckParams", "collisionRuntimeParams", "movement", "currentTransformQuat", "characterColliderSetup", "prevCharacterCollisionResults", "outCharacterCollisionResults", "teleportPosition", "teleportTransformQuat", "checkTransformQuat", "characterCollisionResults", "outCollisionRuntimeParams", "rotationQuat", "outCollisionCheckParams", "require_character_collider_setup", "__commonJSMin", "other", "require_character_collider_utils", "__commonJSMin", "simplifiedCreationParams", "outCharacterColliderSetup", "movementColliderSetup", "outTeleportColliderSetup", "fps", "require_character_collision_results", "__commonJSMin", "other", "require_character_collision_system", "__commonJSMin", "dt", "movement", "currentTransformQuat", "characterColliderSetup", "prevCharacterCollisionResults", "outCharacterCollisionResults", "teleportPosition", "teleportTransformQuat", "checkTransformQuat", "currentFramePerformedRaycasts", "require_character_controller", "__commonJSMin", "require_synced_character_controller", "__commonJSMin", "require_character_controller_utils", "__commonJSMin", "surfaceNormal", "direction", "up", "directionOnSurface", "verticalDirection", "isGround", "surfacePerceivedAngle", "surfaceAngle", "isFartherOnUp", "require_player_character_controller", "__commonJSMin", "require_player_head_character_controller", "__commonJSMin", "require_player_hand_character_controller", "__commonJSMin", "global_gravity_exports", "_a", "init_global_gravity", "__esmMin", "init_api", "Component", "__publicField", "require_player_locomotion_smooth", "__commonJSMin", "require_player_locomotion_rotate", "__commonJSMin", "require_player_locomotion_gravity", "__commonJSMin", "require_player_locomotion_teleport", "__commonJSMin", "require_locomotion_utils", "__commonJSMin", "forwardOnSurface", "verticalDirection", "surfaceNormal", "forward", "up", "isGround", "surfacePerceivedAngle", "surfaceAngle", "isFartherOnUp", "require_player_head_manager", "__commonJSMin", "params", "active", "outTransformFeetQuat", "outPositionFeet", "outPositionHead", "outRotationFeetQuat", "outRotationHeadQuat", "height", "setOnlyForActiveOne", "isFloor", "movement", "teleportPosition", "headTransformQuat", "rotationQuat", "keepUpOverride", "position", "up", "direction", "dt", "headPosition", "feetPosition", "feetRotationQuat", "playerUp", "headForward", "angleWithUp", "mingAngle", "headHeight", "rotationAxis", "currentHeadPosition", "currentFeetRotation", "newFeetRotation", "fixedNewFeetRotation", "newFeetForward", "fixedRotation", "newHeadPosition", "headAdjustmentMovement", "newHeadRotation", "newHeadUp", "currentRotationQuat", "rotationQuatToRotate", "teleportMovementToPerform", "currentFeetPosition", "flatCurrentPlayerPosition", "flatNewPlayerPosition", "teleportMovement", "playerForward", "headForwardNegated", "rotationToPerform", "feetRotation", "headRotation", "playerPosition", "heightVector", "manualStart", "session", "referenceSpace", "event", "previousHeadObject", "previousHeadTransform", "recoverHeadPosition", "flatCurrentHeadPosition", "flatRecoverHeadPosition", "recoverMovement", "recoverHeadForward", "currentHeadForward", "resyncHeadPosition", "resyncHeadRotation", "flatResyncHeadPosition", "resyncMovement", "resyncHeadForward", "resyncHeadUp", "resyncHeadRight", "newPlayerPosition", "fixedHeadRight", "fixedHeadRightNegate", "fixedHeadUp", "fixedHeadForward", "fixedHeadRotation", "resyncHeadHeight", "currentHeadHeight", "floorHeight", "angleForwardUp", "negateAngle", "maxVerticalAngle", "fixAngle", "fixedResyncHeadRotation", "playerPivotPosition", "offset", "amountToRemove", "require_player_transform_manager", "__commonJSMin", "params", "dt", "movement", "outCollisionRuntimeParams", "forceMove", "position", "forceTeleport", "transformQuat", "rotationQuat", "height", "forceSet", "outTransformQuat", "outPosition", "outRotation", "syncFlagMap", "isBodyColliding", "isHeadColliding", "isFar", "isFloating", "resetPosition", "resetRotation", "resetHeight", "updateRealFlags", "validHeight", "realHeight", "manualStart", "session", "realPosition", "realUp", "validUp", "playerHeadManager", "collisionRuntimeParams", "transformUp", "horizontalDirection", "debugBackup", "movementToCheck", "positionReal", "newPosition", "newPositionHead", "movementStep", "currentMovementStep", "verticalMovement", "movementChecked", "newFeetPosition", "floatingTransformQuat", "resetRealEnabled", "isVertical", "movementStepAmount", "equalStepLength", "maxLength", "isOnValidGroundAngle", "atLeastOneNotOnGround", "isOneOnGroundBetweenNoGround", "isLastOnGround", "isOneOnSteepGround", "i", "isFloatingOnSteepGroundFail", "distance", "fixedMovement", "teleportTransformQuat", "teleportPosition", "currentPosition", "teleportPositionVec", "teleportRotation", "rotatedTransformQuat", "rotationToPerform", "fixedHeight", "previousHeight", "require_player_locomotion_rotate", "__commonJSMin", "params", "dt", "playerUp", "headRotation", "axes", "rotationIntensity", "speed", "angleToRotate", "headForward", "headUp", "referenceUp", "referenceUpNegate", "referenceRight", "newUp", "head", "minAngle", "angleWithUp", "snapStep", "snapAngle", "angleToAlign", "maxVerticalAngle", "fixAngle", "require_player_locomotion_movement", "__commonJSMin", "locomotionRuntimeParams", "require_player_locomotion_smooth", "__commonJSMin", "params", "locomotionRuntimeParams", "directionConverterNonVRParams", "directionConverterVRParams", "dt", "playerUp", "headMovement", "direction", "directionOnUp", "verticalMovement", "feetTransformQuat", "directionReferenceTransformQuat", "axes", "movementIntensity", "speed", "gravity", "session", "require_player_obscure_manager", "__commonJSMin", "params", "dt", "obscureLevel", "instantFade", "newObscureLevel", "isFadingIn", "percentage", "closestPercentage", "increment", "alpha", "relativeDistance", "relativeDistancePercentage", "targetObscureLevel", "obscureVisualParams", "visible", "require_player_locomotion", "__commonJSMin", "params", "objectsEqualCallback", "first", "second", "objectToIgnore", "dt", "idle", "physXComponents", "physXComponent", "defaultUp", "flatForward", "angleWithDefaultForward", "require_player_locomotion_component", "__commonJSMin", "params", "dt", "physicsFlags", "flags", "i", "require_player_locomotion_teleport_parable", "__commonJSMin", "startPosition", "forward", "up", "speed", "gravity", "stepLength", "positionIndex", "outPosition", "distance", "flatDistance", "maxParableDistance", "forwardPosition", "upPosition", "elapsedTime", "currentPosition", "prevPosition", "i", "currentDistance", "currentIndex", "prevToCurrent", "found", "lengthToRemove", "lengthToAdd", "flatCurrentPosition", "flatStartPosition", "startToCurrentFlat", "distanceOverFlatDistance", "currentFlatDistance", "flatDifference", "angleWithFlat", "cos", "positionByDistance", "flatPositionByDistance", "require_player_locomotion_teleport_state", "__commonJSMin", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "teleportPosition", "feetTransformQuat", "collisionRuntimeParams", "checkTeleportCollisionRuntimeParams", "checkTeleportMovementCollisionRuntimeParams", "feetRotationQuat", "feetPosition", "feetUp", "teleportFeetForward", "teleportFeetRotationQuat", "teleportFeetTransformQuat", "currentFeetPosition", "fixedTeleportPosition", "teleportMovement", "extraVerticalMovement", "movementToTeleportPosition", "movementFeetTransformQuat", "teleportMovementValid", "i", "extraVerticalMovementValue", "playerUp", "newFeetTransformQuat", "newFeetRotationQuat", "teleportRotation", "rotationOnUp", "forceTeleport", "require_player_locomotion_teleport_detection_visualizer", "__commonJSMin", "teleportParams", "teleportRuntimeParams", "detectionRuntimeParams", "dt", "visualLine", "amount", "i", "visualParams", "innerTorusPosition", "visualTorusParams", "innerTorusCenter", "currentPosition", "nextPosition", "playerUp", "upDifference", "showParableDistance", "lastParableIndex", "lastParableIndexDistance", "visuaLine", "currentVisualLineParams", "stepLength", "visualPoint", "visualPointParams", "upDistance", "lineLength", "visualLineParams", "feetTransformQuat", "feetRotationQuat", "visualPosition", "visualForward", "visualRotationQuat", "currentVisualTeleportTransformQuat", "currentVisualTeleportPosition", "currentVisualTeleportRotationQuat", "differenceRotationQuat", "positionDistance", "rotationAngleDistance", "interpolationValue", "require_player_locomotion_teleport_detection_state", "__commonJSMin", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "dt", "fsm", "confirmTeleport", "cancelTeleport", "mousePosition", "mouseDirection", "playerUp", "teleportStartTransformLocal", "teleportStartTransformWorld", "teleportStartPosition", "teleportDirection", "playerUpNegate", "referenceObject", "parablePosition", "prevParablePosition", "parableFinalPosition", "raycastSetup", "raycastResult", "parableHitPosition", "parableHitNormal", "verticalHitOrigin", "verticalHitDirection", "flatTeleportHorizontalHitNormal", "flatParableHitNormal", "flatParableDirectionNegate", "teleportCollisionRuntimeParams", "objectsEqualCallback", "first", "second", "startPosition", "direction", "up", "currentPositionIndex", "positionFlatDistance", "positionParableDistance", "objectToIgnore", "maxParableDistance", "maxParableDistanceOverFlatDistance", "fixedPositionParableDistance", "hitCollisionValid", "bottomCheckMaxLength", "hit", "hitParableDistance", "backwardStep", "axesVec3", "axesForward", "axesUp", "axes", "rotationOnUp", "checkTeleportCollisionRuntimeParams", "isValid", "distanceToCheck", "feetTransformQuat", "feetRotationQuat", "feetPosition", "differenceOnUpVector", "teleportCheckCollisionRuntimeParams", "teleportPosition", "teleportCheckValid", "groundAngleValid", "require_player_locomotion_teleport_detection_state_visibility", "__commonJSMin", "playerUp", "offsetFeetTeleportPosition", "headTeleportPosition", "teleportPosition", "isVisible", "isHeadVisible", "isFeetVisible", "headheight", "standardUp", "standardForward", "referenceUp", "headPosition", "direction", "fixedRight", "fixedForward", "fixedUp", "raycastEndPosition", "raycastSetup", "raycastResult", "objectsEqualCallback", "first", "second", "position", "checkPositions", "distance", "checkPosition", "objectToIgnore", "hit", "cachedCheckPositions", "currentCachedCheckPositionIndex", "_localGetCachedCheckPosition", "item", "currentDirection", "up", "forward", "tempCheckPosition", "radiusStep", "sliceAngle", "currentStepRotation", "i", "currentRadius", "j", "sliceDirection", "require_player_locomotion_teleport_teleport_state", "__commonJSMin", "angle", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "fsm", "dt", "require_player_locomotion_teleport_teleport_blink_state", "__commonJSMin", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "fsm", "dt", "alpha", "teleport", "require_player_locomotion_teleport_teleport_shift_state", "__commonJSMin", "teleportParams", "teleportRuntimeParams", "locomotionRuntimeParams", "fsm", "dt", "distance", "multiplier", "movementToTeleportFeet", "newFeetPosition", "interpolationValue", "rotationOnUp", "newCurrentRotationOnUp", "require_player_locomotion_teleport", "__commonJSMin", "teleportParams", "locomotionRuntimeParams", "dt", "startDetecting", "axes", "playerUp", "gravityMovement", "feetTransformQuat", "require_player_locomotion_cleaned", "__commonJSMin", "params", "objectsEqualCallback", "first", "second", "objectToIgnore", "currentActive", "active", "canStop", "dt", "idle", "simplifiedParams", "physXComponents", "physXComponent", "colliderSetup", "defaultUp", "flatForward", "angleWithDefaultForward", "require_player_locomotion_smooth_cleaned", "__commonJSMin", "params", "locomotionRuntimeParams", "directionConverterNonVRParams", "directionConverterVRParams", "dt", "playerUp", "headMovement", "direction", "directionOnUp", "verticalMovement", "feetTransformQuat", "directionReferenceTransformQuat", "axes", "horizontalMovement", "movementIntensity", "speed", "session", "require_player_transform_manager_cleaned", "__commonJSMin", "params", "active", "dt", "movement", "outCollisionRuntimeParams", "forceMove", "position", "forceTeleport", "transformQuat", "rotationQuat", "height", "forceSet", "outTransformQuat", "outPosition", "outRotation", "syncFlagMap", "isBodyColliding", "isHeadColliding", "isFar", "isFloating", "resetPosition", "resetRotation", "resetHeight", "updateRealFlags", "validHeight", "realHeight", "manualStart", "session", "realPosition", "realUp", "validUp", "playerHeadManager", "collisionRuntimeParams", "transformUp", "horizontalDirection", "debugBackup", "movementToCheck", "positionReal", "newPosition", "newPositionHead", "movementStep", "currentMovementStep", "verticalMovement", "movementChecked", "newFeetPosition", "floatingTransformQuat", "resetRealEnabled", "isVertical", "movementStepAmount", "equalStepLength", "maxLength", "isOnValidGroundAngle", "atLeastOneNotOnGround", "isOneOnGroundBetweenNoGround", "isLastOnGround", "isOneOnSteepGround", "i", "isFloatingOnSteepGroundFail", "distance", "fixedMovement", "teleportTransformQuat", "teleportPosition", "currentPosition", "teleportPositionVec", "teleportRotation", "rotatedTransformQuat", "rotationToPerform", "fixedHeight", "previousHeight", "require_finger_cursor", "__commonJSMin", "dt", "overlaps", "overlapTarget", "i", "target", "tip", "session", "referenceSpace", "require_input_types", "__commonJSMin", "require_input_utils", "__commonJSMin", "index", "handedness", "inputSourceType", "inputSource", "i", "input", "oppositeHandedness", "jointID", "jointIDKey", "jointIDIndexKey", "require_keyboard", "__commonJSMin", "key", "keyID", "isPressed", "isPressStart", "isPressEnd", "dt", "keyInfo", "event", "require_mouse", "__commonJSMin", "key", "dt", "buttonInfo", "buttonID", "isPressed", "isPressStart", "isPressEnd", "raycastSetup", "raycastResults", "out", "mousePosition", "distanceFromCamera", "originWorld", "directionWorld", "right", "up", "directionLocal", "projectionMatrixInvert", "touchValid", "callbackID", "event", "targetOnlyRenderCanvas", "id", "callback", "pointerUpOnPointerLeave", "active", "delay", "actionCallback", "bounds", "isValid", "require_input_manager", "__commonJSMin", "dt", "require_input_manager_component", "__commonJSMin", "dt", "handPoseParams", "leftXRGamepadCore", "rightXRGamepadCore", "leftKeyboardGamepadCore", "rightKeyboardGamepadCore", "leftClassicGamepadCore", "rightClassicGamepadCore", "require_switch_hand_object", "__commonJSMin", "dt", "inputSourceType", "require_tracked_hand_draw_joint", "__commonJSMin", "dt", "mesh", "require_tracked_hand_draw_all_joints", "__commonJSMin", "dt", "jointIDKey", "jointID", "jointObject", "require_tracked_hand_draw_skin", "__commonJSMin", "dt", "i", "jointObject", "jointID", "jointPose", "skinJointIDs", "require_gamepad_buttons", "__commonJSMin", "id", "handedness", "multiplePressCount", "multipleTouchCount", "value", "require_base_gamepad", "__commonJSMin", "handedness", "key", "eventKey", "buttonID", "buttonEvent", "id", "callback", "axesID", "axesEvent", "intensity", "duration", "maxDelay", "dt", "item", "buttonInfo", "buttonData", "buttonCallbacks", "callbacks", "axesInfo", "axesData", "axesCallbacks", "hapticActuators", "hapticActuator", "info", "require_universal_gamepad", "__commonJSMin", "handedness", "id", "gamepadCore", "handPose", "core", "currentCoreHandPose", "dt", "buttonID", "coreButtonData", "axesID", "coreAxesData", "require_gamepad_core", "__commonJSMin", "handedness", "handPose", "dt", "buttonID", "axesID", "require_xr_gamepad_core", "__commonJSMin", "handedness", "handPoseParams", "dt", "buttonID", "gamepadButton", "touchButton", "axesID", "internalAxes", "isPressed", "session", "event", "require_keyboard_gamepad_core", "__commonJSMin", "handedness", "handPose", "active", "dt", "buttonID", "axesID", "require_virtual_gamepad_gamepad_core", "__commonJSMin", "virtualGamepad", "handedness", "handPose", "active", "dt", "buttonID", "axesID", "require_classic_gamepad_core", "__commonJSMin", "gamepadIndex", "handedness", "handPose", "active", "classicGamepad", "dt", "buttonID", "button", "axesID", "gamepads", "gamepad", "require_gamepad_mesh_animator", "__commonJSMin", "gamepad", "upTranslation", "buttonInfo", "translation", "rotation", "axesInfo", "leftRotation", "forwardRotation", "require_gamepad_manager", "__commonJSMin", "dt", "handedness", "gamepad", "gamepads", "require_gamepad_utils", "__commonJSMin", "simultaneousPressMaxDelay", "simultaneousTouchMaxDelay", "gamepadButtonIDsList", "multiplePressCount", "realGamepadButtonIDsList", "gamepadButtonIDs", "key", "isOnePressStart", "gamepad", "i", "buttonID", "areButtonPressedRecently", "button", "isOnePressEnd", "areButtonNotPressedRecently", "isOneTouchStart", "multipleTouchCount", "areButtonTouchedRecently", "isOneTouchEnd", "areButtonNotTouchedRecently", "require_gamepad_control_scheme", "__commonJSMin", "dt", "visible", "text", "distanceFromButton", "lineLength", "referenceObject", "thumbstickPositionLocal", "thumbstickUpLocal", "differenceOnUp", "buttonObject", "startOffset", "endOffset", "parentObject", "buttonPosition", "referenceForward", "referenceRight", "referenceUp", "lineStart", "lineEnd", "textOffset", "textPosition", "start", "end", "lineDirection", "length", "lineMesh", "thickness", "position", "forward", "up", "textObject", "textComponent", "require_virtual_gamepad", "__commonJSMin", "params", "visible", "handedness", "gamepadButtonID", "button", "thumbstick", "outAxes", "currentVisible", "dt", "leftDiv", "rightDiv", "buttonsAmount", "i", "gamepadButtonHandedness", "gamepadThumbstickHandedness", "buttonElementParent", "virtualButtonHandedness", "virtualButtonIndex", "virtualGamepadVirtualButton", "thumbstickElementParent", "virtualThumbstickHandedness", "virtualGamepadVirtualThumbstick", "value", "minSizeMultiplier", "isAnyElementPressed", "hoverActive", "require_virtual_gamepad_component", "__commonJSMin", "params", "handedness", "gamepadButtonID", "buttonParams", "thumbstickParams", "dt", "leftVirtualGamepadGamepadCore", "rightVirtualGamepadGamepadCore", "require_virtual_gamepad_params", "__commonJSMin", "backgroundColor", "iconColor", "buttonHoveredBrightness", "thumbstickHoveredBrightness", "thumbstickIncludeBackgroundToDetection", "handedness", "gamepadButtonID", "buttonParams", "thumbstickParams", "require_virtual_gamepad_virtual_button", "__commonJSMin", "buttonElementParent", "virtualGamepadParams", "virtualButtonHandedness", "virtualButtonIndex", "gamepadButtonHandedness", "gamepadButtonID", "active", "hoverActive", "dt", "stopPropagatingPointerDownEvents", "event", "buttonSize", "buttonsRingRadius", "thumbstickSize", "marginBottom", "marginLeft", "marginRight", "buttonRingStartAngle", "buttonRingEndAngle", "minSizeMultiplier", "buttonsAmount", "angleStep", "currentAngle", "counterAngle", "buttonPivot", "centerOnThumbstickBottom", "centerOnThumbstickLeft", "centerOnThumbstickRight", "buttonElementStill", "buttonDetectionElementSVG", "buttonDetectionElement", "value", "require_virtual_gamepad_virtual_thumbstick", "__commonJSMin", "thumbstickElementParent", "virtualGamepadParams", "virtualThumbstickHandedness", "gamepadThumbstickHandedness", "active", "hoverActive", "dt", "stopPropagatingPointerDownEvents", "event", "mouseX", "mouseY", "maxDistanceFromCenter", "xDiff", "yDiff", "angle", "distanceFromDragStart", "translateThumbstickX", "translateThumbstickY", "thumbstickSize", "marginBottom", "marginLeft", "marginRight", "minSizeMultiplier", "thumbstickContainer", "thumbstickContainerSVG", "thumbstickBackgroundDetectionElementSVG", "thumbstickBackgroundDetectionElement", "thumbstickElementStill", "thumbstickDetectionElementSVG", "thumbstickDetectionElement", "value", "require_virtual_gamepad_icon", "__commonJSMin", "iconElementParent", "iconParams", "minSizeMultiplier", "scale", "dt", "pressed", "hoverActive", "value", "require_base_pose", "__commonJSMin", "basePoseParams", "referenceObject", "fixForward", "forceEmulatedVelocities", "updateOnViewReset", "id", "callback", "dt", "xrFrame", "updateVelocity", "xrPose", "manualStart", "session", "referenceSpace", "position", "transform", "rotationQuat", "playerRotationQuat", "up", "transformQuat", "playerTransformQuat", "rotationDegrees", "rotationRadians", "prevRotationRadians", "require_hand_pose", "__commonJSMin", "handedness", "handPoseParams", "fixTrackedHandRotation", "xrFrame", "manualStart", "session", "event", "item", "rotationQuat", "playerRotationQuat", "up", "right", "forward", "forwardRotation", "require_head_pose", "__commonJSMin", "xrFrame", "require_tracked_hand_joint_pose", "__commonJSMin", "handedness", "trackedHandJointID", "basePoseParams", "xrFrame", "dt", "updateVelocity", "xrPose", "manualStart", "session", "event", "item", "require_tracked_hand_pose", "__commonJSMin", "addAllJointIDs", "key", "handedness", "trackedHandPoseParams", "jointID", "trackedHandJointPose", "jointPoseKey", "dt", "jointIDIndex", "element", "referenceObject", "fixForward", "forceEmulatedVelocities", "require_set_player_height", "__commonJSMin", "localPosition", "require_set_hand_local_transform", "__commonJSMin", "dt", "handPoseTransform", "require_set_head_local_transform", "__commonJSMin", "nonVRCameraRotation", "nonVRCameraUp", "nonVRCameraPosition", "dt", "headPoseTransform", "require_set_vr_head_local_transform", "__commonJSMin", "dt", "headPoseTransform", "require_set_non_vr_head_local_transform", "__commonJSMin", "dt", "nonVRCameraRotation", "nonVRCameraUp", "nonVRCameraPosition", "require_set_tracked_hand_joint_local_transform", "__commonJSMin", "dt", "jointPoseTransform", "require_copy_hand_transform", "__commonJSMin", "dt", "hand", "require_copy_head_transform", "__commonJSMin", "dt", "head", "require_copy_player_transform", "__commonJSMin", "dt", "player", "require_copy_player_pivot_transform", "__commonJSMin", "dt", "playerPivot", "require_tool_types", "__commonJSMin", "require_tool_cursor", "__commonJSMin", "cursorMeshComponent", "cursorComponent", "fingerCursorMeshObject", "fingerCollisionSize", "meshComponent", "transformQuat", "transform", "dt", "isUsingHand", "i", "input", "object", "targetComponent", "require_console_vr_widget_setup", "__commonJSMin", "xPaddingPercentage", "yPaddingPercentage", "xPosition", "yPosition", "numberOfButtons", "buttonsHorizontalSpace", "numberOfSpacesBetweenButtons", "spaceWidth", "halfButtonWidth", "initialPosition", "spaceBetweenMessagesAndButtons", "pointerCollisionHalfHeight", "require_console_vr_widget_ui", "__commonJSMin", "parentObject", "setup", "additionalSetup", "visible", "key", "messagesBackgroundMeshComp", "textComp", "buttonBackgroundMeshComp", "buttonTextComp", "buttonCursorTargetComp", "buttonCollisionComp", "collisionComp", "textComponent", "require_console_vr_widget", "__commonJSMin", "key", "visible", "parentObject", "additionalSetup", "errorEvent", "dt", "messageType", "consoleText", "linesCount", "i", "scrollLinesToSkip", "message", "messageLines", "linesToSkip", "additionalEmptyLines", "emptyLinesToSkip", "emptyLinesToShow", "j", "linesToShow", "consoleFunction", "sender", "args", "formattedText", "lines", "stringifiedArgs", "item", "stringifiedItem", "linesBetweenItems", "cache", "value", "messageText", "linesToSplit", "lineToSplit", "spacesAtStart", "spaceToAdd", "lineSplits", "firstSub", "secondSub", "text", "spaces", "hasSameInfoAsPrev", "lastMessage", "maxScroll", "ui", "cursorTarget", "backgroundMaterial", "textMaterial", "filterTextMaterial", "codeDrivenClear", "active", "material", "axes", "normalizedScrollAmount", "pulseType", "array", "isBuiltIn", "element", "arrayCopy", "stringifiedArray", "countString", "require_console_vr", "__commonJSMin", "args", "forwardToBrowserConsole", "require_console_vr_component", "__commonJSMin", "additionalSetup", "dt", "require_easy_object_tuner", "__commonJSMin", "object", "variableName", "setAsDefault", "useTuneTarget", "variableNamePrefix", "easyTuneVariable", "dt", "value", "require_easy_light_attenuation", "__commonJSMin", "dt", "object", "variableName", "setAsDefault", "useTuneTarget", "value", "attenuation", "light", "require_easy_light_color", "__commonJSMin", "dt", "colorModel", "object", "variableName", "setAsDefault", "useTuneTarget", "nameFirstPart", "color", "lightColor", "value", "light", "hsvColor", "rgbColor", "require_easy_mesh_color", "__commonJSMin", "dt", "targetObject", "colorModel", "colorType", "object", "variableName", "setAsDefault", "useTuneTarget", "nameFirstPart", "color", "meshMaterial", "value", "hsvColor", "rgbColor", "material", "mesh", "require_easy_scale", "__commonJSMin", "dt", "isLocal", "scaleAsOne", "object", "variableName", "setAsDefault", "useTuneTarget", "value", "require_easy_set_tune_target_child_number", "__commonJSMin", "childrenCount", "min", "max", "easyTuneVariable", "childIndex", "require_easy_set_tune_target_grab", "__commonJSMin", "grabber", "grabbable", "require_easy_transform", "__commonJSMin", "dt", "targetObject", "isLocal", "scaleAsOne", "object", "variableName", "setAsDefault", "useTuneTarget", "value", "require_easy_mesh_ambient_factor", "__commonJSMin", "dt", "targetObject", "object", "variableName", "setAsDefault", "useTuneTarget", "nameFirstPart", "ambientFactor", "meshMaterial", "value", "material", "mesh", "require_easy_tune_base_widget", "__commonJSMin", "params", "visible", "variable", "appendToVariableName", "active", "scrollDirection", "otherEasyTuneWidget", "id", "callback", "parentObject", "additionalSetup", "dt", "name", "ui", "skipForceScroll", "forceScroll", "oldScrollDirection", "amount", "material", "require_easy_tune_base_widget_ui", "__commonJSMin", "parentObject", "setup", "additionalSetup", "visible", "active", "textComponent", "require_easy_tune_base_widget_setup", "__commonJSMin", "maxX", "minX", "maxY", "minY", "require_easy_tune_bool_array_widget", "__commonJSMin", "params", "arraySize", "gamepad", "i", "parentObject", "additionalSetup", "dt", "stickVariableIntensity", "valueIntensity", "ui", "index", "value", "text", "active", "originalScale", "require_easy_tune_bool_array_widget_ui", "__commonJSMin", "active", "i", "visible", "require_easy_tune_bool_array_widget_setup", "__commonJSMin", "arraySize", "valuePanelLastPosition", "i", "require_easy_tune_bool_array_widget_selector", "__commonJSMin", "params", "gamepad", "variable", "appendToVariableName", "widget", "visible", "active", "scrollDirection", "id", "callback", "parentObject", "additionalSetup", "dt", "amount", "arraySize", "require_easy_tune_none_widget", "__commonJSMin", "params", "require_easy_tune_none_widget_ui", "__commonJSMin", "require_easy_tune_none_widget_setup", "__commonJSMin", "require_easy_tune_number_array_widget", "__commonJSMin", "params", "arraySize", "gamepad", "i", "parentObject", "additionalSetup", "dt", "stickVariableIntensity", "y", "normalizedEditAmount", "valueIntensity", "amountToAdd", "decimalPlacesMultiplier", "difference", "stepIntensity", "ui", "index", "value", "text", "active", "step", "originalScale", "require_easy_tune_number_array_widget_ui", "__commonJSMin", "active", "i", "visible", "require_easy_tune_number_array_widget_setup", "__commonJSMin", "arraySize", "i", "valuePanelLastPosition", "require_easy_tune_number_widget_selector", "__commonJSMin", "params", "gamepad", "variable", "appendToVariableName", "widget", "visible", "active", "scrollDirection", "id", "callback", "parentObject", "additionalSetup", "dt", "amount", "arraySize", "require_easy_tune_transform_widget", "__commonJSMin", "params", "gamepad", "i", "parentObject", "additionalSetup", "dt", "stickVariableIntensity", "y", "normalizedEditAmount", "valueIntensity", "amountToAdd", "decimalPlacesMultiplier", "difference", "stepIntensity", "stepValue", "ui", "componentIndex", "index", "value", "text", "active", "defaultValue", "step", "originalScale", "require_easy_tune_transform_widget_ui", "__commonJSMin", "active", "i", "require_easy_tune_transform_widget_setup", "__commonJSMin", "distanceBetweenComponents", "distanceFromVariableLabel", "i", "valuePanelLastPosition", "require_easy_tune_widget", "__commonJSMin", "variableName", "visible", "parentObject", "additionalSetup", "easyTuneVariables", "dt", "widgetParams", "widget", "prevWidget", "x", "y", "amount", "variableIndex", "newIndex", "indexString", "index", "length", "variable", "value", "require_easy_tune_widget_setup", "__commonJSMin", "require_easy_tune_variables", "__commonJSMin", "variable", "variableName", "value", "resetDefaultValue", "json", "objectJSON", "variableValueJSON", "callbackID", "callback", "require_easy_tune_variable_types", "__commonJSMin", "name", "type", "value", "resetDefaultValue", "oldValue", "valueJSON", "id", "callback", "stepPerSecond", "decimalPlaces", "min", "max", "editAllValuesTogether", "clampedValue", "clampedDefaultValue", "tempValue", "i", "scaleAsOne", "positionStepPerSecond", "rotationStepPerSecond", "scaleStepPerSecond", "decimalPlacesMultiplier", "require_easy_tune_globals", "__commonJSMin", "fileURL", "resetVariablesDefaultValueOnImport", "onSuccessCallback", "onFailureCallback", "clipboard", "reason", "replacedFileURL", "response", "text", "jsonVariables", "variableName", "callback", "params", "i", "urlSearchParams", "param", "searchParamValue", "require_easy_tune_component", "__commonJSMin", "variableName", "additionalSetup", "onSuccessCallback", "onFailureCallback", "dt", "require_easy_tune_import_variables", "__commonJSMin", "dt", "require_widget_frame_setup", "__commonJSMin", "widgetLetterID", "buttonsColumnIndex", "distanceBetweenToolsVisibilityButtons", "buttonXOffset", "distanceBetweenFlagButtons", "pinFlagIndex", "pinButtonYOffset", "defaultObjectTransforms", "inputSourceTypeKey", "inputSourceType", "handednessKey", "handedness", "require_widget_frame_ui", "__commonJSMin", "parentObject", "setup", "additionalSetup", "visible", "pinned", "dt", "forceRefreshObjectsTransforms", "inputSourceType", "textComponent", "require_widget_frame", "__commonJSMin", "widgetLetterID", "buttonsColumnIndex", "visible", "id", "callback", "parentObject", "additionalSetup", "dt", "ui", "isButton", "notify", "textMaterial", "backgroundMaterial", "material"]
}
